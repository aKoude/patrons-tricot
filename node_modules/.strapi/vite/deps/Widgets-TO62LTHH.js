import {
  getDisplayName,
  getInitials
} from "./chunk-OGSEDJD2.js";
import "./chunk-XPDZ7AJR.js";
import "./chunk-SFI4DT5M.js";
import "./chunk-LZEQPJE3.js";
import "./chunk-F7YEN6IH.js";
import {
  Widget,
  useGetCountDocumentsQuery,
  useGetKeyStatisticsQuery
} from "./chunk-SLWCA7KH.js";
import "./chunk-AELLCG3U.js";
import "./chunk-SK3SOECA.js";
import "./chunk-6WYPBMTA.js";
import "./chunk-QIJGNK42.js";
import "./chunk-WUPUV3WE.js";
import "./chunk-IIOK64PU.js";
import "./chunk-SSXMWYKQ.js";
import "./chunk-GX4X76MR.js";
import "./chunk-BLGBN6GP.js";
import "./chunk-IBMBGQUZ.js";
import "./chunk-VEPEOAXJ.js";
import "./chunk-YI6FXR54.js";
import "./chunk-W3Y3S6PR.js";
import "./chunk-QH7R4NX4.js";
import "./chunk-WEH5HGPR.js";
import "./chunk-6BRVLPSO.js";
import "./chunk-O4N3RYJL.js";
import "./chunk-NHD4ZX7K.js";
import "./chunk-TG7TDNFU.js";
import "./chunk-ZBMGMO5C.js";
import "./chunk-MBK4V2X7.js";
import "./chunk-GJKETNPA.js";
import "./chunk-T2ARN7TZ.js";
import "./chunk-ND3WU7DS.js";
import "./chunk-CPFXTH2G.js";
import "./chunk-64VDBU7U.js";
import "./chunk-TVIJ74BZ.js";
import "./chunk-IFOFBKTA.js";
import "./chunk-NMBTX7CN.js";
import "./chunk-U2S4VNVE.js";
import "./chunk-E4BZ3FWE.js";
import "./chunk-DWX46NZI.js";
import {
  useTracking
} from "./chunk-YRZDK2MQ.js";
import "./chunk-KF4TZG24.js";
import "./chunk-3GJUYW3U.js";
import "./chunk-PQINNV4N.js";
import "./chunk-FPU5PDM4.js";
import "./chunk-SJEPZQ73.js";
import {
  useAuth
} from "./chunk-TGFUP5NI.js";
import "./chunk-BV6HHWZK.js";
import "./chunk-AV3MARFM.js";
import "./chunk-PWWLPW7X.js";
import "./chunk-XTRKMTCA.js";
import "./chunk-FPGLVXP5.js";
import "./chunk-V3H6CYGR.js";
import "./chunk-KTKIRFL6.js";
import "./chunk-HM5YIFDI.js";
import "./chunk-QOUV5O5E.js";
import {
  Avatar,
  Badge,
  Box,
  Flex,
  Typography,
  useIntl
} from "./chunk-KR7BY75X.js";
import "./chunk-7K6WC7UG.js";
import {
  Link
} from "./chunk-RKN75MQZ.js";
import "./chunk-AWHRF5BE.js";
import {
  ForwardRef$1,
  ForwardRef$1E,
  ForwardRef$1J,
  ForwardRef$1Z,
  ForwardRef$1i,
  ForwardRef$1j,
  ForwardRef$1o,
  ForwardRef$6
} from "./chunk-EXVE46AP.js";
import {
  require_jsx_runtime
} from "./chunk-LMPM4PM5.js";
import {
  dt
} from "./chunk-3LBZKDTB.js";
import "./chunk-D3I3COXH.js";
import {
  __toESM
} from "./chunk-LK32TJAX.js";

// node_modules/@strapi/admin/dist/admin/admin/src/components/Widgets.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var DisplayNameTypography = dt(Typography)`
  font-size: 2.4rem;
`;
var ProfileWidget = () => {
  var _a, _b;
  const user = useAuth("User", (state) => state.user);
  const userDisplayName = getDisplayName(user);
  const initials = getInitials(user);
  return (0, import_jsx_runtime.jsxs)(Flex, {
    direction: "column",
    gap: 3,
    height: "100%",
    justifyContent: "center",
    children: [
      (0, import_jsx_runtime.jsx)(Avatar.Item, {
        delayMs: 0,
        fallback: initials
      }),
      userDisplayName && (0, import_jsx_runtime.jsx)(DisplayNameTypography, {
        fontWeight: "bold",
        textTransform: "none",
        textAlign: "center",
        children: userDisplayName
      }),
      (user == null ? void 0 : user.email) && (0, import_jsx_runtime.jsx)(Typography, {
        variant: "omega",
        textColor: "neutral600",
        children: user == null ? void 0 : user.email
      }),
      ((_a = user == null ? void 0 : user.roles) == null ? void 0 : _a.length) && (0, import_jsx_runtime.jsx)(Flex, {
        marginTop: 2,
        gap: 1,
        wrap: "wrap",
        children: (_b = user == null ? void 0 : user.roles) == null ? void 0 : _b.map((role) => (0, import_jsx_runtime.jsx)(Badge, {
          children: role.name
        }, role.id))
      })
    ]
  });
};
var Grid = dt(Box)`
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0;
  border: 1px solid ${({ theme }) => theme.colors.neutral200};
  border-radius: ${({ theme }) => theme.borderRadius};
  overflow: hidden;
`;
var GridCell = dt(Box)`
  border-bottom: 1px solid ${({ theme }) => theme.colors.neutral200};
  border-right: 1px solid ${({ theme }) => theme.colors.neutral200};
  display: flex;
  flex-direction: row;
  align-items: flex-start;

  &:nth-child(2n) {
    border-right: none;
  }
  &:nth-last-child(-n + 2) {
    border-bottom: none;
  }
`;
var formatNumber = ({ locale, number }) => {
  return new Intl.NumberFormat(locale, {
    notation: "compact",
    maximumFractionDigits: 1
  }).format(number);
};
var LinkCell = dt(Link)`
  text-decoration: none;
  padding: ${({ theme }) => theme.spaces[3]};
`;
var KeyStatisticsWidget = () => {
  const { trackUsage } = useTracking();
  const { formatMessage, locale } = useIntl();
  const { data: countDocuments, isLoading: isLoadingCountDocuments } = useGetCountDocumentsQuery();
  const { data: countKeyStatistics, isLoading: isLoadingKeyStatistics } = useGetKeyStatisticsQuery();
  if (isLoadingKeyStatistics || isLoadingCountDocuments) {
    return (0, import_jsx_runtime.jsx)(Widget.Loading, {});
  }
  if (!countKeyStatistics || !countDocuments) {
    return (0, import_jsx_runtime.jsx)(Widget.Error, {});
  }
  const keyStatisticsList = {
    entries: {
      label: {
        id: "widget.key-statistics.list.entries",
        defaultMessage: "Entries"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$1J, {}),
        background: "primary100",
        color: "primary600"
      },
      link: "/content-manager"
    },
    assets: {
      label: {
        id: "widget.key-statistics.list.assets",
        defaultMessage: "Assets"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$1o, {}),
        background: "warning100",
        color: "warning600"
      },
      link: "/plugins/upload"
    },
    contentTypes: {
      label: {
        id: "widget.key-statistics.list.contentTypes",
        defaultMessage: "Content-Types"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$1i, {}),
        background: "secondary100",
        color: "secondary600"
      },
      link: "/plugins/content-type-builder"
    },
    components: {
      label: {
        id: "widget.key-statistics.list.components",
        defaultMessage: "Components"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$1E, {}),
        background: "alternative100",
        color: "alternative600"
      },
      link: "/plugins/content-type-builder"
    },
    locales: {
      label: {
        id: "widget.key-statistics.list.locales",
        defaultMessage: "Locales"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$1Z, {}),
        background: "success100",
        color: "success600"
      },
      link: "/settings/internationalization"
    },
    admins: {
      label: {
        id: "widget.key-statistics.list.admins",
        defaultMessage: "Admins"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$6, {}),
        background: "danger100",
        color: "danger600"
      },
      link: "/settings/users?pageSize=10&page=1&sort=firstname"
    },
    webhooks: {
      label: {
        id: "widget.key-statistics.list.webhooks",
        defaultMessage: "Webhooks"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$1, {}),
        background: "alternative100",
        color: "alternative600"
      },
      link: "/settings/webhooks"
    },
    apiTokens: {
      label: {
        id: "widget.key-statistics.list.apiTokens",
        defaultMessage: "API Tokens"
      },
      icon: {
        component: (0, import_jsx_runtime.jsx)(ForwardRef$1j, {}),
        background: "neutral100",
        color: "neutral600"
      },
      link: "/settings/api-tokens?sort=name:ASC"
    }
  };
  const { draft, published, modified } = countDocuments ?? {
    draft: 0,
    published: 0,
    modified: 0
  };
  const totalCountEntries = draft + published + modified;
  return (0, import_jsx_runtime.jsx)(Grid, {
    children: Object.entries(keyStatisticsList).map(([key, item]) => {
      const value = countKeyStatistics == null ? void 0 : countKeyStatistics[key];
      return value !== null && (0, import_jsx_runtime.jsx)(GridCell, {
        as: LinkCell,
        to: item.link,
        "data-testid": `stat-${key}`,
        onClick: () => trackUsage("didOpenKeyStatisticsWidgetLink", {
          itemKey: key
        }),
        children: (0, import_jsx_runtime.jsxs)(Flex, {
          alignItems: "center",
          gap: 2,
          children: [
            (0, import_jsx_runtime.jsx)(Flex, {
              padding: 2,
              borderRadius: 1,
              background: item.icon.background,
              color: item.icon.color,
              children: item.icon.component
            }),
            (0, import_jsx_runtime.jsxs)(Flex, {
              direction: "column",
              alignItems: "flex-start",
              children: [
                (0, import_jsx_runtime.jsx)(Typography, {
                  variant: "pi",
                  fontWeight: "bold",
                  textColor: "neutral500",
                  children: formatMessage(item.label)
                }),
                (0, import_jsx_runtime.jsx)(Typography, {
                  variant: "omega",
                  fontWeight: "bold",
                  textColor: "neutral800",
                  children: formatNumber({
                    locale,
                    number: key === "entries" ? totalCountEntries : value
                  })
                })
              ]
            })
          ]
        })
      }, `key-statistics-${key}`);
    })
  });
};
export {
  KeyStatisticsWidget,
  ProfileWidget
};
//# sourceMappingURL=Widgets-TO62LTHH.js.map
