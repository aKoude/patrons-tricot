{
  "version": 3,
  "sources": ["../../../attr-accept/dist/es/index.js", "../../../inline-style-parser/index.js", "../../../style-to-object/src/index.ts", "../../../style-to-js/src/utilities.ts", "../../../style-to-js/src/index.ts", "../../../ms/index.js", "../../../debug/src/common.js", "../../../debug/src/browser.js", "../../../extend/index.js", "../../../throttleit/index.js", "../../../jszip/dist/jszip.min.js", "browser-external:util", "../../../braces/lib/utils.js", "../../../braces/lib/stringify.js", "../../../is-number/index.js", "../../../to-regex-range/index.js", "../../../fill-range/index.js", "../../../braces/lib/compile.js", "../../../braces/lib/expand.js", "../../../braces/lib/constants.js", "../../../braces/lib/parse.js", "../../../braces/index.js", "../../../picomatch/lib/constants.js", "../../../picomatch/lib/utils.js", "../../../picomatch/lib/scan.js", "../../../picomatch/lib/parse.js", "../../../picomatch/lib/picomatch.js", "../../../picomatch/index.js", "../../../micromatch/index.js", "../../../lodash/_baseIsRegExp.js", "../../../lodash/isRegExp.js", "../../../lodash/_asciiSize.js", "../../../lodash/_unicodeSize.js", "../../../lodash/_stringSize.js", "../../../lodash/truncate.js", "../../../lodash/_createSet.js", "../../../lodash/_baseUniq.js", "../../../lodash/uniq.js", "../../../lodash/lodash.min.js", "../../../lodash/fp.js", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Alert.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/AnimatedBox.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/lib/constants.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Base64Image.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/animations.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/FullScreenImage.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Attachments/components/Attachment.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Attachments/AttachmentPreview.tsx", "../../../react-dropzone/dist/es/index.js", "../../../file-selector/src/file.ts", "../../../file-selector/src/file-selector.ts", "../../../react-dropzone/dist/es/utils/index.js", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Dropzone.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/FloatingPanel.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/icons/FigmaIcon.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/icons/StopIcon.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Input.tsx", "../../../devlop/lib/development.js", "../../../comma-separated-tokens/index.js", "../../../estree-util-is-identifier-name/lib/index.js", "../../../hast-util-whitespace/lib/index.js", "../../../property-information/lib/util/schema.js", "../../../property-information/lib/util/merge.js", "../../../property-information/lib/normalize.js", "../../../property-information/lib/util/info.js", "../../../property-information/lib/util/types.js", "../../../property-information/lib/util/defined-info.js", "../../../property-information/lib/util/create.js", "../../../property-information/lib/aria.js", "../../../property-information/lib/util/case-sensitive-transform.js", "../../../property-information/lib/util/case-insensitive-transform.js", "../../../property-information/lib/html.js", "../../../property-information/lib/svg.js", "../../../property-information/lib/xlink.js", "../../../property-information/lib/xmlns.js", "../../../property-information/lib/xml.js", "../../../property-information/lib/hast-to-react.js", "../../../property-information/lib/find.js", "../../../property-information/index.js", "../../../space-separated-tokens/index.js", "../../../hast-util-to-jsx-runtime/lib/index.js", "../../../unist-util-position/lib/index.js", "../../../unist-util-stringify-position/lib/index.js", "../../../vfile-message/lib/index.js", "../../../html-url-attributes/lib/index.js", "../../../react-markdown/lib/index.js", "../../../mdast-util-to-string/lib/index.js", "../../../decode-named-character-reference/index.dom.js", "../../../micromark-util-symbol/lib/codes.js", "../../../micromark-util-symbol/lib/constants.js", "../../../micromark-util-symbol/lib/types.js", "../../../micromark-util-symbol/lib/values.js", "../../../micromark-util-chunked/dev/index.js", "../../../micromark-util-combine-extensions/index.js", "../../../micromark-util-decode-numeric-character-reference/dev/index.js", "../../../micromark-util-normalize-identifier/dev/index.js", "../../../micromark-util-character/dev/index.js", "../../../micromark-util-sanitize-uri/dev/index.js", "../../../micromark/dev/lib/compile.js", "../../../micromark-factory-space/dev/index.js", "../../../micromark/dev/lib/initialize/content.js", "../../../micromark/dev/lib/initialize/document.js", "../../../micromark-util-classify-character/dev/index.js", "../../../micromark-util-resolve-all/index.js", "../../../micromark-core-commonmark/dev/lib/attention.js", "../../../micromark-core-commonmark/dev/lib/autolink.js", "../../../micromark-core-commonmark/dev/lib/blank-line.js", "../../../micromark-core-commonmark/dev/lib/block-quote.js", "../../../micromark-core-commonmark/dev/lib/character-escape.js", "../../../micromark-core-commonmark/dev/lib/character-reference.js", "../../../micromark-core-commonmark/dev/lib/code-fenced.js", "../../../micromark-core-commonmark/dev/lib/code-indented.js", "../../../micromark-core-commonmark/dev/lib/code-text.js", "../../../micromark-util-subtokenize/dev/lib/splice-buffer.js", "../../../micromark-util-subtokenize/dev/index.js", "../../../micromark-core-commonmark/dev/lib/content.js", "../../../micromark-factory-destination/dev/index.js", "../../../micromark-factory-label/dev/index.js", "../../../micromark-factory-title/dev/index.js", "../../../micromark-factory-whitespace/dev/index.js", "../../../micromark-core-commonmark/dev/lib/definition.js", "../../../micromark-core-commonmark/dev/lib/hard-break-escape.js", "../../../micromark-core-commonmark/dev/lib/heading-atx.js", "../../../micromark-util-html-tag-name/index.js", "../../../micromark-core-commonmark/dev/lib/html-flow.js", "../../../micromark-core-commonmark/dev/lib/html-text.js", "../../../micromark-core-commonmark/dev/lib/label-end.js", "../../../micromark-core-commonmark/dev/lib/label-start-image.js", "../../../micromark-core-commonmark/dev/lib/label-start-link.js", "../../../micromark-core-commonmark/dev/lib/line-ending.js", "../../../micromark-core-commonmark/dev/lib/thematic-break.js", "../../../micromark-core-commonmark/dev/lib/list.js", "../../../micromark-core-commonmark/dev/lib/setext-underline.js", "../../../micromark/dev/lib/initialize/flow.js", "../../../micromark/dev/lib/initialize/text.js", "../../../micromark/dev/lib/constructs.js", "../../../micromark/dev/lib/create-tokenizer.js", "../../../micromark/dev/lib/parse.js", "../../../micromark/dev/lib/postprocess.js", "../../../micromark/dev/lib/preprocess.js", "../../../micromark-util-decode-string/dev/index.js", "../../../mdast-util-from-markdown/dev/lib/index.js", "../../../remark-parse/lib/index.js", "../../../mdast-util-to-hast/lib/handlers/blockquote.js", "../../../mdast-util-to-hast/lib/handlers/break.js", "../../../mdast-util-to-hast/lib/handlers/code.js", "../../../mdast-util-to-hast/lib/handlers/delete.js", "../../../mdast-util-to-hast/lib/handlers/emphasis.js", "../../../mdast-util-to-hast/lib/handlers/footnote-reference.js", "../../../mdast-util-to-hast/lib/handlers/heading.js", "../../../mdast-util-to-hast/lib/handlers/html.js", "../../../mdast-util-to-hast/lib/revert.js", "../../../mdast-util-to-hast/lib/handlers/image-reference.js", "../../../mdast-util-to-hast/lib/handlers/image.js", "../../../mdast-util-to-hast/lib/handlers/inline-code.js", "../../../mdast-util-to-hast/lib/handlers/link-reference.js", "../../../mdast-util-to-hast/lib/handlers/link.js", "../../../mdast-util-to-hast/lib/handlers/list-item.js", "../../../mdast-util-to-hast/lib/handlers/list.js", "../../../mdast-util-to-hast/lib/handlers/paragraph.js", "../../../mdast-util-to-hast/lib/handlers/root.js", "../../../mdast-util-to-hast/lib/handlers/strong.js", "../../../mdast-util-to-hast/lib/handlers/table.js", "../../../mdast-util-to-hast/lib/handlers/table-row.js", "../../../mdast-util-to-hast/lib/handlers/table-cell.js", "../../../trim-lines/index.js", "../../../mdast-util-to-hast/lib/handlers/text.js", "../../../mdast-util-to-hast/lib/handlers/thematic-break.js", "../../../mdast-util-to-hast/lib/handlers/index.js", "../../../@ungap/structured-clone/esm/types.js", "../../../@ungap/structured-clone/esm/deserialize.js", "../../../@ungap/structured-clone/esm/serialize.js", "../../../@ungap/structured-clone/esm/index.js", "../../../mdast-util-to-hast/lib/footer.js", "../../../unist-util-is/lib/index.js", "../../../unist-util-visit-parents/lib/color.js", "../../../unist-util-visit-parents/lib/index.js", "../../../unist-util-visit/lib/index.js", "../../../mdast-util-to-hast/lib/state.js", "../../../mdast-util-to-hast/lib/index.js", "../../../remark-rehype/lib/index.js", "../../../bail/index.js", "../../../unified/lib/index.js", "../../../is-plain-obj/index.js", "../../../trough/lib/index.js", "../../../vfile/lib/minpath.browser.js", "../../../vfile/lib/minproc.browser.js", "../../../vfile/lib/minurl.shared.js", "../../../vfile/lib/minurl.browser.js", "../../../vfile/lib/index.js", "../../../unified/lib/callable-instance.js", "../../../@ai-sdk/react/src/use-chat.ts", "../../../@ai-sdk/react/src/chat.react.ts", "../../../@ai-sdk/react/src/throttle.ts", "../../../@ai-sdk/react/src/use-completion.ts", "../../../@ai-sdk/react/src/use-object.ts", "../../../@ai-sdk/provider/src/errors/ai-sdk-error.ts", "../../../@ai-sdk/provider/src/errors/api-call-error.ts", "../../../@ai-sdk/provider/src/errors/empty-response-body-error.ts", "../../../@ai-sdk/provider/src/errors/get-error-message.ts", "../../../@ai-sdk/provider/src/errors/invalid-argument-error.ts", "../../../@ai-sdk/provider/src/errors/invalid-prompt-error.ts", "../../../@ai-sdk/provider/src/errors/invalid-response-data-error.ts", "../../../@ai-sdk/provider/src/errors/json-parse-error.ts", "../../../@ai-sdk/provider/src/errors/load-api-key-error.ts", "../../../@ai-sdk/provider/src/errors/load-setting-error.ts", "../../../@ai-sdk/provider/src/errors/no-content-generated-error.ts", "../../../@ai-sdk/provider/src/errors/no-such-model-error.ts", "../../../@ai-sdk/provider/src/errors/too-many-embedding-values-for-call-error.ts", "../../../@ai-sdk/provider/src/errors/type-validation-error.ts", "../../../@ai-sdk/provider/src/errors/unsupported-functionality-error.ts", "../../../@ai-sdk/provider/src/json-value/is-json.ts", "../../../eventsource-parser/src/errors.ts", "../../../eventsource-parser/src/parse.ts", "../../../eventsource-parser/src/stream.ts", "../../../zod/dist/esm/v4/classic/external.js", "../../../zod/dist/esm/v4/core/index.js", "../../../zod/dist/esm/v4/core/core.js", "../../../zod/dist/esm/v4/core/util.js", "../../../zod/dist/esm/v4/core/errors.js", "../../../zod/dist/esm/v4/core/parse.js", "../../../zod/dist/esm/v4/core/regexes.js", "../../../zod/dist/esm/v4/core/checks.js", "../../../zod/dist/esm/v4/core/doc.js", "../../../zod/dist/esm/v4/core/versions.js", "../../../zod/dist/esm/v4/core/schemas.js", "../../../zod/dist/esm/v4/locales/index.js", "../../../zod/dist/esm/v4/locales/ar.js", "../../../zod/dist/esm/v4/locales/az.js", "../../../zod/dist/esm/v4/locales/be.js", "../../../zod/dist/esm/v4/locales/ca.js", "../../../zod/dist/esm/v4/locales/cs.js", "../../../zod/dist/esm/v4/locales/de.js", "../../../zod/dist/esm/v4/locales/en.js", "../../../zod/dist/esm/v4/locales/es.js", "../../../zod/dist/esm/v4/locales/fa.js", "../../../zod/dist/esm/v4/locales/fi.js", "../../../zod/dist/esm/v4/locales/fr.js", "../../../zod/dist/esm/v4/locales/fr-CA.js", "../../../zod/dist/esm/v4/locales/he.js", "../../../zod/dist/esm/v4/locales/hu.js", "../../../zod/dist/esm/v4/locales/id.js", "../../../zod/dist/esm/v4/locales/it.js", "../../../zod/dist/esm/v4/locales/ja.js", "../../../zod/dist/esm/v4/locales/kh.js", "../../../zod/dist/esm/v4/locales/ko.js", "../../../zod/dist/esm/v4/locales/mk.js", "../../../zod/dist/esm/v4/locales/ms.js", "../../../zod/dist/esm/v4/locales/nl.js", "../../../zod/dist/esm/v4/locales/no.js", "../../../zod/dist/esm/v4/locales/ota.js", "../../../zod/dist/esm/v4/locales/ps.js", "../../../zod/dist/esm/v4/locales/pl.js", "../../../zod/dist/esm/v4/locales/pt.js", "../../../zod/dist/esm/v4/locales/ru.js", "../../../zod/dist/esm/v4/locales/sl.js", "../../../zod/dist/esm/v4/locales/sv.js", "../../../zod/dist/esm/v4/locales/ta.js", "../../../zod/dist/esm/v4/locales/th.js", "../../../zod/dist/esm/v4/locales/tr.js", "../../../zod/dist/esm/v4/locales/ua.js", "../../../zod/dist/esm/v4/locales/ur.js", "../../../zod/dist/esm/v4/locales/vi.js", "../../../zod/dist/esm/v4/locales/zh-CN.js", "../../../zod/dist/esm/v4/locales/zh-TW.js", "../../../zod/dist/esm/v4/core/registries.js", "../../../zod/dist/esm/v4/core/api.js", "../../../zod/dist/esm/v4/core/function.js", "../../../zod/dist/esm/v4/core/to-json-schema.js", "../../../zod/dist/esm/v4/core/json-schema.js", "../../../zod/dist/esm/v4/classic/iso.js", "../../../zod/dist/esm/v4/classic/errors.js", "../../../zod/dist/esm/v4/classic/parse.js", "../../../zod/dist/esm/v4/classic/schemas.js", "../../../zod/dist/esm/v4/classic/compat.js", "../../../zod/dist/esm/v4/classic/coerce.js", "../../../@ai-sdk/provider-utils/src/combine-headers.ts", "../../../@ai-sdk/provider-utils/src/convert-async-iterator-to-readable-stream.ts", "../../../@ai-sdk/provider-utils/src/delay.ts", "../../../@ai-sdk/provider-utils/src/extract-response-headers.ts", "../../../@ai-sdk/provider-utils/src/generate-id.ts", "../../../@ai-sdk/provider-utils/src/get-error-message.ts", "../../../@ai-sdk/provider-utils/src/get-from-api.ts", "../../../@ai-sdk/provider-utils/src/handle-fetch-error.ts", "../../../@ai-sdk/provider-utils/src/is-abort-error.ts", "../../../@ai-sdk/provider-utils/src/remove-undefined-entries.ts", "../../../@ai-sdk/provider-utils/src/inject-json-instruction.ts", "../../../@ai-sdk/provider-utils/src/is-url-supported.ts", "../../../@ai-sdk/provider-utils/src/load-api-key.ts", "../../../@ai-sdk/provider-utils/src/load-optional-setting.ts", "../../../@ai-sdk/provider-utils/src/load-setting.ts", "../../../@ai-sdk/provider-utils/src/media-type-to-extension.ts", "../../../@ai-sdk/provider-utils/src/parse-json.ts", "../../../@ai-sdk/provider-utils/src/secure-json-parse.ts", "../../../@ai-sdk/provider-utils/src/validate-types.ts", "../../../@ai-sdk/provider-utils/src/validator.ts", "../../../@ai-sdk/provider-utils/src/parse-json-event-stream.ts", "../../../@ai-sdk/provider-utils/src/parse-provider-options.ts", "../../../@ai-sdk/provider-utils/src/post-to-api.ts", "../../../@ai-sdk/provider-utils/src/types/tool.ts", "../../../@ai-sdk/provider-utils/src/provider-defined-tool-factory.ts", "../../../@ai-sdk/provider-utils/src/resolve.ts", "../../../@ai-sdk/provider-utils/src/response-handler.ts", "../../../@ai-sdk/provider-utils/src/zod-schema.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/get-relative-path.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/options.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/select-parser.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/any.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/array.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/bigint.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/boolean.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/branded.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/catch.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/date.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/default.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/effects.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/enum.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/intersection.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/literal.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/record.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/string.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/map.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/native-enum.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/never.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/null.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/union.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/nullable.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/number.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/object.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/optional.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/pipeline.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/promise.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/set.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/tuple.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/undefined.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/unknown.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parsers/readonly.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/parse-def.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/refs.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/zod-to-json-schema.ts", "../../../@ai-sdk/provider-utils/src/zod-to-json-schema/index.ts", "../../../@ai-sdk/provider-utils/src/schema.ts", "../../../@ai-sdk/provider-utils/src/uint8-utils.ts", "../../../@ai-sdk/provider-utils/src/without-trailing-slash.ts", "../../../@ai-sdk/provider-utils/src/is-async-iterable.ts", "../../../@ai-sdk/provider-utils/src/types/execute-tool.ts", "../../../@ai-sdk/provider-utils/src/index.ts", "../../../@ai-sdk/gateway/src/gateway-provider.ts", "../../../@ai-sdk/gateway/src/errors/as-gateway-error.ts", "../../../@ai-sdk/gateway/src/errors/create-gateway-error.ts", "../../../@ai-sdk/gateway/src/errors/gateway-error.ts", "../../../@ai-sdk/gateway/src/errors/gateway-authentication-error.ts", "../../../@ai-sdk/gateway/src/errors/gateway-invalid-request-error.ts", "../../../@ai-sdk/gateway/src/errors/gateway-rate-limit-error.ts", "../../../@ai-sdk/gateway/src/errors/gateway-model-not-found-error.ts", "../../../@ai-sdk/gateway/src/errors/gateway-internal-server-error.ts", "../../../@ai-sdk/gateway/src/errors/gateway-response-error.ts", "../../../@ai-sdk/gateway/src/errors/extract-api-call-response.ts", "../../../@ai-sdk/gateway/src/errors/parse-auth-method.ts", "../../../@ai-sdk/gateway/src/gateway-fetch-metadata.ts", "../../../@ai-sdk/gateway/src/gateway-language-model.ts", "../../../@ai-sdk/gateway/src/gateway-embedding-model.ts", "../../../@ai-sdk/gateway/src/vercel-environment.ts", "../../../@opentelemetry/api/src/platform/browser/globalThis.ts", "../../../@opentelemetry/api/src/version.ts", "../../../@opentelemetry/api/src/internal/semver.ts", "../../../@opentelemetry/api/src/internal/global-utils.ts", "../../../@opentelemetry/api/src/diag/ComponentLogger.ts", "../../../@opentelemetry/api/src/diag/types.ts", "../../../@opentelemetry/api/src/diag/internal/logLevelLogger.ts", "../../../@opentelemetry/api/src/api/diag.ts", "../../../@opentelemetry/api/src/baggage/internal/baggage-impl.ts", "../../../@opentelemetry/api/src/baggage/internal/symbol.ts", "../../../@opentelemetry/api/src/baggage/utils.ts", "../../../@opentelemetry/api/src/context/context.ts", "../../../@opentelemetry/api/src/metrics/NoopMeter.ts", "../../../@opentelemetry/api/src/metrics/Metric.ts", "../../../@opentelemetry/api/src/propagation/TextMapPropagator.ts", "../../../@opentelemetry/api/src/context/NoopContextManager.ts", "../../../@opentelemetry/api/src/api/context.ts", "../../../@opentelemetry/api/src/trace/trace_flags.ts", "../../../@opentelemetry/api/src/trace/invalid-span-constants.ts", "../../../@opentelemetry/api/src/trace/NonRecordingSpan.ts", "../../../@opentelemetry/api/src/trace/context-utils.ts", "../../../@opentelemetry/api/src/trace/spancontext-utils.ts", "../../../@opentelemetry/api/src/trace/NoopTracer.ts", "../../../@opentelemetry/api/src/trace/ProxyTracer.ts", "../../../@opentelemetry/api/src/trace/NoopTracerProvider.ts", "../../../@opentelemetry/api/src/trace/ProxyTracerProvider.ts", "../../../@opentelemetry/api/src/trace/SamplingResult.ts", "../../../@opentelemetry/api/src/trace/span_kind.ts", "../../../@opentelemetry/api/src/trace/status.ts", "../../../@opentelemetry/api/src/trace/internal/tracestate-validators.ts", "../../../@opentelemetry/api/src/trace/internal/tracestate-impl.ts", "../../../@opentelemetry/api/src/context-api.ts", "../../../@opentelemetry/api/src/diag-api.ts", "../../../@opentelemetry/api/src/metrics/NoopMeterProvider.ts", "../../../@opentelemetry/api/src/api/metrics.ts", "../../../@opentelemetry/api/src/metrics-api.ts", "../../../@opentelemetry/api/src/propagation/NoopTextMapPropagator.ts", "../../../@opentelemetry/api/src/baggage/context-helpers.ts", "../../../@opentelemetry/api/src/api/propagation.ts", "../../../@opentelemetry/api/src/propagation-api.ts", "../../../@opentelemetry/api/src/api/trace.ts", "../../../@opentelemetry/api/src/trace-api.ts", "../../../ai/src/index.ts", "../../../ai/src/generate-text/generate-text.ts", "../../../ai/src/error/no-output-specified-error.ts", "../../../ai/src/model/resolve-model.ts", "../../../ai/src/error/index.ts", "../../../ai/src/error/invalid-argument-error.ts", "../../../ai/src/error/invalid-stream-part-error.ts", "../../../ai/src/error/invalid-tool-input-error.ts", "../../../ai/src/error/mcp-client-error.ts", "../../../ai/src/error/no-image-generated-error.ts", "../../../ai/src/error/no-object-generated-error.ts", "../../../ai/src/error/no-output-generated-error.ts", "../../../ai/src/error/no-such-tool-error.ts", "../../../ai/src/error/tool-call-repair-error.ts", "../../../ai/src/error/unsupported-model-version-error.ts", "../../../ai/src/prompt/invalid-data-content-error.ts", "../../../ai/src/prompt/invalid-message-role-error.ts", "../../../ai/src/prompt/message-conversion-error.ts", "../../../ai/src/util/download-error.ts", "../../../ai/src/util/retry-error.ts", "../../../ai/src/prompt/convert-to-language-model-prompt.ts", "../../../ai/src/util/detect-media-type.ts", "../../../ai/src/util/download.ts", "../../../ai/src/prompt/data-content.ts", "../../../ai/src/prompt/split-data-url.ts", "../../../ai/src/prompt/prepare-call-settings.ts", "../../../ai/src/prompt/prepare-tools-and-tool-choice.ts", "../../../ai/src/util/is-non-empty-object.ts", "../../../ai/src/prompt/standardize-prompt.ts", "../../../ai/src/prompt/message.ts", "../../../ai/src/types/provider-metadata.ts", "../../../ai/src/types/json-value.ts", "../../../ai/src/prompt/content-part.ts", "../../../ai/src/prompt/wrap-gateway-error.ts", "../../../ai/src/telemetry/assemble-operation-name.ts", "../../../ai/src/telemetry/get-base-telemetry-attributes.ts", "../../../ai/src/telemetry/get-tracer.ts", "../../../ai/src/telemetry/noop-tracer.ts", "../../../ai/src/telemetry/record-span.ts", "../../../ai/src/telemetry/select-telemetry-attributes.ts", "../../../ai/src/telemetry/stringify-for-telemetry.ts", "../../../ai/src/types/usage.ts", "../../../ai/src/util/as-array.ts", "../../../ai/src/util/retry-with-exponential-backoff.ts", "../../../ai/src/util/prepare-retries.ts", "../../../ai/src/generate-text/extract-text-content.ts", "../../../ai/src/generate-text/generated-file.ts", "../../../ai/src/generate-text/parse-tool-call.ts", "../../../ai/src/generate-text/step-result.ts", "../../../ai/src/generate-text/stop-condition.ts", "../../../ai/src/prompt/create-tool-model-output.ts", "../../../ai/src/generate-text/to-response-messages.ts", "../../../ai/src/generate-text/stream-text.ts", "../../../ai/src/util/prepare-headers.ts", "../../../ai/src/text-stream/create-text-stream-response.ts", "../../../ai/src/util/write-to-server-response.ts", "../../../ai/src/text-stream/pipe-text-stream-to-response.ts", "../../../ai/src/ui-message-stream/json-to-sse-transform-stream.ts", "../../../ai/src/ui-message-stream/ui-message-stream-headers.ts", "../../../ai/src/ui-message-stream/create-ui-message-stream-response.ts", "../../../ai/src/ui-message-stream/get-response-ui-message-id.ts", "../../../ai/src/ui/process-ui-message-stream.ts", "../../../ai/src/ui-message-stream/ui-message-chunks.ts", "../../../ai/src/util/merge-objects.ts", "../../../ai/src/util/parse-partial-json.ts", "../../../ai/src/util/fix-json.ts", "../../../ai/src/ui/ui-messages.ts", "../../../ai/src/ui-message-stream/handle-ui-message-stream-finish.ts", "../../../ai/src/ui-message-stream/pipe-ui-message-stream-to-response.ts", "../../../ai/src/util/async-iterable-stream.ts", "../../../ai/src/util/consume-stream.ts", "../../../ai/src/util/create-resolvable-promise.ts", "../../../ai/src/util/create-stitchable-stream.ts", "../../../ai/src/util/delayed-promise.ts", "../../../ai/src/util/now.ts", "../../../ai/src/generate-text/run-tools-transformation.ts", "../../../ai/src/agent/agent.ts", "../../../ai/src/embed/embed.ts", "../../../ai/src/util/split-array.ts", "../../../ai/src/embed/embed-many.ts", "../../../ai/src/generate-image/generate-image.ts", "../../../ai/src/generate-object/generate-object.ts", "../../../ai/src/generate-text/extract-reasoning-content.ts", "../../../ai/src/generate-object/output-strategy.ts", "../../../ai/src/generate-object/parse-and-validate-object-result.ts", "../../../ai/src/generate-object/validate-object-generation-input.ts", "../../../ai/src/generate-object/stream-object.ts", "../../../ai/src/util/cosine-similarity.ts", "../../../ai/src/util/data-url.ts", "../../../ai/src/util/is-deep-equal-data.ts", "../../../ai/src/util/serial-job-executor.ts", "../../../ai/src/util/simulate-readable-stream.ts", "../../../ai/src/error/no-speech-generated-error.ts", "../../../ai/src/generate-speech/generated-audio-file.ts", "../../../ai/src/generate-speech/generate-speech.ts", "../../../ai/src/generate-text/output.ts", "../../../ai/src/generate-text/smooth-stream.ts", "../../../ai/src/middleware/default-settings-middleware.ts", "../../../ai/src/util/get-potential-start-index.ts", "../../../ai/src/middleware/extract-reasoning-middleware.ts", "../../../ai/src/middleware/simulate-streaming-middleware.ts", "../../../ai/src/middleware/wrap-language-model.ts", "../../../ai/src/middleware/wrap-provider.ts", "../../../ai/src/registry/custom-provider.ts", "../../../ai/src/registry/no-such-provider-error.ts", "../../../ai/src/registry/provider-registry.ts", "../../../ai/src/tool/mcp/mcp-client.ts", "../../../ai/src/tool/mcp/mcp-sse-transport.ts", "../../../ai/src/tool/mcp/json-rpc-message.ts", "../../../ai/src/tool/mcp/types.ts", "../../../ai/src/tool/mcp/mcp-transport.ts", "../../../ai/src/error/no-transcript-generated-error.ts", "../../../ai/src/transcribe/transcribe.ts", "../../../ai/src/ui/call-completion-api.ts", "../../../ai/src/ui/process-text-stream.ts", "../../../ai/src/ui/chat.ts", "../../../ai/src/ui/convert-file-list-to-file-ui-parts.ts", "../../../ai/src/ui/default-chat-transport.ts", "../../../ai/src/ui/http-chat-transport.ts", "../../../ai/src/ui/convert-to-model-messages.ts", "../../../ai/src/ui/last-assistant-message-is-complete-with-tool-calls.ts", "../../../ai/src/ui/transform-text-to-ui-message-stream.ts", "../../../ai/src/ui/text-stream-chat-transport.ts", "../../../ai/src/ui/validate-ui-messages.ts", "../../../ai/src/ui-message-stream/create-ui-message-stream.ts", "../../../ai/src/ui-message-stream/read-ui-message-stream.ts", "../../../swr/dist/index/index.mjs", "../../../swr/dist/_internal/config-context-client-BoS53ST9.mjs", "../../../swr/dist/_internal/events.mjs", "../../../dequal/lite/index.mjs", "../../../swr/dist/_internal/constants.mjs", "../../../swr/dist/_internal/index.mjs", "../../../@strapi/content-type-builder/admin/src/components/AIChat/lib/aiClient.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useAIFetch.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useChatTitle.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useLastSeenSchemas.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/lib/transforms/schemas/fromCTB.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/StepModal.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/lib/misc.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useAttachments.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useCodeUpload.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useTranslations.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/UploadCodeModal.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/ImagePreview.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useFigmaUpload.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/UploadFigmaModal.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/lib/transforms/schemas/toCTB.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/providers/SchemaProvider.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/providers/ChatProvider.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/hooks/useFeedback.ts", "../../../@strapi/content-type-builder/admin/src/components/AIChat/FeedbackModal.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Collapsible.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Messages/Marker.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/Messages/Message.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/ResizableTextArea.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/components/SimpleMenu.tsx", "../../../@strapi/content-type-builder/admin/src/components/AIChat/Chat.tsx", "../../../@strapi/content-type-builder/admin/src/components/ContentTypeBuilderNav/useContentTypeBuilderMenu.ts", "../../../@strapi/content-type-builder/admin/src/components/ContentTypeBuilderNav/ContentTypeBuilderNav.tsx", "../../../@strapi/content-type-builder/admin/src/components/DataManager/useServerRestartWatcher.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/utils/cleanData.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/utils/retrieveComponentsThatHaveComponents.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/utils/retrieveNestedComponents.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/utils/retrieveSpecificInfoFromComponents.ts", "../../../@strapi/content-type-builder/admin/src/components/DataManager/DataManagerProvider.tsx", "../../../@strapi/content-type-builder/admin/src/components/ExitPrompt.tsx", "../../../@strapi/content-type-builder/admin/src/utils/isAllowedContentTypesForRelations.ts", "../../../@strapi/content-type-builder/admin/src/utils/findAttribute.ts", "../../../@strapi/content-type-builder/admin/src/utils/getYupInnerErrors.ts", "../../../@strapi/content-type-builder/admin/src/components/AllowedTypesSelect.tsx", "../../../@strapi/content-type-builder/admin/src/components/AttributeOptions/OptionBoxWrapper.tsx", "../../../@strapi/content-type-builder/admin/src/components/AttributeOptions/AttributeOption.tsx", "../../../@strapi/content-type-builder/admin/src/components/AttributeOptions/AttributeList.tsx", "../../../@strapi/content-type-builder/admin/src/components/AttributeOptions/CustomFieldOption.tsx", "../../../@strapi/content-type-builder/admin/src/components/AttributeOptions/EmptyAttributes.tsx", "../../../@strapi/content-type-builder/admin/src/components/AttributeOptions/CustomFieldsList.tsx", "../../../@strapi/content-type-builder/admin/src/components/AttributeOptions/AttributeOptions.tsx", "../../../@strapi/content-type-builder/admin/src/components/BooleanDefaultValueSelect.tsx", "../../../@strapi/content-type-builder/admin/src/components/CustomRadioGroup/Styles.tsx", "../../../@strapi/content-type-builder/admin/src/components/CustomRadioGroup/CustomRadioGroup.tsx", "../../../@strapi/content-type-builder/admin/src/components/BooleanRadioGroup.tsx", "../../../@strapi/content-type-builder/admin/src/components/CheckboxWithNumberField.tsx", "../../../@strapi/content-type-builder/admin/src/components/ContentTypeRadioGroup.tsx", "../../../@strapi/content-type-builder/admin/src/components/DraftAndPublishToggle.tsx", "../../../@strapi/content-type-builder/admin/src/components/FormModalEndActions.tsx", "../../../@strapi/content-type-builder/admin/src/components/FormModalHeader.tsx", "../../../@strapi/content-type-builder/admin/src/components/FormModalSubHeader.tsx", "../../../@strapi/content-type-builder/admin/src/components/IconPicker/IconPicker.tsx", "../../../@strapi/content-type-builder/admin/src/components/PluralName.tsx", "../../../@strapi/content-type-builder/admin/src/utils/parseDateValue.ts", "../../../@strapi/content-type-builder/admin/src/utils/timeFormat.ts", "../../../@strapi/content-type-builder/admin/src/components/GenericInputs.tsx", "../../../@strapi/content-type-builder/admin/src/components/Relation/RelationField/RelationTargetPicker/RelationTargetPicker.tsx", "../../../@strapi/content-type-builder/admin/src/components/Relation/RelationField/RelationField.tsx", "../../../@strapi/content-type-builder/admin/src/components/Relation/RelationNaturePicker/Components.tsx", "../../../@strapi/content-type-builder/admin/src/components/Relation/RelationNaturePicker/RelationNaturePicker.tsx", "../../../@strapi/content-type-builder/admin/src/components/Relation/Relation.tsx", "../../../@strapi/content-type-builder/admin/src/components/SelectCategory.tsx", "../../../@strapi/content-type-builder/admin/src/utils/getMaxDepth.ts", "../../../@strapi/content-type-builder/admin/src/components/SelectComponent.tsx", "../../../@strapi/content-type-builder/admin/src/components/SelectComponents.tsx", "../../../@strapi/content-type-builder/admin/src/components/SelectDateType.tsx", "../../../@strapi/content-type-builder/admin/src/components/SelectNumber.tsx", "../../../@strapi/content-type-builder/admin/src/components/SingularName.tsx", "../../../@strapi/content-type-builder/admin/src/components/TabForm.tsx", "../../../@strapi/content-type-builder/admin/src/components/TextareaEnum.tsx", "../../../@strapi/content-type-builder/admin/src/components/ApplyConditionButton.tsx", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/ConditionForm.tsx", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/nameField.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/commonBaseForm.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/component/componentForm.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/attributeOptions.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/advancedForm.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/component/componentField.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/baseForm.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/form.ts", "../../../@strapi/content-type-builder/admin/src/utils/toRegressedEnumValue.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/validation/common.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/attributes/types.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/component/createComponentSchema.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/contentType/contentTypeForm.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/contentType/createContentTypeSchema.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/dynamiczoneForm.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/forms/utils/addItemsToFormSection.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/forms/utils/createCollectionName.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/forms/utils/getUsedAttributeNames.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/forms/forms.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/canEditContentType.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/getAttributesToDisplay.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/utils/getFormInputNames.ts", "../../../@strapi/content-type-builder/admin/src/components/FormModal/FormModal.tsx", "../../../@strapi/content-type-builder/admin/src/components/FormModalNavigation/FormModalNavigationProvider.tsx", "../../../@strapi/content-type-builder/admin/src/pages/ListView/EmptyState.tsx", "../../../@strapi/content-type-builder/admin/src/pages/App/index.tsx"],
  "sourcesContent": ["\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n\n    if (acceptedFilesArray.length === 0) {\n      return true;\n    }\n\n    var fileName = file.name || '';\n    var mimeType = (file.type || '').toLowerCase();\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim().toLowerCase();\n\n      if (validType.charAt(0) === '.') {\n        return fileName.toLowerCase().endsWith(validType);\n      } else if (validType.endsWith('/*')) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      return mimeType === validType;\n    });\n  }\n\n  return true;\n};", "// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n", "import type { Declaration } from 'inline-style-parser';\nimport parse from 'inline-style-parser';\n\nexport { Declaration };\n\nexport interface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n", "const CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nconst HYPHEN_REGEX = /-([a-z])/g;\nconst NO_HYPHEN_REGEX = /^[^-]+$/;\nconst VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nconst MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n\n/**\n * Checks whether to skip camelCase.\n */\nconst skipCamelCase = (property: string) =>\n  !property ||\n  NO_HYPHEN_REGEX.test(property) ||\n  CUSTOM_PROPERTY_REGEX.test(property);\n\n/**\n * Replacer that capitalizes first character.\n */\nconst capitalize = (match: string, character: string) =>\n  character.toUpperCase();\n\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nconst trimHyphen = (match: string, prefix: string) => `${prefix}-`;\n\n/**\n * CamelCase options.\n */\nexport interface CamelCaseOptions {\n  reactCompat?: boolean;\n}\n\n/**\n * CamelCases a CSS property.\n */\nexport const camelCase = (property: string, options: CamelCaseOptions = {}) => {\n  if (skipCamelCase(property)) {\n    return property;\n  }\n\n  property = property.toLowerCase();\n\n  if (options.reactCompat) {\n    // `-ms` vendor prefix should not be capitalized\n    property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n  } else {\n    // for non-React, remove first hyphen so vendor prefix is not capitalized\n    property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n  }\n\n  return property.replace(HYPHEN_REGEX, capitalize);\n};\n", "import StyleToObject from 'style-to-object';\n\nimport { camelCase, CamelCaseOptions } from './utilities';\n\ntype StyleObject = Record<string, string>;\n\ninterface StyleToJSOptions extends CamelCaseOptions {}\n\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style: string, options?: StyleToJSOptions): StyleObject {\n  const output: StyleObject = {};\n\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  StyleToObject(style, (property, value) => {\n    // skip CSS comment\n    if (property && value) {\n      output[camelCase(property, options)] = value;\n    }\n  });\n\n  return output;\n}\n\nStyleToJS.default = StyleToJS;\n\nexport = StyleToJS;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n", "function throttle(function_, wait) {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError(`Expected the first argument to be a \\`function\\`, got \\`${typeof function_}\\`.`);\n\t}\n\n\t// TODO: Add `wait` validation too in the next major version.\n\n\tlet timeoutId;\n\tlet lastCallTime = 0;\n\n\treturn function throttled(...arguments_) { // eslint-disable-line func-names\n\t\tclearTimeout(timeoutId);\n\n\t\tconst now = Date.now();\n\t\tconst timeSinceLastCall = now - lastCallTime;\n\t\tconst delayForNextCall = wait - timeSinceLastCall;\n\n\t\tif (delayForNextCall <= 0) {\n\t\t\tlastCallTime = now;\n\t\t\tfunction_.apply(this, arguments_);\n\t\t} else {\n\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\tlastCallTime = Date.now();\n\t\t\t\tfunction_.apply(this, arguments_);\n\t\t\t}, delayForNextCall);\n\t\t}\n\t};\n}\n\nmodule.exports = throttle;\n", "/*!\n\nJSZip v3.10.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/main/LICENSE\n*/\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).JSZip=e()}}(function(){return function s(a,o,h){function u(r,e){if(!o[r]){if(!a[r]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(r,!0);if(l)return l(r,!0);var n=new Error(\"Cannot find module '\"+r+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var i=o[r]={exports:{}};a[r][0].call(i.exports,function(e){var t=a[r][1][e];return u(t||e)},i,i.exports,s,a,o,h)}return o[r].exports}for(var l=\"function\"==typeof require&&require,e=0;e<h.length;e++)u(h[e]);return u}({1:[function(e,t,r){\"use strict\";var d=e(\"./utils\"),c=e(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(e){for(var t,r,n,i,s,a,o,h=[],u=0,l=e.length,f=l,c=\"string\"!==d.getTypeOf(e);u<e.length;)f=l-u,n=c?(t=e[u++],r=u<l?e[u++]:0,u<l?e[u++]:0):(t=e.charCodeAt(u++),r=u<l?e.charCodeAt(u++):0,u<l?e.charCodeAt(u++):0),i=t>>2,s=(3&t)<<4|r>>4,a=1<f?(15&r)<<2|n>>6:64,o=2<f?63&n:64,h.push(p.charAt(i)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(e){var t,r,n,i,s,a,o=0,h=0,u=\"data:\";if(e.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(e=e.replace(/[^A-Za-z0-9+/=]/g,\"\")).length/4;if(e.charAt(e.length-1)===p.charAt(64)&&f--,e.charAt(e.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=c.uint8array?new Uint8Array(0|f):new Array(0|f);o<e.length;)t=p.indexOf(e.charAt(o++))<<2|(i=p.indexOf(e.charAt(o++)))>>4,r=(15&i)<<4|(s=p.indexOf(e.charAt(o++)))>>2,n=(3&s)<<6|(a=p.indexOf(e.charAt(o++))),l[h++]=t,64!==s&&(l[h++]=r),64!==a&&(l[h++]=n);return l}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,r){\"use strict\";var n=e(\"./external\"),i=e(\"./stream/DataWorker\"),s=e(\"./stream/Crc32Probe\"),a=e(\"./stream/DataLengthProbe\");function o(e,t,r,n,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=r,this.compression=n,this.compressedContent=i}o.prototype={getContentWorker:function(){var e=new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),e},getCompressedWorker:function(){return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(e,t,r){return e.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,r){\"use strict\";var n=e(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(){return new n(\"STORE compression\")},uncompressWorker:function(){return new n(\"STORE decompression\")}},r.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,r){\"use strict\";var n=e(\"./utils\");var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==n.getTypeOf(e)?function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}(0|t,e,e.length,0):function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t.charCodeAt(a))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(e,t,r){\"use strict\";var n=null;n=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:n}},{lie:37}],7:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),s=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=n?\"uint8array\":\"array\";function h(e,t){a.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,e.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},r.compressWorker=function(e){return new h(\"Deflate\",e)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,r){\"use strict\";function A(e,t){var r,n=\"\";for(r=0;r<t;r++)n+=String.fromCharCode(255&e),e>>>=8;return n}function n(e,t,r,n,i,s){var a,o,h=e.file,u=e.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),c=I.transformTo(\"string\",O.utf8encode(h.name)),d=h.comment,p=I.transformTo(\"string\",s(d)),m=I.transformTo(\"string\",O.utf8encode(d)),_=c.length!==h.name.length,g=m.length!==d.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};t&&!r||(x.crc32=e.crc32,x.compressedSize=e.compressedSize,x.uncompressedSize=e.uncompressedSize);var S=0;t&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===i?(C=798,z|=function(e,t){var r=e;return e||(r=t?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(e){return 63&(e||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+c,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(n,4)+f+b+p}}var I=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),O=e(\"../utf8\"),B=e(\"../crc32\"),R=e(\"../signature\");function s(e,t,r,n){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=r,this.encodeFileName=n,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,i),s.prototype.push=function(e){var t=e.meta.percent||0,r=this.entriesCount,n=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:r?(t+100*(r-n-1))/r:100}}))},s.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var r=n(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,r=n(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),t)this.push({data:function(e){return R.DATA_DESCRIPTOR+A(e.crc32,4)+A(e.compressedSize,4)+A(e.uncompressedSize,4)}(e),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var r=this.bytesWritten-e,n=function(e,t,r,n,i){var s=I.transformTo(\"string\",i(n));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(e,2)+A(e,2)+A(t,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,e,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()}),e.on(\"error\",function(e){t.error(e)}),this},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var r=0;r<t.length;r++)try{t[r].error(e)}catch(e){}return!0},s.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,r){\"use strict\";var u=e(\"../compressions\"),n=e(\"./ZipFileWorker\");r.generateWorker=function(e,a,t){var o=new n(a.streamFiles,t,a.platform,a.encodeFileName),h=0;try{e.forEach(function(e,t){h++;var r=function(e,t){var r=e||t,n=u[r];if(!n)throw new Error(r+\" is not a valid compression method !\");return n}(t.options.compression,a.compression),n=t.options.compressionOptions||a.compressionOptions||{},i=t.dir,s=t.date;t._compressWorker(r,n).withStreamInfo(\"file\",{name:e,dir:i,date:s,comment:t.comment||\"\",unixPermissions:t.unixPermissions,dosPermissions:t.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(e){o.error(e)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,r){\"use strict\";function n(){if(!(this instanceof n))return new n;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var e=new n;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}(n.prototype=e(\"./object\")).loadAsync=e(\"./load\"),n.support=e(\"./support\"),n.defaults=e(\"./defaults\"),n.version=\"3.10.1\",n.loadAsync=function(e,t){return(new n).loadAsync(e,t)},n.external=e(\"./external\"),t.exports=n},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,r){\"use strict\";var u=e(\"./utils\"),i=e(\"./external\"),n=e(\"./utf8\"),s=e(\"./zipEntries\"),a=e(\"./stream/Crc32Probe\"),l=e(\"./nodejsUtils\");function f(n){return new i.Promise(function(e,t){var r=n.decompressed.getContentWorker().pipe(new a);r.on(\"error\",function(e){t(e)}).on(\"end\",function(){r.streamInfo.crc32!==n.decompressed.crc32?t(new Error(\"Corrupted zip : CRC32 mismatch\")):e()}).resume()})}t.exports=function(e,o){var h=this;return o=u.extend(o||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:n.utf8decode}),l.isNode&&l.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):u.prepareContent(\"the loaded zip file\",e,!0,o.optimizedBinaryString,o.base64).then(function(e){var t=new s(o);return t.load(e),t}).then(function(e){var t=[i.Promise.resolve(e)],r=e.files;if(o.checkCRC32)for(var n=0;n<r.length;n++)t.push(f(r[n]));return i.Promise.all(t)}).then(function(e){for(var t=e.shift(),r=t.files,n=0;n<r.length;n++){var i=r[n],s=i.fileNameStr,a=u.resolve(i.fileNameStr);h.file(a,i.decompressed,{binary:!0,optimizedBinaryString:!0,date:i.date,dir:i.dir,comment:i.fileCommentStr.length?i.fileCommentStr:null,unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions,createFolders:o.createFolders}),i.dir||(h.file(a).unsafeOriginalName=s)}return t.zipComment.length&&(h.comment=t.zipComment),h})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function s(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}n.inherits(s,i),s.prototype._bindStream=function(e){var t=this;(this._stream=e).pause(),e.on(\"data\",function(e){t.push({data:e,meta:{percent:0}})}).on(\"error\",function(e){t.isPaused?this.generatedError=e:t.error(e)}).on(\"end\",function(){t.isPaused?t._upstreamEnded=!0:t.end()})},s.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,r){\"use strict\";var i=e(\"readable-stream\").Readable;function n(e,t,r){i.call(this,t),this._helper=e;var n=this;e.on(\"data\",function(e,t){n.push(e)||n._helper.pause(),r&&r(t)}).on(\"error\",function(e){n.emit(\"error\",e)}).on(\"end\",function(){n.push(null)})}e(\"../utils\").inherits(n,i),n.prototype._read=function(){this._helper.resume()},t.exports=n},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,r){\"use strict\";t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,r){\"use strict\";function s(e,t,r){var n,i=u.getTypeOf(t),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(e=g(e)),s.createFolders&&(n=_(e))&&b.call(this,n,!0);var a=\"string\"===i&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(t instanceof c&&0===t.uncompressedSize||s.dir||!t||0===t.length)&&(s.base64=!1,s.binary=!0,t=\"\",s.compression=\"STORE\",i=\"string\");var o=null;o=t instanceof c||t instanceof l?t:p.isNode&&p.isStream(t)?new m(e,t):u.prepareContent(e,t,s.binary,s.optimizedBinaryString,s.base64);var h=new d(e,o,s);this.files[e]=h}var i=e(\"./utf8\"),u=e(\"./utils\"),l=e(\"./stream/GenericWorker\"),a=e(\"./stream/StreamHelper\"),f=e(\"./defaults\"),c=e(\"./compressedObject\"),d=e(\"./zipObject\"),o=e(\"./generate\"),p=e(\"./nodejsUtils\"),m=e(\"./nodejs/NodejsStreamInputAdapter\"),_=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return 0<t?e.substring(0,t):\"\"},g=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},b=function(e,t){return t=void 0!==t?t:f.createFolders,e=g(e),this.files[e]||s.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function h(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var n={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,r,n;for(t in this.files)n=this.files[t],(r=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(r,n)},filter:function(r){var n=[];return this.forEach(function(e,t){r(e,t)&&n.push(t)}),n},file:function(e,t,r){if(1!==arguments.length)return e=this.root+e,s.call(this,e,t,r),this;if(h(e)){var n=e;return this.filter(function(e,t){return!t.dir&&n.test(e)})}var i=this.files[this.root+e];return i&&!i.dir?i:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(e,t){return t.dir&&r.test(e)});var e=this.root+r,t=b.call(this,e),n=this.clone();return n.root=t.name,n},remove:function(r){r=this.root+r;var e=this.files[r];if(e||(\"/\"!==r.slice(-1)&&(r+=\"/\"),e=this.files[r]),e&&!e.dir)delete this.files[r];else for(var t=this.filter(function(e,t){return t.name.slice(0,r.length)===r}),n=0;n<t.length;n++)delete this.files[t[n].name];return this},generate:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,r={};try{if((r=u.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:i.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var n=r.comment||this.comment||\"\";t=o.generateWorker(this,r,n)}catch(e){(t=new l(\"error\")).error(e)}return new a(t,r.type||\"string\",r.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=n},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,r){\"use strict\";t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===t&&this.data[s+1]===r&&this.data[s+2]===n&&this.data[s+3]===i)return s-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),r=e.charCodeAt(1),n=e.charCodeAt(2),i=e.charCodeAt(3),s=this.readData(4);return t===s[0]&&r===s[1]&&n===s[2]&&i===s[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,r){\"use strict\";var n=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(){},readInt:function(e){var t,r=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)r=(r<<8)+this.byteAt(t);return this.index+=e,r},readString:function(e){return n.transformTo(\"string\",this.readData(e))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,r){\"use strict\";var n=e(\"./Uint8ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,r){\"use strict\";var n=e(\"./DataReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,r){\"use strict\";var n=e(\"./ArrayReader\");function i(e){n.call(this,e)}e(\"../utils\").inherits(i,n),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"../support\"),s=e(\"./ArrayReader\"),a=e(\"./StringReader\"),o=e(\"./NodeBufferReader\"),h=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=n.getTypeOf(e);return n.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new o(e):i.uint8array?new h(n.transformTo(\"uint8array\",e)):new s(n.transformTo(\"array\",e)):new a(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../utils\");function s(e){n.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(s,n),s.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,r){\"use strict\";var n=e(\"./GenericWorker\"),i=e(\"../crc32\");function s(){n.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(s,n),s.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}n.inherits(s,i),s.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,r){\"use strict\";var n=e(\"../utils\"),i=e(\"./GenericWorker\");function s(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then(function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=n.getTypeOf(e),t.isPaused||t._tickAndRepeat()},function(e){t.error(e)})}n.inherits(s,i),s.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,n.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(n.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,r){\"use strict\";function n(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}n.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var r=0;r<this._listeners[e].length;r++)this._listeners[e][r].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",function(e){t.processChunk(e)}),e.on(\"end\",function(){t.end()}),e.on(\"error\",function(e){t.error(e)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var e=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=n},{}],29:[function(e,t,r){\"use strict\";var h=e(\"../utils\"),i=e(\"./ConvertWorker\"),s=e(\"./GenericWorker\"),u=e(\"../base64\"),n=e(\"../support\"),a=e(\"../external\"),o=null;if(n.nodestream)try{o=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,o){return new a.Promise(function(t,r){var n=[],i=e._internalType,s=e._outputType,a=e._mimeType;e.on(\"data\",function(e,t){n.push(e),o&&o(t)}).on(\"error\",function(e){n=[],r(e)}).on(\"end\",function(){try{var e=function(e,t,r){switch(e){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",t),r);case\"base64\":return u.encode(t);default:return h.transformTo(e,t)}}(s,function(e,t){var r,n=0,i=null,s=0;for(r=0;r<t.length;r++)s+=t[r].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(s),r=0;r<t.length;r++)i.set(t[r],n),n+=t[r].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(i,n),a);t(e)}catch(e){r(e)}n=[]}).resume()})}function f(e,t,r){var n=t;switch(t){case\"blob\":case\"arraybuffer\":n=\"uint8array\";break;case\"base64\":n=\"string\"}try{this._internalType=n,this._outputType=t,this._mimeType=r,h.checkSupport(n),this._worker=e.pipe(new i(n)),e.lock()}catch(e){this._worker=new s(\"error\"),this._worker.error(e)}}f.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var r=this;return\"data\"===e?this._worker.on(e,function(e){t.call(r,e.data,e.meta)}):this._worker.on(e,function(){h.delay(t,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var n=new ArrayBuffer(0);try{r.blob=0===new Blob([n],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(n),r.blob=0===i.getBlob(\"application/zip\").size}catch(e){r.blob=!1}}}try{r.nodestream=!!e(\"readable-stream\").Readable}catch(e){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,s){\"use strict\";for(var o=e(\"./utils\"),h=e(\"./support\"),r=e(\"./nodejsUtils\"),n=e(\"./stream/GenericWorker\"),u=new Array(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;u[254]=u[254]=1;function a(){n.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){n.call(this,\"utf-8 encode\")}s.utf8encode=function(e){return h.nodebuffer?r.newBufferFrom(e,\"utf-8\"):function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=h.uint8array?new Uint8Array(o):new Array(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t}(e)},s.utf8decode=function(e){return h.nodebuffer?o.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,r,n,i,s=e.length,a=new Array(2*s);for(t=r=0;t<s;)if((n=e[t++])<128)a[r++]=n;else if(4<(i=u[n]))a[r++]=65533,t+=i-1;else{for(n&=2===i?31:3===i?15:7;1<i&&t<s;)n=n<<6|63&e[t++],i--;1<i?a[r++]=65533:n<65536?a[r++]=n:(n-=65536,a[r++]=55296|n>>10&1023,a[r++]=56320|1023&n)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(e=o.transformTo(h.uint8array?\"uint8array\":\"array\",e))},o.inherits(a,n),a.prototype.processChunk=function(e){var t=o.transformTo(h.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=t;(t=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),t.set(r,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var n=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}(t),i=t;n!==t.length&&(h.uint8array?(i=t.subarray(0,n),this.leftOver=t.subarray(n,t.length)):(i=t.slice(0,n),this.leftOver=t.slice(n,t.length))),this.push({data:s.utf8decode(i),meta:e.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,n),l.prototype.processChunk=function(e){this.push({data:s.utf8encode(e.data),meta:e.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,a){\"use strict\";var o=e(\"./support\"),h=e(\"./base64\"),r=e(\"./nodejsUtils\"),u=e(\"./external\");function n(e){return e}function l(e,t){for(var r=0;r<e.length;++r)t[r]=255&e.charCodeAt(r);return t}e(\"setimmediate\"),a.newBlob=function(t,r){a.checkSupport(\"blob\");try{return new Blob([t],{type:r})}catch(e){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return n.append(t),n.getBlob(r)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var i={stringifyByChunk:function(e,t,r){var n=[],i=0,s=e.length;if(s<=r)return String.fromCharCode.apply(null,e);for(;i<s;)\"array\"===t||\"nodebuffer\"===t?n.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+r,s)))):n.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+r,s)))),i+=r;return n.join(\"\")},stringifyByChar:function(e){for(var t=\"\",r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(e){return!1}}()}};function s(e){var t=65536,r=a.getTypeOf(e),n=!0;if(\"uint8array\"===r?n=i.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(n=i.applyCanBeUsed.nodebuffer),n)for(;1<t;)try{return i.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return i.stringifyByChar(e)}function f(e,t){for(var r=0;r<e.length;r++)t[r]=e[r];return t}a.applyFromCharCode=s;var c={};c.string={string:n,array:function(e){return l(e,new Array(e.length))},arraybuffer:function(e){return c.string.uint8array(e).buffer},uint8array:function(e){return l(e,new Uint8Array(e.length))},nodebuffer:function(e){return l(e,r.allocBuffer(e.length))}},c.array={string:s,array:n,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(e)}},c.arraybuffer={string:function(e){return s(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:n,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return r.newBufferFrom(new Uint8Array(e))}},c.uint8array={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:n,nodebuffer:function(e){return r.newBufferFrom(e)}},c.nodebuffer={string:s,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return c.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:n},a.transformTo=function(e,t){if(t=t||\"\",!e)return t;a.checkSupport(e);var r=a.getTypeOf(t);return c[r][e](t)},a.resolve=function(e){for(var t=e.split(\"/\"),r=[],n=0;n<t.length;n++){var i=t[n];\".\"===i||\"\"===i&&0!==n&&n!==t.length-1||(\"..\"===i?r.pop():r.push(i))}return r.join(\"/\")},a.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":o.nodebuffer&&r.isBuffer(e)?\"nodebuffer\":o.uint8array&&e instanceof Uint8Array?\"uint8array\":o.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(e){if(!o[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(e){var t,r,n=\"\";for(r=0;r<(e||\"\").length;r++)n+=\"\\\\x\"+((t=e.charCodeAt(r))<16?\"0\":\"\")+t.toString(16).toUpperCase();return n},a.delay=function(e,t,r){setImmediate(function(){e.apply(r||null,t||[])})},a.inherits=function(e,t){function r(){}r.prototype=t.prototype,e.prototype=new r},a.extend=function(){var e,t,r={};for(e=0;e<arguments.length;e++)for(t in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],t)&&void 0===r[t]&&(r[t]=arguments[e][t]);return r},a.prepareContent=function(r,e,n,i,s){return u.Promise.resolve(e).then(function(n){return o.blob&&(n instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(n)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(t,r){var e=new FileReader;e.onload=function(e){t(e.target.result)},e.onerror=function(e){r(e.target.error)},e.readAsArrayBuffer(n)}):n}).then(function(e){var t=a.getTypeOf(e);return t?(\"arraybuffer\"===t?e=a.transformTo(\"uint8array\",e):\"string\"===t&&(s?e=h.decode(e):n&&!0!==i&&(e=function(e){return l(e,o.uint8array?new Uint8Array(e.length):new Array(e.length))}(e))),e):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,setimmediate:54}],33:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),i=e(\"./utils\"),s=e(\"./signature\"),a=e(\"./zipEntry\"),o=e(\"./support\");function h(e){this.files=[],this.loadOptions=e}h.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var r=this.reader.index;this.reader.setIndex(e);var n=this.reader.readString(4)===t;return this.reader.setIndex(r),n},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=o.uint8array?\"uint8array\":\"array\",r=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,r,n=this.zip64EndOfCentralSize-44;0<n;)e=this.reader.readInt(2),t=this.reader.readInt(4),r=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(e=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(e<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(e);var t=e;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var n=t-r;if(0<n)this.isSignature(t,s.CENTRAL_FILE_HEADER)||(this.reader.zero=n);else if(n<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(n)+\" bytes.\")},prepareReader:function(e){this.reader=n(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,r){\"use strict\";var n=e(\"./reader/readerFor\"),s=e(\"./utils\"),i=e(\"./compressedObject\"),a=e(\"./crc32\"),o=e(\"./utf8\"),h=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,r;if(e.skip(22),this.fileNameLength=e.readInt(2),r=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in h)if(Object.prototype.hasOwnProperty.call(h,t)&&h[t].magic===e)return h[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new i(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==e&&(this.dosPermissions=63&this.externalFileAttributes),3==e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var e=n(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(e){var t,r,n,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),r=e.readInt(2),n=e.readData(r),this.extraFields[t]={id:t,length:r,value:n};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var r=s.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var n=this.findExtraFieldUnicodeComment();if(null!==n)this.fileCommentStr=n;else{var i=s.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(i)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileName)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=n(e.value);return 1!==t.readInt(1)?null:a(this.fileComment)!==t.readInt(4)?null:o.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,r){\"use strict\";function n(e,t,r){this.name=e,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=t,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),h=e(\"./stream/GenericWorker\");n.prototype={internalStream:function(e){var t=null,r=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var n=\"string\"===(r=e.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),t=this._decompressWorker();var i=!this._dataBinary;i&&!n&&(t=t.pipe(new a.Utf8EncodeWorker)),!i&&n&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new h(\"error\")).error(e)}return new s(t,r,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)n.prototype[u[f]]=l;t.exports=n},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(e,l,t){(function(t){\"use strict\";var r,n,e=t.MutationObserver||t.WebKitMutationObserver;if(e){var i=0,s=new e(u),a=t.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=i=++i%2}}else if(t.setImmediate||void 0===t.MessageChannel)r=\"document\"in t&&\"onreadystatechange\"in t.document.createElement(\"script\")?function(){var e=t.document.createElement(\"script\");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var o=new t.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var e,t;n=!0;for(var r=h.length;r;){for(t=h,h=[],e=-1;++e<r;)t[e]();r=h.length}n=!1}l.exports=function(e){1!==h.push(e)||n||r()}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,r){\"use strict\";var i=e(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],n=[\"PENDING\"];function o(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=n,this.queue=[],this.outcome=void 0,e!==u&&d(this,e)}function h(e,t,r){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(t,r,n){i(function(){var e;try{e=r(n)}catch(e){return l.reject(t,e)}e===t?l.reject(t,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(t,e)})}function c(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function d(t,e){var r=!1;function n(e){r||(r=!0,l.reject(t,e))}function i(e){r||(r=!0,l.resolve(t,e))}var s=p(function(){e(i,n)});\"error\"===s.status&&n(s.value)}function p(e,t){var r={};try{r.value=e(t),r.status=\"success\"}catch(e){r.status=\"error\",r.value=e}return r}(t.exports=o).prototype.finally=function(t){if(\"function\"!=typeof t)return this;var r=this.constructor;return this.then(function(e){return r.resolve(t()).then(function(){return e})},function(e){return r.resolve(t()).then(function(){throw e})})},o.prototype.catch=function(e){return this.then(null,e)},o.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===a||\"function\"!=typeof t&&this.state===s)return this;var r=new this.constructor(u);this.state!==n?f(r,this.state===a?e:t,this.outcome):this.queue.push(new h(r,e,t));return r},h.prototype.callFulfilled=function(e){l.resolve(this.promise,e)},h.prototype.otherCallFulfilled=function(e){f(this.promise,this.onFulfilled,e)},h.prototype.callRejected=function(e){l.reject(this.promise,e)},h.prototype.otherCallRejected=function(e){f(this.promise,this.onRejected,e)},l.resolve=function(e,t){var r=p(c,t);if(\"error\"===r.status)return l.reject(e,r.value);var n=r.value;if(n)d(e,n);else{e.state=a,e.outcome=t;for(var i=-1,s=e.queue.length;++i<s;)e.queue[i].callFulfilled(t)}return e},l.reject=function(e,t){e.state=s,e.outcome=t;for(var r=-1,n=e.queue.length;++r<n;)e.queue[r].callRejected(t);return e},o.resolve=function(e){if(e instanceof this)return e;return l.resolve(new this(u),e)},o.reject=function(e){var t=new this(u);return l.reject(t,e)},o.all=function(e){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,i=!1;if(!n)return this.resolve([]);var s=new Array(n),a=0,t=-1,o=new this(u);for(;++t<n;)h(e[t],t);return o;function h(e,t){r.resolve(e).then(function(e){s[t]=e,++a!==n||i||(i=!0,l.resolve(o,s))},function(e){i||(i=!0,l.reject(o,e))})}},o.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var r=e.length,n=!1;if(!r)return this.resolve([]);var i=-1,s=new this(u);for(;++i<r;)a=e[i],t.resolve(a).then(function(e){n||(n=!0,l.resolve(s,e))},function(e){n||(n=!0,l.reject(s,e))});var a;return s}},{immediate:36}],38:[function(e,t,r){\"use strict\";var n={};(0,e(\"./lib/utils/common\").assign)(n,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=n},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,r){\"use strict\";var a=e(\"./zlib/deflate\"),o=e(\"./utils/common\"),h=e(\"./utils/strings\"),i=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,c=0,d=8;function p(e){if(!(this instanceof p))return new p(e);this.options=o.assign({level:f,method:d,chunkSize:16384,windowBits:15,memLevel:8,strategy:c,to:\"\"},e||{});var t=this.options;t.raw&&0<t.windowBits?t.windowBits=-t.windowBits:t.gzip&&0<t.windowBits&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==l)throw new Error(i[r]);if(t.header&&a.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n=\"string\"==typeof t.dictionary?h.string2buf(t.dictionary):\"[object ArrayBuffer]\"===u.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=a.deflateSetDictionary(this.strm,n))!==l)throw new Error(i[r]);this._dict_set=!0}}function n(e,t){var r=new p(t);if(r.push(e,!0),r.err)throw r.msg||i[r.err];return r.result}p.prototype.push=function(e,t){var r,n,i=this.strm,s=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?4:0,\"string\"==typeof e?i.input=h.string2buf(e):\"[object ArrayBuffer]\"===u.call(e)?i.input=new Uint8Array(e):i.input=e,i.next_in=0,i.avail_in=i.input.length;do{if(0===i.avail_out&&(i.output=new o.Buf8(s),i.next_out=0,i.avail_out=s),1!==(r=a.deflate(i,n))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==i.avail_out&&(0!==i.avail_in||4!==n&&2!==n)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(i.output,i.next_out))):this.onData(o.shrinkBuf(i.output,i.next_out)))}while((0<i.avail_in||0===i.avail_out)&&1!==r);return 4===n?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==n||(this.onEnd(l),!(i.avail_out=0))},p.prototype.onData=function(e){this.chunks.push(e)},p.prototype.onEnd=function(e){e===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Deflate=p,r.deflate=n,r.deflateRaw=function(e,t){return(t=t||{}).raw=!0,n(e,t)},r.gzip=function(e,t){return(t=t||{}).gzip=!0,n(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,r){\"use strict\";var c=e(\"./zlib/inflate\"),d=e(\"./utils/common\"),p=e(\"./utils/strings\"),m=e(\"./zlib/constants\"),n=e(\"./zlib/messages\"),i=e(\"./zlib/zstream\"),s=e(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(e){if(!(this instanceof a))return new a(e);this.options=d.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&0<=t.windowBits&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(0<=t.windowBits&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),15<t.windowBits&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new i,this.strm.avail_out=0;var r=c.inflateInit2(this.strm,t.windowBits);if(r!==m.Z_OK)throw new Error(n[r]);this.header=new s,c.inflateGetHeader(this.strm,this.header)}function o(e,t){var r=new a(t);if(r.push(e,!0),r.err)throw r.msg||n[r.err];return r.result}a.prototype.push=function(e,t){var r,n,i,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof e?h.input=p.binstring2buf(e):\"[object ArrayBuffer]\"===_.call(e)?h.input=new Uint8Array(e):h.input=e,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new d.Buf8(u),h.next_out=0,h.avail_out=u),(r=c.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=c.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||n!==m.Z_FINISH&&n!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(i=p.utf8border(h.output,h.next_out),s=h.next_out-i,a=p.buf2string(h.output,i),h.next_out=s,h.avail_out=u-s,s&&d.arraySet(h.output,h.output,i,s,0),this.onData(a)):this.onData(d.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(n=m.Z_FINISH),n===m.Z_FINISH?(r=c.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):n!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(e){this.chunks.push(e)},a.prototype.onEnd=function(e){e===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=d.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(e,t){return(t=t||{}).raw=!0,o(e,t)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,r){\"use strict\";var n=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var n in r)r.hasOwnProperty(n)&&(e[n]=r[n])}}return e},r.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,r,n,i){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),i);else for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){var t,r,n,i,s,a;for(t=n=0,r=e.length;t<r;t++)n+=e[t].length;for(a=new Uint8Array(n),t=i=0,r=e.length;t<r;t++)s=e[t],a.set(s,i),i+=s.length;return a}},s={arraySet:function(e,t,r,n,i){for(var s=0;s<n;s++)e[i+s]=t[r+s]},flattenChunks:function(e){return[].concat.apply([],e)}};r.setTyped=function(e){e?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,i)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(n)},{}],42:[function(e,t,r){\"use strict\";var h=e(\"./common\"),i=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){s=!1}for(var u=new h.Buf8(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;function l(e,t){if(t<65537&&(e.subarray&&s||!e.subarray&&i))return String.fromCharCode.apply(null,h.shrinkBuf(e,t));for(var r=\"\",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}u[254]=u[254]=1,r.string2buf=function(e){var t,r,n,i,s,a=e.length,o=0;for(i=0;i<a;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),o+=r<128?1:r<2048?2:r<65536?3:4;for(t=new h.Buf8(o),i=s=0;s<o;i++)55296==(64512&(r=e.charCodeAt(i)))&&i+1<a&&56320==(64512&(n=e.charCodeAt(i+1)))&&(r=65536+(r-55296<<10)+(n-56320),i++),r<128?t[s++]=r:(r<2048?t[s++]=192|r>>>6:(r<65536?t[s++]=224|r>>>12:(t[s++]=240|r>>>18,t[s++]=128|r>>>12&63),t[s++]=128|r>>>6&63),t[s++]=128|63&r);return t},r.buf2binstring=function(e){return l(e,e.length)},r.binstring2buf=function(e){for(var t=new h.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},r.buf2string=function(e,t){var r,n,i,s,a=t||e.length,o=new Array(2*a);for(r=n=0;r<a;)if((i=e[r++])<128)o[n++]=i;else if(4<(s=u[i]))o[n++]=65533,r+=s-1;else{for(i&=2===s?31:3===s?15:7;1<s&&r<a;)i=i<<6|63&e[r++],s--;1<s?o[n++]=65533:i<65536?o[n++]=i:(i-=65536,o[n++]=55296|i>>10&1023,o[n++]=56320|1023&i)}return l(o,n)},r.utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;0<=r&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+u[e[r]]>t?r:t}},{\"./common\":41}],43:[function(e,t,r){\"use strict\";t.exports=function(e,t,r,n){for(var i=65535&e|0,s=e>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(i=i+t[n++]|0)|0,--a;);i%=65521,s%=65521}return i|s<<16|0}},{}],44:[function(e,t,r){\"use strict\";t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,r){\"use strict\";var o=function(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}();t.exports=function(e,t,r,n){var i=o,s=n+r;e^=-1;for(var a=n;a<s;a++)e=e>>>8^i[255&(e^t[a])];return-1^e}},{}],46:[function(e,t,r){\"use strict\";var h,c=e(\"../utils/common\"),u=e(\"./trees\"),d=e(\"./adler32\"),p=e(\"./crc32\"),n=e(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,i=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(e,t){return e.msg=n[t],t}function T(e){return(e<<1)-(4<e?9:0)}function D(e){for(var t=e.length;0<=--t;)e[t]=0}function F(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(c.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function N(e,t){u._tr_flush_block(e,0<=e.block_start?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,F(e.strm)}function U(e,t){e.pending_buf[e.pending++]=t}function P(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function L(e,t){var r,n,i=e.max_chain_length,s=e.strstart,a=e.prev_length,o=e.nice_match,h=e.strstart>e.w_size-z?e.strstart-(e.w_size-z):0,u=e.window,l=e.w_mask,f=e.prev,c=e.strstart+S,d=u[s+a-1],p=u[s+a];e.prev_length>=e.good_match&&(i>>=2),o>e.lookahead&&(o=e.lookahead);do{if(u[(r=t)+a]===p&&u[r+a-1]===d&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<c);if(n=S-(c-s),s=c-S,a<n){if(e.match_start=t,o<=(a=n))break;d=u[s+a-1],p=u[s+a]}}}while((t=f[t&l])>h&&0!=--i);return a<=e.lookahead?a:e.lookahead}function j(e){var t,r,n,i,s,a,o,h,u,l,f=e.w_size;do{if(i=e.window_size-e.lookahead-e.strstart,e.strstart>=f+(f-z)){for(c.arraySet(e.window,e.window,f,f,0),e.match_start-=f,e.strstart-=f,e.block_start-=f,t=r=e.hash_size;n=e.head[--t],e.head[t]=f<=n?n-f:0,--r;);for(t=r=f;n=e.prev[--t],e.prev[t]=f<=n?n-f:0,--r;);i+=f}if(0===e.strm.avail_in)break;if(a=e.strm,o=e.window,h=e.strstart+e.lookahead,u=i,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,c.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=d(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),e.lookahead+=r,e.lookahead+e.insert>=x)for(s=e.strstart-e.insert,e.ins_h=e.window[s],e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[s+x-1])&e.hash_mask,e.prev[s&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=s,s++,e.insert--,!(e.lookahead+e.insert<x)););}while(e.lookahead<z&&0!==e.strm.avail_in)}function Z(e,t){for(var r,n;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r)),e.match_length>=x)if(n=u._tr_tally(e,e.strstart-e.match_start,e.match_length-x),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=x){for(e.match_length--;e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart,0!=--e.match_length;);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function W(e,t){for(var r,n,i;;){if(e.lookahead<z){if(j(e),e.lookahead<z&&t===l)return A;if(0===e.lookahead)break}if(r=0,e.lookahead>=x&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=x-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-z&&(e.match_length=L(e,r),e.match_length<=5&&(1===e.strategy||e.match_length===x&&4096<e.strstart-e.match_start)&&(e.match_length=x-1)),e.prev_length>=x&&e.match_length<=e.prev_length){for(i=e.strstart+e.lookahead-x,n=u._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-x),e.lookahead-=e.prev_length-1,e.prev_length-=2;++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+x-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!=--e.prev_length;);if(e.match_available=0,e.match_length=x-1,e.strstart++,n&&(N(e,!1),0===e.strm.avail_out))return A}else if(e.match_available){if((n=u._tr_tally(e,0,e.window[e.strstart-1]))&&N(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return A}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=u._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<x-1?e.strstart:x-1,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}function M(e,t,r,n,i){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=i}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new c.Buf16(2*w),this.dyn_dtree=new c.Buf16(2*(2*a+1)),this.bl_tree=new c.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new c.Buf16(k+1),this.heap=new c.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new c.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=i,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?C:E,e.adler=2===t.wrap?0:1,t.last_flush=l,u._tr_init(t),m):R(e,_)}function K(e){var t=G(e);return t===m&&function(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=h[e.level].max_lazy,e.good_match=h[e.level].good_length,e.nice_match=h[e.level].nice_length,e.max_chain_length=h[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=x-1,e.match_available=0,e.ins_h=0}(e.state),t}function Y(e,t,r,n,i,s){if(!e)return _;var a=1;if(t===g&&(t=6),n<0?(a=0,n=-n):15<n&&(a=2,n-=16),i<1||y<i||r!==v||n<8||15<n||t<0||9<t||s<0||b<s)return R(e,_);8===n&&(n=9);var o=new H;return(e.state=o).strm=e,o.wrap=a,o.gzhead=null,o.w_bits=n,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=i+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new c.Buf8(2*o.w_size),o.head=new c.Buf16(o.hash_size),o.prev=new c.Buf16(o.w_size),o.lit_bufsize=1<<i+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new c.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=t,o.strategy=s,o.method=r,K(e)}h=[new M(0,0,0,0,function(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(j(e),0===e.lookahead&&t===l)return A;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,N(e,!1),0===e.strm.avail_out))return A;if(e.strstart-e.block_start>=e.w_size-z&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):(e.strstart>e.block_start&&(N(e,!1),e.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(e,t){return Y(e,t,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?_:(e.state.gzhead=t,m):_},r.deflate=function(e,t){var r,n,i,s;if(!e||!e.state||5<t||t<0)return e?R(e,_):_;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||666===n.status&&t!==f)return R(e,0===e.avail_out?-5:_);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===C)if(2===n.wrap)e.adler=0,U(n,31),U(n,139),U(n,8),n.gzhead?(U(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),U(n,255&n.gzhead.time),U(n,n.gzhead.time>>8&255),U(n,n.gzhead.time>>16&255),U(n,n.gzhead.time>>24&255),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(U(n,255&n.gzhead.extra.length),U(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=p(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(U(n,0),U(n,0),U(n,0),U(n,0),U(n,0),U(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),U(n,3),n.status=E);else{var a=v+(n.w_bits-8<<4)<<8;a|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(a|=32),a+=31-a%31,n.status=E,P(n,a),0!==n.strstart&&(P(n,e.adler>>>16),P(n,65535&e.adler)),e.adler=1}if(69===n.status)if(n.gzhead.extra){for(i=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending!==n.pending_buf_size));)U(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){i=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),F(e),i=n.pending,n.pending===n.pending_buf_size)){s=1;break}s=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,U(n,s)}while(0!==s);n.gzhead.hcrc&&n.pending>i&&(e.adler=p(e.adler,n.pending_buf,n.pending-i,i)),0===s&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&F(e),n.pending+2<=n.pending_buf_size&&(U(n,255&e.adler),U(n,e.adler>>8&255),e.adler=0,n.status=E)):n.status=E),0!==n.pending){if(F(e),0===e.avail_out)return n.last_flush=-1,m}else if(0===e.avail_in&&T(t)<=T(r)&&t!==f)return R(e,-5);if(666===n.status&&0!==e.avail_in)return R(e,-5);if(0!==e.avail_in||0!==n.lookahead||t!==l&&666!==n.status){var o=2===n.strategy?function(e,t){for(var r;;){if(0===e.lookahead&&(j(e),0===e.lookahead)){if(t===l)return A;break}if(e.match_length=0,r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):3===n.strategy?function(e,t){for(var r,n,i,s,a=e.window;;){if(e.lookahead<=S){if(j(e),e.lookahead<=S&&t===l)return A;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=x&&0<e.strstart&&(n=a[i=e.strstart-1])===a[++i]&&n===a[++i]&&n===a[++i]){s=e.strstart+S;do{}while(n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&n===a[++i]&&i<s);e.match_length=S-(s-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=x?(r=u._tr_tally(e,1,e.match_length-x),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=u._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(N(e,!1),0===e.strm.avail_out))return A}return e.insert=0,t===f?(N(e,!0),0===e.strm.avail_out?O:B):e.last_lit&&(N(e,!1),0===e.strm.avail_out)?A:I}(n,t):h[n.level].func(n,t);if(o!==O&&o!==B||(n.status=666),o===A||o===O)return 0===e.avail_out&&(n.last_flush=-1),m;if(o===I&&(1===t?u._tr_align(n):5!==t&&(u._tr_stored_block(n,0,0,!1),3===t&&(D(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),F(e),0===e.avail_out))return n.last_flush=-1,m}return t!==f?m:n.wrap<=0?1:(2===n.wrap?(U(n,255&e.adler),U(n,e.adler>>8&255),U(n,e.adler>>16&255),U(n,e.adler>>24&255),U(n,255&e.total_in),U(n,e.total_in>>8&255),U(n,e.total_in>>16&255),U(n,e.total_in>>24&255)):(P(n,e.adler>>>16),P(n,65535&e.adler)),F(e),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?m:1)},r.deflateEnd=function(e){var t;return e&&e.state?(t=e.state.status)!==C&&69!==t&&73!==t&&91!==t&&103!==t&&t!==E&&666!==t?R(e,_):(e.state=null,t===E?R(e,-3):m):_},r.deflateSetDictionary=function(e,t){var r,n,i,s,a,o,h,u,l=t.length;if(!e||!e.state)return _;if(2===(s=(r=e.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(e.adler=d(e.adler,t,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new c.Buf8(r.w_size),c.arraySet(u,t,l-r.w_size,r.w_size,0),t=u,l=r.w_size),a=e.avail_in,o=e.next_in,h=e.input,e.avail_in=l,e.next_in=0,e.input=t,j(r);r.lookahead>=x;){for(n=r.strstart,i=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+x-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++,--i;);r.strstart=n,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,e.next_in=o,e.input=h,e.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,r){\"use strict\";t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,r){\"use strict\";t.exports=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C;r=e.state,n=e.next_in,z=e.input,i=n+(e.avail_in-5),s=e.next_out,C=e.output,a=s-(t-e.avail_out),o=s+(e.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,c=r.window,d=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;e:do{p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=m[d&g];t:for(;;){if(d>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(d&(1<<y)-1)];continue t}if(32&y){r.mode=12;break e}e.msg=\"invalid literal/length code\",r.mode=30;break e}w=65535&v,(y&=15)&&(p<y&&(d+=z[n++]<<p,p+=8),w+=d&(1<<y)-1,d>>>=y,p-=y),p<15&&(d+=z[n++]<<p,p+=8,d+=z[n++]<<p,p+=8),v=_[d&b];r:for(;;){if(d>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(d&(1<<y)-1)];continue r}e.msg=\"invalid distance code\",r.mode=30;break e}if(k=65535&v,p<(y&=15)&&(d+=z[n++]<<p,(p+=8)<y&&(d+=z[n++]<<p,p+=8)),h<(k+=d&(1<<y)-1)){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(d>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break e}if(S=c,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=c[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=c[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=c[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(n<i&&s<o);n-=w=p>>3,d&=(1<<(p-=w<<3))-1,e.next_in=n,e.next_out=s,e.avail_in=n<i?i-n+5:5-(n-i),e.avail_out=s<o?o-s+257:257-(s-o),r.hold=d,r.bits=p}},{}],49:[function(e,t,r){\"use strict\";var I=e(\"../utils/common\"),O=e(\"./adler32\"),B=e(\"./crc32\"),R=e(\"./inffast\"),T=e(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,n=852,i=592;function L(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=P,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new I.Buf32(n),t.distcode=t.distdyn=new I.Buf32(i),t.sane=1,t.back=-1,N):U}function o(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,a(e)):U}function h(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||15<t)?U:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,o(e))):U}function u(e,t){var r,n;return e?(n=new s,(e.state=n).window=null,(r=h(e,t))!==N&&(e.state=null),r):U}var l,f,c=!0;function j(e){if(c){var t;for(l=new I.Buf32(512),f=new I.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(T(D,e.lens,0,288,l,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;T(F,e.lens,0,32,f,0,e.work,{bits:5}),c=!1}e.lencode=l,e.lenbits=9,e.distcode=f,e.distbits=5}function Z(e,t,r,n){var i,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),n>=s.wsize?(I.arraySet(s.window,t,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(n<(i=s.wsize-s.wnext)&&(i=n),I.arraySet(s.window,t,r-n,i,s.wnext),(n-=i)?(I.arraySet(s.window,t,r-n,n,0),s.wnext=n,s.whave=s.wsize):(s.wnext+=i,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=i))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(e){return u(e,15)},r.inflateInit2=u,r.inflate=function(e,t){var r,n,i,s,a,o,h,u,l,f,c,d,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return U;12===(r=e.state).mode&&(r.mode=13),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,f=o,c=h,x=N;e:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){e.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){e.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){e.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,e.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){e.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){e.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(d=r.length)&&(d=o),d&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,n,s,d,k)),512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,r.length-=d),r.length))break e;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break e;for(d=0;k=n[s+d++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&d<o;);if(512&r.flags&&(r.check=B(r.check,n,d,s)),o-=d,s+=d,k)break e}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(65535&r.check)){e.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}e.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,2;e.adler=r.check=1,r.mode=12;case 12:if(5===t||6===t)break e;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==t)break;u>>>=2,l-=2;break e;case 2:r.mode=17;break;case 3:e.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){e.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===t)break e;case 15:r.mode=16;case 16:if(d=r.length){if(o<d&&(d=o),h<d&&(d=h),0===d)break e;I.arraySet(i,n,s,d,a),o-=d,s+=d,h-=d,a+=d,r.length-=d;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){e.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){e.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],d=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}l-=_,k=0,d=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+d>r.nlen+r.ndist){e.msg=\"invalid bit length repeat\",r.mode=30;break}for(;d--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){e.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){e.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){e.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===t)break e;case 20:r.mode=21;case 21:if(6<=o&&258<=h){e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,R(e,c),a=e.next_out,i=e.output,h=e.avail_out,s=e.next_in,n=e.input,o=e.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){e.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){e.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break e;if(d=c-h,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg=\"invalid distance too far back\",r.mode=30;break}p=d>r.wnext?(d-=r.wnext,r.wsize-d):r.wnext-d,d>r.length&&(d=r.length),m=r.window}else m=i,p=a-r.offset,d=r.length;for(h<d&&(d=h),h-=d,r.length-=d;i[a++]=m[p++],--d;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break e;i[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break e;o--,u|=n[s++]<<l,l+=8}if(c-=h,e.total_out+=c,r.total+=c,c&&(e.adler=r.check=r.flags?B(r.check,i,c,a-c):O(r.check,i,c,a-c)),c=h,(r.flags?u:L(u))!==r.check){e.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break e;o--,u+=n[s++]<<l,l+=8}if(u!==(4294967295&r.total)){e.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break e;case 30:x=-3;break e;case 31:return-4;case 32:default:return U}return e.next_out=a,e.avail_out=h,e.next_in=s,e.avail_in=o,r.hold=u,r.bits=l,(r.wsize||c!==e.avail_out&&r.mode<30&&(r.mode<27||4!==t))&&Z(e,e.output,e.next_out,c-e.avail_out)?(r.mode=31,-4):(f-=e.avail_in,c-=e.avail_out,e.total_in+=f,e.total_out+=c,r.total+=c,r.wrap&&c&&(e.adler=r.check=r.flags?B(r.check,i,c,e.next_out-c):O(r.check,i,c,e.next_out-c)),e.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===c||4===t)&&x===N&&(x=-5),x)},r.inflateEnd=function(e){if(!e||!e.state)return U;var t=e.state;return t.window&&(t.window=null),e.state=null,N},r.inflateGetHeader=function(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?U:((r.head=t).done=!1,N):U},r.inflateSetDictionary=function(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,t,n,0)!==r.check?-3:Z(e,t,n,n)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,r){\"use strict\";var D=e(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,r,n,i,s,a,o){var h,u,l,f,c,d,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<n;v++)O[t[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return i[s++]=20971520,i[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===e||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<n;v++)0!==t[r+v]&&(a[B[t[r+v]]++]=v);if(d=0===e?(A=R=a,19):1===e?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,c=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===e&&852<C||2===e&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<d?(m=0,a[v]):a[v]>d?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;i[c+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=t[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),c+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===e&&852<C||2===e&&592<C)return 1;i[l=E&f]=k<<24|x<<16|c-s|0}}return 0!==E&&(i[c+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(e,t,r){\"use strict\";t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,r){\"use strict\";var i=e(\"../utils/common\"),o=0,h=1;function n(e){for(var t=e.length;0<=--t;)e[t]=0}var s=0,a=29,u=256,l=u+1+a,f=30,c=19,_=2*l+1,g=15,d=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));n(z);var C=new Array(2*f);n(C);var E=new Array(512);n(E);var A=new Array(256);n(A);var I=new Array(a);n(I);var O,B,R,T=new Array(f);function D(e,t,r,n,i){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=i,this.has_stree=e&&e.length}function F(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function N(e){return e<256?E[e]:E[256+(e>>>7)]}function U(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function P(e,t,r){e.bi_valid>d-r?(e.bi_buf|=t<<e.bi_valid&65535,U(e,e.bi_buf),e.bi_buf=t>>d-e.bi_valid,e.bi_valid+=r-d):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function L(e,t,r){P(e,r[2*t],r[2*t+1])}function j(e,t){for(var r=0;r|=1&e,e>>>=1,r<<=1,0<--t;);return r>>>1}function Z(e,t,r){var n,i,s=new Array(g+1),a=0;for(n=1;n<=g;n++)s[n]=a=a+r[n-1]<<1;for(i=0;i<=t;i++){var o=e[2*i+1];0!==o&&(e[2*i]=j(s[o]++,o))}}function W(e){var t;for(t=0;t<l;t++)e.dyn_ltree[2*t]=0;for(t=0;t<f;t++)e.dyn_dtree[2*t]=0;for(t=0;t<c;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*m]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function M(e){8<e.bi_valid?U(e,e.bi_buf):0<e.bi_valid&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function H(e,t,r,n){var i=2*t,s=2*r;return e[i]<e[s]||e[i]===e[s]&&n[t]<=n[r]}function G(e,t,r){for(var n=e.heap[r],i=r<<1;i<=e.heap_len&&(i<e.heap_len&&H(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!H(t,n,e.heap[i],e.depth));)e.heap[r]=e.heap[i],r=i,i<<=1;e.heap[r]=n}function K(e,t,r){var n,i,s,a,o=0;if(0!==e.last_lit)for(;n=e.pending_buf[e.d_buf+2*o]<<8|e.pending_buf[e.d_buf+2*o+1],i=e.pending_buf[e.l_buf+o],o++,0===n?L(e,i,t):(L(e,(s=A[i])+u+1,t),0!==(a=w[s])&&P(e,i-=I[s],a),L(e,s=N(--n),r),0!==(a=k[s])&&P(e,n-=T[s],a)),o<e.last_lit;);L(e,m,t)}function Y(e,t){var r,n,i,s=t.dyn_tree,a=t.stat_desc.static_tree,o=t.stat_desc.has_stree,h=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(e.heap[++e.heap_len]=u=r,e.depth[r]=0):s[2*r+1]=0;for(;e.heap_len<2;)s[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,o&&(e.static_len-=a[2*i+1]);for(t.max_code=u,r=e.heap_len>>1;1<=r;r--)G(e,s,r);for(i=h;r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],G(e,s,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,s[2*i]=s[2*r]+s[2*n],e.depth[i]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,s[2*r+1]=s[2*n+1]=i,e.heap[1]=i++,G(e,s,1),2<=e.heap_len;);e.heap[--e.heap_max]=e.heap[1],function(e,t){var r,n,i,s,a,o,h=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,f=t.stat_desc.has_stree,c=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,p=t.stat_desc.max_length,m=0;for(s=0;s<=g;s++)e.bl_count[s]=0;for(h[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<_;r++)p<(s=h[2*h[2*(n=e.heap[r])+1]+1]+1)&&(s=p,m++),h[2*n+1]=s,u<n||(e.bl_count[s]++,a=0,d<=n&&(a=c[n-d]),o=h[2*n],e.opt_len+=o*(s+a),f&&(e.static_len+=o*(l[2*n+1]+a)));if(0!==m){do{for(s=p-1;0===e.bl_count[s];)s--;e.bl_count[s]--,e.bl_count[s+1]+=2,e.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(n=e.bl_count[s];0!==n;)u<(i=e.heap[--r])||(h[2*i+1]!==s&&(e.opt_len+=(s-h[2*i+1])*h[2*i],h[2*i+1]=s),n--)}}(e,t),Z(s,u,e.bl_count)}function X(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)i=a,a=t[2*(n+1)+1],++o<h&&i===a||(o<u?e.bl_tree[2*i]+=o:0!==i?(i!==s&&e.bl_tree[2*i]++,e.bl_tree[2*b]++):o<=10?e.bl_tree[2*v]++:e.bl_tree[2*y]++,s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4))}function V(e,t,r){var n,i,s=-1,a=t[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),n=0;n<=r;n++)if(i=a,a=t[2*(n+1)+1],!(++o<h&&i===a)){if(o<u)for(;L(e,i,e.bl_tree),0!=--o;);else 0!==i?(i!==s&&(L(e,i,e.bl_tree),o--),L(e,b,e.bl_tree),P(e,o-3,2)):o<=10?(L(e,v,e.bl_tree),P(e,o-3,3)):(L(e,y,e.bl_tree),P(e,o-11,7));s=i,u=(o=0)===a?(h=138,3):i===a?(h=6,3):(h=7,4)}}n(T);var q=!1;function J(e,t,r,n){P(e,(s<<1)+(n?1:0),3),function(e,t,r,n){M(e),n&&(U(e,r),U(e,~r)),i.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}(e,t,r,!0)}r._tr_init=function(e){q||(function(){var e,t,r,n,i,s=new Array(g+1);for(n=r=0;n<a-1;n++)for(I[n]=r,e=0;e<1<<w[n];e++)A[r++]=n;for(A[r-1]=n,n=i=0;n<16;n++)for(T[n]=i,e=0;e<1<<k[n];e++)E[i++]=n;for(i>>=7;n<f;n++)for(T[n]=i<<7,e=0;e<1<<k[n]-7;e++)E[256+i++]=n;for(t=0;t<=g;t++)s[t]=0;for(e=0;e<=143;)z[2*e+1]=8,e++,s[8]++;for(;e<=255;)z[2*e+1]=9,e++,s[9]++;for(;e<=279;)z[2*e+1]=7,e++,s[7]++;for(;e<=287;)z[2*e+1]=8,e++,s[8]++;for(Z(z,l+1,s),e=0;e<f;e++)C[2*e+1]=5,C[2*e]=j(e,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,c,p)}(),q=!0),e.l_desc=new F(e.dyn_ltree,O),e.d_desc=new F(e.dyn_dtree,B),e.bl_desc=new F(e.bl_tree,R),e.bi_buf=0,e.bi_valid=0,W(e)},r._tr_stored_block=J,r._tr_flush_block=function(e,t,r,n){var i,s,a=0;0<e.level?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return o;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return h;for(t=32;t<u;t++)if(0!==e.dyn_ltree[2*t])return h;return o}(e)),Y(e,e.l_desc),Y(e,e.d_desc),a=function(e){var t;for(X(e,e.dyn_ltree,e.l_desc.max_code),X(e,e.dyn_dtree,e.d_desc.max_code),Y(e,e.bl_desc),t=c-1;3<=t&&0===e.bl_tree[2*S[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(s=e.static_len+3+7>>>3)<=i&&(i=s)):i=s=r+5,r+4<=i&&-1!==t?J(e,t,r,n):4===e.strategy||s===i?(P(e,2+(n?1:0),3),K(e,z,C)):(P(e,4+(n?1:0),3),function(e,t,r,n){var i;for(P(e,t-257,5),P(e,r-1,5),P(e,n-4,4),i=0;i<n;i++)P(e,e.bl_tree[2*S[i]+1],3);V(e,e.dyn_ltree,t-1),V(e,e.dyn_dtree,r-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,a+1),K(e,e.dyn_ltree,e.dyn_dtree)),W(e),n&&M(e)},r._tr_tally=function(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(A[r]+u+1)]++,e.dyn_dtree[2*N(t)]++),e.last_lit===e.lit_bufsize-1},r._tr_align=function(e){P(e,2,3),L(e,m,z),function(e){16===e.bi_valid?(U(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):8<=e.bi_valid&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,r){\"use strict\";t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,r){(function(e){!function(r,n){\"use strict\";if(!r.setImmediate){var i,s,t,a,o=1,h={},u=!1,l=r.document,e=Object.getPrototypeOf&&Object.getPrototypeOf(r);e=e&&e.setTimeout?e:r,i=\"[object process]\"==={}.toString.call(r.process)?function(e){process.nextTick(function(){c(e)})}:function(){if(r.postMessage&&!r.importScripts){var e=!0,t=r.onmessage;return r.onmessage=function(){e=!1},r.postMessage(\"\",\"*\"),r.onmessage=t,e}}()?(a=\"setImmediate$\"+Math.random()+\"$\",r.addEventListener?r.addEventListener(\"message\",d,!1):r.attachEvent(\"onmessage\",d),function(e){r.postMessage(a+e,\"*\")}):r.MessageChannel?((t=new MessageChannel).port1.onmessage=function(e){c(e.data)},function(e){t.port2.postMessage(e)}):l&&\"onreadystatechange\"in l.createElement(\"script\")?(s=l.documentElement,function(e){var t=l.createElement(\"script\");t.onreadystatechange=function(){c(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):function(e){setTimeout(c,0,e)},e.setImmediate=function(e){\"function\"!=typeof e&&(e=new Function(\"\"+e));for(var t=new Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return h[o]=n,i(o),o++},e.clearImmediate=f}function f(e){delete h[e]}function c(e){if(u)setTimeout(c,0,e);else{var t=h[e];if(t){u=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(n,r)}}(t)}finally{f(e),u=!1}}}}function d(e){e.source===r&&\"string\"==typeof e.data&&0===e.data.indexOf(a)&&c(+e.data.slice(a.length))}}(\"undefined\"==typeof self?void 0===e?this:e:self)}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}]},{},[10])(10)});", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict';\n\nexports.isInteger = num => {\n  if (typeof num === 'number') {\n    return Number.isInteger(num);\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isInteger(Number(num));\n  }\n  return false;\n};\n\n/**\n * Find a node of the given type\n */\n\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n/**\n * Find a node of the given type\n */\n\nexports.exceedsLimit = (min, max, step = 1, limit) => {\n  if (limit === false) return false;\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n};\n\n/**\n * Escape the given node with '\\\\' before node.value\n */\n\nexports.escapeNode = (block, n = 0, type) => {\n  const node = block.nodes[n];\n  if (!node) return;\n\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n    if (node.escaped !== true) {\n      node.value = '\\\\' + node.value;\n      node.escaped = true;\n    }\n  }\n};\n\n/**\n * Returns true if the given brace node should be enclosed in literal braces\n */\n\nexports.encloseBrace = node => {\n  if (node.type !== 'brace') return false;\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n    node.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a brace node is invalid.\n */\n\nexports.isInvalidBrace = block => {\n  if (block.type !== 'brace') return false;\n  if (block.invalid === true || block.dollar) return true;\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n    block.invalid = true;\n    return true;\n  }\n  if (block.open !== true || block.close !== true) {\n    block.invalid = true;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Returns true if a node is an open or close node\n */\n\nexports.isOpenOrClose = node => {\n  if (node.type === 'open' || node.type === 'close') {\n    return true;\n  }\n  return node.open === true || node.close === true;\n};\n\n/**\n * Reduce an array of text nodes.\n */\n\nexports.reduce = nodes => nodes.reduce((acc, node) => {\n  if (node.type === 'text') acc.push(node.value);\n  if (node.type === 'range') node.type = 'text';\n  return acc;\n}, []);\n\n/**\n * Flatten an array\n */\n\nexports.flatten = (...args) => {\n  const result = [];\n\n  const flat = arr => {\n    for (let i = 0; i < arr.length; i++) {\n      const ele = arr[i];\n\n      if (Array.isArray(ele)) {\n        flat(ele);\n        continue;\n      }\n\n      if (ele !== undefined) {\n        result.push(ele);\n      }\n    }\n    return result;\n  };\n\n  flat(args);\n  return result;\n};\n", "'use strict';\n\nconst utils = require('./utils');\n\nmodule.exports = (ast, options = {}) => {\n  const stringify = (node, parent = {}) => {\n    const invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n", "/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n", "/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst isNumber = require('is-number');\n\nconst toRegexRange = (min, max, options) => {\n  if (isNumber(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives, opts);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit, options);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange.cache = {};\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nmodule.exports = toRegexRange;\n", "/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nconst util = require('util');\nconst toRegexRange = require('to-regex-range');\n\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options, maxLen) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.map(v => toMaxLen(String(v), maxLen)).join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.map(v => toMaxLen(String(v), maxLen)).join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify(start, end, options) === false;\n  let format = options.transform || transform(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options, maxLen)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill(start, end, 1, { transform: step });\n  }\n\n  if (isObject(step)) {\n    return fill(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\n    return fill(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nmodule.exports = fill;\n", "'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  const walk = (node, parent = {}) => {\n    const invalidBlock = utils.isInvalidBrace(parent);\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\n    const invalid = invalidBlock === true || invalidNode === true;\n    const prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n\n    if (node.isClose === true) {\n      console.log('node.isClose', prefix, node.value);\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? prefix + node.value : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? prefix + node.value : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n      const range = fill(...args, { ...options, wrap: false, toRegex: true, strictZeros: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (const child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n", "'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  const result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (const item of queue) {\n    if (Array.isArray(item)) {\n      for (const value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  const rangeLimit = options.rangeLimit === undefined ? 1000 : options.rangeLimit;\n\n  const walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      const args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    const enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      const child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n", "'use strict';\n\nmodule.exports = {\n  MAX_LENGTH: 10000,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n", "'use strict';\n\nconst stringify = require('./stringify');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = require('./constants');\n\n/**\n * parse\n */\n\nconst parse = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  const opts = options || {};\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  const ast = { type: 'root', input, nodes: [] };\n  const stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  const length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      const open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      const dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      const brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      const type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        const open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      const siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        const before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      const parent = stack[stack.length - 1];\n      const index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst stringify = require('./lib/stringify');\nconst compile = require('./lib/compile');\nconst expand = require('./lib/expand');\nconst parse = require('./lib/parse');\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (const pattern of input) {\n      const result = braces.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces.parse = (input, options = {}) => parse(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify(braces.parse(input, options), options);\n  }\n  return stringify(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n  return options.expand !== true\n    ? braces.compile(input, options)\n    : braces.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nmodule.exports = braces;\n", "'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n", "'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n", "'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n", "'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n", "'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n", "'use strict';\n\nmodule.exports = require('./lib/picomatch');\n", "'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\n\nconst isEmptyString = v => v === '' || v === './';\nconst hasBraces = v => {\n  const index = v.indexOf('{');\n  return index > -1 && v.indexOf('}', index) > -1;\n};\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} `list` List of strings to match.\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `[options]` See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = new Set(micromatch(list, patterns, { ...options, onResult }));\n\n  for (let item of items) {\n    if (!matches.has(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.parse(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !hasBraces(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\n// exposed for tests\nmicromatch.hasBraces = hasBraces;\nmodule.exports = micromatch;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nmodule.exports = baseIsRegExp;\n", "var baseIsRegExp = require('./_baseIsRegExp'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nmodule.exports = isRegExp;\n", "var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n", "var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n", "var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    isObject = require('./isObject'),\n    isRegExp = require('./isRegExp'),\n    stringSize = require('./_stringSize'),\n    stringToArray = require('./_stringToArray'),\n    toInteger = require('./toInteger'),\n    toString = require('./toString');\n\n/** Used as default options for `_.truncate`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n    DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction truncate(string, options) {\n  var length = DEFAULT_TRUNC_LENGTH,\n      omission = DEFAULT_TRUNC_OMISSION;\n\n  if (isObject(options)) {\n    var separator = 'separator' in options ? options.separator : separator;\n    length = 'length' in options ? toInteger(options.length) : length;\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\n  }\n  string = toString(string);\n\n  var strLength = string.length;\n  if (hasUnicode(string)) {\n    var strSymbols = stringToArray(string);\n    strLength = strSymbols.length;\n  }\n  if (length >= strLength) {\n    return string;\n  }\n  var end = length - stringSize(omission);\n  if (end < 1) {\n    return omission;\n  }\n  var result = strSymbols\n    ? castSlice(strSymbols, 0, end).join('')\n    : string.slice(0, end);\n\n  if (separator === undefined) {\n    return result + omission;\n  }\n  if (strSymbols) {\n    end += (result.length - end);\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n          substring = result;\n\n      if (!separator.global) {\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n      }\n      separator.lastIndex = 0;\n      while ((match = separator.exec(substring))) {\n        var newEnd = match.index;\n      }\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\n    }\n  } else if (string.indexOf(baseToString(separator), end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\n\nmodule.exports = truncate;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n", "/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n(function(){function n(n,t,r){switch(r.length){case 0:return n.call(t);case 1:return n.call(t,r[0]);case 2:return n.call(t,r[0],r[1]);case 3:return n.call(t,r[0],r[1],r[2])}return n.apply(t,r)}function t(n,t,r,e){for(var u=-1,i=null==n?0:n.length;++u<i;){var o=n[u];t(e,o,r(o),n)}return e}function r(n,t){for(var r=-1,e=null==n?0:n.length;++r<e&&t(n[r],r,n)!==!1;);return n}function e(n,t){for(var r=null==n?0:n.length;r--&&t(n[r],r,n)!==!1;);return n}function u(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(!t(n[r],r,n))return!1;\nreturn!0}function i(n,t){for(var r=-1,e=null==n?0:n.length,u=0,i=[];++r<e;){var o=n[r];t(o,r,n)&&(i[u++]=o)}return i}function o(n,t){return!!(null==n?0:n.length)&&y(n,t,0)>-1}function f(n,t,r){for(var e=-1,u=null==n?0:n.length;++e<u;)if(r(t,n[e]))return!0;return!1}function c(n,t){for(var r=-1,e=null==n?0:n.length,u=Array(e);++r<e;)u[r]=t(n[r],r,n);return u}function a(n,t){for(var r=-1,e=t.length,u=n.length;++r<e;)n[u+r]=t[r];return n}function l(n,t,r,e){var u=-1,i=null==n?0:n.length;for(e&&i&&(r=n[++u]);++u<i;)r=t(r,n[u],u,n);\nreturn r}function s(n,t,r,e){var u=null==n?0:n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r}function h(n,t){for(var r=-1,e=null==n?0:n.length;++r<e;)if(t(n[r],r,n))return!0;return!1}function p(n){return n.split(\"\")}function _(n){return n.match($t)||[]}function v(n,t,r){var e;return r(n,function(n,r,u){if(t(n,r,u))return e=r,!1}),e}function g(n,t,r,e){for(var u=n.length,i=r+(e?1:-1);e?i--:++i<u;)if(t(n[i],i,n))return i;return-1}function y(n,t,r){return t===t?Z(n,t,r):g(n,b,r)}function d(n,t,r,e){\nfor(var u=r-1,i=n.length;++u<i;)if(e(n[u],t))return u;return-1}function b(n){return n!==n}function w(n,t){var r=null==n?0:n.length;return r?k(n,t)/r:Cn}function m(n){return function(t){return null==t?X:t[n]}}function x(n){return function(t){return null==n?X:n[t]}}function j(n,t,r,e,u){return u(n,function(n,u,i){r=e?(e=!1,n):t(r,n,u,i)}),r}function A(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].value;return n}function k(n,t){for(var r,e=-1,u=n.length;++e<u;){var i=t(n[e]);i!==X&&(r=r===X?i:r+i);\n}return r}function O(n,t){for(var r=-1,e=Array(n);++r<n;)e[r]=t(r);return e}function I(n,t){return c(t,function(t){return[t,n[t]]})}function R(n){return n?n.slice(0,H(n)+1).replace(Lt,\"\"):n}function z(n){return function(t){return n(t)}}function E(n,t){return c(t,function(t){return n[t]})}function S(n,t){return n.has(t)}function W(n,t){for(var r=-1,e=n.length;++r<e&&y(t,n[r],0)>-1;);return r}function L(n,t){for(var r=n.length;r--&&y(t,n[r],0)>-1;);return r}function C(n,t){for(var r=n.length,e=0;r--;)n[r]===t&&++e;\nreturn e}function U(n){return\"\\\\\"+Yr[n]}function B(n,t){return null==n?X:n[t]}function T(n){return Nr.test(n)}function $(n){return Pr.test(n)}function D(n){for(var t,r=[];!(t=n.next()).done;)r.push(t.value);return r}function M(n){var t=-1,r=Array(n.size);return n.forEach(function(n,e){r[++t]=[e,n]}),r}function F(n,t){return function(r){return n(t(r))}}function N(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){var o=n[r];o!==t&&o!==cn||(n[r]=cn,i[u++]=r)}return i}function P(n){var t=-1,r=Array(n.size);\nreturn n.forEach(function(n){r[++t]=n}),r}function q(n){var t=-1,r=Array(n.size);return n.forEach(function(n){r[++t]=[n,n]}),r}function Z(n,t,r){for(var e=r-1,u=n.length;++e<u;)if(n[e]===t)return e;return-1}function K(n,t,r){for(var e=r+1;e--;)if(n[e]===t)return e;return e}function V(n){return T(n)?J(n):_e(n)}function G(n){return T(n)?Y(n):p(n)}function H(n){for(var t=n.length;t--&&Ct.test(n.charAt(t)););return t}function J(n){for(var t=Mr.lastIndex=0;Mr.test(n);)++t;return t}function Y(n){return n.match(Mr)||[];\n}function Q(n){return n.match(Fr)||[]}var X,nn=\"4.17.21\",tn=200,rn=\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\",en=\"Expected a function\",un=\"Invalid `variable` option passed into `_.template`\",on=\"__lodash_hash_undefined__\",fn=500,cn=\"__lodash_placeholder__\",an=1,ln=2,sn=4,hn=1,pn=2,_n=1,vn=2,gn=4,yn=8,dn=16,bn=32,wn=64,mn=128,xn=256,jn=512,An=30,kn=\"...\",On=800,In=16,Rn=1,zn=2,En=3,Sn=1/0,Wn=9007199254740991,Ln=1.7976931348623157e308,Cn=NaN,Un=4294967295,Bn=Un-1,Tn=Un>>>1,$n=[[\"ary\",mn],[\"bind\",_n],[\"bindKey\",vn],[\"curry\",yn],[\"curryRight\",dn],[\"flip\",jn],[\"partial\",bn],[\"partialRight\",wn],[\"rearg\",xn]],Dn=\"[object Arguments]\",Mn=\"[object Array]\",Fn=\"[object AsyncFunction]\",Nn=\"[object Boolean]\",Pn=\"[object Date]\",qn=\"[object DOMException]\",Zn=\"[object Error]\",Kn=\"[object Function]\",Vn=\"[object GeneratorFunction]\",Gn=\"[object Map]\",Hn=\"[object Number]\",Jn=\"[object Null]\",Yn=\"[object Object]\",Qn=\"[object Promise]\",Xn=\"[object Proxy]\",nt=\"[object RegExp]\",tt=\"[object Set]\",rt=\"[object String]\",et=\"[object Symbol]\",ut=\"[object Undefined]\",it=\"[object WeakMap]\",ot=\"[object WeakSet]\",ft=\"[object ArrayBuffer]\",ct=\"[object DataView]\",at=\"[object Float32Array]\",lt=\"[object Float64Array]\",st=\"[object Int8Array]\",ht=\"[object Int16Array]\",pt=\"[object Int32Array]\",_t=\"[object Uint8Array]\",vt=\"[object Uint8ClampedArray]\",gt=\"[object Uint16Array]\",yt=\"[object Uint32Array]\",dt=/\\b__p \\+= '';/g,bt=/\\b(__p \\+=) '' \\+/g,wt=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,mt=/&(?:amp|lt|gt|quot|#39);/g,xt=/[&<>\"']/g,jt=RegExp(mt.source),At=RegExp(xt.source),kt=/<%-([\\s\\S]+?)%>/g,Ot=/<%([\\s\\S]+?)%>/g,It=/<%=([\\s\\S]+?)%>/g,Rt=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,zt=/^\\w*$/,Et=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,St=/[\\\\^$.*+?()[\\]{}|]/g,Wt=RegExp(St.source),Lt=/^\\s+/,Ct=/\\s/,Ut=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,Bt=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,Tt=/,? & /,$t=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,Dt=/[()=,{}\\[\\]\\/\\s]/,Mt=/\\\\(\\\\)?/g,Ft=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,Nt=/\\w*$/,Pt=/^[-+]0x[0-9a-f]+$/i,qt=/^0b[01]+$/i,Zt=/^\\[object .+?Constructor\\]$/,Kt=/^0o[0-7]+$/i,Vt=/^(?:0|[1-9]\\d*)$/,Gt=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Ht=/($^)/,Jt=/['\\n\\r\\u2028\\u2029\\\\]/g,Yt=\"\\\\ud800-\\\\udfff\",Qt=\"\\\\u0300-\\\\u036f\",Xt=\"\\\\ufe20-\\\\ufe2f\",nr=\"\\\\u20d0-\\\\u20ff\",tr=Qt+Xt+nr,rr=\"\\\\u2700-\\\\u27bf\",er=\"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\",ur=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\",ir=\"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\",or=\"\\\\u2000-\\\\u206f\",fr=\" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",cr=\"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\",ar=\"\\\\ufe0e\\\\ufe0f\",lr=ur+ir+or+fr,sr=\"['\\u2019]\",hr=\"[\"+Yt+\"]\",pr=\"[\"+lr+\"]\",_r=\"[\"+tr+\"]\",vr=\"\\\\d+\",gr=\"[\"+rr+\"]\",yr=\"[\"+er+\"]\",dr=\"[^\"+Yt+lr+vr+rr+er+cr+\"]\",br=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",wr=\"(?:\"+_r+\"|\"+br+\")\",mr=\"[^\"+Yt+\"]\",xr=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",jr=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",Ar=\"[\"+cr+\"]\",kr=\"\\\\u200d\",Or=\"(?:\"+yr+\"|\"+dr+\")\",Ir=\"(?:\"+Ar+\"|\"+dr+\")\",Rr=\"(?:\"+sr+\"(?:d|ll|m|re|s|t|ve))?\",zr=\"(?:\"+sr+\"(?:D|LL|M|RE|S|T|VE))?\",Er=wr+\"?\",Sr=\"[\"+ar+\"]?\",Wr=\"(?:\"+kr+\"(?:\"+[mr,xr,jr].join(\"|\")+\")\"+Sr+Er+\")*\",Lr=\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",Cr=\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",Ur=Sr+Er+Wr,Br=\"(?:\"+[gr,xr,jr].join(\"|\")+\")\"+Ur,Tr=\"(?:\"+[mr+_r+\"?\",_r,xr,jr,hr].join(\"|\")+\")\",$r=RegExp(sr,\"g\"),Dr=RegExp(_r,\"g\"),Mr=RegExp(br+\"(?=\"+br+\")|\"+Tr+Ur,\"g\"),Fr=RegExp([Ar+\"?\"+yr+\"+\"+Rr+\"(?=\"+[pr,Ar,\"$\"].join(\"|\")+\")\",Ir+\"+\"+zr+\"(?=\"+[pr,Ar+Or,\"$\"].join(\"|\")+\")\",Ar+\"?\"+Or+\"+\"+Rr,Ar+\"+\"+zr,Cr,Lr,vr,Br].join(\"|\"),\"g\"),Nr=RegExp(\"[\"+kr+Yt+tr+ar+\"]\"),Pr=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,qr=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],Zr=-1,Kr={};\nKr[at]=Kr[lt]=Kr[st]=Kr[ht]=Kr[pt]=Kr[_t]=Kr[vt]=Kr[gt]=Kr[yt]=!0,Kr[Dn]=Kr[Mn]=Kr[ft]=Kr[Nn]=Kr[ct]=Kr[Pn]=Kr[Zn]=Kr[Kn]=Kr[Gn]=Kr[Hn]=Kr[Yn]=Kr[nt]=Kr[tt]=Kr[rt]=Kr[it]=!1;var Vr={};Vr[Dn]=Vr[Mn]=Vr[ft]=Vr[ct]=Vr[Nn]=Vr[Pn]=Vr[at]=Vr[lt]=Vr[st]=Vr[ht]=Vr[pt]=Vr[Gn]=Vr[Hn]=Vr[Yn]=Vr[nt]=Vr[tt]=Vr[rt]=Vr[et]=Vr[_t]=Vr[vt]=Vr[gt]=Vr[yt]=!0,Vr[Zn]=Vr[Kn]=Vr[it]=!1;var Gr={\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\n\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\n\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\n\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\n\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\n\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\"\\u017f\":\"s\"},Hr={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"},Jr={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"},Yr={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Qr=parseFloat,Xr=parseInt,ne=\"object\"==typeof global&&global&&global.Object===Object&&global,te=\"object\"==typeof self&&self&&self.Object===Object&&self,re=ne||te||Function(\"return this\")(),ee=\"object\"==typeof exports&&exports&&!exports.nodeType&&exports,ue=ee&&\"object\"==typeof module&&module&&!module.nodeType&&module,ie=ue&&ue.exports===ee,oe=ie&&ne.process,fe=function(){\ntry{var n=ue&&ue.require&&ue.require(\"util\").types;return n?n:oe&&oe.binding&&oe.binding(\"util\")}catch(n){}}(),ce=fe&&fe.isArrayBuffer,ae=fe&&fe.isDate,le=fe&&fe.isMap,se=fe&&fe.isRegExp,he=fe&&fe.isSet,pe=fe&&fe.isTypedArray,_e=m(\"length\"),ve=x(Gr),ge=x(Hr),ye=x(Jr),de=function p(x){function Z(n){if(cc(n)&&!bh(n)&&!(n instanceof Ct)){if(n instanceof Y)return n;if(bl.call(n,\"__wrapped__\"))return eo(n)}return new Y(n)}function J(){}function Y(n,t){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!t,\nthis.__index__=0,this.__values__=X}function Ct(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Un,this.__views__=[]}function $t(){var n=new Ct(this.__wrapped__);return n.__actions__=Tu(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=Tu(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=Tu(this.__views__),n}function Yt(){if(this.__filtered__){var n=new Ct(this);n.__dir__=-1,\nn.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function Qt(){var n=this.__wrapped__.value(),t=this.__dir__,r=bh(n),e=t<0,u=r?n.length:0,i=Oi(0,u,this.__views__),o=i.start,f=i.end,c=f-o,a=e?f:o-1,l=this.__iteratees__,s=l.length,h=0,p=Hl(c,this.__takeCount__);if(!r||!e&&u==c&&p==c)return wu(n,this.__actions__);var _=[];n:for(;c--&&h<p;){a+=t;for(var v=-1,g=n[a];++v<s;){var y=l[v],d=y.iteratee,b=y.type,w=d(g);if(b==zn)g=w;else if(!w){if(b==Rn)continue n;break n}}_[h++]=g}return _}function Xt(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function nr(){this.__data__=is?is(null):{},this.size=0}function tr(n){var t=this.has(n)&&delete this.__data__[n];return this.size-=t?1:0,t}function rr(n){var t=this.__data__;if(is){var r=t[n];return r===on?X:r}return bl.call(t,n)?t[n]:X}function er(n){var t=this.__data__;return is?t[n]!==X:bl.call(t,n)}function ur(n,t){var r=this.__data__;return this.size+=this.has(n)?0:1,r[n]=is&&t===X?on:t,this}function ir(n){\nvar t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){var e=n[t];this.set(e[0],e[1])}}function or(){this.__data__=[],this.size=0}function fr(n){var t=this.__data__,r=Wr(t,n);return!(r<0)&&(r==t.length-1?t.pop():Ll.call(t,r,1),--this.size,!0)}function cr(n){var t=this.__data__,r=Wr(t,n);return r<0?X:t[r][1]}function ar(n){return Wr(this.__data__,n)>-1}function lr(n,t){var r=this.__data__,e=Wr(r,n);return e<0?(++this.size,r.push([n,t])):r[e][1]=t,this}function sr(n){var t=-1,r=null==n?0:n.length;for(this.clear();++t<r;){\nvar e=n[t];this.set(e[0],e[1])}}function hr(){this.size=0,this.__data__={hash:new Xt,map:new(ts||ir),string:new Xt}}function pr(n){var t=xi(this,n).delete(n);return this.size-=t?1:0,t}function _r(n){return xi(this,n).get(n)}function vr(n){return xi(this,n).has(n)}function gr(n,t){var r=xi(this,n),e=r.size;return r.set(n,t),this.size+=r.size==e?0:1,this}function yr(n){var t=-1,r=null==n?0:n.length;for(this.__data__=new sr;++t<r;)this.add(n[t])}function dr(n){return this.__data__.set(n,on),this}function br(n){\nreturn this.__data__.has(n)}function wr(n){this.size=(this.__data__=new ir(n)).size}function mr(){this.__data__=new ir,this.size=0}function xr(n){var t=this.__data__,r=t.delete(n);return this.size=t.size,r}function jr(n){return this.__data__.get(n)}function Ar(n){return this.__data__.has(n)}function kr(n,t){var r=this.__data__;if(r instanceof ir){var e=r.__data__;if(!ts||e.length<tn-1)return e.push([n,t]),this.size=++r.size,this;r=this.__data__=new sr(e)}return r.set(n,t),this.size=r.size,this}function Or(n,t){\nvar r=bh(n),e=!r&&dh(n),u=!r&&!e&&mh(n),i=!r&&!e&&!u&&Oh(n),o=r||e||u||i,f=o?O(n.length,hl):[],c=f.length;for(var a in n)!t&&!bl.call(n,a)||o&&(\"length\"==a||u&&(\"offset\"==a||\"parent\"==a)||i&&(\"buffer\"==a||\"byteLength\"==a||\"byteOffset\"==a)||Ci(a,c))||f.push(a);return f}function Ir(n){var t=n.length;return t?n[tu(0,t-1)]:X}function Rr(n,t){return Xi(Tu(n),Mr(t,0,n.length))}function zr(n){return Xi(Tu(n))}function Er(n,t,r){(r===X||Gf(n[t],r))&&(r!==X||t in n)||Br(n,t,r)}function Sr(n,t,r){var e=n[t];\nbl.call(n,t)&&Gf(e,r)&&(r!==X||t in n)||Br(n,t,r)}function Wr(n,t){for(var r=n.length;r--;)if(Gf(n[r][0],t))return r;return-1}function Lr(n,t,r,e){return ys(n,function(n,u,i){t(e,n,r(n),i)}),e}function Cr(n,t){return n&&$u(t,Pc(t),n)}function Ur(n,t){return n&&$u(t,qc(t),n)}function Br(n,t,r){\"__proto__\"==t&&Tl?Tl(n,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):n[t]=r}function Tr(n,t){for(var r=-1,e=t.length,u=il(e),i=null==n;++r<e;)u[r]=i?X:Mc(n,t[r]);return u}function Mr(n,t,r){return n===n&&(r!==X&&(n=n<=r?n:r),\nt!==X&&(n=n>=t?n:t)),n}function Fr(n,t,e,u,i,o){var f,c=t&an,a=t&ln,l=t&sn;if(e&&(f=i?e(n,u,i,o):e(n)),f!==X)return f;if(!fc(n))return n;var s=bh(n);if(s){if(f=zi(n),!c)return Tu(n,f)}else{var h=zs(n),p=h==Kn||h==Vn;if(mh(n))return Iu(n,c);if(h==Yn||h==Dn||p&&!i){if(f=a||p?{}:Ei(n),!c)return a?Mu(n,Ur(f,n)):Du(n,Cr(f,n))}else{if(!Vr[h])return i?n:{};f=Si(n,h,c)}}o||(o=new wr);var _=o.get(n);if(_)return _;o.set(n,f),kh(n)?n.forEach(function(r){f.add(Fr(r,t,e,r,n,o))}):jh(n)&&n.forEach(function(r,u){\nf.set(u,Fr(r,t,e,u,n,o))});var v=l?a?di:yi:a?qc:Pc,g=s?X:v(n);return r(g||n,function(r,u){g&&(u=r,r=n[u]),Sr(f,u,Fr(r,t,e,u,n,o))}),f}function Nr(n){var t=Pc(n);return function(r){return Pr(r,n,t)}}function Pr(n,t,r){var e=r.length;if(null==n)return!e;for(n=ll(n);e--;){var u=r[e],i=t[u],o=n[u];if(o===X&&!(u in n)||!i(o))return!1}return!0}function Gr(n,t,r){if(\"function\"!=typeof n)throw new pl(en);return Ws(function(){n.apply(X,r)},t)}function Hr(n,t,r,e){var u=-1,i=o,a=!0,l=n.length,s=[],h=t.length;\nif(!l)return s;r&&(t=c(t,z(r))),e?(i=f,a=!1):t.length>=tn&&(i=S,a=!1,t=new yr(t));n:for(;++u<l;){var p=n[u],_=null==r?p:r(p);if(p=e||0!==p?p:0,a&&_===_){for(var v=h;v--;)if(t[v]===_)continue n;s.push(p)}else i(t,_,e)||s.push(p)}return s}function Jr(n,t){var r=!0;return ys(n,function(n,e,u){return r=!!t(n,e,u)}),r}function Yr(n,t,r){for(var e=-1,u=n.length;++e<u;){var i=n[e],o=t(i);if(null!=o&&(f===X?o===o&&!bc(o):r(o,f)))var f=o,c=i}return c}function ne(n,t,r,e){var u=n.length;for(r=kc(r),r<0&&(r=-r>u?0:u+r),\ne=e===X||e>u?u:kc(e),e<0&&(e+=u),e=r>e?0:Oc(e);r<e;)n[r++]=t;return n}function te(n,t){var r=[];return ys(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function ee(n,t,r,e,u){var i=-1,o=n.length;for(r||(r=Li),u||(u=[]);++i<o;){var f=n[i];t>0&&r(f)?t>1?ee(f,t-1,r,e,u):a(u,f):e||(u[u.length]=f)}return u}function ue(n,t){return n&&bs(n,t,Pc)}function oe(n,t){return n&&ws(n,t,Pc)}function fe(n,t){return i(t,function(t){return uc(n[t])})}function _e(n,t){t=ku(t,n);for(var r=0,e=t.length;null!=n&&r<e;)n=n[no(t[r++])];\nreturn r&&r==e?n:X}function de(n,t,r){var e=t(n);return bh(n)?e:a(e,r(n))}function we(n){return null==n?n===X?ut:Jn:Bl&&Bl in ll(n)?ki(n):Ki(n)}function me(n,t){return n>t}function xe(n,t){return null!=n&&bl.call(n,t)}function je(n,t){return null!=n&&t in ll(n)}function Ae(n,t,r){return n>=Hl(t,r)&&n<Gl(t,r)}function ke(n,t,r){for(var e=r?f:o,u=n[0].length,i=n.length,a=i,l=il(i),s=1/0,h=[];a--;){var p=n[a];a&&t&&(p=c(p,z(t))),s=Hl(p.length,s),l[a]=!r&&(t||u>=120&&p.length>=120)?new yr(a&&p):X}p=n[0];\nvar _=-1,v=l[0];n:for(;++_<u&&h.length<s;){var g=p[_],y=t?t(g):g;if(g=r||0!==g?g:0,!(v?S(v,y):e(h,y,r))){for(a=i;--a;){var d=l[a];if(!(d?S(d,y):e(n[a],y,r)))continue n}v&&v.push(y),h.push(g)}}return h}function Oe(n,t,r,e){return ue(n,function(n,u,i){t(e,r(n),u,i)}),e}function Ie(t,r,e){r=ku(r,t),t=Gi(t,r);var u=null==t?t:t[no(jo(r))];return null==u?X:n(u,t,e)}function Re(n){return cc(n)&&we(n)==Dn}function ze(n){return cc(n)&&we(n)==ft}function Ee(n){return cc(n)&&we(n)==Pn}function Se(n,t,r,e,u){\nreturn n===t||(null==n||null==t||!cc(n)&&!cc(t)?n!==n&&t!==t:We(n,t,r,e,Se,u))}function We(n,t,r,e,u,i){var o=bh(n),f=bh(t),c=o?Mn:zs(n),a=f?Mn:zs(t);c=c==Dn?Yn:c,a=a==Dn?Yn:a;var l=c==Yn,s=a==Yn,h=c==a;if(h&&mh(n)){if(!mh(t))return!1;o=!0,l=!1}if(h&&!l)return i||(i=new wr),o||Oh(n)?pi(n,t,r,e,u,i):_i(n,t,c,r,e,u,i);if(!(r&hn)){var p=l&&bl.call(n,\"__wrapped__\"),_=s&&bl.call(t,\"__wrapped__\");if(p||_){var v=p?n.value():n,g=_?t.value():t;return i||(i=new wr),u(v,g,r,e,i)}}return!!h&&(i||(i=new wr),vi(n,t,r,e,u,i));\n}function Le(n){return cc(n)&&zs(n)==Gn}function Ce(n,t,r,e){var u=r.length,i=u,o=!e;if(null==n)return!i;for(n=ll(n);u--;){var f=r[u];if(o&&f[2]?f[1]!==n[f[0]]:!(f[0]in n))return!1}for(;++u<i;){f=r[u];var c=f[0],a=n[c],l=f[1];if(o&&f[2]){if(a===X&&!(c in n))return!1}else{var s=new wr;if(e)var h=e(a,l,c,n,t,s);if(!(h===X?Se(l,a,hn|pn,e,s):h))return!1}}return!0}function Ue(n){return!(!fc(n)||Di(n))&&(uc(n)?kl:Zt).test(to(n))}function Be(n){return cc(n)&&we(n)==nt}function Te(n){return cc(n)&&zs(n)==tt;\n}function $e(n){return cc(n)&&oc(n.length)&&!!Kr[we(n)]}function De(n){return\"function\"==typeof n?n:null==n?La:\"object\"==typeof n?bh(n)?Ze(n[0],n[1]):qe(n):Fa(n)}function Me(n){if(!Mi(n))return Vl(n);var t=[];for(var r in ll(n))bl.call(n,r)&&\"constructor\"!=r&&t.push(r);return t}function Fe(n){if(!fc(n))return Zi(n);var t=Mi(n),r=[];for(var e in n)(\"constructor\"!=e||!t&&bl.call(n,e))&&r.push(e);return r}function Ne(n,t){return n<t}function Pe(n,t){var r=-1,e=Hf(n)?il(n.length):[];return ys(n,function(n,u,i){\ne[++r]=t(n,u,i)}),e}function qe(n){var t=ji(n);return 1==t.length&&t[0][2]?Ni(t[0][0],t[0][1]):function(r){return r===n||Ce(r,n,t)}}function Ze(n,t){return Bi(n)&&Fi(t)?Ni(no(n),t):function(r){var e=Mc(r,n);return e===X&&e===t?Nc(r,n):Se(t,e,hn|pn)}}function Ke(n,t,r,e,u){n!==t&&bs(t,function(i,o){if(u||(u=new wr),fc(i))Ve(n,t,o,r,Ke,e,u);else{var f=e?e(Ji(n,o),i,o+\"\",n,t,u):X;f===X&&(f=i),Er(n,o,f)}},qc)}function Ve(n,t,r,e,u,i,o){var f=Ji(n,r),c=Ji(t,r),a=o.get(c);if(a)return Er(n,r,a),X;var l=i?i(f,c,r+\"\",n,t,o):X,s=l===X;\nif(s){var h=bh(c),p=!h&&mh(c),_=!h&&!p&&Oh(c);l=c,h||p||_?bh(f)?l=f:Jf(f)?l=Tu(f):p?(s=!1,l=Iu(c,!0)):_?(s=!1,l=Wu(c,!0)):l=[]:gc(c)||dh(c)?(l=f,dh(f)?l=Rc(f):fc(f)&&!uc(f)||(l=Ei(c))):s=!1}s&&(o.set(c,l),u(l,c,e,i,o),o.delete(c)),Er(n,r,l)}function Ge(n,t){var r=n.length;if(r)return t+=t<0?r:0,Ci(t,r)?n[t]:X}function He(n,t,r){t=t.length?c(t,function(n){return bh(n)?function(t){return _e(t,1===n.length?n[0]:n)}:n}):[La];var e=-1;return t=c(t,z(mi())),A(Pe(n,function(n,r,u){return{criteria:c(t,function(t){\nreturn t(n)}),index:++e,value:n}}),function(n,t){return Cu(n,t,r)})}function Je(n,t){return Ye(n,t,function(t,r){return Nc(n,r)})}function Ye(n,t,r){for(var e=-1,u=t.length,i={};++e<u;){var o=t[e],f=_e(n,o);r(f,o)&&fu(i,ku(o,n),f)}return i}function Qe(n){return function(t){return _e(t,n)}}function Xe(n,t,r,e){var u=e?d:y,i=-1,o=t.length,f=n;for(n===t&&(t=Tu(t)),r&&(f=c(n,z(r)));++i<o;)for(var a=0,l=t[i],s=r?r(l):l;(a=u(f,s,a,e))>-1;)f!==n&&Ll.call(f,a,1),Ll.call(n,a,1);return n}function nu(n,t){for(var r=n?t.length:0,e=r-1;r--;){\nvar u=t[r];if(r==e||u!==i){var i=u;Ci(u)?Ll.call(n,u,1):yu(n,u)}}return n}function tu(n,t){return n+Nl(Ql()*(t-n+1))}function ru(n,t,r,e){for(var u=-1,i=Gl(Fl((t-n)/(r||1)),0),o=il(i);i--;)o[e?i:++u]=n,n+=r;return o}function eu(n,t){var r=\"\";if(!n||t<1||t>Wn)return r;do t%2&&(r+=n),t=Nl(t/2),t&&(n+=n);while(t);return r}function uu(n,t){return Ls(Vi(n,t,La),n+\"\")}function iu(n){return Ir(ra(n))}function ou(n,t){var r=ra(n);return Xi(r,Mr(t,0,r.length))}function fu(n,t,r,e){if(!fc(n))return n;t=ku(t,n);\nfor(var u=-1,i=t.length,o=i-1,f=n;null!=f&&++u<i;){var c=no(t[u]),a=r;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return n;if(u!=o){var l=f[c];a=e?e(l,c,f):X,a===X&&(a=fc(l)?l:Ci(t[u+1])?[]:{})}Sr(f,c,a),f=f[c]}return n}function cu(n){return Xi(ra(n))}function au(n,t,r){var e=-1,u=n.length;t<0&&(t=-t>u?0:u+t),r=r>u?u:r,r<0&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0;for(var i=il(u);++e<u;)i[e]=n[e+t];return i}function lu(n,t){var r;return ys(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function su(n,t,r){\nvar e=0,u=null==n?e:n.length;if(\"number\"==typeof t&&t===t&&u<=Tn){for(;e<u;){var i=e+u>>>1,o=n[i];null!==o&&!bc(o)&&(r?o<=t:o<t)?e=i+1:u=i}return u}return hu(n,t,La,r)}function hu(n,t,r,e){var u=0,i=null==n?0:n.length;if(0===i)return 0;t=r(t);for(var o=t!==t,f=null===t,c=bc(t),a=t===X;u<i;){var l=Nl((u+i)/2),s=r(n[l]),h=s!==X,p=null===s,_=s===s,v=bc(s);if(o)var g=e||_;else g=a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):!p&&!v&&(e?s<=t:s<t);g?u=l+1:i=l}return Hl(i,Bn)}function pu(n,t){for(var r=-1,e=n.length,u=0,i=[];++r<e;){\nvar o=n[r],f=t?t(o):o;if(!r||!Gf(f,c)){var c=f;i[u++]=0===o?0:o}}return i}function _u(n){return\"number\"==typeof n?n:bc(n)?Cn:+n}function vu(n){if(\"string\"==typeof n)return n;if(bh(n))return c(n,vu)+\"\";if(bc(n))return vs?vs.call(n):\"\";var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function gu(n,t,r){var e=-1,u=o,i=n.length,c=!0,a=[],l=a;if(r)c=!1,u=f;else if(i>=tn){var s=t?null:ks(n);if(s)return P(s);c=!1,u=S,l=new yr}else l=t?[]:a;n:for(;++e<i;){var h=n[e],p=t?t(h):h;if(h=r||0!==h?h:0,c&&p===p){for(var _=l.length;_--;)if(l[_]===p)continue n;\nt&&l.push(p),a.push(h)}else u(l,p,r)||(l!==a&&l.push(p),a.push(h))}return a}function yu(n,t){return t=ku(t,n),n=Gi(n,t),null==n||delete n[no(jo(t))]}function du(n,t,r,e){return fu(n,t,r(_e(n,t)),e)}function bu(n,t,r,e){for(var u=n.length,i=e?u:-1;(e?i--:++i<u)&&t(n[i],i,n););return r?au(n,e?0:i,e?i+1:u):au(n,e?i+1:0,e?u:i)}function wu(n,t){var r=n;return r instanceof Ct&&(r=r.value()),l(t,function(n,t){return t.func.apply(t.thisArg,a([n],t.args))},r)}function mu(n,t,r){var e=n.length;if(e<2)return e?gu(n[0]):[];\nfor(var u=-1,i=il(e);++u<e;)for(var o=n[u],f=-1;++f<e;)f!=u&&(i[u]=Hr(i[u]||o,n[f],t,r));return gu(ee(i,1),t,r)}function xu(n,t,r){for(var e=-1,u=n.length,i=t.length,o={};++e<u;){r(o,n[e],e<i?t[e]:X)}return o}function ju(n){return Jf(n)?n:[]}function Au(n){return\"function\"==typeof n?n:La}function ku(n,t){return bh(n)?n:Bi(n,t)?[n]:Cs(Ec(n))}function Ou(n,t,r){var e=n.length;return r=r===X?e:r,!t&&r>=e?n:au(n,t,r)}function Iu(n,t){if(t)return n.slice();var r=n.length,e=zl?zl(r):new n.constructor(r);\nreturn n.copy(e),e}function Ru(n){var t=new n.constructor(n.byteLength);return new Rl(t).set(new Rl(n)),t}function zu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.byteLength)}function Eu(n){var t=new n.constructor(n.source,Nt.exec(n));return t.lastIndex=n.lastIndex,t}function Su(n){return _s?ll(_s.call(n)):{}}function Wu(n,t){return new n.constructor(t?Ru(n.buffer):n.buffer,n.byteOffset,n.length)}function Lu(n,t){if(n!==t){var r=n!==X,e=null===n,u=n===n,i=bc(n),o=t!==X,f=null===t,c=t===t,a=bc(t);\nif(!f&&!a&&!i&&n>t||i&&o&&c&&!f&&!a||e&&o&&c||!r&&c||!u)return 1;if(!e&&!i&&!a&&n<t||a&&r&&u&&!e&&!i||f&&r&&u||!o&&u||!c)return-1}return 0}function Cu(n,t,r){for(var e=-1,u=n.criteria,i=t.criteria,o=u.length,f=r.length;++e<o;){var c=Lu(u[e],i[e]);if(c){if(e>=f)return c;return c*(\"desc\"==r[e]?-1:1)}}return n.index-t.index}function Uu(n,t,r,e){for(var u=-1,i=n.length,o=r.length,f=-1,c=t.length,a=Gl(i-o,0),l=il(c+a),s=!e;++f<c;)l[f]=t[f];for(;++u<o;)(s||u<i)&&(l[r[u]]=n[u]);for(;a--;)l[f++]=n[u++];return l;\n}function Bu(n,t,r,e){for(var u=-1,i=n.length,o=-1,f=r.length,c=-1,a=t.length,l=Gl(i-f,0),s=il(l+a),h=!e;++u<l;)s[u]=n[u];for(var p=u;++c<a;)s[p+c]=t[c];for(;++o<f;)(h||u<i)&&(s[p+r[o]]=n[u++]);return s}function Tu(n,t){var r=-1,e=n.length;for(t||(t=il(e));++r<e;)t[r]=n[r];return t}function $u(n,t,r,e){var u=!r;r||(r={});for(var i=-1,o=t.length;++i<o;){var f=t[i],c=e?e(r[f],n[f],f,r,n):X;c===X&&(c=n[f]),u?Br(r,f,c):Sr(r,f,c)}return r}function Du(n,t){return $u(n,Is(n),t)}function Mu(n,t){return $u(n,Rs(n),t);\n}function Fu(n,r){return function(e,u){var i=bh(e)?t:Lr,o=r?r():{};return i(e,n,mi(u,2),o)}}function Nu(n){return uu(function(t,r){var e=-1,u=r.length,i=u>1?r[u-1]:X,o=u>2?r[2]:X;for(i=n.length>3&&\"function\"==typeof i?(u--,i):X,o&&Ui(r[0],r[1],o)&&(i=u<3?X:i,u=1),t=ll(t);++e<u;){var f=r[e];f&&n(t,f,e,i)}return t})}function Pu(n,t){return function(r,e){if(null==r)return r;if(!Hf(r))return n(r,e);for(var u=r.length,i=t?u:-1,o=ll(r);(t?i--:++i<u)&&e(o[i],i,o)!==!1;);return r}}function qu(n){return function(t,r,e){\nfor(var u=-1,i=ll(t),o=e(t),f=o.length;f--;){var c=o[n?f:++u];if(r(i[c],c,i)===!1)break}return t}}function Zu(n,t,r){function e(){return(this&&this!==re&&this instanceof e?i:n).apply(u?r:this,arguments)}var u=t&_n,i=Gu(n);return e}function Ku(n){return function(t){t=Ec(t);var r=T(t)?G(t):X,e=r?r[0]:t.charAt(0),u=r?Ou(r,1).join(\"\"):t.slice(1);return e[n]()+u}}function Vu(n){return function(t){return l(Ra(ca(t).replace($r,\"\")),n,\"\")}}function Gu(n){return function(){var t=arguments;switch(t.length){\ncase 0:return new n;case 1:return new n(t[0]);case 2:return new n(t[0],t[1]);case 3:return new n(t[0],t[1],t[2]);case 4:return new n(t[0],t[1],t[2],t[3]);case 5:return new n(t[0],t[1],t[2],t[3],t[4]);case 6:return new n(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new n(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var r=gs(n.prototype),e=n.apply(r,t);return fc(e)?e:r}}function Hu(t,r,e){function u(){for(var o=arguments.length,f=il(o),c=o,a=wi(u);c--;)f[c]=arguments[c];var l=o<3&&f[0]!==a&&f[o-1]!==a?[]:N(f,a);\nreturn o-=l.length,o<e?oi(t,r,Qu,u.placeholder,X,f,l,X,X,e-o):n(this&&this!==re&&this instanceof u?i:t,this,f)}var i=Gu(t);return u}function Ju(n){return function(t,r,e){var u=ll(t);if(!Hf(t)){var i=mi(r,3);t=Pc(t),r=function(n){return i(u[n],n,u)}}var o=n(t,r,e);return o>-1?u[i?t[o]:o]:X}}function Yu(n){return gi(function(t){var r=t.length,e=r,u=Y.prototype.thru;for(n&&t.reverse();e--;){var i=t[e];if(\"function\"!=typeof i)throw new pl(en);if(u&&!o&&\"wrapper\"==bi(i))var o=new Y([],!0)}for(e=o?e:r;++e<r;){\ni=t[e];var f=bi(i),c=\"wrapper\"==f?Os(i):X;o=c&&$i(c[0])&&c[1]==(mn|yn|bn|xn)&&!c[4].length&&1==c[9]?o[bi(c[0])].apply(o,c[3]):1==i.length&&$i(i)?o[f]():o.thru(i)}return function(){var n=arguments,e=n[0];if(o&&1==n.length&&bh(e))return o.plant(e).value();for(var u=0,i=r?t[u].apply(this,n):e;++u<r;)i=t[u].call(this,i);return i}})}function Qu(n,t,r,e,u,i,o,f,c,a){function l(){for(var y=arguments.length,d=il(y),b=y;b--;)d[b]=arguments[b];if(_)var w=wi(l),m=C(d,w);if(e&&(d=Uu(d,e,u,_)),i&&(d=Bu(d,i,o,_)),\ny-=m,_&&y<a){return oi(n,t,Qu,l.placeholder,r,d,N(d,w),f,c,a-y)}var x=h?r:this,j=p?x[n]:n;return y=d.length,f?d=Hi(d,f):v&&y>1&&d.reverse(),s&&c<y&&(d.length=c),this&&this!==re&&this instanceof l&&(j=g||Gu(j)),j.apply(x,d)}var s=t&mn,h=t&_n,p=t&vn,_=t&(yn|dn),v=t&jn,g=p?X:Gu(n);return l}function Xu(n,t){return function(r,e){return Oe(r,n,t(e),{})}}function ni(n,t){return function(r,e){var u;if(r===X&&e===X)return t;if(r!==X&&(u=r),e!==X){if(u===X)return e;\"string\"==typeof r||\"string\"==typeof e?(r=vu(r),\ne=vu(e)):(r=_u(r),e=_u(e)),u=n(r,e)}return u}}function ti(t){return gi(function(r){return r=c(r,z(mi())),uu(function(e){var u=this;return t(r,function(t){return n(t,u,e)})})})}function ri(n,t){t=t===X?\" \":vu(t);var r=t.length;if(r<2)return r?eu(t,n):t;var e=eu(t,Fl(n/V(t)));return T(t)?Ou(G(e),0,n).join(\"\"):e.slice(0,n)}function ei(t,r,e,u){function i(){for(var r=-1,c=arguments.length,a=-1,l=u.length,s=il(l+c),h=this&&this!==re&&this instanceof i?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++r];\nreturn n(h,o?e:this,s)}var o=r&_n,f=Gu(t);return i}function ui(n){return function(t,r,e){return e&&\"number\"!=typeof e&&Ui(t,r,e)&&(r=e=X),t=Ac(t),r===X?(r=t,t=0):r=Ac(r),e=e===X?t<r?1:-1:Ac(e),ru(t,r,e,n)}}function ii(n){return function(t,r){return\"string\"==typeof t&&\"string\"==typeof r||(t=Ic(t),r=Ic(r)),n(t,r)}}function oi(n,t,r,e,u,i,o,f,c,a){var l=t&yn,s=l?o:X,h=l?X:o,p=l?i:X,_=l?X:i;t|=l?bn:wn,t&=~(l?wn:bn),t&gn||(t&=~(_n|vn));var v=[n,t,u,p,s,_,h,f,c,a],g=r.apply(X,v);return $i(n)&&Ss(g,v),g.placeholder=e,\nYi(g,n,t)}function fi(n){var t=al[n];return function(n,r){if(n=Ic(n),r=null==r?0:Hl(kc(r),292),r&&Zl(n)){var e=(Ec(n)+\"e\").split(\"e\");return e=(Ec(t(e[0]+\"e\"+(+e[1]+r)))+\"e\").split(\"e\"),+(e[0]+\"e\"+(+e[1]-r))}return t(n)}}function ci(n){return function(t){var r=zs(t);return r==Gn?M(t):r==tt?q(t):I(t,n(t))}}function ai(n,t,r,e,u,i,o,f){var c=t&vn;if(!c&&\"function\"!=typeof n)throw new pl(en);var a=e?e.length:0;if(a||(t&=~(bn|wn),e=u=X),o=o===X?o:Gl(kc(o),0),f=f===X?f:kc(f),a-=u?u.length:0,t&wn){var l=e,s=u;\ne=u=X}var h=c?X:Os(n),p=[n,t,r,e,u,l,s,i,o,f];if(h&&qi(p,h),n=p[0],t=p[1],r=p[2],e=p[3],u=p[4],f=p[9]=p[9]===X?c?0:n.length:Gl(p[9]-a,0),!f&&t&(yn|dn)&&(t&=~(yn|dn)),t&&t!=_n)_=t==yn||t==dn?Hu(n,t,f):t!=bn&&t!=(_n|bn)||u.length?Qu.apply(X,p):ei(n,t,r,e);else var _=Zu(n,t,r);return Yi((h?ms:Ss)(_,p),n,t)}function li(n,t,r,e){return n===X||Gf(n,gl[r])&&!bl.call(e,r)?t:n}function si(n,t,r,e,u,i){return fc(n)&&fc(t)&&(i.set(t,n),Ke(n,t,X,si,i),i.delete(t)),n}function hi(n){return gc(n)?X:n}function pi(n,t,r,e,u,i){\nvar o=r&hn,f=n.length,c=t.length;if(f!=c&&!(o&&c>f))return!1;var a=i.get(n),l=i.get(t);if(a&&l)return a==t&&l==n;var s=-1,p=!0,_=r&pn?new yr:X;for(i.set(n,t),i.set(t,n);++s<f;){var v=n[s],g=t[s];if(e)var y=o?e(g,v,s,t,n,i):e(v,g,s,n,t,i);if(y!==X){if(y)continue;p=!1;break}if(_){if(!h(t,function(n,t){if(!S(_,t)&&(v===n||u(v,n,r,e,i)))return _.push(t)})){p=!1;break}}else if(v!==g&&!u(v,g,r,e,i)){p=!1;break}}return i.delete(n),i.delete(t),p}function _i(n,t,r,e,u,i,o){switch(r){case ct:if(n.byteLength!=t.byteLength||n.byteOffset!=t.byteOffset)return!1;\nn=n.buffer,t=t.buffer;case ft:return!(n.byteLength!=t.byteLength||!i(new Rl(n),new Rl(t)));case Nn:case Pn:case Hn:return Gf(+n,+t);case Zn:return n.name==t.name&&n.message==t.message;case nt:case rt:return n==t+\"\";case Gn:var f=M;case tt:var c=e&hn;if(f||(f=P),n.size!=t.size&&!c)return!1;var a=o.get(n);if(a)return a==t;e|=pn,o.set(n,t);var l=pi(f(n),f(t),e,u,i,o);return o.delete(n),l;case et:if(_s)return _s.call(n)==_s.call(t)}return!1}function vi(n,t,r,e,u,i){var o=r&hn,f=yi(n),c=f.length;if(c!=yi(t).length&&!o)return!1;\nfor(var a=c;a--;){var l=f[a];if(!(o?l in t:bl.call(t,l)))return!1}var s=i.get(n),h=i.get(t);if(s&&h)return s==t&&h==n;var p=!0;i.set(n,t),i.set(t,n);for(var _=o;++a<c;){l=f[a];var v=n[l],g=t[l];if(e)var y=o?e(g,v,l,t,n,i):e(v,g,l,n,t,i);if(!(y===X?v===g||u(v,g,r,e,i):y)){p=!1;break}_||(_=\"constructor\"==l)}if(p&&!_){var d=n.constructor,b=t.constructor;d!=b&&\"constructor\"in n&&\"constructor\"in t&&!(\"function\"==typeof d&&d instanceof d&&\"function\"==typeof b&&b instanceof b)&&(p=!1)}return i.delete(n),\ni.delete(t),p}function gi(n){return Ls(Vi(n,X,_o),n+\"\")}function yi(n){return de(n,Pc,Is)}function di(n){return de(n,qc,Rs)}function bi(n){for(var t=n.name+\"\",r=fs[t],e=bl.call(fs,t)?r.length:0;e--;){var u=r[e],i=u.func;if(null==i||i==n)return u.name}return t}function wi(n){return(bl.call(Z,\"placeholder\")?Z:n).placeholder}function mi(){var n=Z.iteratee||Ca;return n=n===Ca?De:n,arguments.length?n(arguments[0],arguments[1]):n}function xi(n,t){var r=n.__data__;return Ti(t)?r[\"string\"==typeof t?\"string\":\"hash\"]:r.map;\n}function ji(n){for(var t=Pc(n),r=t.length;r--;){var e=t[r],u=n[e];t[r]=[e,u,Fi(u)]}return t}function Ai(n,t){var r=B(n,t);return Ue(r)?r:X}function ki(n){var t=bl.call(n,Bl),r=n[Bl];try{n[Bl]=X;var e=!0}catch(n){}var u=xl.call(n);return e&&(t?n[Bl]=r:delete n[Bl]),u}function Oi(n,t,r){for(var e=-1,u=r.length;++e<u;){var i=r[e],o=i.size;switch(i.type){case\"drop\":n+=o;break;case\"dropRight\":t-=o;break;case\"take\":t=Hl(t,n+o);break;case\"takeRight\":n=Gl(n,t-o)}}return{start:n,end:t}}function Ii(n){var t=n.match(Bt);\nreturn t?t[1].split(Tt):[]}function Ri(n,t,r){t=ku(t,n);for(var e=-1,u=t.length,i=!1;++e<u;){var o=no(t[e]);if(!(i=null!=n&&r(n,o)))break;n=n[o]}return i||++e!=u?i:(u=null==n?0:n.length,!!u&&oc(u)&&Ci(o,u)&&(bh(n)||dh(n)))}function zi(n){var t=n.length,r=new n.constructor(t);return t&&\"string\"==typeof n[0]&&bl.call(n,\"index\")&&(r.index=n.index,r.input=n.input),r}function Ei(n){return\"function\"!=typeof n.constructor||Mi(n)?{}:gs(El(n))}function Si(n,t,r){var e=n.constructor;switch(t){case ft:return Ru(n);\ncase Nn:case Pn:return new e(+n);case ct:return zu(n,r);case at:case lt:case st:case ht:case pt:case _t:case vt:case gt:case yt:return Wu(n,r);case Gn:return new e;case Hn:case rt:return new e(n);case nt:return Eu(n);case tt:return new e;case et:return Su(n)}}function Wi(n,t){var r=t.length;if(!r)return n;var e=r-1;return t[e]=(r>1?\"& \":\"\")+t[e],t=t.join(r>2?\", \":\" \"),n.replace(Ut,\"{\\n/* [wrapped with \"+t+\"] */\\n\")}function Li(n){return bh(n)||dh(n)||!!(Cl&&n&&n[Cl])}function Ci(n,t){var r=typeof n;\nreturn t=null==t?Wn:t,!!t&&(\"number\"==r||\"symbol\"!=r&&Vt.test(n))&&n>-1&&n%1==0&&n<t}function Ui(n,t,r){if(!fc(r))return!1;var e=typeof t;return!!(\"number\"==e?Hf(r)&&Ci(t,r.length):\"string\"==e&&t in r)&&Gf(r[t],n)}function Bi(n,t){if(bh(n))return!1;var r=typeof n;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=n&&!bc(n))||(zt.test(n)||!Rt.test(n)||null!=t&&n in ll(t))}function Ti(n){var t=typeof n;return\"string\"==t||\"number\"==t||\"symbol\"==t||\"boolean\"==t?\"__proto__\"!==n:null===n}function $i(n){\nvar t=bi(n),r=Z[t];if(\"function\"!=typeof r||!(t in Ct.prototype))return!1;if(n===r)return!0;var e=Os(r);return!!e&&n===e[0]}function Di(n){return!!ml&&ml in n}function Mi(n){var t=n&&n.constructor;return n===(\"function\"==typeof t&&t.prototype||gl)}function Fi(n){return n===n&&!fc(n)}function Ni(n,t){return function(r){return null!=r&&(r[n]===t&&(t!==X||n in ll(r)))}}function Pi(n){var t=Cf(n,function(n){return r.size===fn&&r.clear(),n}),r=t.cache;return t}function qi(n,t){var r=n[1],e=t[1],u=r|e,i=u<(_n|vn|mn),o=e==mn&&r==yn||e==mn&&r==xn&&n[7].length<=t[8]||e==(mn|xn)&&t[7].length<=t[8]&&r==yn;\nif(!i&&!o)return n;e&_n&&(n[2]=t[2],u|=r&_n?0:gn);var f=t[3];if(f){var c=n[3];n[3]=c?Uu(c,f,t[4]):f,n[4]=c?N(n[3],cn):t[4]}return f=t[5],f&&(c=n[5],n[5]=c?Bu(c,f,t[6]):f,n[6]=c?N(n[5],cn):t[6]),f=t[7],f&&(n[7]=f),e&mn&&(n[8]=null==n[8]?t[8]:Hl(n[8],t[8])),null==n[9]&&(n[9]=t[9]),n[0]=t[0],n[1]=u,n}function Zi(n){var t=[];if(null!=n)for(var r in ll(n))t.push(r);return t}function Ki(n){return xl.call(n)}function Vi(t,r,e){return r=Gl(r===X?t.length-1:r,0),function(){for(var u=arguments,i=-1,o=Gl(u.length-r,0),f=il(o);++i<o;)f[i]=u[r+i];\ni=-1;for(var c=il(r+1);++i<r;)c[i]=u[i];return c[r]=e(f),n(t,this,c)}}function Gi(n,t){return t.length<2?n:_e(n,au(t,0,-1))}function Hi(n,t){for(var r=n.length,e=Hl(t.length,r),u=Tu(n);e--;){var i=t[e];n[e]=Ci(i,r)?u[i]:X}return n}function Ji(n,t){if((\"constructor\"!==t||\"function\"!=typeof n[t])&&\"__proto__\"!=t)return n[t]}function Yi(n,t,r){var e=t+\"\";return Ls(n,Wi(e,ro(Ii(e),r)))}function Qi(n){var t=0,r=0;return function(){var e=Jl(),u=In-(e-r);if(r=e,u>0){if(++t>=On)return arguments[0]}else t=0;\nreturn n.apply(X,arguments)}}function Xi(n,t){var r=-1,e=n.length,u=e-1;for(t=t===X?e:t;++r<t;){var i=tu(r,u),o=n[i];n[i]=n[r],n[r]=o}return n.length=t,n}function no(n){if(\"string\"==typeof n||bc(n))return n;var t=n+\"\";return\"0\"==t&&1/n==-Sn?\"-0\":t}function to(n){if(null!=n){try{return dl.call(n)}catch(n){}try{return n+\"\"}catch(n){}}return\"\"}function ro(n,t){return r($n,function(r){var e=\"_.\"+r[0];t&r[1]&&!o(n,e)&&n.push(e)}),n.sort()}function eo(n){if(n instanceof Ct)return n.clone();var t=new Y(n.__wrapped__,n.__chain__);\nreturn t.__actions__=Tu(n.__actions__),t.__index__=n.__index__,t.__values__=n.__values__,t}function uo(n,t,r){t=(r?Ui(n,t,r):t===X)?1:Gl(kc(t),0);var e=null==n?0:n.length;if(!e||t<1)return[];for(var u=0,i=0,o=il(Fl(e/t));u<e;)o[i++]=au(n,u,u+=t);return o}function io(n){for(var t=-1,r=null==n?0:n.length,e=0,u=[];++t<r;){var i=n[t];i&&(u[e++]=i)}return u}function oo(){var n=arguments.length;if(!n)return[];for(var t=il(n-1),r=arguments[0],e=n;e--;)t[e-1]=arguments[e];return a(bh(r)?Tu(r):[r],ee(t,1));\n}function fo(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),au(n,t<0?0:t,e)):[]}function co(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,0,t<0?0:t)):[]}function ao(n,t){return n&&n.length?bu(n,mi(t,3),!0,!0):[]}function lo(n,t){return n&&n.length?bu(n,mi(t,3),!0):[]}function so(n,t,r,e){var u=null==n?0:n.length;return u?(r&&\"number\"!=typeof r&&Ui(n,t,r)&&(r=0,e=u),ne(n,t,r,e)):[]}function ho(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);\nreturn u<0&&(u=Gl(e+u,0)),g(n,mi(t,3),u)}function po(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e-1;return r!==X&&(u=kc(r),u=r<0?Gl(e+u,0):Hl(u,e-1)),g(n,mi(t,3),u,!0)}function _o(n){return(null==n?0:n.length)?ee(n,1):[]}function vo(n){return(null==n?0:n.length)?ee(n,Sn):[]}function go(n,t){return(null==n?0:n.length)?(t=t===X?1:kc(t),ee(n,t)):[]}function yo(n){for(var t=-1,r=null==n?0:n.length,e={};++t<r;){var u=n[t];e[u[0]]=u[1]}return e}function bo(n){return n&&n.length?n[0]:X}function wo(n,t,r){\nvar e=null==n?0:n.length;if(!e)return-1;var u=null==r?0:kc(r);return u<0&&(u=Gl(e+u,0)),y(n,t,u)}function mo(n){return(null==n?0:n.length)?au(n,0,-1):[]}function xo(n,t){return null==n?\"\":Kl.call(n,t)}function jo(n){var t=null==n?0:n.length;return t?n[t-1]:X}function Ao(n,t,r){var e=null==n?0:n.length;if(!e)return-1;var u=e;return r!==X&&(u=kc(r),u=u<0?Gl(e+u,0):Hl(u,e-1)),t===t?K(n,t,u):g(n,b,u,!0)}function ko(n,t){return n&&n.length?Ge(n,kc(t)):X}function Oo(n,t){return n&&n.length&&t&&t.length?Xe(n,t):n;\n}function Io(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,mi(r,2)):n}function Ro(n,t,r){return n&&n.length&&t&&t.length?Xe(n,t,X,r):n}function zo(n,t){var r=[];if(!n||!n.length)return r;var e=-1,u=[],i=n.length;for(t=mi(t,3);++e<i;){var o=n[e];t(o,e,n)&&(r.push(o),u.push(e))}return nu(n,u),r}function Eo(n){return null==n?n:Xl.call(n)}function So(n,t,r){var e=null==n?0:n.length;return e?(r&&\"number\"!=typeof r&&Ui(n,t,r)?(t=0,r=e):(t=null==t?0:kc(t),r=r===X?e:kc(r)),au(n,t,r)):[]}function Wo(n,t){\nreturn su(n,t)}function Lo(n,t,r){return hu(n,t,mi(r,2))}function Co(n,t){var r=null==n?0:n.length;if(r){var e=su(n,t);if(e<r&&Gf(n[e],t))return e}return-1}function Uo(n,t){return su(n,t,!0)}function Bo(n,t,r){return hu(n,t,mi(r,2),!0)}function To(n,t){if(null==n?0:n.length){var r=su(n,t,!0)-1;if(Gf(n[r],t))return r}return-1}function $o(n){return n&&n.length?pu(n):[]}function Do(n,t){return n&&n.length?pu(n,mi(t,2)):[]}function Mo(n){var t=null==n?0:n.length;return t?au(n,1,t):[]}function Fo(n,t,r){\nreturn n&&n.length?(t=r||t===X?1:kc(t),au(n,0,t<0?0:t)):[]}function No(n,t,r){var e=null==n?0:n.length;return e?(t=r||t===X?1:kc(t),t=e-t,au(n,t<0?0:t,e)):[]}function Po(n,t){return n&&n.length?bu(n,mi(t,3),!1,!0):[]}function qo(n,t){return n&&n.length?bu(n,mi(t,3)):[]}function Zo(n){return n&&n.length?gu(n):[]}function Ko(n,t){return n&&n.length?gu(n,mi(t,2)):[]}function Vo(n,t){return t=\"function\"==typeof t?t:X,n&&n.length?gu(n,X,t):[]}function Go(n){if(!n||!n.length)return[];var t=0;return n=i(n,function(n){\nif(Jf(n))return t=Gl(n.length,t),!0}),O(t,function(t){return c(n,m(t))})}function Ho(t,r){if(!t||!t.length)return[];var e=Go(t);return null==r?e:c(e,function(t){return n(r,X,t)})}function Jo(n,t){return xu(n||[],t||[],Sr)}function Yo(n,t){return xu(n||[],t||[],fu)}function Qo(n){var t=Z(n);return t.__chain__=!0,t}function Xo(n,t){return t(n),n}function nf(n,t){return t(n)}function tf(){return Qo(this)}function rf(){return new Y(this.value(),this.__chain__)}function ef(){this.__values__===X&&(this.__values__=jc(this.value()));\nvar n=this.__index__>=this.__values__.length;return{done:n,value:n?X:this.__values__[this.__index__++]}}function uf(){return this}function of(n){for(var t,r=this;r instanceof J;){var e=eo(r);e.__index__=0,e.__values__=X,t?u.__wrapped__=e:t=e;var u=e;r=r.__wrapped__}return u.__wrapped__=n,t}function ff(){var n=this.__wrapped__;if(n instanceof Ct){var t=n;return this.__actions__.length&&(t=new Ct(this)),t=t.reverse(),t.__actions__.push({func:nf,args:[Eo],thisArg:X}),new Y(t,this.__chain__)}return this.thru(Eo);\n}function cf(){return wu(this.__wrapped__,this.__actions__)}function af(n,t,r){var e=bh(n)?u:Jr;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function lf(n,t){return(bh(n)?i:te)(n,mi(t,3))}function sf(n,t){return ee(yf(n,t),1)}function hf(n,t){return ee(yf(n,t),Sn)}function pf(n,t,r){return r=r===X?1:kc(r),ee(yf(n,t),r)}function _f(n,t){return(bh(n)?r:ys)(n,mi(t,3))}function vf(n,t){return(bh(n)?e:ds)(n,mi(t,3))}function gf(n,t,r,e){n=Hf(n)?n:ra(n),r=r&&!e?kc(r):0;var u=n.length;return r<0&&(r=Gl(u+r,0)),\ndc(n)?r<=u&&n.indexOf(t,r)>-1:!!u&&y(n,t,r)>-1}function yf(n,t){return(bh(n)?c:Pe)(n,mi(t,3))}function df(n,t,r,e){return null==n?[]:(bh(t)||(t=null==t?[]:[t]),r=e?X:r,bh(r)||(r=null==r?[]:[r]),He(n,t,r))}function bf(n,t,r){var e=bh(n)?l:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ys)}function wf(n,t,r){var e=bh(n)?s:j,u=arguments.length<3;return e(n,mi(t,4),r,u,ds)}function mf(n,t){return(bh(n)?i:te)(n,Uf(mi(t,3)))}function xf(n){return(bh(n)?Ir:iu)(n)}function jf(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),\n(bh(n)?Rr:ou)(n,t)}function Af(n){return(bh(n)?zr:cu)(n)}function kf(n){if(null==n)return 0;if(Hf(n))return dc(n)?V(n):n.length;var t=zs(n);return t==Gn||t==tt?n.size:Me(n).length}function Of(n,t,r){var e=bh(n)?h:lu;return r&&Ui(n,t,r)&&(t=X),e(n,mi(t,3))}function If(n,t){if(\"function\"!=typeof t)throw new pl(en);return n=kc(n),function(){if(--n<1)return t.apply(this,arguments)}}function Rf(n,t,r){return t=r?X:t,t=n&&null==t?n.length:t,ai(n,mn,X,X,X,X,t)}function zf(n,t){var r;if(\"function\"!=typeof t)throw new pl(en);\nreturn n=kc(n),function(){return--n>0&&(r=t.apply(this,arguments)),n<=1&&(t=X),r}}function Ef(n,t,r){t=r?X:t;var e=ai(n,yn,X,X,X,X,X,t);return e.placeholder=Ef.placeholder,e}function Sf(n,t,r){t=r?X:t;var e=ai(n,dn,X,X,X,X,X,t);return e.placeholder=Sf.placeholder,e}function Wf(n,t,r){function e(t){var r=h,e=p;return h=p=X,d=t,v=n.apply(e,r)}function u(n){return d=n,g=Ws(f,t),b?e(n):v}function i(n){var r=n-y,e=n-d,u=t-r;return w?Hl(u,_-e):u}function o(n){var r=n-y,e=n-d;return y===X||r>=t||r<0||w&&e>=_;\n}function f(){var n=fh();return o(n)?c(n):(g=Ws(f,i(n)),X)}function c(n){return g=X,m&&h?e(n):(h=p=X,v)}function a(){g!==X&&As(g),d=0,h=y=p=g=X}function l(){return g===X?v:c(fh())}function s(){var n=fh(),r=o(n);if(h=arguments,p=this,y=n,r){if(g===X)return u(y);if(w)return As(g),g=Ws(f,t),e(y)}return g===X&&(g=Ws(f,t)),v}var h,p,_,v,g,y,d=0,b=!1,w=!1,m=!0;if(\"function\"!=typeof n)throw new pl(en);return t=Ic(t)||0,fc(r)&&(b=!!r.leading,w=\"maxWait\"in r,_=w?Gl(Ic(r.maxWait)||0,t):_,m=\"trailing\"in r?!!r.trailing:m),\ns.cancel=a,s.flush=l,s}function Lf(n){return ai(n,jn)}function Cf(n,t){if(\"function\"!=typeof n||null!=t&&\"function\"!=typeof t)throw new pl(en);var r=function(){var e=arguments,u=t?t.apply(this,e):e[0],i=r.cache;if(i.has(u))return i.get(u);var o=n.apply(this,e);return r.cache=i.set(u,o)||i,o};return r.cache=new(Cf.Cache||sr),r}function Uf(n){if(\"function\"!=typeof n)throw new pl(en);return function(){var t=arguments;switch(t.length){case 0:return!n.call(this);case 1:return!n.call(this,t[0]);case 2:\nreturn!n.call(this,t[0],t[1]);case 3:return!n.call(this,t[0],t[1],t[2])}return!n.apply(this,t)}}function Bf(n){return zf(2,n)}function Tf(n,t){if(\"function\"!=typeof n)throw new pl(en);return t=t===X?t:kc(t),uu(n,t)}function $f(t,r){if(\"function\"!=typeof t)throw new pl(en);return r=null==r?0:Gl(kc(r),0),uu(function(e){var u=e[r],i=Ou(e,0,r);return u&&a(i,u),n(t,this,i)})}function Df(n,t,r){var e=!0,u=!0;if(\"function\"!=typeof n)throw new pl(en);return fc(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),\nWf(n,t,{leading:e,maxWait:t,trailing:u})}function Mf(n){return Rf(n,1)}function Ff(n,t){return ph(Au(t),n)}function Nf(){if(!arguments.length)return[];var n=arguments[0];return bh(n)?n:[n]}function Pf(n){return Fr(n,sn)}function qf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,sn,t)}function Zf(n){return Fr(n,an|sn)}function Kf(n,t){return t=\"function\"==typeof t?t:X,Fr(n,an|sn,t)}function Vf(n,t){return null==t||Pr(n,t,Pc(t))}function Gf(n,t){return n===t||n!==n&&t!==t}function Hf(n){return null!=n&&oc(n.length)&&!uc(n);\n}function Jf(n){return cc(n)&&Hf(n)}function Yf(n){return n===!0||n===!1||cc(n)&&we(n)==Nn}function Qf(n){return cc(n)&&1===n.nodeType&&!gc(n)}function Xf(n){if(null==n)return!0;if(Hf(n)&&(bh(n)||\"string\"==typeof n||\"function\"==typeof n.splice||mh(n)||Oh(n)||dh(n)))return!n.length;var t=zs(n);if(t==Gn||t==tt)return!n.size;if(Mi(n))return!Me(n).length;for(var r in n)if(bl.call(n,r))return!1;return!0}function nc(n,t){return Se(n,t)}function tc(n,t,r){r=\"function\"==typeof r?r:X;var e=r?r(n,t):X;return e===X?Se(n,t,X,r):!!e;\n}function rc(n){if(!cc(n))return!1;var t=we(n);return t==Zn||t==qn||\"string\"==typeof n.message&&\"string\"==typeof n.name&&!gc(n)}function ec(n){return\"number\"==typeof n&&Zl(n)}function uc(n){if(!fc(n))return!1;var t=we(n);return t==Kn||t==Vn||t==Fn||t==Xn}function ic(n){return\"number\"==typeof n&&n==kc(n)}function oc(n){return\"number\"==typeof n&&n>-1&&n%1==0&&n<=Wn}function fc(n){var t=typeof n;return null!=n&&(\"object\"==t||\"function\"==t)}function cc(n){return null!=n&&\"object\"==typeof n}function ac(n,t){\nreturn n===t||Ce(n,t,ji(t))}function lc(n,t,r){return r=\"function\"==typeof r?r:X,Ce(n,t,ji(t),r)}function sc(n){return vc(n)&&n!=+n}function hc(n){if(Es(n))throw new fl(rn);return Ue(n)}function pc(n){return null===n}function _c(n){return null==n}function vc(n){return\"number\"==typeof n||cc(n)&&we(n)==Hn}function gc(n){if(!cc(n)||we(n)!=Yn)return!1;var t=El(n);if(null===t)return!0;var r=bl.call(t,\"constructor\")&&t.constructor;return\"function\"==typeof r&&r instanceof r&&dl.call(r)==jl}function yc(n){\nreturn ic(n)&&n>=-Wn&&n<=Wn}function dc(n){return\"string\"==typeof n||!bh(n)&&cc(n)&&we(n)==rt}function bc(n){return\"symbol\"==typeof n||cc(n)&&we(n)==et}function wc(n){return n===X}function mc(n){return cc(n)&&zs(n)==it}function xc(n){return cc(n)&&we(n)==ot}function jc(n){if(!n)return[];if(Hf(n))return dc(n)?G(n):Tu(n);if(Ul&&n[Ul])return D(n[Ul]());var t=zs(n);return(t==Gn?M:t==tt?P:ra)(n)}function Ac(n){if(!n)return 0===n?n:0;if(n=Ic(n),n===Sn||n===-Sn){return(n<0?-1:1)*Ln}return n===n?n:0}function kc(n){\nvar t=Ac(n),r=t%1;return t===t?r?t-r:t:0}function Oc(n){return n?Mr(kc(n),0,Un):0}function Ic(n){if(\"number\"==typeof n)return n;if(bc(n))return Cn;if(fc(n)){var t=\"function\"==typeof n.valueOf?n.valueOf():n;n=fc(t)?t+\"\":t}if(\"string\"!=typeof n)return 0===n?n:+n;n=R(n);var r=qt.test(n);return r||Kt.test(n)?Xr(n.slice(2),r?2:8):Pt.test(n)?Cn:+n}function Rc(n){return $u(n,qc(n))}function zc(n){return n?Mr(kc(n),-Wn,Wn):0===n?n:0}function Ec(n){return null==n?\"\":vu(n)}function Sc(n,t){var r=gs(n);return null==t?r:Cr(r,t);\n}function Wc(n,t){return v(n,mi(t,3),ue)}function Lc(n,t){return v(n,mi(t,3),oe)}function Cc(n,t){return null==n?n:bs(n,mi(t,3),qc)}function Uc(n,t){return null==n?n:ws(n,mi(t,3),qc)}function Bc(n,t){return n&&ue(n,mi(t,3))}function Tc(n,t){return n&&oe(n,mi(t,3))}function $c(n){return null==n?[]:fe(n,Pc(n))}function Dc(n){return null==n?[]:fe(n,qc(n))}function Mc(n,t,r){var e=null==n?X:_e(n,t);return e===X?r:e}function Fc(n,t){return null!=n&&Ri(n,t,xe)}function Nc(n,t){return null!=n&&Ri(n,t,je);\n}function Pc(n){return Hf(n)?Or(n):Me(n)}function qc(n){return Hf(n)?Or(n,!0):Fe(n)}function Zc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,t(n,e,u),n)}),r}function Kc(n,t){var r={};return t=mi(t,3),ue(n,function(n,e,u){Br(r,e,t(n,e,u))}),r}function Vc(n,t){return Gc(n,Uf(mi(t)))}function Gc(n,t){if(null==n)return{};var r=c(di(n),function(n){return[n]});return t=mi(t),Ye(n,r,function(n,r){return t(n,r[0])})}function Hc(n,t,r){t=ku(t,n);var e=-1,u=t.length;for(u||(u=1,n=X);++e<u;){var i=null==n?X:n[no(t[e])];\ni===X&&(e=u,i=r),n=uc(i)?i.call(n):i}return n}function Jc(n,t,r){return null==n?n:fu(n,t,r)}function Yc(n,t,r,e){return e=\"function\"==typeof e?e:X,null==n?n:fu(n,t,r,e)}function Qc(n,t,e){var u=bh(n),i=u||mh(n)||Oh(n);if(t=mi(t,4),null==e){var o=n&&n.constructor;e=i?u?new o:[]:fc(n)&&uc(o)?gs(El(n)):{}}return(i?r:ue)(n,function(n,r,u){return t(e,n,r,u)}),e}function Xc(n,t){return null==n||yu(n,t)}function na(n,t,r){return null==n?n:du(n,t,Au(r))}function ta(n,t,r,e){return e=\"function\"==typeof e?e:X,\nnull==n?n:du(n,t,Au(r),e)}function ra(n){return null==n?[]:E(n,Pc(n))}function ea(n){return null==n?[]:E(n,qc(n))}function ua(n,t,r){return r===X&&(r=t,t=X),r!==X&&(r=Ic(r),r=r===r?r:0),t!==X&&(t=Ic(t),t=t===t?t:0),Mr(Ic(n),t,r)}function ia(n,t,r){return t=Ac(t),r===X?(r=t,t=0):r=Ac(r),n=Ic(n),Ae(n,t,r)}function oa(n,t,r){if(r&&\"boolean\"!=typeof r&&Ui(n,t,r)&&(t=r=X),r===X&&(\"boolean\"==typeof t?(r=t,t=X):\"boolean\"==typeof n&&(r=n,n=X)),n===X&&t===X?(n=0,t=1):(n=Ac(n),t===X?(t=n,n=0):t=Ac(t)),n>t){\nvar e=n;n=t,t=e}if(r||n%1||t%1){var u=Ql();return Hl(n+u*(t-n+Qr(\"1e-\"+((u+\"\").length-1))),t)}return tu(n,t)}function fa(n){return Qh(Ec(n).toLowerCase())}function ca(n){return n=Ec(n),n&&n.replace(Gt,ve).replace(Dr,\"\")}function aa(n,t,r){n=Ec(n),t=vu(t);var e=n.length;r=r===X?e:Mr(kc(r),0,e);var u=r;return r-=t.length,r>=0&&n.slice(r,u)==t}function la(n){return n=Ec(n),n&&At.test(n)?n.replace(xt,ge):n}function sa(n){return n=Ec(n),n&&Wt.test(n)?n.replace(St,\"\\\\$&\"):n}function ha(n,t,r){n=Ec(n),t=kc(t);\nvar e=t?V(n):0;if(!t||e>=t)return n;var u=(t-e)/2;return ri(Nl(u),r)+n+ri(Fl(u),r)}function pa(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?n+ri(t-e,r):n}function _a(n,t,r){n=Ec(n),t=kc(t);var e=t?V(n):0;return t&&e<t?ri(t-e,r)+n:n}function va(n,t,r){return r||null==t?t=0:t&&(t=+t),Yl(Ec(n).replace(Lt,\"\"),t||0)}function ga(n,t,r){return t=(r?Ui(n,t,r):t===X)?1:kc(t),eu(Ec(n),t)}function ya(){var n=arguments,t=Ec(n[0]);return n.length<3?t:t.replace(n[1],n[2])}function da(n,t,r){return r&&\"number\"!=typeof r&&Ui(n,t,r)&&(t=r=X),\n(r=r===X?Un:r>>>0)?(n=Ec(n),n&&(\"string\"==typeof t||null!=t&&!Ah(t))&&(t=vu(t),!t&&T(n))?Ou(G(n),0,r):n.split(t,r)):[]}function ba(n,t,r){return n=Ec(n),r=null==r?0:Mr(kc(r),0,n.length),t=vu(t),n.slice(r,r+t.length)==t}function wa(n,t,r){var e=Z.templateSettings;r&&Ui(n,t,r)&&(t=X),n=Ec(n),t=Sh({},t,e,li);var u,i,o=Sh({},t.imports,e.imports,li),f=Pc(o),c=E(o,f),a=0,l=t.interpolate||Ht,s=\"__p += '\",h=sl((t.escape||Ht).source+\"|\"+l.source+\"|\"+(l===It?Ft:Ht).source+\"|\"+(t.evaluate||Ht).source+\"|$\",\"g\"),p=\"//# sourceURL=\"+(bl.call(t,\"sourceURL\")?(t.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++Zr+\"]\")+\"\\n\";\nn.replace(h,function(t,r,e,o,f,c){return e||(e=o),s+=n.slice(a,c).replace(Jt,U),r&&(u=!0,s+=\"' +\\n__e(\"+r+\") +\\n'\"),f&&(i=!0,s+=\"';\\n\"+f+\";\\n__p += '\"),e&&(s+=\"' +\\n((__t = (\"+e+\")) == null ? '' : __t) +\\n'\"),a=c+t.length,t}),s+=\"';\\n\";var _=bl.call(t,\"variable\")&&t.variable;if(_){if(Dt.test(_))throw new fl(un)}else s=\"with (obj) {\\n\"+s+\"\\n}\\n\";s=(i?s.replace(dt,\"\"):s).replace(bt,\"$1\").replace(wt,\"$1;\"),s=\"function(\"+(_||\"obj\")+\") {\\n\"+(_?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(u?\", __e = _.escape\":\"\")+(i?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+s+\"return __p\\n}\";\nvar v=Xh(function(){return cl(f,p+\"return \"+s).apply(X,c)});if(v.source=s,rc(v))throw v;return v}function ma(n){return Ec(n).toLowerCase()}function xa(n){return Ec(n).toUpperCase()}function ja(n,t,r){if(n=Ec(n),n&&(r||t===X))return R(n);if(!n||!(t=vu(t)))return n;var e=G(n),u=G(t);return Ou(e,W(e,u),L(e,u)+1).join(\"\")}function Aa(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.slice(0,H(n)+1);if(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,0,L(e,G(t))+1).join(\"\")}function ka(n,t,r){if(n=Ec(n),n&&(r||t===X))return n.replace(Lt,\"\");\nif(!n||!(t=vu(t)))return n;var e=G(n);return Ou(e,W(e,G(t))).join(\"\")}function Oa(n,t){var r=An,e=kn;if(fc(t)){var u=\"separator\"in t?t.separator:u;r=\"length\"in t?kc(t.length):r,e=\"omission\"in t?vu(t.omission):e}n=Ec(n);var i=n.length;if(T(n)){var o=G(n);i=o.length}if(r>=i)return n;var f=r-V(e);if(f<1)return e;var c=o?Ou(o,0,f).join(\"\"):n.slice(0,f);if(u===X)return c+e;if(o&&(f+=c.length-f),Ah(u)){if(n.slice(f).search(u)){var a,l=c;for(u.global||(u=sl(u.source,Ec(Nt.exec(u))+\"g\")),u.lastIndex=0;a=u.exec(l);)var s=a.index;\nc=c.slice(0,s===X?f:s)}}else if(n.indexOf(vu(u),f)!=f){var h=c.lastIndexOf(u);h>-1&&(c=c.slice(0,h))}return c+e}function Ia(n){return n=Ec(n),n&&jt.test(n)?n.replace(mt,ye):n}function Ra(n,t,r){return n=Ec(n),t=r?X:t,t===X?$(n)?Q(n):_(n):n.match(t)||[]}function za(t){var r=null==t?0:t.length,e=mi();return t=r?c(t,function(n){if(\"function\"!=typeof n[1])throw new pl(en);return[e(n[0]),n[1]]}):[],uu(function(e){for(var u=-1;++u<r;){var i=t[u];if(n(i[0],this,e))return n(i[1],this,e)}})}function Ea(n){\nreturn Nr(Fr(n,an))}function Sa(n){return function(){return n}}function Wa(n,t){return null==n||n!==n?t:n}function La(n){return n}function Ca(n){return De(\"function\"==typeof n?n:Fr(n,an))}function Ua(n){return qe(Fr(n,an))}function Ba(n,t){return Ze(n,Fr(t,an))}function Ta(n,t,e){var u=Pc(t),i=fe(t,u);null!=e||fc(t)&&(i.length||!u.length)||(e=t,t=n,n=this,i=fe(t,Pc(t)));var o=!(fc(e)&&\"chain\"in e&&!e.chain),f=uc(n);return r(i,function(r){var e=t[r];n[r]=e,f&&(n.prototype[r]=function(){var t=this.__chain__;\nif(o||t){var r=n(this.__wrapped__);return(r.__actions__=Tu(this.__actions__)).push({func:e,args:arguments,thisArg:n}),r.__chain__=t,r}return e.apply(n,a([this.value()],arguments))})}),n}function $a(){return re._===this&&(re._=Al),this}function Da(){}function Ma(n){return n=kc(n),uu(function(t){return Ge(t,n)})}function Fa(n){return Bi(n)?m(no(n)):Qe(n)}function Na(n){return function(t){return null==n?X:_e(n,t)}}function Pa(){return[]}function qa(){return!1}function Za(){return{}}function Ka(){return\"\";\n}function Va(){return!0}function Ga(n,t){if(n=kc(n),n<1||n>Wn)return[];var r=Un,e=Hl(n,Un);t=mi(t),n-=Un;for(var u=O(e,t);++r<n;)t(r);return u}function Ha(n){return bh(n)?c(n,no):bc(n)?[n]:Tu(Cs(Ec(n)))}function Ja(n){var t=++wl;return Ec(n)+t}function Ya(n){return n&&n.length?Yr(n,La,me):X}function Qa(n,t){return n&&n.length?Yr(n,mi(t,2),me):X}function Xa(n){return w(n,La)}function nl(n,t){return w(n,mi(t,2))}function tl(n){return n&&n.length?Yr(n,La,Ne):X}function rl(n,t){return n&&n.length?Yr(n,mi(t,2),Ne):X;\n}function el(n){return n&&n.length?k(n,La):0}function ul(n,t){return n&&n.length?k(n,mi(t,2)):0}x=null==x?re:be.defaults(re.Object(),x,be.pick(re,qr));var il=x.Array,ol=x.Date,fl=x.Error,cl=x.Function,al=x.Math,ll=x.Object,sl=x.RegExp,hl=x.String,pl=x.TypeError,_l=il.prototype,vl=cl.prototype,gl=ll.prototype,yl=x[\"__core-js_shared__\"],dl=vl.toString,bl=gl.hasOwnProperty,wl=0,ml=function(){var n=/[^.]+$/.exec(yl&&yl.keys&&yl.keys.IE_PROTO||\"\");return n?\"Symbol(src)_1.\"+n:\"\"}(),xl=gl.toString,jl=dl.call(ll),Al=re._,kl=sl(\"^\"+dl.call(bl).replace(St,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),Ol=ie?x.Buffer:X,Il=x.Symbol,Rl=x.Uint8Array,zl=Ol?Ol.allocUnsafe:X,El=F(ll.getPrototypeOf,ll),Sl=ll.create,Wl=gl.propertyIsEnumerable,Ll=_l.splice,Cl=Il?Il.isConcatSpreadable:X,Ul=Il?Il.iterator:X,Bl=Il?Il.toStringTag:X,Tl=function(){\ntry{var n=Ai(ll,\"defineProperty\");return n({},\"\",{}),n}catch(n){}}(),$l=x.clearTimeout!==re.clearTimeout&&x.clearTimeout,Dl=ol&&ol.now!==re.Date.now&&ol.now,Ml=x.setTimeout!==re.setTimeout&&x.setTimeout,Fl=al.ceil,Nl=al.floor,Pl=ll.getOwnPropertySymbols,ql=Ol?Ol.isBuffer:X,Zl=x.isFinite,Kl=_l.join,Vl=F(ll.keys,ll),Gl=al.max,Hl=al.min,Jl=ol.now,Yl=x.parseInt,Ql=al.random,Xl=_l.reverse,ns=Ai(x,\"DataView\"),ts=Ai(x,\"Map\"),rs=Ai(x,\"Promise\"),es=Ai(x,\"Set\"),us=Ai(x,\"WeakMap\"),is=Ai(ll,\"create\"),os=us&&new us,fs={},cs=to(ns),as=to(ts),ls=to(rs),ss=to(es),hs=to(us),ps=Il?Il.prototype:X,_s=ps?ps.valueOf:X,vs=ps?ps.toString:X,gs=function(){\nfunction n(){}return function(t){if(!fc(t))return{};if(Sl)return Sl(t);n.prototype=t;var r=new n;return n.prototype=X,r}}();Z.templateSettings={escape:kt,evaluate:Ot,interpolate:It,variable:\"\",imports:{_:Z}},Z.prototype=J.prototype,Z.prototype.constructor=Z,Y.prototype=gs(J.prototype),Y.prototype.constructor=Y,Ct.prototype=gs(J.prototype),Ct.prototype.constructor=Ct,Xt.prototype.clear=nr,Xt.prototype.delete=tr,Xt.prototype.get=rr,Xt.prototype.has=er,Xt.prototype.set=ur,ir.prototype.clear=or,ir.prototype.delete=fr,\nir.prototype.get=cr,ir.prototype.has=ar,ir.prototype.set=lr,sr.prototype.clear=hr,sr.prototype.delete=pr,sr.prototype.get=_r,sr.prototype.has=vr,sr.prototype.set=gr,yr.prototype.add=yr.prototype.push=dr,yr.prototype.has=br,wr.prototype.clear=mr,wr.prototype.delete=xr,wr.prototype.get=jr,wr.prototype.has=Ar,wr.prototype.set=kr;var ys=Pu(ue),ds=Pu(oe,!0),bs=qu(),ws=qu(!0),ms=os?function(n,t){return os.set(n,t),n}:La,xs=Tl?function(n,t){return Tl(n,\"toString\",{configurable:!0,enumerable:!1,value:Sa(t),\nwritable:!0})}:La,js=uu,As=$l||function(n){return re.clearTimeout(n)},ks=es&&1/P(new es([,-0]))[1]==Sn?function(n){return new es(n)}:Da,Os=os?function(n){return os.get(n)}:Da,Is=Pl?function(n){return null==n?[]:(n=ll(n),i(Pl(n),function(t){return Wl.call(n,t)}))}:Pa,Rs=Pl?function(n){for(var t=[];n;)a(t,Is(n)),n=El(n);return t}:Pa,zs=we;(ns&&zs(new ns(new ArrayBuffer(1)))!=ct||ts&&zs(new ts)!=Gn||rs&&zs(rs.resolve())!=Qn||es&&zs(new es)!=tt||us&&zs(new us)!=it)&&(zs=function(n){var t=we(n),r=t==Yn?n.constructor:X,e=r?to(r):\"\";\nif(e)switch(e){case cs:return ct;case as:return Gn;case ls:return Qn;case ss:return tt;case hs:return it}return t});var Es=yl?uc:qa,Ss=Qi(ms),Ws=Ml||function(n,t){return re.setTimeout(n,t)},Ls=Qi(xs),Cs=Pi(function(n){var t=[];return 46===n.charCodeAt(0)&&t.push(\"\"),n.replace(Et,function(n,r,e,u){t.push(e?u.replace(Mt,\"$1\"):r||n)}),t}),Us=uu(function(n,t){return Jf(n)?Hr(n,ee(t,1,Jf,!0)):[]}),Bs=uu(function(n,t){var r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),mi(r,2)):[]}),Ts=uu(function(n,t){\nvar r=jo(t);return Jf(r)&&(r=X),Jf(n)?Hr(n,ee(t,1,Jf,!0),X,r):[]}),$s=uu(function(n){var t=c(n,ju);return t.length&&t[0]===n[0]?ke(t):[]}),Ds=uu(function(n){var t=jo(n),r=c(n,ju);return t===jo(r)?t=X:r.pop(),r.length&&r[0]===n[0]?ke(r,mi(t,2)):[]}),Ms=uu(function(n){var t=jo(n),r=c(n,ju);return t=\"function\"==typeof t?t:X,t&&r.pop(),r.length&&r[0]===n[0]?ke(r,X,t):[]}),Fs=uu(Oo),Ns=gi(function(n,t){var r=null==n?0:n.length,e=Tr(n,t);return nu(n,c(t,function(n){return Ci(n,r)?+n:n}).sort(Lu)),e}),Ps=uu(function(n){\nreturn gu(ee(n,1,Jf,!0))}),qs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),gu(ee(n,1,Jf,!0),mi(t,2))}),Zs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,gu(ee(n,1,Jf,!0),X,t)}),Ks=uu(function(n,t){return Jf(n)?Hr(n,t):[]}),Vs=uu(function(n){return mu(i(n,Jf))}),Gs=uu(function(n){var t=jo(n);return Jf(t)&&(t=X),mu(i(n,Jf),mi(t,2))}),Hs=uu(function(n){var t=jo(n);return t=\"function\"==typeof t?t:X,mu(i(n,Jf),X,t)}),Js=uu(Go),Ys=uu(function(n){var t=n.length,r=t>1?n[t-1]:X;return r=\"function\"==typeof r?(n.pop(),\nr):X,Ho(n,r)}),Qs=gi(function(n){var t=n.length,r=t?n[0]:0,e=this.__wrapped__,u=function(t){return Tr(t,n)};return!(t>1||this.__actions__.length)&&e instanceof Ct&&Ci(r)?(e=e.slice(r,+r+(t?1:0)),e.__actions__.push({func:nf,args:[u],thisArg:X}),new Y(e,this.__chain__).thru(function(n){return t&&!n.length&&n.push(X),n})):this.thru(u)}),Xs=Fu(function(n,t,r){bl.call(n,r)?++n[r]:Br(n,r,1)}),nh=Ju(ho),th=Ju(po),rh=Fu(function(n,t,r){bl.call(n,r)?n[r].push(t):Br(n,r,[t])}),eh=uu(function(t,r,e){var u=-1,i=\"function\"==typeof r,o=Hf(t)?il(t.length):[];\nreturn ys(t,function(t){o[++u]=i?n(r,t,e):Ie(t,r,e)}),o}),uh=Fu(function(n,t,r){Br(n,r,t)}),ih=Fu(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),oh=uu(function(n,t){if(null==n)return[];var r=t.length;return r>1&&Ui(n,t[0],t[1])?t=[]:r>2&&Ui(t[0],t[1],t[2])&&(t=[t[0]]),He(n,ee(t,1),[])}),fh=Dl||function(){return re.Date.now()},ch=uu(function(n,t,r){var e=_n;if(r.length){var u=N(r,wi(ch));e|=bn}return ai(n,e,t,r,u)}),ah=uu(function(n,t,r){var e=_n|vn;if(r.length){var u=N(r,wi(ah));e|=bn;\n}return ai(t,e,n,r,u)}),lh=uu(function(n,t){return Gr(n,1,t)}),sh=uu(function(n,t,r){return Gr(n,Ic(t)||0,r)});Cf.Cache=sr;var hh=js(function(t,r){r=1==r.length&&bh(r[0])?c(r[0],z(mi())):c(ee(r,1),z(mi()));var e=r.length;return uu(function(u){for(var i=-1,o=Hl(u.length,e);++i<o;)u[i]=r[i].call(this,u[i]);return n(t,this,u)})}),ph=uu(function(n,t){return ai(n,bn,X,t,N(t,wi(ph)))}),_h=uu(function(n,t){return ai(n,wn,X,t,N(t,wi(_h)))}),vh=gi(function(n,t){return ai(n,xn,X,X,X,t)}),gh=ii(me),yh=ii(function(n,t){\nreturn n>=t}),dh=Re(function(){return arguments}())?Re:function(n){return cc(n)&&bl.call(n,\"callee\")&&!Wl.call(n,\"callee\")},bh=il.isArray,wh=ce?z(ce):ze,mh=ql||qa,xh=ae?z(ae):Ee,jh=le?z(le):Le,Ah=se?z(se):Be,kh=he?z(he):Te,Oh=pe?z(pe):$e,Ih=ii(Ne),Rh=ii(function(n,t){return n<=t}),zh=Nu(function(n,t){if(Mi(t)||Hf(t))return $u(t,Pc(t),n),X;for(var r in t)bl.call(t,r)&&Sr(n,r,t[r])}),Eh=Nu(function(n,t){$u(t,qc(t),n)}),Sh=Nu(function(n,t,r,e){$u(t,qc(t),n,e)}),Wh=Nu(function(n,t,r,e){$u(t,Pc(t),n,e);\n}),Lh=gi(Tr),Ch=uu(function(n,t){n=ll(n);var r=-1,e=t.length,u=e>2?t[2]:X;for(u&&Ui(t[0],t[1],u)&&(e=1);++r<e;)for(var i=t[r],o=qc(i),f=-1,c=o.length;++f<c;){var a=o[f],l=n[a];(l===X||Gf(l,gl[a])&&!bl.call(n,a))&&(n[a]=i[a])}return n}),Uh=uu(function(t){return t.push(X,si),n(Mh,X,t)}),Bh=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),n[t]=r},Sa(La)),Th=Xu(function(n,t,r){null!=t&&\"function\"!=typeof t.toString&&(t=xl.call(t)),bl.call(n,t)?n[t].push(r):n[t]=[r]},mi),$h=uu(Ie),Dh=Nu(function(n,t,r){\nKe(n,t,r)}),Mh=Nu(function(n,t,r,e){Ke(n,t,r,e)}),Fh=gi(function(n,t){var r={};if(null==n)return r;var e=!1;t=c(t,function(t){return t=ku(t,n),e||(e=t.length>1),t}),$u(n,di(n),r),e&&(r=Fr(r,an|ln|sn,hi));for(var u=t.length;u--;)yu(r,t[u]);return r}),Nh=gi(function(n,t){return null==n?{}:Je(n,t)}),Ph=ci(Pc),qh=ci(qc),Zh=Vu(function(n,t,r){return t=t.toLowerCase(),n+(r?fa(t):t)}),Kh=Vu(function(n,t,r){return n+(r?\"-\":\"\")+t.toLowerCase()}),Vh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toLowerCase()}),Gh=Ku(\"toLowerCase\"),Hh=Vu(function(n,t,r){\nreturn n+(r?\"_\":\"\")+t.toLowerCase()}),Jh=Vu(function(n,t,r){return n+(r?\" \":\"\")+Qh(t)}),Yh=Vu(function(n,t,r){return n+(r?\" \":\"\")+t.toUpperCase()}),Qh=Ku(\"toUpperCase\"),Xh=uu(function(t,r){try{return n(t,X,r)}catch(n){return rc(n)?n:new fl(n)}}),np=gi(function(n,t){return r(t,function(t){t=no(t),Br(n,t,ch(n[t],n))}),n}),tp=Yu(),rp=Yu(!0),ep=uu(function(n,t){return function(r){return Ie(r,n,t)}}),up=uu(function(n,t){return function(r){return Ie(n,r,t)}}),ip=ti(c),op=ti(u),fp=ti(h),cp=ui(),ap=ui(!0),lp=ni(function(n,t){\nreturn n+t},0),sp=fi(\"ceil\"),hp=ni(function(n,t){return n/t},1),pp=fi(\"floor\"),_p=ni(function(n,t){return n*t},1),vp=fi(\"round\"),gp=ni(function(n,t){return n-t},0);return Z.after=If,Z.ary=Rf,Z.assign=zh,Z.assignIn=Eh,Z.assignInWith=Sh,Z.assignWith=Wh,Z.at=Lh,Z.before=zf,Z.bind=ch,Z.bindAll=np,Z.bindKey=ah,Z.castArray=Nf,Z.chain=Qo,Z.chunk=uo,Z.compact=io,Z.concat=oo,Z.cond=za,Z.conforms=Ea,Z.constant=Sa,Z.countBy=Xs,Z.create=Sc,Z.curry=Ef,Z.curryRight=Sf,Z.debounce=Wf,Z.defaults=Ch,Z.defaultsDeep=Uh,\nZ.defer=lh,Z.delay=sh,Z.difference=Us,Z.differenceBy=Bs,Z.differenceWith=Ts,Z.drop=fo,Z.dropRight=co,Z.dropRightWhile=ao,Z.dropWhile=lo,Z.fill=so,Z.filter=lf,Z.flatMap=sf,Z.flatMapDeep=hf,Z.flatMapDepth=pf,Z.flatten=_o,Z.flattenDeep=vo,Z.flattenDepth=go,Z.flip=Lf,Z.flow=tp,Z.flowRight=rp,Z.fromPairs=yo,Z.functions=$c,Z.functionsIn=Dc,Z.groupBy=rh,Z.initial=mo,Z.intersection=$s,Z.intersectionBy=Ds,Z.intersectionWith=Ms,Z.invert=Bh,Z.invertBy=Th,Z.invokeMap=eh,Z.iteratee=Ca,Z.keyBy=uh,Z.keys=Pc,Z.keysIn=qc,\nZ.map=yf,Z.mapKeys=Zc,Z.mapValues=Kc,Z.matches=Ua,Z.matchesProperty=Ba,Z.memoize=Cf,Z.merge=Dh,Z.mergeWith=Mh,Z.method=ep,Z.methodOf=up,Z.mixin=Ta,Z.negate=Uf,Z.nthArg=Ma,Z.omit=Fh,Z.omitBy=Vc,Z.once=Bf,Z.orderBy=df,Z.over=ip,Z.overArgs=hh,Z.overEvery=op,Z.overSome=fp,Z.partial=ph,Z.partialRight=_h,Z.partition=ih,Z.pick=Nh,Z.pickBy=Gc,Z.property=Fa,Z.propertyOf=Na,Z.pull=Fs,Z.pullAll=Oo,Z.pullAllBy=Io,Z.pullAllWith=Ro,Z.pullAt=Ns,Z.range=cp,Z.rangeRight=ap,Z.rearg=vh,Z.reject=mf,Z.remove=zo,Z.rest=Tf,\nZ.reverse=Eo,Z.sampleSize=jf,Z.set=Jc,Z.setWith=Yc,Z.shuffle=Af,Z.slice=So,Z.sortBy=oh,Z.sortedUniq=$o,Z.sortedUniqBy=Do,Z.split=da,Z.spread=$f,Z.tail=Mo,Z.take=Fo,Z.takeRight=No,Z.takeRightWhile=Po,Z.takeWhile=qo,Z.tap=Xo,Z.throttle=Df,Z.thru=nf,Z.toArray=jc,Z.toPairs=Ph,Z.toPairsIn=qh,Z.toPath=Ha,Z.toPlainObject=Rc,Z.transform=Qc,Z.unary=Mf,Z.union=Ps,Z.unionBy=qs,Z.unionWith=Zs,Z.uniq=Zo,Z.uniqBy=Ko,Z.uniqWith=Vo,Z.unset=Xc,Z.unzip=Go,Z.unzipWith=Ho,Z.update=na,Z.updateWith=ta,Z.values=ra,Z.valuesIn=ea,\nZ.without=Ks,Z.words=Ra,Z.wrap=Ff,Z.xor=Vs,Z.xorBy=Gs,Z.xorWith=Hs,Z.zip=Js,Z.zipObject=Jo,Z.zipObjectDeep=Yo,Z.zipWith=Ys,Z.entries=Ph,Z.entriesIn=qh,Z.extend=Eh,Z.extendWith=Sh,Ta(Z,Z),Z.add=lp,Z.attempt=Xh,Z.camelCase=Zh,Z.capitalize=fa,Z.ceil=sp,Z.clamp=ua,Z.clone=Pf,Z.cloneDeep=Zf,Z.cloneDeepWith=Kf,Z.cloneWith=qf,Z.conformsTo=Vf,Z.deburr=ca,Z.defaultTo=Wa,Z.divide=hp,Z.endsWith=aa,Z.eq=Gf,Z.escape=la,Z.escapeRegExp=sa,Z.every=af,Z.find=nh,Z.findIndex=ho,Z.findKey=Wc,Z.findLast=th,Z.findLastIndex=po,\nZ.findLastKey=Lc,Z.floor=pp,Z.forEach=_f,Z.forEachRight=vf,Z.forIn=Cc,Z.forInRight=Uc,Z.forOwn=Bc,Z.forOwnRight=Tc,Z.get=Mc,Z.gt=gh,Z.gte=yh,Z.has=Fc,Z.hasIn=Nc,Z.head=bo,Z.identity=La,Z.includes=gf,Z.indexOf=wo,Z.inRange=ia,Z.invoke=$h,Z.isArguments=dh,Z.isArray=bh,Z.isArrayBuffer=wh,Z.isArrayLike=Hf,Z.isArrayLikeObject=Jf,Z.isBoolean=Yf,Z.isBuffer=mh,Z.isDate=xh,Z.isElement=Qf,Z.isEmpty=Xf,Z.isEqual=nc,Z.isEqualWith=tc,Z.isError=rc,Z.isFinite=ec,Z.isFunction=uc,Z.isInteger=ic,Z.isLength=oc,Z.isMap=jh,\nZ.isMatch=ac,Z.isMatchWith=lc,Z.isNaN=sc,Z.isNative=hc,Z.isNil=_c,Z.isNull=pc,Z.isNumber=vc,Z.isObject=fc,Z.isObjectLike=cc,Z.isPlainObject=gc,Z.isRegExp=Ah,Z.isSafeInteger=yc,Z.isSet=kh,Z.isString=dc,Z.isSymbol=bc,Z.isTypedArray=Oh,Z.isUndefined=wc,Z.isWeakMap=mc,Z.isWeakSet=xc,Z.join=xo,Z.kebabCase=Kh,Z.last=jo,Z.lastIndexOf=Ao,Z.lowerCase=Vh,Z.lowerFirst=Gh,Z.lt=Ih,Z.lte=Rh,Z.max=Ya,Z.maxBy=Qa,Z.mean=Xa,Z.meanBy=nl,Z.min=tl,Z.minBy=rl,Z.stubArray=Pa,Z.stubFalse=qa,Z.stubObject=Za,Z.stubString=Ka,\nZ.stubTrue=Va,Z.multiply=_p,Z.nth=ko,Z.noConflict=$a,Z.noop=Da,Z.now=fh,Z.pad=ha,Z.padEnd=pa,Z.padStart=_a,Z.parseInt=va,Z.random=oa,Z.reduce=bf,Z.reduceRight=wf,Z.repeat=ga,Z.replace=ya,Z.result=Hc,Z.round=vp,Z.runInContext=p,Z.sample=xf,Z.size=kf,Z.snakeCase=Hh,Z.some=Of,Z.sortedIndex=Wo,Z.sortedIndexBy=Lo,Z.sortedIndexOf=Co,Z.sortedLastIndex=Uo,Z.sortedLastIndexBy=Bo,Z.sortedLastIndexOf=To,Z.startCase=Jh,Z.startsWith=ba,Z.subtract=gp,Z.sum=el,Z.sumBy=ul,Z.template=wa,Z.times=Ga,Z.toFinite=Ac,Z.toInteger=kc,\nZ.toLength=Oc,Z.toLower=ma,Z.toNumber=Ic,Z.toSafeInteger=zc,Z.toString=Ec,Z.toUpper=xa,Z.trim=ja,Z.trimEnd=Aa,Z.trimStart=ka,Z.truncate=Oa,Z.unescape=Ia,Z.uniqueId=Ja,Z.upperCase=Yh,Z.upperFirst=Qh,Z.each=_f,Z.eachRight=vf,Z.first=bo,Ta(Z,function(){var n={};return ue(Z,function(t,r){bl.call(Z.prototype,r)||(n[r]=t)}),n}(),{chain:!1}),Z.VERSION=nn,r([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],function(n){Z[n].placeholder=Z}),r([\"drop\",\"take\"],function(n,t){Ct.prototype[n]=function(r){\nr=r===X?1:Gl(kc(r),0);var e=this.__filtered__&&!t?new Ct(this):this.clone();return e.__filtered__?e.__takeCount__=Hl(r,e.__takeCount__):e.__views__.push({size:Hl(r,Un),type:n+(e.__dir__<0?\"Right\":\"\")}),e},Ct.prototype[n+\"Right\"]=function(t){return this.reverse()[n](t).reverse()}}),r([\"filter\",\"map\",\"takeWhile\"],function(n,t){var r=t+1,e=r==Rn||r==En;Ct.prototype[n]=function(n){var t=this.clone();return t.__iteratees__.push({iteratee:mi(n,3),type:r}),t.__filtered__=t.__filtered__||e,t}}),r([\"head\",\"last\"],function(n,t){\nvar r=\"take\"+(t?\"Right\":\"\");Ct.prototype[n]=function(){return this[r](1).value()[0]}}),r([\"initial\",\"tail\"],function(n,t){var r=\"drop\"+(t?\"\":\"Right\");Ct.prototype[n]=function(){return this.__filtered__?new Ct(this):this[r](1)}}),Ct.prototype.compact=function(){return this.filter(La)},Ct.prototype.find=function(n){return this.filter(n).head()},Ct.prototype.findLast=function(n){return this.reverse().find(n)},Ct.prototype.invokeMap=uu(function(n,t){return\"function\"==typeof n?new Ct(this):this.map(function(r){\nreturn Ie(r,n,t)})}),Ct.prototype.reject=function(n){return this.filter(Uf(mi(n)))},Ct.prototype.slice=function(n,t){n=kc(n);var r=this;return r.__filtered__&&(n>0||t<0)?new Ct(r):(n<0?r=r.takeRight(-n):n&&(r=r.drop(n)),t!==X&&(t=kc(t),r=t<0?r.dropRight(-t):r.take(t-n)),r)},Ct.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},Ct.prototype.toArray=function(){return this.take(Un)},ue(Ct.prototype,function(n,t){var r=/^(?:filter|find|map|reject)|While$/.test(t),e=/^(?:head|last)$/.test(t),u=Z[e?\"take\"+(\"last\"==t?\"Right\":\"\"):t],i=e||/^find/.test(t);\nu&&(Z.prototype[t]=function(){var t=this.__wrapped__,o=e?[1]:arguments,f=t instanceof Ct,c=o[0],l=f||bh(t),s=function(n){var t=u.apply(Z,a([n],o));return e&&h?t[0]:t};l&&r&&\"function\"==typeof c&&1!=c.length&&(f=l=!1);var h=this.__chain__,p=!!this.__actions__.length,_=i&&!h,v=f&&!p;if(!i&&l){t=v?t:new Ct(this);var g=n.apply(t,o);return g.__actions__.push({func:nf,args:[s],thisArg:X}),new Y(g,h)}return _&&v?n.apply(this,o):(g=this.thru(s),_?e?g.value()[0]:g.value():g)})}),r([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],function(n){\nvar t=_l[n],r=/^(?:push|sort|unshift)$/.test(n)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(n);Z.prototype[n]=function(){var n=arguments;if(e&&!this.__chain__){var u=this.value();return t.apply(bh(u)?u:[],n)}return this[r](function(r){return t.apply(bh(r)?r:[],n)})}}),ue(Ct.prototype,function(n,t){var r=Z[t];if(r){var e=r.name+\"\";bl.call(fs,e)||(fs[e]=[]),fs[e].push({name:t,func:r})}}),fs[Qu(X,vn).name]=[{name:\"wrapper\",func:X}],Ct.prototype.clone=$t,Ct.prototype.reverse=Yt,Ct.prototype.value=Qt,Z.prototype.at=Qs,\nZ.prototype.chain=tf,Z.prototype.commit=rf,Z.prototype.next=ef,Z.prototype.plant=of,Z.prototype.reverse=ff,Z.prototype.toJSON=Z.prototype.valueOf=Z.prototype.value=cf,Z.prototype.first=Z.prototype.head,Ul&&(Z.prototype[Ul]=uf),Z},be=de();\"function\"==typeof define&&\"object\"==typeof define.amd&&define.amd?(re._=be,define(function(){return be})):ue?((ue.exports=be)._=be,ee._=be):re._=be}).call(this);", "var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n", "import { Box, Flex, Typography } from '@strapi/design-system';\nimport { WarningCircle } from '@strapi/icons';\n\ninterface AlertProps {\n  title: string;\n  variant?: 'danger' | 'warning';\n}\n\nconst COLORS = {\n  danger: {\n    background: 'danger100',\n    borderColor: 'danger200',\n    textColor: 'danger700',\n  },\n  warning: {\n    background: 'warning100',\n    borderColor: 'warning200',\n    textColor: 'warning600',\n  },\n};\n\nexport const Alert = ({ title, variant = 'danger' }: AlertProps) => {\n  return (\n    <Box\n      padding={3}\n      background={COLORS[variant].background}\n      borderColor={COLORS[variant].borderColor}\n      hasRadius\n      width=\"100%\"\n    >\n      <Flex gap={2}>\n        <WarningCircle style={{ minWidth: '16px' }} fill={COLORS[variant].textColor} />\n        <Typography variant=\"omega\" textColor={COLORS[variant].textColor}>\n          {title}\n        </Typography>\n      </Flex>\n    </Box>\n  );\n};\n", "import { Box } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\n/**\n * Translates and fades in from a specified direction.\n */\nexport const AnimatedBox = styled(Box)<{ $direction?: 'up' | 'left' }>`\n  opacity: 0;\n  transform: ${({ $direction = 'up' }) =>\n    $direction === 'up' ? 'translateY(10px)' : 'translateX(-10px)'};\n\n  @media (prefers-reduced-motion: no-preference) {\n    animation: ${({ $direction = 'up' }) => ($direction === 'up' ? 'appearUp' : 'appearLeft')}\n      ${({ theme }) => theme.motion.timings['200']}\n      ${({ theme }) => theme.motion.easings.easeOutQuad} forwards;\n  }\n\n  @keyframes appearUp {\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes appearLeft {\n    to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n`;\n", "/* eslint-disable @typescript-eslint/no-namespace */\nimport type { Schema } from './types/schema';\n\nexport const STRAPI_CODE_MIME_TYPE = 'application/vnd.strapi.code';\nexport const STRAPI_MAX_ATTACHMENTS = 15;\nexport const STRAPI_MAX_ATTACHMENT_SIZE = 15 * 1024 * 1024; // 15MB\n\n/* -------------------------------------------------------------------------------------------------\n * APIs\n * -----------------------------------------------------------------------------------------------*/\nexport const STRAPI_AI_URL =\n  process.env.STRAPI_AI_URL?.replace(/\\/+$/, '') ?? 'https://strapi-ai.apps.strapi.io';\nexport const STRAPI_AI_CHAT_URL = `${STRAPI_AI_URL}/schemas/chat`;\nexport const STRAPI_AI_TITLE_URL = `/schemas/chat/generate-title` as const;\nexport const STRAPI_AI_FEEDBACK_URL = `/schemas/chat/feedback` as const;\nexport const STRAPI_AI_PROJECT_URL = `/schemas/chat/attachment` as const;\n\n// AI SDK will also send messages and other relevant data\nexport interface ChatBody {\n  schemas: Schema[];\n}\n", "import { useState, useEffect, ImgHTMLAttributes } from 'react';\n\nimport { Flex, Loader } from '@strapi/design-system';\nimport { CrossCircle } from '@strapi/icons';\n\nconst blobToBase64 = (blob: Blob): Promise<string | ArrayBuffer | null> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result);\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n};\n\n// Check if a string is already a data URL (base64 image)\nconst isBase64Image = (src: string): boolean => {\n  return src.startsWith('data:image/');\n};\n\ninterface Base64ImgProps extends ImgHTMLAttributes<HTMLImageElement> {\n  src: string;\n  inferSize?: boolean;\n  onLoad?: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n  onError?: (e: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n}\n\nexport const Base64Img: React.FC<Base64ImgProps> = ({\n  src,\n  alt,\n  inferSize = false,\n  onLoad: externalOnLoad,\n  onError: externalOnError,\n  ...rest\n}) => {\n  const [base64Src, setBase64Src] = useState<string | null>(null);\n  const [dimensions, setDimensions] = useState<{ width?: number; height?: number }>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const fetchAndConvert = async () => {\n      setIsLoading(true);\n      setHasError(false);\n\n      // If src is already a base64 string, use it directly\n      if (isBase64Image(src)) {\n        setBase64Src(src);\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        // TODO: Find a better way of doing this\n        // If url is from strapi-ai-staging.s3.us-east-1.amazonaws.com or strapi-ai-production.s3.us-east-1.amazonaws.com, use it directly\n        const url = new URL(src);\n        const allowedDomains = [\n          'strapi-ai-staging.s3.us-east-1.amazonaws.com',\n          'strapi-ai-production.s3.us-east-1.amazonaws.com',\n        ];\n\n        if (allowedDomains.includes(url.hostname)) {\n          setBase64Src(src);\n          setIsLoading(false);\n          return;\n        }\n      } catch (e) {\n        // If URL parsing fails, continue with the fetch attempt\n      }\n\n      try {\n        // Only fetch if it's a URL and not already a base64 string\n        const response = await fetch(src);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const blob = await response.blob();\n        const dataUrl = await blobToBase64(blob);\n        setBase64Src(dataUrl as string);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error converting image to base64:', error);\n        setHasError(true);\n        setIsLoading(false);\n      }\n    };\n\n    fetchAndConvert();\n  }, [src, externalOnError]);\n\n  const handleImageLoad = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    if (inferSize) {\n      const { naturalWidth, naturalHeight } = e.currentTarget;\n      setDimensions({ width: naturalWidth, height: naturalHeight });\n    }\n\n    if (externalOnLoad) {\n      externalOnLoad(e);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Flex direction=\"column\" gap={2} alignItems=\"center\" width=\"100%\">\n        <Loader small />\n      </Flex>\n    );\n  }\n\n  if (hasError) {\n    return (\n      <Flex direction=\"column\" gap={2} alignItems=\"center\" width=\"100%\">\n        <CrossCircle width={24} height={24} fill=\"danger600\" />\n      </Flex>\n    );\n  }\n\n  // Build props for the img element\n  const imgProps: ImgHTMLAttributes<HTMLImageElement> = {\n    src: base64Src || '',\n    alt,\n    onLoad: handleImageLoad,\n    ...rest,\n  };\n\n  // If inferSize is enabled and width/height weren't explicitly provided,\n  // merge the inferred dimensions into the props once available.\n  if (inferSize && !rest.width && !rest.height && dimensions.width && dimensions.height) {\n    imgProps.width = dimensions.width;\n    imgProps.height = dimensions.height;\n  }\n\n  return base64Src ? <img {...imgProps} /> : null;\n};\n", "import { keyframes } from 'styled-components';\n\nexport const ANIMATIONS = {\n  fadeIn: keyframes`\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  `,\n\n  scaleIn: keyframes`\n    from {\n      opacity: 0;\n      transform: scale(0.7);\n    }\n    to {\n      opacity: 1;\n      transform: scale(1);\n    }\n  `,\n\n  slideUpIn: keyframes`\n    from {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  `,\n\n  slideUpOut: keyframes`\n    from {\n      opacity: 1;\n      transform: translateY(0);\n    }\n    to {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n  `,\n\n  slideDownIn: keyframes`\n    from {\n      opacity: 0;\n      transform: translateY(-10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  `,\n\n  slideDownOut: keyframes`\n    from {\n      opacity: 1;\n      transform: translateY(0);\n    }\n    to {\n      opacity: 0;\n      transform: translateY(-10px);\n    }\n  `,\n};\n", "import { useEffect, useRef, createContext, useContext, useState, ReactNode } from 'react';\n\nimport { createPortal } from 'react-dom';\nimport { styled } from 'styled-components';\n\nimport { ANIMATIONS } from './animations';\nimport { Base64Img } from './Base64Image';\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\ninterface FullScreenImageContextType {\n  isOpen: boolean;\n  open: () => void;\n  close: () => void;\n  src: string;\n  alt: string;\n}\n\nconst FullScreenImageContext = createContext<FullScreenImageContextType | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Types\n * -----------------------------------------------------------------------------------------------*/\n\ninterface FullScreenImageProps {\n  src: string;\n  alt: string;\n  onClose?: () => void;\n}\n\ninterface FullScreenImageRootProps extends FullScreenImageProps {\n  children: ReactNode;\n  defaultOpen?: boolean;\n}\n\ninterface FullScreenImageTriggerProps {\n  children: ReactNode;\n  asChild?: boolean;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Styles\n * -----------------------------------------------------------------------------------------------*/\nexport const setOpacity = (hex: string, alpha: number) =>\n  `${hex}${Math.floor(alpha * 255)\n    .toString(16)\n    .padStart(2, '0')}`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 500;\n  pointer-events: auto; /* Explicitly enable pointer events */\n  background: ${(props) => setOpacity(props.theme.colors.neutral800, 0.2)};\n`;\n\nconst ImageWrapper = styled.div`\n  max-width: 80vw;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: auto; /* Explicitly enable pointer events */\n  position: relative;\n  animation: ${ANIMATIONS.scaleIn} 0.3s ease;\n`;\n\nconst StyledImg = styled(Base64Img)`\n  max-width: 100%;\n  max-height: 90vh;\n  object-fit: contain;\n  pointer-events: auto; /* Explicitly enable pointer events */\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * Modal\n * -----------------------------------------------------------------------------------------------*/\n\n// Use the existing FullScreenImage as our modal component\nconst ImageModal = ({ src, alt, onClose }: FullScreenImageProps) => {\n  const overlayRef = useRef<HTMLDivElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Close on ESC key press\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        // Stop propagation to prevent closing parent modals\n        e.preventDefault();\n        e.stopPropagation();\n        onClose?.();\n\n        // The next 3 lines are critical: they completely stop the event\n        e.stopImmediatePropagation();\n        e.cancelBubble = true; // For older browsers\n        return false;\n      }\n    };\n\n    // Use capture phase to intercept event before it reaches other components\n    window.addEventListener('keydown', handleKeyDown, true);\n    return () => window.removeEventListener('keydown', handleKeyDown, true);\n  }, [onClose]);\n\n  // Setup click handlers\n  useEffect(() => {\n    const handleOverlayClick = (e: MouseEvent) => {\n      // Only close if clicking directly on the overlay (not its children)\n      if (e.target === overlayRef.current) {\n        e.preventDefault();\n        e.stopPropagation();\n        onClose?.();\n      }\n    };\n\n    const handleWrapperClick = (e: MouseEvent) => {\n      // Stop propagation for clicks on the image wrapper\n      e.stopPropagation();\n    };\n\n    const overlay = overlayRef.current;\n    const wrapper = wrapperRef.current;\n\n    if (overlay) {\n      overlay.addEventListener('click', handleOverlayClick);\n    }\n\n    if (wrapper) {\n      wrapper.addEventListener('click', handleWrapperClick);\n    }\n\n    return () => {\n      if (overlay) {\n        overlay.removeEventListener('click', handleOverlayClick);\n      }\n\n      if (wrapper) {\n        wrapper.removeEventListener('click', handleWrapperClick);\n      }\n    };\n  }, [onClose]);\n\n  // Using createPortal to render directly at document body level\n  return createPortal(\n    <Overlay ref={overlayRef}>\n      <ImageWrapper ref={wrapperRef}>\n        <StyledImg src={src} alt={alt} />\n      </ImageWrapper>\n    </Overlay>,\n    document.body\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Root\n * -----------------------------------------------------------------------------------------------*/\n\n// Root component that provides context\nconst Root = ({ children, src, alt, onClose, defaultOpen = false }: FullScreenImageRootProps) => {\n  const [isOpen, setIsOpen] = useState(defaultOpen);\n\n  const open = () => setIsOpen(true);\n  const close = () => {\n    setIsOpen(false);\n    onClose?.();\n  };\n\n  return (\n    <FullScreenImageContext.Provider value={{ isOpen, open, close, src, alt }}>\n      {children}\n      {isOpen && <ImageModal src={src} alt={alt} onClose={close} />}\n    </FullScreenImageContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Hooks\n * -----------------------------------------------------------------------------------------------*/\n\n// Hook to use the context\nconst useFullScreenImage = () => {\n  const context = useContext(FullScreenImageContext);\n  if (!context) {\n    throw new Error('useFullScreenImage must be used within a FullScreenImage.Root');\n  }\n  return context;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Trigger\n * -----------------------------------------------------------------------------------------------*/\n\n// Trigger component that opens the full screen image\nconst Trigger = ({ children, asChild = false }: FullScreenImageTriggerProps) => {\n  const { open } = useFullScreenImage();\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    open();\n  };\n\n  if (asChild) {\n    return (\n      <div onClick={handleClick} style={{ cursor: 'pointer', display: 'contents' }}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div onClick={handleClick} style={{ cursor: 'pointer' }}>\n      {children}\n    </div>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Export\n * -----------------------------------------------------------------------------------------------*/\n\nexport const FullScreenImage = {\n  Root,\n  Trigger,\n};\n", "import { ReactNode, createContext, useContext } from 'react';\n\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { Trash, WarningCircle } from '@strapi/icons';\nimport { styled } from 'styled-components';\n\n/* -------------------------------------------------------------------------------------------------\n * Attachment Context\n * -----------------------------------------------------------------------------------------------*/\n\ninterface AttachmentContextValue {\n  error?: string | null;\n}\n\nconst AttachmentContext = createContext<AttachmentContextValue>({ error: null });\n\nconst useAttachmentContext = () => useContext(AttachmentContext);\n\n/* -------------------------------------------------------------------------------------------------\n * Attachment Root\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface AttachmentRootProps {\n  children: ReactNode;\n  error?: string | null;\n  minWidth?: string;\n  maxWidth?: string;\n}\n\nconst StyledRoot = styled(Box)`\n  &:hover {\n    cursor: pointer;\n    background: ${({ theme }) => theme.colors.neutral100};\n  }\n`;\n\n// TODO: How to make this a button instead?\nconst Root = ({ children, error = null, minWidth, maxWidth }: AttachmentRootProps) => {\n  return (\n    <AttachmentContext.Provider value={{ error }}>\n      <Flex\n        direction=\"column\"\n        alignItems=\"flex-start\"\n        gap={2}\n        minWidth={minWidth}\n        maxWidth={maxWidth}\n      >\n        <StyledRoot\n          background=\"neutral0\"\n          hasRadius\n          borderColor=\"neutral200\"\n          borderStyle=\"solid\"\n          borderWidth=\"1px\"\n          padding={2}\n          width=\"100%\"\n        >\n          <Flex gap={2}>{children}</Flex>\n        </StyledRoot>\n        {error && (\n          <Typography variant=\"pi\" textColor=\"danger500\">\n            {error}\n          </Typography>\n        )}\n      </Flex>\n    </AttachmentContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Attachment Preview\n * -----------------------------------------------------------------------------------------------*/\n\ninterface AttachmentPreviewProps {\n  children: ReactNode;\n}\n\nconst Preview = ({ children }: AttachmentPreviewProps) => {\n  const { error } = useAttachmentContext();\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\">\n      {error ? <WarningCircle fill=\"danger500\" /> : children}\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Attachment Title\n * -----------------------------------------------------------------------------------------------*/\n\ninterface AttachmentTitleProps {\n  children: ReactNode;\n}\n\nconst Title = ({ children }: AttachmentTitleProps) => {\n  return (\n    <Box grow={1}>\n      <Typography variant=\"omega\" ellipsis style={{ userSelect: 'none', maxWidth: '100px' }}>\n        {children}\n      </Typography>\n    </Box>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Attachment Remove\n * -----------------------------------------------------------------------------------------------*/\n\ninterface AttachmentRemoveProps {\n  onClick: () => void;\n}\n\nconst Remove = ({ onClick }: AttachmentRemoveProps) => {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" shrink={0} onClick={onClick}>\n      <Trash fill=\"neutral500\" />\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Attachment Compound\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Attachment = {\n  Root,\n  Preview,\n  Title,\n  Remove,\n};\n\nexport { useAttachmentContext };\n", "import { Loader } from '@strapi/design-system';\nimport { Folder } from '@strapi/icons';\nimport { styled } from 'styled-components';\n\nimport { STRAPI_CODE_MIME_TYPE } from '../../lib/constants';\nimport { Attachment as TAttachment } from '../../lib/types/attachments';\nimport { Base64Img } from '../Base64Image';\nimport { FullScreenImage } from '../FullScreenImage';\n\nimport { Attachment, AttachmentRootProps } from './components/Attachment';\n\ninterface AttachmentPreviewProps {\n  attachment: TAttachment;\n  loading?: boolean;\n  onRemove?: () => void;\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Image\n * -----------------------------------------------------------------------------------------------*/\n\nconst ImageThumbnail = styled(Base64Img)`\n  width: 24px;\n  height: 24px;\n  object-fit: cover;\n  border-radius: ${({ theme }) => theme.borderRadius};\n`;\n\nconst ImageAttachment = ({\n  attachment,\n  onRemove,\n  ...props\n}: AttachmentPreviewProps & Omit<AttachmentRootProps, 'children'>) => {\n  return (\n    <FullScreenImage.Root src={attachment.url} alt={attachment.filename || 'image'}>\n      <FullScreenImage.Trigger asChild>\n        <Attachment.Root {...props}>\n          <Attachment.Preview>\n            {attachment.status === 'loading' ? (\n              <Loader small />\n            ) : (\n              <ImageThumbnail src={attachment.url} alt={attachment.filename} />\n            )}\n          </Attachment.Preview>\n          <Attachment.Title>{attachment.filename || 'unknown'}</Attachment.Title>\n          {onRemove && <Attachment.Remove onClick={onRemove} />}\n        </Attachment.Root>\n      </FullScreenImage.Trigger>\n    </FullScreenImage.Root>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Code\n * -----------------------------------------------------------------------------------------------*/\n\nconst CodeAttachment = ({\n  attachment,\n  onRemove,\n  ...props\n}: AttachmentPreviewProps & Omit<AttachmentRootProps, 'children'>) => {\n  return (\n    <Attachment.Root {...props}>\n      <Attachment.Preview>\n        {attachment.status === 'loading' ? <Loader small /> : <Folder height={24} width={24} />}\n      </Attachment.Preview>\n      <Attachment.Title>{attachment.filename || 'unknown'}</Attachment.Title>\n      {onRemove && <Attachment.Remove onClick={onRemove} />}\n    </Attachment.Root>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Export\n * -----------------------------------------------------------------------------------------------*/\n\nexport const AttachmentPreview = ({\n  attachment,\n  onRemove,\n  ...props\n}: AttachmentPreviewProps & Omit<AttachmentRootProps, 'children'>) => {\n  if (attachment.mediaType?.startsWith('image/')) {\n    return <ImageAttachment attachment={attachment} onRemove={onRemove} {...props} />;\n  }\n\n  if (attachment.mediaType === STRAPI_CODE_MIME_TYPE) {\n    return <CodeAttachment attachment={attachment} onRemove={onRemove} {...props} />;\n  }\n\n  return null;\n};\n", "var _excluded = [\"children\"],\n    _excluded2 = [\"open\"],\n    _excluded3 = [\"refKey\", \"role\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"onDragEnter\", \"onDragOver\", \"onDragLeave\", \"onDrop\"],\n    _excluded4 = [\"refKey\", \"onChange\", \"onClick\"];\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint prefer-template: 0 */\nimport React, { forwardRef, Fragment, useCallback, useEffect, useImperativeHandle, useMemo, useReducer, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { fromEvent } from \"file-selector\";\nimport { acceptPropAsAcceptAttr, allFilesAccepted, composeEventHandlers, fileAccepted, fileMatchSize, canUseFileSystemAccessAPI, isAbort, isEvtWithFiles, isIeOrEdge, isPropagationStopped, isSecurityError, onDocumentDragOver, pickerOptionsFromAccept, TOO_MANY_FILES_REJECTION } from \"./utils/index.js\";\n/**\n * Convenience wrapper component for the `useDropzone` hook\n *\n * ```jsx\n * <Dropzone>\n *   {({getRootProps, getInputProps}) => (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag 'n' drop some files here, or click to select files</p>\n *     </div>\n *   )}\n * </Dropzone>\n * ```\n */\n\nvar Dropzone = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      params = _objectWithoutProperties(_ref, _excluded);\n\n  var _useDropzone = useDropzone(params),\n      open = _useDropzone.open,\n      props = _objectWithoutProperties(_useDropzone, _excluded2);\n\n  useImperativeHandle(ref, function () {\n    return {\n      open: open\n    };\n  }, [open]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element\n\n  return /*#__PURE__*/React.createElement(Fragment, null, children(_objectSpread(_objectSpread({}, props), {}, {\n    open: open\n  })));\n});\nDropzone.displayName = \"Dropzone\"; // Add default props for react-docgen\n\nvar defaultProps = {\n  disabled: false,\n  getFilesFromEvent: fromEvent,\n  maxSize: Infinity,\n  minSize: 0,\n  multiple: true,\n  maxFiles: 0,\n  preventDropOnDocument: true,\n  noClick: false,\n  noKeyboard: false,\n  noDrag: false,\n  noDragEventsBubbling: false,\n  validator: null,\n  useFsAccessApi: false,\n  autoFocus: false\n};\nDropzone.defaultProps = defaultProps;\nDropzone.propTypes = {\n  /**\n   * Render function that exposes the dropzone state and prop getter fns\n   *\n   * @param {object} params\n   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render\n   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render\n   * @param {Function} params.open Open the native file selection dialog\n   * @param {boolean} params.isFocused Dropzone area is in focus\n   * @param {boolean} params.isFileDialogActive File dialog is opened\n   * @param {boolean} params.isDragActive Active drag is in progress\n   * @param {boolean} params.isDragAccept Dragged files are accepted\n   * @param {boolean} params.isDragReject Some dragged files are rejected\n   * @param {File[]} params.acceptedFiles Accepted files\n   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected\n   */\n  children: PropTypes.func,\n\n  /**\n   * Set accepted file types.\n   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.\n   * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).\n   */\n  accept: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\n\n  /**\n   * Allow drag 'n' drop (or selection from the file dialog) of multiple files\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * If false, allow dropped items to take over the current browser window\n   */\n  preventDropOnDocument: PropTypes.bool,\n\n  /**\n   * If true, disables click to open the native file selection dialog\n   */\n  noClick: PropTypes.bool,\n\n  /**\n   * If true, disables SPACE/ENTER to open the native file selection dialog.\n   * Note that it also stops tracking the focus state.\n   */\n  noKeyboard: PropTypes.bool,\n\n  /**\n   * If true, disables drag 'n' drop\n   */\n  noDrag: PropTypes.bool,\n\n  /**\n   * If true, stops drag event propagation to parents\n   */\n  noDragEventsBubbling: PropTypes.bool,\n\n  /**\n   * Minimum file size (in bytes)\n   */\n  minSize: PropTypes.number,\n\n  /**\n   * Maximum file size (in bytes)\n   */\n  maxSize: PropTypes.number,\n\n  /**\n   * Maximum accepted number of files\n   * The default value is 0 which means there is no limitation to how many files are accepted.\n   */\n  maxFiles: PropTypes.number,\n\n  /**\n   * Enable/disable the dropzone\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Use this to provide a custom file aggregator\n   *\n   * @param {(DragEvent|Event|Array<FileSystemFileHandle>)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  getFilesFromEvent: PropTypes.func,\n\n  /**\n   * Cb for when closing the file dialog with no selection\n   */\n  onFileDialogCancel: PropTypes.func,\n\n  /**\n   * Cb for when opening the file dialog\n   */\n  onFileDialogOpen: PropTypes.func,\n\n  /**\n   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n   * to open the file picker instead of using an `<input type=\"file\">` click event.\n   */\n  useFsAccessApi: PropTypes.bool,\n\n  /**\n   * Set to true to focus the root element on render\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Cb for when the `dragenter` event occurs.\n   *\n   * @param {DragEvent} event\n   */\n  onDragEnter: PropTypes.func,\n\n  /**\n   * Cb for when the `dragleave` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragLeave: PropTypes.func,\n\n  /**\n   * Cb for when the `dragover` event occurs\n   *\n   * @param {DragEvent} event\n   */\n  onDragOver: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n   *\n   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.\n   * If `multiple` is set to false and additional files are dropped,\n   * all files besides the first will be rejected.\n   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n   *\n   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n   *\n   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n   *\n   * ```js\n   * function onDrop(acceptedFiles) {\n   *   const req = request.post('/upload')\n   *   acceptedFiles.forEach(file => {\n   *     req.attach(file.name, file)\n   *   })\n   *   req.end(callback)\n   * }\n   * ```\n   *\n   * @param {File[]} acceptedFiles\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n   */\n  onDrop: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are accepted, this callback is not invoked.\n   *\n   * @param {File[]} files\n   * @param {(DragEvent|Event)} event\n   */\n  onDropAccepted: PropTypes.func,\n\n  /**\n   * Cb for when the `drop` event occurs.\n   * Note that if no files are rejected, this callback is not invoked.\n   *\n   * @param {FileRejection[]} fileRejections\n   * @param {(DragEvent|Event)} event\n   */\n  onDropRejected: PropTypes.func,\n\n  /**\n   * Cb for when there's some error from any of the promises.\n   *\n   * @param {Error} error\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Custom validation function. It must return null if there's no errors.\n   * @param {File} file\n   * @returns {FileError|FileError[]|null}\n   */\n  validator: PropTypes.func\n};\nexport default Dropzone;\n/**\n * A function that is invoked for the `dragenter`,\n * `dragover` and `dragleave` events.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dragCb\n * @param {DragEvent} event\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are not files (such as link, text, etc.).\n *\n * @callback dropCb\n * @param {File[]} acceptedFiles List of accepted files\n * @param {FileRejection[]} fileRejections List of rejected files and why they were rejected\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n * It is not invoked if the items are files (such as link, text, etc.).\n *\n * @callback dropAcceptedCb\n * @param {File[]} files List of accepted files that meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is invoked for the `drop` or input change event.\n *\n * @callback dropRejectedCb\n * @param {File[]} files List of rejected files that do not meet the given criteria\n * (`accept`, `multiple`, `minSize`, `maxSize`)\n * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)\n */\n\n/**\n * A function that is used aggregate files,\n * in a asynchronous fashion, from drag or input change events.\n *\n * @callback getFilesFromEvent\n * @param {(DragEvent|Event|Array<FileSystemFileHandle>)} event A drag event or input change event (if files were selected via the file dialog)\n * @returns {(File[]|Promise<File[]>)}\n */\n\n/**\n * An object with the current dropzone state.\n *\n * @typedef {object} DropzoneState\n * @property {boolean} isFocused Dropzone area is in focus\n * @property {boolean} isFileDialogActive File dialog is opened\n * @property {boolean} isDragActive Active drag is in progress\n * @property {boolean} isDragAccept Dragged files are accepted\n * @property {boolean} isDragReject Some dragged files are rejected\n * @property {File[]} acceptedFiles Accepted files\n * @property {FileRejection[]} fileRejections Rejected files and why they were rejected\n */\n\n/**\n * An object with the dropzone methods.\n *\n * @typedef {object} DropzoneMethods\n * @property {Function} getRootProps Returns the props you should apply to the root drop container you render\n * @property {Function} getInputProps Returns the props you should apply to hidden file input you render\n * @property {Function} open Open the native file selection dialog\n */\n\nvar initialState = {\n  isFocused: false,\n  isFileDialogActive: false,\n  isDragActive: false,\n  isDragAccept: false,\n  isDragReject: false,\n  acceptedFiles: [],\n  fileRejections: []\n};\n/**\n * A React hook that creates a drag 'n' drop area.\n *\n * ```jsx\n * function MyDropzone(props) {\n *   const {getRootProps, getInputProps} = useDropzone({\n *     onDrop: acceptedFiles => {\n *       // do something with the File objects, e.g. upload to some server\n *     }\n *   });\n *   return (\n *     <div {...getRootProps()}>\n *       <input {...getInputProps()} />\n *       <p>Drag and drop some files here, or click to select files</p>\n *     </div>\n *   )\n * }\n * ```\n *\n * @function useDropzone\n *\n * @param {object} props\n * @param {import(\"./utils\").AcceptProp} [props.accept] Set accepted file types.\n * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.\n * Keep in mind that mime type determination is not reliable across platforms. CSV files,\n * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under\n * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).\n * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files\n * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window\n * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog\n * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.\n * Note that it also stops tracking the focus state.\n * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop\n * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents\n * @param {number} [props.minSize=0] Minimum file size (in bytes)\n * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)\n * @param {boolean} [props.disabled=false] Enable/disable the dropzone\n * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator\n * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection\n * @param {boolean} [props.useFsAccessApi] Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\n * to open the file picker instead of using an `<input type=\"file\">` click event.\n * @param {boolean} autoFocus Set to true to auto focus the root element.\n * @param {Function} [props.onFileDialogOpen] Cb for when opening the file dialog\n * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.\n * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs\n * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs\n * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.\n * Note that this callback is invoked after the `getFilesFromEvent` callback is done.\n *\n * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.\n * `accept` must be an object with keys as a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) and the value an array of file extensions (optional).\n * If `multiple` is set to false and additional files are dropped,\n * all files besides the first will be rejected.\n * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.\n *\n * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.\n * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.\n *\n * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.\n * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:\n *\n * ```js\n * function onDrop(acceptedFiles) {\n *   const req = request.post('/upload')\n *   acceptedFiles.forEach(file => {\n *     req.attach(file.name, file)\n *   })\n *   req.end(callback)\n * }\n * ```\n * @param {dropAcceptedCb} [props.onDropAccepted]\n * @param {dropRejectedCb} [props.onDropRejected]\n * @param {(error: Error) => void} [props.onError]\n *\n * @returns {DropzoneState & DropzoneMethods}\n */\n\nexport function useDropzone() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _defaultProps$props = _objectSpread(_objectSpread({}, defaultProps), props),\n      accept = _defaultProps$props.accept,\n      disabled = _defaultProps$props.disabled,\n      getFilesFromEvent = _defaultProps$props.getFilesFromEvent,\n      maxSize = _defaultProps$props.maxSize,\n      minSize = _defaultProps$props.minSize,\n      multiple = _defaultProps$props.multiple,\n      maxFiles = _defaultProps$props.maxFiles,\n      onDragEnter = _defaultProps$props.onDragEnter,\n      onDragLeave = _defaultProps$props.onDragLeave,\n      onDragOver = _defaultProps$props.onDragOver,\n      onDrop = _defaultProps$props.onDrop,\n      onDropAccepted = _defaultProps$props.onDropAccepted,\n      onDropRejected = _defaultProps$props.onDropRejected,\n      onFileDialogCancel = _defaultProps$props.onFileDialogCancel,\n      onFileDialogOpen = _defaultProps$props.onFileDialogOpen,\n      useFsAccessApi = _defaultProps$props.useFsAccessApi,\n      autoFocus = _defaultProps$props.autoFocus,\n      preventDropOnDocument = _defaultProps$props.preventDropOnDocument,\n      noClick = _defaultProps$props.noClick,\n      noKeyboard = _defaultProps$props.noKeyboard,\n      noDrag = _defaultProps$props.noDrag,\n      noDragEventsBubbling = _defaultProps$props.noDragEventsBubbling,\n      onError = _defaultProps$props.onError,\n      validator = _defaultProps$props.validator;\n\n  var acceptAttr = useMemo(function () {\n    return acceptPropAsAcceptAttr(accept);\n  }, [accept]);\n  var pickerTypes = useMemo(function () {\n    return pickerOptionsFromAccept(accept);\n  }, [accept]);\n  var onFileDialogOpenCb = useMemo(function () {\n    return typeof onFileDialogOpen === \"function\" ? onFileDialogOpen : noop;\n  }, [onFileDialogOpen]);\n  var onFileDialogCancelCb = useMemo(function () {\n    return typeof onFileDialogCancel === \"function\" ? onFileDialogCancel : noop;\n  }, [onFileDialogCancel]);\n  /**\n   * @constant\n   * @type {React.MutableRefObject<HTMLElement>}\n   */\n\n  var rootRef = useRef(null);\n  var inputRef = useRef(null);\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var isFocused = state.isFocused,\n      isFileDialogActive = state.isFileDialogActive;\n  var fsAccessApiWorksRef = useRef(typeof window !== \"undefined\" && window.isSecureContext && useFsAccessApi && canUseFileSystemAccessAPI()); // Update file dialog active state when the window is focused on\n\n  var onWindowFocus = function onWindowFocus() {\n    // Execute the timeout only if the file dialog is opened in the browser\n    if (!fsAccessApiWorksRef.current && isFileDialogActive) {\n      setTimeout(function () {\n        if (inputRef.current) {\n          var files = inputRef.current.files;\n\n          if (!files.length) {\n            dispatch({\n              type: \"closeDialog\"\n            });\n            onFileDialogCancelCb();\n          }\n        }\n      }, 300);\n    }\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"focus\", onWindowFocus, false);\n    return function () {\n      window.removeEventListener(\"focus\", onWindowFocus, false);\n    };\n  }, [inputRef, isFileDialogActive, onFileDialogCancelCb, fsAccessApiWorksRef]);\n  var dragTargetsRef = useRef([]);\n\n  var onDocumentDrop = function onDocumentDrop(event) {\n    if (rootRef.current && rootRef.current.contains(event.target)) {\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\n      return;\n    }\n\n    event.preventDefault();\n    dragTargetsRef.current = [];\n  };\n\n  useEffect(function () {\n    if (preventDropOnDocument) {\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\n      document.addEventListener(\"drop\", onDocumentDrop, false);\n    }\n\n    return function () {\n      if (preventDropOnDocument) {\n        document.removeEventListener(\"dragover\", onDocumentDragOver);\n        document.removeEventListener(\"drop\", onDocumentDrop);\n      }\n    };\n  }, [rootRef, preventDropOnDocument]); // Auto focus the root when autoFocus is true\n\n  useEffect(function () {\n    if (!disabled && autoFocus && rootRef.current) {\n      rootRef.current.focus();\n    }\n\n    return function () {};\n  }, [rootRef, autoFocus, disabled]);\n  var onErrCb = useCallback(function (e) {\n    if (onError) {\n      onError(e);\n    } else {\n      // Let the user know something's gone wrong if they haven't provided the onError cb.\n      console.error(e);\n    }\n  }, [onError]);\n  var onDragEnterCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    dragTargetsRef.current = [].concat(_toConsumableArray(dragTargetsRef.current), [event.target]);\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        var fileCount = files.length;\n        var isDragAccept = fileCount > 0 && allFilesAccepted({\n          files: files,\n          accept: acceptAttr,\n          minSize: minSize,\n          maxSize: maxSize,\n          multiple: multiple,\n          maxFiles: maxFiles,\n          validator: validator\n        });\n        var isDragReject = fileCount > 0 && !isDragAccept;\n        dispatch({\n          isDragAccept: isDragAccept,\n          isDragReject: isDragReject,\n          isDragActive: true,\n          type: \"setDraggedFiles\"\n        });\n\n        if (onDragEnter) {\n          onDragEnter(event);\n        }\n      }).catch(function (e) {\n        return onErrCb(e);\n      });\n    }\n  }, [getFilesFromEvent, onDragEnter, onErrCb, noDragEventsBubbling, acceptAttr, minSize, maxSize, multiple, maxFiles, validator]);\n  var onDragOverCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event);\n    var hasFiles = isEvtWithFiles(event);\n\n    if (hasFiles && event.dataTransfer) {\n      try {\n        event.dataTransfer.dropEffect = \"copy\";\n      } catch (_unused) {}\n      /* eslint-disable-line no-empty */\n\n    }\n\n    if (hasFiles && onDragOver) {\n      onDragOver(event);\n    }\n\n    return false;\n  }, [onDragOver, noDragEventsBubbling]);\n  var onDragLeaveCb = useCallback(function (event) {\n    event.preventDefault();\n    event.persist();\n    stopPropagation(event); // Only deactivate once the dropzone and all children have been left\n\n    var targets = dragTargetsRef.current.filter(function (target) {\n      return rootRef.current && rootRef.current.contains(target);\n    }); // Make sure to remove a target present multiple times only once\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\n\n    var targetIdx = targets.indexOf(event.target);\n\n    if (targetIdx !== -1) {\n      targets.splice(targetIdx, 1);\n    }\n\n    dragTargetsRef.current = targets;\n\n    if (targets.length > 0) {\n      return;\n    }\n\n    dispatch({\n      type: \"setDraggedFiles\",\n      isDragActive: false,\n      isDragAccept: false,\n      isDragReject: false\n    });\n\n    if (isEvtWithFiles(event) && onDragLeave) {\n      onDragLeave(event);\n    }\n  }, [rootRef, onDragLeave, noDragEventsBubbling]);\n  var setFiles = useCallback(function (files, event) {\n    var acceptedFiles = [];\n    var fileRejections = [];\n    files.forEach(function (file) {\n      var _fileAccepted = fileAccepted(file, acceptAttr),\n          _fileAccepted2 = _slicedToArray(_fileAccepted, 2),\n          accepted = _fileAccepted2[0],\n          acceptError = _fileAccepted2[1];\n\n      var _fileMatchSize = fileMatchSize(file, minSize, maxSize),\n          _fileMatchSize2 = _slicedToArray(_fileMatchSize, 2),\n          sizeMatch = _fileMatchSize2[0],\n          sizeError = _fileMatchSize2[1];\n\n      var customErrors = validator ? validator(file) : null;\n\n      if (accepted && sizeMatch && !customErrors) {\n        acceptedFiles.push(file);\n      } else {\n        var errors = [acceptError, sizeError];\n\n        if (customErrors) {\n          errors = errors.concat(customErrors);\n        }\n\n        fileRejections.push({\n          file: file,\n          errors: errors.filter(function (e) {\n            return e;\n          })\n        });\n      }\n    });\n\n    if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {\n      // Reject everything and empty accepted files\n      acceptedFiles.forEach(function (file) {\n        fileRejections.push({\n          file: file,\n          errors: [TOO_MANY_FILES_REJECTION]\n        });\n      });\n      acceptedFiles.splice(0);\n    }\n\n    dispatch({\n      acceptedFiles: acceptedFiles,\n      fileRejections: fileRejections,\n      isDragReject: fileRejections.length > 0,\n      type: \"setFiles\"\n    });\n\n    if (onDrop) {\n      onDrop(acceptedFiles, fileRejections, event);\n    }\n\n    if (fileRejections.length > 0 && onDropRejected) {\n      onDropRejected(fileRejections, event);\n    }\n\n    if (acceptedFiles.length > 0 && onDropAccepted) {\n      onDropAccepted(acceptedFiles, event);\n    }\n  }, [dispatch, multiple, acceptAttr, minSize, maxSize, maxFiles, onDrop, onDropAccepted, onDropRejected, validator]);\n  var onDropCb = useCallback(function (event) {\n    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done\n\n    event.persist();\n    stopPropagation(event);\n    dragTargetsRef.current = [];\n\n    if (isEvtWithFiles(event)) {\n      Promise.resolve(getFilesFromEvent(event)).then(function (files) {\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\n          return;\n        }\n\n        setFiles(files, event);\n      }).catch(function (e) {\n        return onErrCb(e);\n      });\n    }\n\n    dispatch({\n      type: \"reset\"\n    });\n  }, [getFilesFromEvent, setFiles, onErrCb, noDragEventsBubbling]); // Fn for opening the file dialog programmatically\n\n  var openFileDialog = useCallback(function () {\n    // No point to use FS access APIs if context is not secure\n    // https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts#feature_detection\n    if (fsAccessApiWorksRef.current) {\n      dispatch({\n        type: \"openDialog\"\n      });\n      onFileDialogOpenCb(); // https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\n\n      var opts = {\n        multiple: multiple,\n        types: pickerTypes\n      };\n      window.showOpenFilePicker(opts).then(function (handles) {\n        return getFilesFromEvent(handles);\n      }).then(function (files) {\n        setFiles(files, null);\n        dispatch({\n          type: \"closeDialog\"\n        });\n      }).catch(function (e) {\n        // AbortError means the user canceled\n        if (isAbort(e)) {\n          onFileDialogCancelCb(e);\n          dispatch({\n            type: \"closeDialog\"\n          });\n        } else if (isSecurityError(e)) {\n          fsAccessApiWorksRef.current = false; // CORS, so cannot use this API\n          // Try using the input\n\n          if (inputRef.current) {\n            inputRef.current.value = null;\n            inputRef.current.click();\n          } else {\n            onErrCb(new Error(\"Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided.\"));\n          }\n        } else {\n          onErrCb(e);\n        }\n      });\n      return;\n    }\n\n    if (inputRef.current) {\n      dispatch({\n        type: \"openDialog\"\n      });\n      onFileDialogOpenCb();\n      inputRef.current.value = null;\n      inputRef.current.click();\n    }\n  }, [dispatch, onFileDialogOpenCb, onFileDialogCancelCb, useFsAccessApi, setFiles, onErrCb, pickerTypes, multiple]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\n\n  var onKeyDownCb = useCallback(function (event) {\n    // Ignore keyboard events bubbling up the DOM tree\n    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {\n      return;\n    }\n\n    if (event.key === \" \" || event.key === \"Enter\" || event.keyCode === 32 || event.keyCode === 13) {\n      event.preventDefault();\n      openFileDialog();\n    }\n  }, [rootRef, openFileDialog]); // Update focus state for the dropzone\n\n  var onFocusCb = useCallback(function () {\n    dispatch({\n      type: \"focus\"\n    });\n  }, []);\n  var onBlurCb = useCallback(function () {\n    dispatch({\n      type: \"blur\"\n    });\n  }, []); // Cb to open the file dialog when click occurs on the dropzone\n\n  var onClickCb = useCallback(function () {\n    if (noClick) {\n      return;\n    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\n    // to ensure React can handle state changes\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\n\n\n    if (isIeOrEdge()) {\n      setTimeout(openFileDialog, 0);\n    } else {\n      openFileDialog();\n    }\n  }, [noClick, openFileDialog]);\n\n  var composeHandler = function composeHandler(fn) {\n    return disabled ? null : fn;\n  };\n\n  var composeKeyboardHandler = function composeKeyboardHandler(fn) {\n    return noKeyboard ? null : composeHandler(fn);\n  };\n\n  var composeDragHandler = function composeDragHandler(fn) {\n    return noDrag ? null : composeHandler(fn);\n  };\n\n  var stopPropagation = function stopPropagation(event) {\n    if (noDragEventsBubbling) {\n      event.stopPropagation();\n    }\n  };\n\n  var getRootProps = useMemo(function () {\n    return function () {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref2$refKey = _ref2.refKey,\n          refKey = _ref2$refKey === void 0 ? \"ref\" : _ref2$refKey,\n          role = _ref2.role,\n          onKeyDown = _ref2.onKeyDown,\n          onFocus = _ref2.onFocus,\n          onBlur = _ref2.onBlur,\n          onClick = _ref2.onClick,\n          onDragEnter = _ref2.onDragEnter,\n          onDragOver = _ref2.onDragOver,\n          onDragLeave = _ref2.onDragLeave,\n          onDrop = _ref2.onDrop,\n          rest = _objectWithoutProperties(_ref2, _excluded3);\n\n      return _objectSpread(_objectSpread(_defineProperty({\n        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),\n        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),\n        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),\n        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),\n        onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),\n        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),\n        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb)),\n        role: typeof role === \"string\" && role !== \"\" ? role : \"presentation\"\n      }, refKey, rootRef), !disabled && !noKeyboard ? {\n        tabIndex: 0\n      } : {}), rest);\n    };\n  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);\n  var onInputElementClick = useCallback(function (event) {\n    event.stopPropagation();\n  }, []);\n  var getInputProps = useMemo(function () {\n    return function () {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$refKey = _ref3.refKey,\n          refKey = _ref3$refKey === void 0 ? \"ref\" : _ref3$refKey,\n          onChange = _ref3.onChange,\n          onClick = _ref3.onClick,\n          rest = _objectWithoutProperties(_ref3, _excluded4);\n\n      var inputProps = _defineProperty({\n        accept: acceptAttr,\n        multiple: multiple,\n        type: \"file\",\n        style: {\n          border: 0,\n          clip: \"rect(0, 0, 0, 0)\",\n          clipPath: \"inset(50%)\",\n          height: \"1px\",\n          margin: \"0 -1px -1px 0\",\n          overflow: \"hidden\",\n          padding: 0,\n          position: \"absolute\",\n          width: \"1px\",\n          whiteSpace: \"nowrap\"\n        },\n        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),\n        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),\n        tabIndex: -1\n      }, refKey, inputRef);\n\n      return _objectSpread(_objectSpread({}, inputProps), rest);\n    };\n  }, [inputRef, accept, multiple, onDropCb, disabled]);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isFocused: isFocused && !disabled,\n    getRootProps: getRootProps,\n    getInputProps: getInputProps,\n    rootRef: rootRef,\n    inputRef: inputRef,\n    open: composeHandler(openFileDialog)\n  });\n}\n/**\n * @param {DropzoneState} state\n * @param {{type: string} & DropzoneState} action\n * @returns {DropzoneState}\n */\n\nfunction reducer(state, action) {\n  /* istanbul ignore next */\n  switch (action.type) {\n    case \"focus\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFocused: true\n      });\n\n    case \"blur\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFocused: false\n      });\n\n    case \"openDialog\":\n      return _objectSpread(_objectSpread({}, initialState), {}, {\n        isFileDialogActive: true\n      });\n\n    case \"closeDialog\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isFileDialogActive: false\n      });\n\n    case \"setDraggedFiles\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isDragActive: action.isDragActive,\n        isDragAccept: action.isDragAccept,\n        isDragReject: action.isDragReject\n      });\n\n    case \"setFiles\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        acceptedFiles: action.acceptedFiles,\n        fileRejections: action.fileRejections,\n        isDragReject: action.isDragReject\n      });\n\n    case \"reset\":\n      return _objectSpread({}, initialState);\n\n    default:\n      return state;\n  }\n}\n\nfunction noop() {}\n\nexport { ErrorCode } from \"./utils/index.js\";", "export const COMMON_MIME_TYPES = new Map([\n    // https://github.com/guzzle/psr7/blob/2d9260799e713f1c475d3c5fdc3d6561ff7441b2/src/MimeType.php\n    ['1km', 'application/vnd.1000minds.decision-model+xml'],\n    ['3dml', 'text/vnd.in3d.3dml'],\n    ['3ds', 'image/x-3ds'],\n    ['3g2', 'video/3gpp2'],\n    ['3gp', 'video/3gp'],\n    ['3gpp', 'video/3gpp'],\n    ['3mf', 'model/3mf'],\n    ['7z', 'application/x-7z-compressed'],\n    ['7zip', 'application/x-7z-compressed'],\n    ['123', 'application/vnd.lotus-1-2-3'],\n    ['aab', 'application/x-authorware-bin'],\n    ['aac', 'audio/x-acc'],\n    ['aam', 'application/x-authorware-map'],\n    ['aas', 'application/x-authorware-seg'],\n    ['abw', 'application/x-abiword'],\n    ['ac', 'application/vnd.nokia.n-gage.ac+xml'],\n    ['ac3', 'audio/ac3'],\n    ['acc', 'application/vnd.americandynamics.acc'],\n    ['ace', 'application/x-ace-compressed'],\n    ['acu', 'application/vnd.acucobol'],\n    ['acutc', 'application/vnd.acucorp'],\n    ['adp', 'audio/adpcm'],\n    ['aep', 'application/vnd.audiograph'],\n    ['afm', 'application/x-font-type1'],\n    ['afp', 'application/vnd.ibm.modcap'],\n    ['ahead', 'application/vnd.ahead.space'],\n    ['ai', 'application/pdf'],\n    ['aif', 'audio/x-aiff'],\n    ['aifc', 'audio/x-aiff'],\n    ['aiff', 'audio/x-aiff'],\n    ['air', 'application/vnd.adobe.air-application-installer-package+zip'],\n    ['ait', 'application/vnd.dvb.ait'],\n    ['ami', 'application/vnd.amiga.ami'],\n    ['amr', 'audio/amr'],\n    ['apk', 'application/vnd.android.package-archive'],\n    ['apng', 'image/apng'],\n    ['appcache', 'text/cache-manifest'],\n    ['application', 'application/x-ms-application'],\n    ['apr', 'application/vnd.lotus-approach'],\n    ['arc', 'application/x-freearc'],\n    ['arj', 'application/x-arj'],\n    ['asc', 'application/pgp-signature'],\n    ['asf', 'video/x-ms-asf'],\n    ['asm', 'text/x-asm'],\n    ['aso', 'application/vnd.accpac.simply.aso'],\n    ['asx', 'video/x-ms-asf'],\n    ['atc', 'application/vnd.acucorp'],\n    ['atom', 'application/atom+xml'],\n    ['atomcat', 'application/atomcat+xml'],\n    ['atomdeleted', 'application/atomdeleted+xml'],\n    ['atomsvc', 'application/atomsvc+xml'],\n    ['atx', 'application/vnd.antix.game-component'],\n    ['au', 'audio/x-au'],\n    ['avi', 'video/x-msvideo'],\n    ['avif', 'image/avif'],\n    ['aw', 'application/applixware'],\n    ['azf', 'application/vnd.airzip.filesecure.azf'],\n    ['azs', 'application/vnd.airzip.filesecure.azs'],\n    ['azv', 'image/vnd.airzip.accelerator.azv'],\n    ['azw', 'application/vnd.amazon.ebook'],\n    ['b16', 'image/vnd.pco.b16'],\n    ['bat', 'application/x-msdownload'],\n    ['bcpio', 'application/x-bcpio'],\n    ['bdf', 'application/x-font-bdf'],\n    ['bdm', 'application/vnd.syncml.dm+wbxml'],\n    ['bdoc', 'application/x-bdoc'],\n    ['bed', 'application/vnd.realvnc.bed'],\n    ['bh2', 'application/vnd.fujitsu.oasysprs'],\n    ['bin', 'application/octet-stream'],\n    ['blb', 'application/x-blorb'],\n    ['blorb', 'application/x-blorb'],\n    ['bmi', 'application/vnd.bmi'],\n    ['bmml', 'application/vnd.balsamiq.bmml+xml'],\n    ['bmp', 'image/bmp'],\n    ['book', 'application/vnd.framemaker'],\n    ['box', 'application/vnd.previewsystems.box'],\n    ['boz', 'application/x-bzip2'],\n    ['bpk', 'application/octet-stream'],\n    ['bpmn', 'application/octet-stream'],\n    ['bsp', 'model/vnd.valve.source.compiled-map'],\n    ['btif', 'image/prs.btif'],\n    ['buffer', 'application/octet-stream'],\n    ['bz', 'application/x-bzip'],\n    ['bz2', 'application/x-bzip2'],\n    ['c', 'text/x-c'],\n    ['c4d', 'application/vnd.clonk.c4group'],\n    ['c4f', 'application/vnd.clonk.c4group'],\n    ['c4g', 'application/vnd.clonk.c4group'],\n    ['c4p', 'application/vnd.clonk.c4group'],\n    ['c4u', 'application/vnd.clonk.c4group'],\n    ['c11amc', 'application/vnd.cluetrust.cartomobile-config'],\n    ['c11amz', 'application/vnd.cluetrust.cartomobile-config-pkg'],\n    ['cab', 'application/vnd.ms-cab-compressed'],\n    ['caf', 'audio/x-caf'],\n    ['cap', 'application/vnd.tcpdump.pcap'],\n    ['car', 'application/vnd.curl.car'],\n    ['cat', 'application/vnd.ms-pki.seccat'],\n    ['cb7', 'application/x-cbr'],\n    ['cba', 'application/x-cbr'],\n    ['cbr', 'application/x-cbr'],\n    ['cbt', 'application/x-cbr'],\n    ['cbz', 'application/x-cbr'],\n    ['cc', 'text/x-c'],\n    ['cco', 'application/x-cocoa'],\n    ['cct', 'application/x-director'],\n    ['ccxml', 'application/ccxml+xml'],\n    ['cdbcmsg', 'application/vnd.contact.cmsg'],\n    ['cda', 'application/x-cdf'],\n    ['cdf', 'application/x-netcdf'],\n    ['cdfx', 'application/cdfx+xml'],\n    ['cdkey', 'application/vnd.mediastation.cdkey'],\n    ['cdmia', 'application/cdmi-capability'],\n    ['cdmic', 'application/cdmi-container'],\n    ['cdmid', 'application/cdmi-domain'],\n    ['cdmio', 'application/cdmi-object'],\n    ['cdmiq', 'application/cdmi-queue'],\n    ['cdr', 'application/cdr'],\n    ['cdx', 'chemical/x-cdx'],\n    ['cdxml', 'application/vnd.chemdraw+xml'],\n    ['cdy', 'application/vnd.cinderella'],\n    ['cer', 'application/pkix-cert'],\n    ['cfs', 'application/x-cfs-compressed'],\n    ['cgm', 'image/cgm'],\n    ['chat', 'application/x-chat'],\n    ['chm', 'application/vnd.ms-htmlhelp'],\n    ['chrt', 'application/vnd.kde.kchart'],\n    ['cif', 'chemical/x-cif'],\n    ['cii', 'application/vnd.anser-web-certificate-issue-initiation'],\n    ['cil', 'application/vnd.ms-artgalry'],\n    ['cjs', 'application/node'],\n    ['cla', 'application/vnd.claymore'],\n    ['class', 'application/octet-stream'],\n    ['clkk', 'application/vnd.crick.clicker.keyboard'],\n    ['clkp', 'application/vnd.crick.clicker.palette'],\n    ['clkt', 'application/vnd.crick.clicker.template'],\n    ['clkw', 'application/vnd.crick.clicker.wordbank'],\n    ['clkx', 'application/vnd.crick.clicker'],\n    ['clp', 'application/x-msclip'],\n    ['cmc', 'application/vnd.cosmocaller'],\n    ['cmdf', 'chemical/x-cmdf'],\n    ['cml', 'chemical/x-cml'],\n    ['cmp', 'application/vnd.yellowriver-custom-menu'],\n    ['cmx', 'image/x-cmx'],\n    ['cod', 'application/vnd.rim.cod'],\n    ['coffee', 'text/coffeescript'],\n    ['com', 'application/x-msdownload'],\n    ['conf', 'text/plain'],\n    ['cpio', 'application/x-cpio'],\n    ['cpp', 'text/x-c'],\n    ['cpt', 'application/mac-compactpro'],\n    ['crd', 'application/x-mscardfile'],\n    ['crl', 'application/pkix-crl'],\n    ['crt', 'application/x-x509-ca-cert'],\n    ['crx', 'application/x-chrome-extension'],\n    ['cryptonote', 'application/vnd.rig.cryptonote'],\n    ['csh', 'application/x-csh'],\n    ['csl', 'application/vnd.citationstyles.style+xml'],\n    ['csml', 'chemical/x-csml'],\n    ['csp', 'application/vnd.commonspace'],\n    ['csr', 'application/octet-stream'],\n    ['css', 'text/css'],\n    ['cst', 'application/x-director'],\n    ['csv', 'text/csv'],\n    ['cu', 'application/cu-seeme'],\n    ['curl', 'text/vnd.curl'],\n    ['cww', 'application/prs.cww'],\n    ['cxt', 'application/x-director'],\n    ['cxx', 'text/x-c'],\n    ['dae', 'model/vnd.collada+xml'],\n    ['daf', 'application/vnd.mobius.daf'],\n    ['dart', 'application/vnd.dart'],\n    ['dataless', 'application/vnd.fdsn.seed'],\n    ['davmount', 'application/davmount+xml'],\n    ['dbf', 'application/vnd.dbf'],\n    ['dbk', 'application/docbook+xml'],\n    ['dcr', 'application/x-director'],\n    ['dcurl', 'text/vnd.curl.dcurl'],\n    ['dd2', 'application/vnd.oma.dd2+xml'],\n    ['ddd', 'application/vnd.fujixerox.ddd'],\n    ['ddf', 'application/vnd.syncml.dmddf+xml'],\n    ['dds', 'image/vnd.ms-dds'],\n    ['deb', 'application/x-debian-package'],\n    ['def', 'text/plain'],\n    ['deploy', 'application/octet-stream'],\n    ['der', 'application/x-x509-ca-cert'],\n    ['dfac', 'application/vnd.dreamfactory'],\n    ['dgc', 'application/x-dgc-compressed'],\n    ['dic', 'text/x-c'],\n    ['dir', 'application/x-director'],\n    ['dis', 'application/vnd.mobius.dis'],\n    ['disposition-notification', 'message/disposition-notification'],\n    ['dist', 'application/octet-stream'],\n    ['distz', 'application/octet-stream'],\n    ['djv', 'image/vnd.djvu'],\n    ['djvu', 'image/vnd.djvu'],\n    ['dll', 'application/octet-stream'],\n    ['dmg', 'application/x-apple-diskimage'],\n    ['dmn', 'application/octet-stream'],\n    ['dmp', 'application/vnd.tcpdump.pcap'],\n    ['dms', 'application/octet-stream'],\n    ['dna', 'application/vnd.dna'],\n    ['doc', 'application/msword'],\n    ['docm', 'application/vnd.ms-word.template.macroEnabled.12'],\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n    ['dot', 'application/msword'],\n    ['dotm', 'application/vnd.ms-word.template.macroEnabled.12'],\n    ['dotx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'],\n    ['dp', 'application/vnd.osgi.dp'],\n    ['dpg', 'application/vnd.dpgraph'],\n    ['dra', 'audio/vnd.dra'],\n    ['drle', 'image/dicom-rle'],\n    ['dsc', 'text/prs.lines.tag'],\n    ['dssc', 'application/dssc+der'],\n    ['dtb', 'application/x-dtbook+xml'],\n    ['dtd', 'application/xml-dtd'],\n    ['dts', 'audio/vnd.dts'],\n    ['dtshd', 'audio/vnd.dts.hd'],\n    ['dump', 'application/octet-stream'],\n    ['dvb', 'video/vnd.dvb.file'],\n    ['dvi', 'application/x-dvi'],\n    ['dwd', 'application/atsc-dwd+xml'],\n    ['dwf', 'model/vnd.dwf'],\n    ['dwg', 'image/vnd.dwg'],\n    ['dxf', 'image/vnd.dxf'],\n    ['dxp', 'application/vnd.spotfire.dxp'],\n    ['dxr', 'application/x-director'],\n    ['ear', 'application/java-archive'],\n    ['ecelp4800', 'audio/vnd.nuera.ecelp4800'],\n    ['ecelp7470', 'audio/vnd.nuera.ecelp7470'],\n    ['ecelp9600', 'audio/vnd.nuera.ecelp9600'],\n    ['ecma', 'application/ecmascript'],\n    ['edm', 'application/vnd.novadigm.edm'],\n    ['edx', 'application/vnd.novadigm.edx'],\n    ['efif', 'application/vnd.picsel'],\n    ['ei6', 'application/vnd.pg.osasli'],\n    ['elc', 'application/octet-stream'],\n    ['emf', 'image/emf'],\n    ['eml', 'message/rfc822'],\n    ['emma', 'application/emma+xml'],\n    ['emotionml', 'application/emotionml+xml'],\n    ['emz', 'application/x-msmetafile'],\n    ['eol', 'audio/vnd.digital-winds'],\n    ['eot', 'application/vnd.ms-fontobject'],\n    ['eps', 'application/postscript'],\n    ['epub', 'application/epub+zip'],\n    ['es', 'application/ecmascript'],\n    ['es3', 'application/vnd.eszigno3+xml'],\n    ['esa', 'application/vnd.osgi.subsystem'],\n    ['esf', 'application/vnd.epson.esf'],\n    ['et3', 'application/vnd.eszigno3+xml'],\n    ['etx', 'text/x-setext'],\n    ['eva', 'application/x-eva'],\n    ['evy', 'application/x-envoy'],\n    ['exe', 'application/octet-stream'],\n    ['exi', 'application/exi'],\n    ['exp', 'application/express'],\n    ['exr', 'image/aces'],\n    ['ext', 'application/vnd.novadigm.ext'],\n    ['ez', 'application/andrew-inset'],\n    ['ez2', 'application/vnd.ezpix-album'],\n    ['ez3', 'application/vnd.ezpix-package'],\n    ['f', 'text/x-fortran'],\n    ['f4v', 'video/mp4'],\n    ['f77', 'text/x-fortran'],\n    ['f90', 'text/x-fortran'],\n    ['fbs', 'image/vnd.fastbidsheet'],\n    ['fcdt', 'application/vnd.adobe.formscentral.fcdt'],\n    ['fcs', 'application/vnd.isac.fcs'],\n    ['fdf', 'application/vnd.fdf'],\n    ['fdt', 'application/fdt+xml'],\n    ['fe_launch', 'application/vnd.denovo.fcselayout-link'],\n    ['fg5', 'application/vnd.fujitsu.oasysgp'],\n    ['fgd', 'application/x-director'],\n    ['fh', 'image/x-freehand'],\n    ['fh4', 'image/x-freehand'],\n    ['fh5', 'image/x-freehand'],\n    ['fh7', 'image/x-freehand'],\n    ['fhc', 'image/x-freehand'],\n    ['fig', 'application/x-xfig'],\n    ['fits', 'image/fits'],\n    ['flac', 'audio/x-flac'],\n    ['fli', 'video/x-fli'],\n    ['flo', 'application/vnd.micrografx.flo'],\n    ['flv', 'video/x-flv'],\n    ['flw', 'application/vnd.kde.kivio'],\n    ['flx', 'text/vnd.fmi.flexstor'],\n    ['fly', 'text/vnd.fly'],\n    ['fm', 'application/vnd.framemaker'],\n    ['fnc', 'application/vnd.frogans.fnc'],\n    ['fo', 'application/vnd.software602.filler.form+xml'],\n    ['for', 'text/x-fortran'],\n    ['fpx', 'image/vnd.fpx'],\n    ['frame', 'application/vnd.framemaker'],\n    ['fsc', 'application/vnd.fsc.weblaunch'],\n    ['fst', 'image/vnd.fst'],\n    ['ftc', 'application/vnd.fluxtime.clip'],\n    ['fti', 'application/vnd.anser-web-funds-transfer-initiation'],\n    ['fvt', 'video/vnd.fvt'],\n    ['fxp', 'application/vnd.adobe.fxp'],\n    ['fxpl', 'application/vnd.adobe.fxp'],\n    ['fzs', 'application/vnd.fuzzysheet'],\n    ['g2w', 'application/vnd.geoplan'],\n    ['g3', 'image/g3fax'],\n    ['g3w', 'application/vnd.geospace'],\n    ['gac', 'application/vnd.groove-account'],\n    ['gam', 'application/x-tads'],\n    ['gbr', 'application/rpki-ghostbusters'],\n    ['gca', 'application/x-gca-compressed'],\n    ['gdl', 'model/vnd.gdl'],\n    ['gdoc', 'application/vnd.google-apps.document'],\n    ['geo', 'application/vnd.dynageo'],\n    ['geojson', 'application/geo+json'],\n    ['gex', 'application/vnd.geometry-explorer'],\n    ['ggb', 'application/vnd.geogebra.file'],\n    ['ggt', 'application/vnd.geogebra.tool'],\n    ['ghf', 'application/vnd.groove-help'],\n    ['gif', 'image/gif'],\n    ['gim', 'application/vnd.groove-identity-message'],\n    ['glb', 'model/gltf-binary'],\n    ['gltf', 'model/gltf+json'],\n    ['gml', 'application/gml+xml'],\n    ['gmx', 'application/vnd.gmx'],\n    ['gnumeric', 'application/x-gnumeric'],\n    ['gpg', 'application/gpg-keys'],\n    ['gph', 'application/vnd.flographit'],\n    ['gpx', 'application/gpx+xml'],\n    ['gqf', 'application/vnd.grafeq'],\n    ['gqs', 'application/vnd.grafeq'],\n    ['gram', 'application/srgs'],\n    ['gramps', 'application/x-gramps-xml'],\n    ['gre', 'application/vnd.geometry-explorer'],\n    ['grv', 'application/vnd.groove-injector'],\n    ['grxml', 'application/srgs+xml'],\n    ['gsf', 'application/x-font-ghostscript'],\n    ['gsheet', 'application/vnd.google-apps.spreadsheet'],\n    ['gslides', 'application/vnd.google-apps.presentation'],\n    ['gtar', 'application/x-gtar'],\n    ['gtm', 'application/vnd.groove-tool-message'],\n    ['gtw', 'model/vnd.gtw'],\n    ['gv', 'text/vnd.graphviz'],\n    ['gxf', 'application/gxf'],\n    ['gxt', 'application/vnd.geonext'],\n    ['gz', 'application/gzip'],\n    ['gzip', 'application/gzip'],\n    ['h', 'text/x-c'],\n    ['h261', 'video/h261'],\n    ['h263', 'video/h263'],\n    ['h264', 'video/h264'],\n    ['hal', 'application/vnd.hal+xml'],\n    ['hbci', 'application/vnd.hbci'],\n    ['hbs', 'text/x-handlebars-template'],\n    ['hdd', 'application/x-virtualbox-hdd'],\n    ['hdf', 'application/x-hdf'],\n    ['heic', 'image/heic'],\n    ['heics', 'image/heic-sequence'],\n    ['heif', 'image/heif'],\n    ['heifs', 'image/heif-sequence'],\n    ['hej2', 'image/hej2k'],\n    ['held', 'application/atsc-held+xml'],\n    ['hh', 'text/x-c'],\n    ['hjson', 'application/hjson'],\n    ['hlp', 'application/winhlp'],\n    ['hpgl', 'application/vnd.hp-hpgl'],\n    ['hpid', 'application/vnd.hp-hpid'],\n    ['hps', 'application/vnd.hp-hps'],\n    ['hqx', 'application/mac-binhex40'],\n    ['hsj2', 'image/hsj2'],\n    ['htc', 'text/x-component'],\n    ['htke', 'application/vnd.kenameaapp'],\n    ['htm', 'text/html'],\n    ['html', 'text/html'],\n    ['hvd', 'application/vnd.yamaha.hv-dic'],\n    ['hvp', 'application/vnd.yamaha.hv-voice'],\n    ['hvs', 'application/vnd.yamaha.hv-script'],\n    ['i2g', 'application/vnd.intergeo'],\n    ['icc', 'application/vnd.iccprofile'],\n    ['ice', 'x-conference/x-cooltalk'],\n    ['icm', 'application/vnd.iccprofile'],\n    ['ico', 'image/x-icon'],\n    ['ics', 'text/calendar'],\n    ['ief', 'image/ief'],\n    ['ifb', 'text/calendar'],\n    ['ifm', 'application/vnd.shana.informed.formdata'],\n    ['iges', 'model/iges'],\n    ['igl', 'application/vnd.igloader'],\n    ['igm', 'application/vnd.insors.igm'],\n    ['igs', 'model/iges'],\n    ['igx', 'application/vnd.micrografx.igx'],\n    ['iif', 'application/vnd.shana.informed.interchange'],\n    ['img', 'application/octet-stream'],\n    ['imp', 'application/vnd.accpac.simply.imp'],\n    ['ims', 'application/vnd.ms-ims'],\n    ['in', 'text/plain'],\n    ['ini', 'text/plain'],\n    ['ink', 'application/inkml+xml'],\n    ['inkml', 'application/inkml+xml'],\n    ['install', 'application/x-install-instructions'],\n    ['iota', 'application/vnd.astraea-software.iota'],\n    ['ipfix', 'application/ipfix'],\n    ['ipk', 'application/vnd.shana.informed.package'],\n    ['irm', 'application/vnd.ibm.rights-management'],\n    ['irp', 'application/vnd.irepository.package+xml'],\n    ['iso', 'application/x-iso9660-image'],\n    ['itp', 'application/vnd.shana.informed.formtemplate'],\n    ['its', 'application/its+xml'],\n    ['ivp', 'application/vnd.immervision-ivp'],\n    ['ivu', 'application/vnd.immervision-ivu'],\n    ['jad', 'text/vnd.sun.j2me.app-descriptor'],\n    ['jade', 'text/jade'],\n    ['jam', 'application/vnd.jam'],\n    ['jar', 'application/java-archive'],\n    ['jardiff', 'application/x-java-archive-diff'],\n    ['java', 'text/x-java-source'],\n    ['jhc', 'image/jphc'],\n    ['jisp', 'application/vnd.jisp'],\n    ['jls', 'image/jls'],\n    ['jlt', 'application/vnd.hp-jlyt'],\n    ['jng', 'image/x-jng'],\n    ['jnlp', 'application/x-java-jnlp-file'],\n    ['joda', 'application/vnd.joost.joda-archive'],\n    ['jp2', 'image/jp2'],\n    ['jpe', 'image/jpeg'],\n    ['jpeg', 'image/jpeg'],\n    ['jpf', 'image/jpx'],\n    ['jpg', 'image/jpeg'],\n    ['jpg2', 'image/jp2'],\n    ['jpgm', 'video/jpm'],\n    ['jpgv', 'video/jpeg'],\n    ['jph', 'image/jph'],\n    ['jpm', 'video/jpm'],\n    ['jpx', 'image/jpx'],\n    ['js', 'application/javascript'],\n    ['json', 'application/json'],\n    ['json5', 'application/json5'],\n    ['jsonld', 'application/ld+json'],\n    // https://jsonlines.org/\n    ['jsonl', 'application/jsonl'],\n    ['jsonml', 'application/jsonml+json'],\n    ['jsx', 'text/jsx'],\n    ['jxr', 'image/jxr'],\n    ['jxra', 'image/jxra'],\n    ['jxrs', 'image/jxrs'],\n    ['jxs', 'image/jxs'],\n    ['jxsc', 'image/jxsc'],\n    ['jxsi', 'image/jxsi'],\n    ['jxss', 'image/jxss'],\n    ['kar', 'audio/midi'],\n    ['karbon', 'application/vnd.kde.karbon'],\n    ['kdb', 'application/octet-stream'],\n    ['kdbx', 'application/x-keepass2'],\n    ['key', 'application/x-iwork-keynote-sffkey'],\n    ['kfo', 'application/vnd.kde.kformula'],\n    ['kia', 'application/vnd.kidspiration'],\n    ['kml', 'application/vnd.google-earth.kml+xml'],\n    ['kmz', 'application/vnd.google-earth.kmz'],\n    ['kne', 'application/vnd.kinar'],\n    ['knp', 'application/vnd.kinar'],\n    ['kon', 'application/vnd.kde.kontour'],\n    ['kpr', 'application/vnd.kde.kpresenter'],\n    ['kpt', 'application/vnd.kde.kpresenter'],\n    ['kpxx', 'application/vnd.ds-keypoint'],\n    ['ksp', 'application/vnd.kde.kspread'],\n    ['ktr', 'application/vnd.kahootz'],\n    ['ktx', 'image/ktx'],\n    ['ktx2', 'image/ktx2'],\n    ['ktz', 'application/vnd.kahootz'],\n    ['kwd', 'application/vnd.kde.kword'],\n    ['kwt', 'application/vnd.kde.kword'],\n    ['lasxml', 'application/vnd.las.las+xml'],\n    ['latex', 'application/x-latex'],\n    ['lbd', 'application/vnd.llamagraphics.life-balance.desktop'],\n    ['lbe', 'application/vnd.llamagraphics.life-balance.exchange+xml'],\n    ['les', 'application/vnd.hhe.lesson-player'],\n    ['less', 'text/less'],\n    ['lgr', 'application/lgr+xml'],\n    ['lha', 'application/octet-stream'],\n    ['link66', 'application/vnd.route66.link66+xml'],\n    ['list', 'text/plain'],\n    ['list3820', 'application/vnd.ibm.modcap'],\n    ['listafp', 'application/vnd.ibm.modcap'],\n    ['litcoffee', 'text/coffeescript'],\n    ['lnk', 'application/x-ms-shortcut'],\n    ['log', 'text/plain'],\n    ['lostxml', 'application/lost+xml'],\n    ['lrf', 'application/octet-stream'],\n    ['lrm', 'application/vnd.ms-lrm'],\n    ['ltf', 'application/vnd.frogans.ltf'],\n    ['lua', 'text/x-lua'],\n    ['luac', 'application/x-lua-bytecode'],\n    ['lvp', 'audio/vnd.lucent.voice'],\n    ['lwp', 'application/vnd.lotus-wordpro'],\n    ['lzh', 'application/octet-stream'],\n    ['m1v', 'video/mpeg'],\n    ['m2a', 'audio/mpeg'],\n    ['m2v', 'video/mpeg'],\n    ['m3a', 'audio/mpeg'],\n    ['m3u', 'text/plain'],\n    ['m3u8', 'application/vnd.apple.mpegurl'],\n    ['m4a', 'audio/x-m4a'],\n    ['m4p', 'application/mp4'],\n    ['m4s', 'video/iso.segment'],\n    ['m4u', 'application/vnd.mpegurl'],\n    ['m4v', 'video/x-m4v'],\n    ['m13', 'application/x-msmediaview'],\n    ['m14', 'application/x-msmediaview'],\n    ['m21', 'application/mp21'],\n    ['ma', 'application/mathematica'],\n    ['mads', 'application/mads+xml'],\n    ['maei', 'application/mmt-aei+xml'],\n    ['mag', 'application/vnd.ecowin.chart'],\n    ['maker', 'application/vnd.framemaker'],\n    ['man', 'text/troff'],\n    ['manifest', 'text/cache-manifest'],\n    ['map', 'application/json'],\n    ['mar', 'application/octet-stream'],\n    ['markdown', 'text/markdown'],\n    ['mathml', 'application/mathml+xml'],\n    ['mb', 'application/mathematica'],\n    ['mbk', 'application/vnd.mobius.mbk'],\n    ['mbox', 'application/mbox'],\n    ['mc1', 'application/vnd.medcalcdata'],\n    ['mcd', 'application/vnd.mcd'],\n    ['mcurl', 'text/vnd.curl.mcurl'],\n    ['md', 'text/markdown'],\n    ['mdb', 'application/x-msaccess'],\n    ['mdi', 'image/vnd.ms-modi'],\n    ['mdx', 'text/mdx'],\n    ['me', 'text/troff'],\n    ['mesh', 'model/mesh'],\n    ['meta4', 'application/metalink4+xml'],\n    ['metalink', 'application/metalink+xml'],\n    ['mets', 'application/mets+xml'],\n    ['mfm', 'application/vnd.mfmp'],\n    ['mft', 'application/rpki-manifest'],\n    ['mgp', 'application/vnd.osgeo.mapguide.package'],\n    ['mgz', 'application/vnd.proteus.magazine'],\n    ['mid', 'audio/midi'],\n    ['midi', 'audio/midi'],\n    ['mie', 'application/x-mie'],\n    ['mif', 'application/vnd.mif'],\n    ['mime', 'message/rfc822'],\n    ['mj2', 'video/mj2'],\n    ['mjp2', 'video/mj2'],\n    ['mjs', 'application/javascript'],\n    ['mk3d', 'video/x-matroska'],\n    ['mka', 'audio/x-matroska'],\n    ['mkd', 'text/x-markdown'],\n    ['mks', 'video/x-matroska'],\n    ['mkv', 'video/x-matroska'],\n    ['mlp', 'application/vnd.dolby.mlp'],\n    ['mmd', 'application/vnd.chipnuts.karaoke-mmd'],\n    ['mmf', 'application/vnd.smaf'],\n    ['mml', 'text/mathml'],\n    ['mmr', 'image/vnd.fujixerox.edmics-mmr'],\n    ['mng', 'video/x-mng'],\n    ['mny', 'application/x-msmoney'],\n    ['mobi', 'application/x-mobipocket-ebook'],\n    ['mods', 'application/mods+xml'],\n    ['mov', 'video/quicktime'],\n    ['movie', 'video/x-sgi-movie'],\n    ['mp2', 'audio/mpeg'],\n    ['mp2a', 'audio/mpeg'],\n    ['mp3', 'audio/mpeg'],\n    ['mp4', 'video/mp4'],\n    ['mp4a', 'audio/mp4'],\n    ['mp4s', 'application/mp4'],\n    ['mp4v', 'video/mp4'],\n    ['mp21', 'application/mp21'],\n    ['mpc', 'application/vnd.mophun.certificate'],\n    ['mpd', 'application/dash+xml'],\n    ['mpe', 'video/mpeg'],\n    ['mpeg', 'video/mpeg'],\n    ['mpg', 'video/mpeg'],\n    ['mpg4', 'video/mp4'],\n    ['mpga', 'audio/mpeg'],\n    ['mpkg', 'application/vnd.apple.installer+xml'],\n    ['mpm', 'application/vnd.blueice.multipass'],\n    ['mpn', 'application/vnd.mophun.application'],\n    ['mpp', 'application/vnd.ms-project'],\n    ['mpt', 'application/vnd.ms-project'],\n    ['mpy', 'application/vnd.ibm.minipay'],\n    ['mqy', 'application/vnd.mobius.mqy'],\n    ['mrc', 'application/marc'],\n    ['mrcx', 'application/marcxml+xml'],\n    ['ms', 'text/troff'],\n    ['mscml', 'application/mediaservercontrol+xml'],\n    ['mseed', 'application/vnd.fdsn.mseed'],\n    ['mseq', 'application/vnd.mseq'],\n    ['msf', 'application/vnd.epson.msf'],\n    ['msg', 'application/vnd.ms-outlook'],\n    ['msh', 'model/mesh'],\n    ['msi', 'application/x-msdownload'],\n    ['msl', 'application/vnd.mobius.msl'],\n    ['msm', 'application/octet-stream'],\n    ['msp', 'application/octet-stream'],\n    ['msty', 'application/vnd.muvee.style'],\n    ['mtl', 'model/mtl'],\n    ['mts', 'model/vnd.mts'],\n    ['mus', 'application/vnd.musician'],\n    ['musd', 'application/mmt-usd+xml'],\n    ['musicxml', 'application/vnd.recordare.musicxml+xml'],\n    ['mvb', 'application/x-msmediaview'],\n    ['mvt', 'application/vnd.mapbox-vector-tile'],\n    ['mwf', 'application/vnd.mfer'],\n    ['mxf', 'application/mxf'],\n    ['mxl', 'application/vnd.recordare.musicxml'],\n    ['mxmf', 'audio/mobile-xmf'],\n    ['mxml', 'application/xv+xml'],\n    ['mxs', 'application/vnd.triscape.mxs'],\n    ['mxu', 'video/vnd.mpegurl'],\n    ['n-gage', 'application/vnd.nokia.n-gage.symbian.install'],\n    ['n3', 'text/n3'],\n    ['nb', 'application/mathematica'],\n    ['nbp', 'application/vnd.wolfram.player'],\n    ['nc', 'application/x-netcdf'],\n    ['ncx', 'application/x-dtbncx+xml'],\n    ['nfo', 'text/x-nfo'],\n    ['ngdat', 'application/vnd.nokia.n-gage.data'],\n    ['nitf', 'application/vnd.nitf'],\n    ['nlu', 'application/vnd.neurolanguage.nlu'],\n    ['nml', 'application/vnd.enliven'],\n    ['nnd', 'application/vnd.noblenet-directory'],\n    ['nns', 'application/vnd.noblenet-sealer'],\n    ['nnw', 'application/vnd.noblenet-web'],\n    ['npx', 'image/vnd.net-fpx'],\n    ['nq', 'application/n-quads'],\n    ['nsc', 'application/x-conference'],\n    ['nsf', 'application/vnd.lotus-notes'],\n    ['nt', 'application/n-triples'],\n    ['ntf', 'application/vnd.nitf'],\n    ['numbers', 'application/x-iwork-numbers-sffnumbers'],\n    ['nzb', 'application/x-nzb'],\n    ['oa2', 'application/vnd.fujitsu.oasys2'],\n    ['oa3', 'application/vnd.fujitsu.oasys3'],\n    ['oas', 'application/vnd.fujitsu.oasys'],\n    ['obd', 'application/x-msbinder'],\n    ['obgx', 'application/vnd.openblox.game+xml'],\n    ['obj', 'model/obj'],\n    ['oda', 'application/oda'],\n    ['odb', 'application/vnd.oasis.opendocument.database'],\n    ['odc', 'application/vnd.oasis.opendocument.chart'],\n    ['odf', 'application/vnd.oasis.opendocument.formula'],\n    ['odft', 'application/vnd.oasis.opendocument.formula-template'],\n    ['odg', 'application/vnd.oasis.opendocument.graphics'],\n    ['odi', 'application/vnd.oasis.opendocument.image'],\n    ['odm', 'application/vnd.oasis.opendocument.text-master'],\n    ['odp', 'application/vnd.oasis.opendocument.presentation'],\n    ['ods', 'application/vnd.oasis.opendocument.spreadsheet'],\n    ['odt', 'application/vnd.oasis.opendocument.text'],\n    ['oga', 'audio/ogg'],\n    ['ogex', 'model/vnd.opengex'],\n    ['ogg', 'audio/ogg'],\n    ['ogv', 'video/ogg'],\n    ['ogx', 'application/ogg'],\n    ['omdoc', 'application/omdoc+xml'],\n    ['onepkg', 'application/onenote'],\n    ['onetmp', 'application/onenote'],\n    ['onetoc', 'application/onenote'],\n    ['onetoc2', 'application/onenote'],\n    ['opf', 'application/oebps-package+xml'],\n    ['opml', 'text/x-opml'],\n    ['oprc', 'application/vnd.palm'],\n    ['opus', 'audio/ogg'],\n    ['org', 'text/x-org'],\n    ['osf', 'application/vnd.yamaha.openscoreformat'],\n    ['osfpvg', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'],\n    ['osm', 'application/vnd.openstreetmap.data+xml'],\n    ['otc', 'application/vnd.oasis.opendocument.chart-template'],\n    ['otf', 'font/otf'],\n    ['otg', 'application/vnd.oasis.opendocument.graphics-template'],\n    ['oth', 'application/vnd.oasis.opendocument.text-web'],\n    ['oti', 'application/vnd.oasis.opendocument.image-template'],\n    ['otp', 'application/vnd.oasis.opendocument.presentation-template'],\n    ['ots', 'application/vnd.oasis.opendocument.spreadsheet-template'],\n    ['ott', 'application/vnd.oasis.opendocument.text-template'],\n    ['ova', 'application/x-virtualbox-ova'],\n    ['ovf', 'application/x-virtualbox-ovf'],\n    ['owl', 'application/rdf+xml'],\n    ['oxps', 'application/oxps'],\n    ['oxt', 'application/vnd.openofficeorg.extension'],\n    ['p', 'text/x-pascal'],\n    ['p7a', 'application/x-pkcs7-signature'],\n    ['p7b', 'application/x-pkcs7-certificates'],\n    ['p7c', 'application/pkcs7-mime'],\n    ['p7m', 'application/pkcs7-mime'],\n    ['p7r', 'application/x-pkcs7-certreqresp'],\n    ['p7s', 'application/pkcs7-signature'],\n    ['p8', 'application/pkcs8'],\n    ['p10', 'application/x-pkcs10'],\n    ['p12', 'application/x-pkcs12'],\n    ['pac', 'application/x-ns-proxy-autoconfig'],\n    ['pages', 'application/x-iwork-pages-sffpages'],\n    ['pas', 'text/x-pascal'],\n    ['paw', 'application/vnd.pawaafile'],\n    ['pbd', 'application/vnd.powerbuilder6'],\n    ['pbm', 'image/x-portable-bitmap'],\n    ['pcap', 'application/vnd.tcpdump.pcap'],\n    ['pcf', 'application/x-font-pcf'],\n    ['pcl', 'application/vnd.hp-pcl'],\n    ['pclxl', 'application/vnd.hp-pclxl'],\n    ['pct', 'image/x-pict'],\n    ['pcurl', 'application/vnd.curl.pcurl'],\n    ['pcx', 'image/x-pcx'],\n    ['pdb', 'application/x-pilot'],\n    ['pde', 'text/x-processing'],\n    ['pdf', 'application/pdf'],\n    ['pem', 'application/x-x509-user-cert'],\n    ['pfa', 'application/x-font-type1'],\n    ['pfb', 'application/x-font-type1'],\n    ['pfm', 'application/x-font-type1'],\n    ['pfr', 'application/font-tdpfr'],\n    ['pfx', 'application/x-pkcs12'],\n    ['pgm', 'image/x-portable-graymap'],\n    ['pgn', 'application/x-chess-pgn'],\n    ['pgp', 'application/pgp'],\n    ['php', 'application/x-httpd-php'],\n    ['php3', 'application/x-httpd-php'],\n    ['php4', 'application/x-httpd-php'],\n    ['phps', 'application/x-httpd-php-source'],\n    ['phtml', 'application/x-httpd-php'],\n    ['pic', 'image/x-pict'],\n    ['pkg', 'application/octet-stream'],\n    ['pki', 'application/pkixcmp'],\n    ['pkipath', 'application/pkix-pkipath'],\n    ['pkpass', 'application/vnd.apple.pkpass'],\n    ['pl', 'application/x-perl'],\n    ['plb', 'application/vnd.3gpp.pic-bw-large'],\n    ['plc', 'application/vnd.mobius.plc'],\n    ['plf', 'application/vnd.pocketlearn'],\n    ['pls', 'application/pls+xml'],\n    ['pm', 'application/x-perl'],\n    ['pml', 'application/vnd.ctc-posml'],\n    ['png', 'image/png'],\n    ['pnm', 'image/x-portable-anymap'],\n    ['portpkg', 'application/vnd.macports.portpkg'],\n    ['pot', 'application/vnd.ms-powerpoint'],\n    ['potm', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'],\n    ['potx', 'application/vnd.openxmlformats-officedocument.presentationml.template'],\n    ['ppa', 'application/vnd.ms-powerpoint'],\n    ['ppam', 'application/vnd.ms-powerpoint.addin.macroEnabled.12'],\n    ['ppd', 'application/vnd.cups-ppd'],\n    ['ppm', 'image/x-portable-pixmap'],\n    ['pps', 'application/vnd.ms-powerpoint'],\n    ['ppsm', 'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'],\n    ['ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'],\n    ['ppt', 'application/powerpoint'],\n    ['pptm', 'application/vnd.ms-powerpoint.presentation.macroEnabled.12'],\n    ['pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'],\n    ['pqa', 'application/vnd.palm'],\n    ['prc', 'application/x-pilot'],\n    ['pre', 'application/vnd.lotus-freelance'],\n    ['prf', 'application/pics-rules'],\n    ['provx', 'application/provenance+xml'],\n    ['ps', 'application/postscript'],\n    ['psb', 'application/vnd.3gpp.pic-bw-small'],\n    ['psd', 'application/x-photoshop'],\n    ['psf', 'application/x-font-linux-psf'],\n    ['pskcxml', 'application/pskc+xml'],\n    ['pti', 'image/prs.pti'],\n    ['ptid', 'application/vnd.pvi.ptid1'],\n    ['pub', 'application/x-mspublisher'],\n    ['pvb', 'application/vnd.3gpp.pic-bw-var'],\n    ['pwn', 'application/vnd.3m.post-it-notes'],\n    ['pya', 'audio/vnd.ms-playready.media.pya'],\n    ['pyv', 'video/vnd.ms-playready.media.pyv'],\n    ['qam', 'application/vnd.epson.quickanime'],\n    ['qbo', 'application/vnd.intu.qbo'],\n    ['qfx', 'application/vnd.intu.qfx'],\n    ['qps', 'application/vnd.publishare-delta-tree'],\n    ['qt', 'video/quicktime'],\n    ['qwd', 'application/vnd.quark.quarkxpress'],\n    ['qwt', 'application/vnd.quark.quarkxpress'],\n    ['qxb', 'application/vnd.quark.quarkxpress'],\n    ['qxd', 'application/vnd.quark.quarkxpress'],\n    ['qxl', 'application/vnd.quark.quarkxpress'],\n    ['qxt', 'application/vnd.quark.quarkxpress'],\n    ['ra', 'audio/x-realaudio'],\n    ['ram', 'audio/x-pn-realaudio'],\n    ['raml', 'application/raml+yaml'],\n    ['rapd', 'application/route-apd+xml'],\n    ['rar', 'application/x-rar'],\n    ['ras', 'image/x-cmu-raster'],\n    ['rcprofile', 'application/vnd.ipunplugged.rcprofile'],\n    ['rdf', 'application/rdf+xml'],\n    ['rdz', 'application/vnd.data-vision.rdz'],\n    ['relo', 'application/p2p-overlay+xml'],\n    ['rep', 'application/vnd.businessobjects'],\n    ['res', 'application/x-dtbresource+xml'],\n    ['rgb', 'image/x-rgb'],\n    ['rif', 'application/reginfo+xml'],\n    ['rip', 'audio/vnd.rip'],\n    ['ris', 'application/x-research-info-systems'],\n    ['rl', 'application/resource-lists+xml'],\n    ['rlc', 'image/vnd.fujixerox.edmics-rlc'],\n    ['rld', 'application/resource-lists-diff+xml'],\n    ['rm', 'audio/x-pn-realaudio'],\n    ['rmi', 'audio/midi'],\n    ['rmp', 'audio/x-pn-realaudio-plugin'],\n    ['rms', 'application/vnd.jcp.javame.midlet-rms'],\n    ['rmvb', 'application/vnd.rn-realmedia-vbr'],\n    ['rnc', 'application/relax-ng-compact-syntax'],\n    ['rng', 'application/xml'],\n    ['roa', 'application/rpki-roa'],\n    ['roff', 'text/troff'],\n    ['rp9', 'application/vnd.cloanto.rp9'],\n    ['rpm', 'audio/x-pn-realaudio-plugin'],\n    ['rpss', 'application/vnd.nokia.radio-presets'],\n    ['rpst', 'application/vnd.nokia.radio-preset'],\n    ['rq', 'application/sparql-query'],\n    ['rs', 'application/rls-services+xml'],\n    ['rsa', 'application/x-pkcs7'],\n    ['rsat', 'application/atsc-rsat+xml'],\n    ['rsd', 'application/rsd+xml'],\n    ['rsheet', 'application/urc-ressheet+xml'],\n    ['rss', 'application/rss+xml'],\n    ['rtf', 'text/rtf'],\n    ['rtx', 'text/richtext'],\n    ['run', 'application/x-makeself'],\n    ['rusd', 'application/route-usd+xml'],\n    ['rv', 'video/vnd.rn-realvideo'],\n    ['s', 'text/x-asm'],\n    ['s3m', 'audio/s3m'],\n    ['saf', 'application/vnd.yamaha.smaf-audio'],\n    ['sass', 'text/x-sass'],\n    ['sbml', 'application/sbml+xml'],\n    ['sc', 'application/vnd.ibm.secure-container'],\n    ['scd', 'application/x-msschedule'],\n    ['scm', 'application/vnd.lotus-screencam'],\n    ['scq', 'application/scvp-cv-request'],\n    ['scs', 'application/scvp-cv-response'],\n    ['scss', 'text/x-scss'],\n    ['scurl', 'text/vnd.curl.scurl'],\n    ['sda', 'application/vnd.stardivision.draw'],\n    ['sdc', 'application/vnd.stardivision.calc'],\n    ['sdd', 'application/vnd.stardivision.impress'],\n    ['sdkd', 'application/vnd.solent.sdkm+xml'],\n    ['sdkm', 'application/vnd.solent.sdkm+xml'],\n    ['sdp', 'application/sdp'],\n    ['sdw', 'application/vnd.stardivision.writer'],\n    ['sea', 'application/octet-stream'],\n    ['see', 'application/vnd.seemail'],\n    ['seed', 'application/vnd.fdsn.seed'],\n    ['sema', 'application/vnd.sema'],\n    ['semd', 'application/vnd.semd'],\n    ['semf', 'application/vnd.semf'],\n    ['senmlx', 'application/senml+xml'],\n    ['sensmlx', 'application/sensml+xml'],\n    ['ser', 'application/java-serialized-object'],\n    ['setpay', 'application/set-payment-initiation'],\n    ['setreg', 'application/set-registration-initiation'],\n    ['sfd-hdstx', 'application/vnd.hydrostatix.sof-data'],\n    ['sfs', 'application/vnd.spotfire.sfs'],\n    ['sfv', 'text/x-sfv'],\n    ['sgi', 'image/sgi'],\n    ['sgl', 'application/vnd.stardivision.writer-global'],\n    ['sgm', 'text/sgml'],\n    ['sgml', 'text/sgml'],\n    ['sh', 'application/x-sh'],\n    ['shar', 'application/x-shar'],\n    ['shex', 'text/shex'],\n    ['shf', 'application/shf+xml'],\n    ['shtml', 'text/html'],\n    ['sid', 'image/x-mrsid-image'],\n    ['sieve', 'application/sieve'],\n    ['sig', 'application/pgp-signature'],\n    ['sil', 'audio/silk'],\n    ['silo', 'model/mesh'],\n    ['sis', 'application/vnd.symbian.install'],\n    ['sisx', 'application/vnd.symbian.install'],\n    ['sit', 'application/x-stuffit'],\n    ['sitx', 'application/x-stuffitx'],\n    ['siv', 'application/sieve'],\n    ['skd', 'application/vnd.koan'],\n    ['skm', 'application/vnd.koan'],\n    ['skp', 'application/vnd.koan'],\n    ['skt', 'application/vnd.koan'],\n    ['sldm', 'application/vnd.ms-powerpoint.slide.macroenabled.12'],\n    ['sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slide'],\n    ['slim', 'text/slim'],\n    ['slm', 'text/slim'],\n    ['sls', 'application/route-s-tsid+xml'],\n    ['slt', 'application/vnd.epson.salt'],\n    ['sm', 'application/vnd.stepmania.stepchart'],\n    ['smf', 'application/vnd.stardivision.math'],\n    ['smi', 'application/smil'],\n    ['smil', 'application/smil'],\n    ['smv', 'video/x-smv'],\n    ['smzip', 'application/vnd.stepmania.package'],\n    ['snd', 'audio/basic'],\n    ['snf', 'application/x-font-snf'],\n    ['so', 'application/octet-stream'],\n    ['spc', 'application/x-pkcs7-certificates'],\n    ['spdx', 'text/spdx'],\n    ['spf', 'application/vnd.yamaha.smaf-phrase'],\n    ['spl', 'application/x-futuresplash'],\n    ['spot', 'text/vnd.in3d.spot'],\n    ['spp', 'application/scvp-vp-response'],\n    ['spq', 'application/scvp-vp-request'],\n    ['spx', 'audio/ogg'],\n    ['sql', 'application/x-sql'],\n    ['src', 'application/x-wais-source'],\n    ['srt', 'application/x-subrip'],\n    ['sru', 'application/sru+xml'],\n    ['srx', 'application/sparql-results+xml'],\n    ['ssdl', 'application/ssdl+xml'],\n    ['sse', 'application/vnd.kodak-descriptor'],\n    ['ssf', 'application/vnd.epson.ssf'],\n    ['ssml', 'application/ssml+xml'],\n    ['sst', 'application/octet-stream'],\n    ['st', 'application/vnd.sailingtracker.track'],\n    ['stc', 'application/vnd.sun.xml.calc.template'],\n    ['std', 'application/vnd.sun.xml.draw.template'],\n    ['stf', 'application/vnd.wt.stf'],\n    ['sti', 'application/vnd.sun.xml.impress.template'],\n    ['stk', 'application/hyperstudio'],\n    ['stl', 'model/stl'],\n    ['stpx', 'model/step+xml'],\n    ['stpxz', 'model/step-xml+zip'],\n    ['stpz', 'model/step+zip'],\n    ['str', 'application/vnd.pg.format'],\n    ['stw', 'application/vnd.sun.xml.writer.template'],\n    ['styl', 'text/stylus'],\n    ['stylus', 'text/stylus'],\n    ['sub', 'text/vnd.dvb.subtitle'],\n    ['sus', 'application/vnd.sus-calendar'],\n    ['susp', 'application/vnd.sus-calendar'],\n    ['sv4cpio', 'application/x-sv4cpio'],\n    ['sv4crc', 'application/x-sv4crc'],\n    ['svc', 'application/vnd.dvb.service'],\n    ['svd', 'application/vnd.svd'],\n    ['svg', 'image/svg+xml'],\n    ['svgz', 'image/svg+xml'],\n    ['swa', 'application/x-director'],\n    ['swf', 'application/x-shockwave-flash'],\n    ['swi', 'application/vnd.aristanetworks.swi'],\n    ['swidtag', 'application/swid+xml'],\n    ['sxc', 'application/vnd.sun.xml.calc'],\n    ['sxd', 'application/vnd.sun.xml.draw'],\n    ['sxg', 'application/vnd.sun.xml.writer.global'],\n    ['sxi', 'application/vnd.sun.xml.impress'],\n    ['sxm', 'application/vnd.sun.xml.math'],\n    ['sxw', 'application/vnd.sun.xml.writer'],\n    ['t', 'text/troff'],\n    ['t3', 'application/x-t3vm-image'],\n    ['t38', 'image/t38'],\n    ['taglet', 'application/vnd.mynfc'],\n    ['tao', 'application/vnd.tao.intent-module-archive'],\n    ['tap', 'image/vnd.tencent.tap'],\n    ['tar', 'application/x-tar'],\n    ['tcap', 'application/vnd.3gpp2.tcap'],\n    ['tcl', 'application/x-tcl'],\n    ['td', 'application/urc-targetdesc+xml'],\n    ['teacher', 'application/vnd.smart.teacher'],\n    ['tei', 'application/tei+xml'],\n    ['teicorpus', 'application/tei+xml'],\n    ['tex', 'application/x-tex'],\n    ['texi', 'application/x-texinfo'],\n    ['texinfo', 'application/x-texinfo'],\n    ['text', 'text/plain'],\n    ['tfi', 'application/thraud+xml'],\n    ['tfm', 'application/x-tex-tfm'],\n    ['tfx', 'image/tiff-fx'],\n    ['tga', 'image/x-tga'],\n    ['tgz', 'application/x-tar'],\n    ['thmx', 'application/vnd.ms-officetheme'],\n    ['tif', 'image/tiff'],\n    ['tiff', 'image/tiff'],\n    ['tk', 'application/x-tcl'],\n    ['tmo', 'application/vnd.tmobile-livetv'],\n    ['toml', 'application/toml'],\n    ['torrent', 'application/x-bittorrent'],\n    ['tpl', 'application/vnd.groove-tool-template'],\n    ['tpt', 'application/vnd.trid.tpt'],\n    ['tr', 'text/troff'],\n    ['tra', 'application/vnd.trueapp'],\n    ['trig', 'application/trig'],\n    ['trm', 'application/x-msterminal'],\n    ['ts', 'video/mp2t'],\n    ['tsd', 'application/timestamped-data'],\n    ['tsv', 'text/tab-separated-values'],\n    ['ttc', 'font/collection'],\n    ['ttf', 'font/ttf'],\n    ['ttl', 'text/turtle'],\n    ['ttml', 'application/ttml+xml'],\n    ['twd', 'application/vnd.simtech-mindmapper'],\n    ['twds', 'application/vnd.simtech-mindmapper'],\n    ['txd', 'application/vnd.genomatix.tuxedo'],\n    ['txf', 'application/vnd.mobius.txf'],\n    ['txt', 'text/plain'],\n    ['u8dsn', 'message/global-delivery-status'],\n    ['u8hdr', 'message/global-headers'],\n    ['u8mdn', 'message/global-disposition-notification'],\n    ['u8msg', 'message/global'],\n    ['u32', 'application/x-authorware-bin'],\n    ['ubj', 'application/ubjson'],\n    ['udeb', 'application/x-debian-package'],\n    ['ufd', 'application/vnd.ufdl'],\n    ['ufdl', 'application/vnd.ufdl'],\n    ['ulx', 'application/x-glulx'],\n    ['umj', 'application/vnd.umajin'],\n    ['unityweb', 'application/vnd.unity'],\n    ['uoml', 'application/vnd.uoml+xml'],\n    ['uri', 'text/uri-list'],\n    ['uris', 'text/uri-list'],\n    ['urls', 'text/uri-list'],\n    ['usdz', 'model/vnd.usdz+zip'],\n    ['ustar', 'application/x-ustar'],\n    ['utz', 'application/vnd.uiq.theme'],\n    ['uu', 'text/x-uuencode'],\n    ['uva', 'audio/vnd.dece.audio'],\n    ['uvd', 'application/vnd.dece.data'],\n    ['uvf', 'application/vnd.dece.data'],\n    ['uvg', 'image/vnd.dece.graphic'],\n    ['uvh', 'video/vnd.dece.hd'],\n    ['uvi', 'image/vnd.dece.graphic'],\n    ['uvm', 'video/vnd.dece.mobile'],\n    ['uvp', 'video/vnd.dece.pd'],\n    ['uvs', 'video/vnd.dece.sd'],\n    ['uvt', 'application/vnd.dece.ttml+xml'],\n    ['uvu', 'video/vnd.uvvu.mp4'],\n    ['uvv', 'video/vnd.dece.video'],\n    ['uvva', 'audio/vnd.dece.audio'],\n    ['uvvd', 'application/vnd.dece.data'],\n    ['uvvf', 'application/vnd.dece.data'],\n    ['uvvg', 'image/vnd.dece.graphic'],\n    ['uvvh', 'video/vnd.dece.hd'],\n    ['uvvi', 'image/vnd.dece.graphic'],\n    ['uvvm', 'video/vnd.dece.mobile'],\n    ['uvvp', 'video/vnd.dece.pd'],\n    ['uvvs', 'video/vnd.dece.sd'],\n    ['uvvt', 'application/vnd.dece.ttml+xml'],\n    ['uvvu', 'video/vnd.uvvu.mp4'],\n    ['uvvv', 'video/vnd.dece.video'],\n    ['uvvx', 'application/vnd.dece.unspecified'],\n    ['uvvz', 'application/vnd.dece.zip'],\n    ['uvx', 'application/vnd.dece.unspecified'],\n    ['uvz', 'application/vnd.dece.zip'],\n    ['vbox', 'application/x-virtualbox-vbox'],\n    ['vbox-extpack', 'application/x-virtualbox-vbox-extpack'],\n    ['vcard', 'text/vcard'],\n    ['vcd', 'application/x-cdlink'],\n    ['vcf', 'text/x-vcard'],\n    ['vcg', 'application/vnd.groove-vcard'],\n    ['vcs', 'text/x-vcalendar'],\n    ['vcx', 'application/vnd.vcx'],\n    ['vdi', 'application/x-virtualbox-vdi'],\n    ['vds', 'model/vnd.sap.vds'],\n    ['vhd', 'application/x-virtualbox-vhd'],\n    ['vis', 'application/vnd.visionary'],\n    ['viv', 'video/vnd.vivo'],\n    ['vlc', 'application/videolan'],\n    ['vmdk', 'application/x-virtualbox-vmdk'],\n    ['vob', 'video/x-ms-vob'],\n    ['vor', 'application/vnd.stardivision.writer'],\n    ['vox', 'application/x-authorware-bin'],\n    ['vrml', 'model/vrml'],\n    ['vsd', 'application/vnd.visio'],\n    ['vsf', 'application/vnd.vsf'],\n    ['vss', 'application/vnd.visio'],\n    ['vst', 'application/vnd.visio'],\n    ['vsw', 'application/vnd.visio'],\n    ['vtf', 'image/vnd.valve.source.texture'],\n    ['vtt', 'text/vtt'],\n    ['vtu', 'model/vnd.vtu'],\n    ['vxml', 'application/voicexml+xml'],\n    ['w3d', 'application/x-director'],\n    ['wad', 'application/x-doom'],\n    ['wadl', 'application/vnd.sun.wadl+xml'],\n    ['war', 'application/java-archive'],\n    ['wasm', 'application/wasm'],\n    ['wav', 'audio/x-wav'],\n    ['wax', 'audio/x-ms-wax'],\n    ['wbmp', 'image/vnd.wap.wbmp'],\n    ['wbs', 'application/vnd.criticaltools.wbs+xml'],\n    ['wbxml', 'application/wbxml'],\n    ['wcm', 'application/vnd.ms-works'],\n    ['wdb', 'application/vnd.ms-works'],\n    ['wdp', 'image/vnd.ms-photo'],\n    ['weba', 'audio/webm'],\n    ['webapp', 'application/x-web-app-manifest+json'],\n    ['webm', 'video/webm'],\n    ['webmanifest', 'application/manifest+json'],\n    ['webp', 'image/webp'],\n    ['wg', 'application/vnd.pmi.widget'],\n    ['wgt', 'application/widget'],\n    ['wks', 'application/vnd.ms-works'],\n    ['wm', 'video/x-ms-wm'],\n    ['wma', 'audio/x-ms-wma'],\n    ['wmd', 'application/x-ms-wmd'],\n    ['wmf', 'image/wmf'],\n    ['wml', 'text/vnd.wap.wml'],\n    ['wmlc', 'application/wmlc'],\n    ['wmls', 'text/vnd.wap.wmlscript'],\n    ['wmlsc', 'application/vnd.wap.wmlscriptc'],\n    ['wmv', 'video/x-ms-wmv'],\n    ['wmx', 'video/x-ms-wmx'],\n    ['wmz', 'application/x-msmetafile'],\n    ['woff', 'font/woff'],\n    ['woff2', 'font/woff2'],\n    ['word', 'application/msword'],\n    ['wpd', 'application/vnd.wordperfect'],\n    ['wpl', 'application/vnd.ms-wpl'],\n    ['wps', 'application/vnd.ms-works'],\n    ['wqd', 'application/vnd.wqd'],\n    ['wri', 'application/x-mswrite'],\n    ['wrl', 'model/vrml'],\n    ['wsc', 'message/vnd.wfa.wsc'],\n    ['wsdl', 'application/wsdl+xml'],\n    ['wspolicy', 'application/wspolicy+xml'],\n    ['wtb', 'application/vnd.webturbo'],\n    ['wvx', 'video/x-ms-wvx'],\n    ['x3d', 'model/x3d+xml'],\n    ['x3db', 'model/x3d+fastinfoset'],\n    ['x3dbz', 'model/x3d+binary'],\n    ['x3dv', 'model/x3d-vrml'],\n    ['x3dvz', 'model/x3d+vrml'],\n    ['x3dz', 'model/x3d+xml'],\n    ['x32', 'application/x-authorware-bin'],\n    ['x_b', 'model/vnd.parasolid.transmit.binary'],\n    ['x_t', 'model/vnd.parasolid.transmit.text'],\n    ['xaml', 'application/xaml+xml'],\n    ['xap', 'application/x-silverlight-app'],\n    ['xar', 'application/vnd.xara'],\n    ['xav', 'application/xcap-att+xml'],\n    ['xbap', 'application/x-ms-xbap'],\n    ['xbd', 'application/vnd.fujixerox.docuworks.binder'],\n    ['xbm', 'image/x-xbitmap'],\n    ['xca', 'application/xcap-caps+xml'],\n    ['xcs', 'application/calendar+xml'],\n    ['xdf', 'application/xcap-diff+xml'],\n    ['xdm', 'application/vnd.syncml.dm+xml'],\n    ['xdp', 'application/vnd.adobe.xdp+xml'],\n    ['xdssc', 'application/dssc+xml'],\n    ['xdw', 'application/vnd.fujixerox.docuworks'],\n    ['xel', 'application/xcap-el+xml'],\n    ['xenc', 'application/xenc+xml'],\n    ['xer', 'application/patch-ops-error+xml'],\n    ['xfdf', 'application/vnd.adobe.xfdf'],\n    ['xfdl', 'application/vnd.xfdl'],\n    ['xht', 'application/xhtml+xml'],\n    ['xhtml', 'application/xhtml+xml'],\n    ['xhvml', 'application/xv+xml'],\n    ['xif', 'image/vnd.xiff'],\n    ['xl', 'application/excel'],\n    ['xla', 'application/vnd.ms-excel'],\n    ['xlam', 'application/vnd.ms-excel.addin.macroEnabled.12'],\n    ['xlc', 'application/vnd.ms-excel'],\n    ['xlf', 'application/xliff+xml'],\n    ['xlm', 'application/vnd.ms-excel'],\n    ['xls', 'application/vnd.ms-excel'],\n    ['xlsb', 'application/vnd.ms-excel.sheet.binary.macroEnabled.12'],\n    ['xlsm', 'application/vnd.ms-excel.sheet.macroEnabled.12'],\n    ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],\n    ['xlt', 'application/vnd.ms-excel'],\n    ['xltm', 'application/vnd.ms-excel.template.macroEnabled.12'],\n    ['xltx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'],\n    ['xlw', 'application/vnd.ms-excel'],\n    ['xm', 'audio/xm'],\n    ['xml', 'application/xml'],\n    ['xns', 'application/xcap-ns+xml'],\n    ['xo', 'application/vnd.olpc-sugar'],\n    ['xop', 'application/xop+xml'],\n    ['xpi', 'application/x-xpinstall'],\n    ['xpl', 'application/xproc+xml'],\n    ['xpm', 'image/x-xpixmap'],\n    ['xpr', 'application/vnd.is-xpr'],\n    ['xps', 'application/vnd.ms-xpsdocument'],\n    ['xpw', 'application/vnd.intercon.formnet'],\n    ['xpx', 'application/vnd.intercon.formnet'],\n    ['xsd', 'application/xml'],\n    ['xsl', 'application/xml'],\n    ['xslt', 'application/xslt+xml'],\n    ['xsm', 'application/vnd.syncml+xml'],\n    ['xspf', 'application/xspf+xml'],\n    ['xul', 'application/vnd.mozilla.xul+xml'],\n    ['xvm', 'application/xv+xml'],\n    ['xvml', 'application/xv+xml'],\n    ['xwd', 'image/x-xwindowdump'],\n    ['xyz', 'chemical/x-xyz'],\n    ['xz', 'application/x-xz'],\n    ['yaml', 'text/yaml'],\n    ['yang', 'application/yang'],\n    ['yin', 'application/yin+xml'],\n    ['yml', 'text/yaml'],\n    ['ymp', 'text/x-suse-ymp'],\n    ['z', 'application/x-compress'],\n    ['z1', 'application/x-zmachine'],\n    ['z2', 'application/x-zmachine'],\n    ['z3', 'application/x-zmachine'],\n    ['z4', 'application/x-zmachine'],\n    ['z5', 'application/x-zmachine'],\n    ['z6', 'application/x-zmachine'],\n    ['z7', 'application/x-zmachine'],\n    ['z8', 'application/x-zmachine'],\n    ['zaz', 'application/vnd.zzazz.deck+xml'],\n    ['zip', 'application/zip'],\n    ['zir', 'application/vnd.zul'],\n    ['zirz', 'application/vnd.zul'],\n    ['zmm', 'application/vnd.handheld-entertainment+xml'],\n    ['zsh', 'text/x-scriptzsh']\n]);\n\n\nexport function toFileWithPath(file: FileWithPath, path?: string, h?: FileSystemHandle): FileWithPath {\n    const f = withMimeType(file);\n    const {webkitRelativePath} = file;\n    const p = typeof path === 'string'\n        ? path\n        // If <input webkitdirectory> is set,\n        // the File will have a {webkitRelativePath} property\n        // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\n        : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0\n            ? webkitRelativePath\n            : `./${file.name}`;\n    if (typeof f.path !== 'string') { // on electron, path is already set to the absolute path\n        setObjProp(f, 'path', p);\n    }\n    if (h !== undefined) {\n        Object.defineProperty(f, 'handle', {\n            value: h,\n            writable: false,\n            configurable: false,\n            enumerable: true\n        });\n    }\n    // Always populate a relative path so that even electron apps have access to a relativePath value\n    setObjProp(f, 'relativePath', p);\n    return f;\n}\n\nexport interface FileWithPath extends File {\n    readonly path?: string;\n    readonly handle?: FileSystemFileHandle;\n    readonly relativePath?: string;\n}\n\nfunction withMimeType(file: FileWithPath) {\n    const {name} = file;\n    const hasExtension = name && name.lastIndexOf('.') !== -1;\n\n    if (hasExtension && !file.type) {\n        const ext = name.split('.')\n            .pop()!.toLowerCase();\n        const type = COMMON_MIME_TYPES.get(ext);\n        if (type) {\n            Object.defineProperty(file, 'type', {\n                value: type,\n                writable: false,\n                configurable: false,\n                enumerable: true\n            });\n        }\n    }\n\n    return file;\n}\n\nfunction setObjProp(f: FileWithPath, key: string, value: string) {\n    Object.defineProperty(f, key, {\n        value,\n        writable: false,\n        configurable: false,\n        enumerable: true\n    })\n}\n", "import {FileWithPath, toFileWithPath} from './file';\n\n\nconst FILES_TO_IGNORE = [\n    // Thumbnail cache files for macOS and Windows\n    '.DS_Store', // macOs\n    'Thumbs.db'  // Windows\n];\n\n\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n *\n * EXPERIMENTAL: A list of https://developer.mozilla.org/en-US/docs/Web/API/FileSystemHandle objects can also be passed as an arg\n * and a list of File objects will be returned.\n *\n * @param evt\n */\nexport async function fromEvent(evt: Event | any): Promise<(FileWithPath | DataTransferItem)[]> {\n    if (isObject<DragEvent>(evt) && isDataTransfer(evt.dataTransfer)) {\n        return getDataTransferFiles(evt.dataTransfer, evt.type);\n    } else if (isChangeEvt(evt)) {\n        return getInputFiles(evt);\n    } else if (Array.isArray(evt) && evt.every(item => 'getFile' in item && typeof item.getFile === 'function')) {\n        return getFsHandleFiles(evt)\n    }\n    return [];\n}\n\nfunction isDataTransfer(value: any): value is DataTransfer {\n    return isObject(value);\n}\n\nfunction isChangeEvt(value: any): value is Event {\n    return isObject<Event>(value) && isObject(value.target);\n}\n\nfunction isObject<T>(v: any): v is T {\n    return typeof v === 'object' && v !== null\n}\n\nfunction getInputFiles(evt: Event) {\n    return fromList<FileWithPath>((evt.target as HTMLInputElement).files).map(file => toFileWithPath(file));\n}\n\n// Ee expect each handle to be https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileHandle\nasync function getFsHandleFiles(handles: any[]) {\n    const files = await Promise.all(handles.map(h => h.getFile()));\n    return files.map(file => toFileWithPath(file));\n}\n\n\nasync function getDataTransferFiles(dt: DataTransfer, type: string) {\n    // IE11 does not support dataTransfer.items\n    // See https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/items#Browser_compatibility\n    if (dt.items) {\n        const items = fromList<DataTransferItem>(dt.items)\n            .filter(item => item.kind === 'file');\n        // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n        // only 'dragstart' and 'drop' has access to the data (source node)\n        if (type !== 'drop') {\n            return items;\n        }\n        const files = await Promise.all(items.map(toFilePromises));\n        return noIgnoredFiles(flatten<FileWithPath>(files));\n    }\n\n    return noIgnoredFiles(fromList<FileWithPath>(dt.files)\n        .map(file => toFileWithPath(file)));\n}\n\nfunction noIgnoredFiles(files: FileWithPath[]) {\n    return files.filter(file => FILES_TO_IGNORE.indexOf(file.name) === -1);\n}\n\n// IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\nfunction fromList<T>(items: DataTransferItemList | FileList | null): T[] {\n    if (items === null) {\n        return [];\n    }\n\n    const files = [];\n\n    // tslint:disable: prefer-for-of\n    for (let i = 0; i < items.length; i++) {\n        const file = items[i];\n        files.push(file);\n    }\n\n    return files as any;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\nfunction toFilePromises(item: DataTransferItem) {\n    if (typeof item.webkitGetAsEntry !== 'function') {\n        return fromDataTransferItem(item);\n    }\n\n    const entry = item.webkitGetAsEntry();\n\n    // Safari supports dropping an image node from a different window and can be retrieved using\n    // the DataTransferItem.getAsFile() API\n    // NOTE: FileSystemEntry.file() throws if trying to get the file\n    if (entry && entry.isDirectory) {\n        return fromDirEntry(entry) as any;\n    }\n\n    return fromDataTransferItem(item, entry);\n}\n\nfunction flatten<T>(items: any[]): T[] {\n    return items.reduce((acc, files) => [\n        ...acc,\n        ...(Array.isArray(files) ? flatten(files) : [files])\n    ], []);\n}\n\nasync function fromDataTransferItem(item: DataTransferItem, entry?: FileSystemEntry | null) {\n    // Check if we're in a secure context; due to a bug in Chrome (as far as we know)\n    // the browser crashes when calling this API (yet to be confirmed as a consistent behaviour).\n    //\n    // See:\n    // - https://issues.chromium.org/issues/40186242\n    // - https://github.com/react-dropzone/react-dropzone/issues/1397\n    if (globalThis.isSecureContext && typeof (item as any).getAsFileSystemHandle === 'function') {\n        const h = await (item as any).getAsFileSystemHandle();\n        if (h === null) {\n            throw new Error(`${item} is not a File`);\n        }\n        // It seems that the handle can be `undefined` (see https://github.com/react-dropzone/file-selector/issues/120),\n        // so we check if it isn't; if it is, the code path continues to the next API (`getAsFile`).\n        if (h !== undefined) {\n            const file = await h.getFile();\n            file.handle = h;\n            return toFileWithPath(file);\n        }\n    }\n    const file = item.getAsFile();\n    if (!file) {\n        throw new Error(`${item} is not a File`);\n    }\n    const fwp = toFileWithPath(file, entry?.fullPath ?? undefined);\n    return fwp;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\nasync function fromEntry(entry: any) {\n    return entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\nfunction fromDirEntry(entry: any) {\n    const reader = entry.createReader();\n\n    return new Promise<FileArray[]>((resolve, reject) => {\n        const entries: Promise<FileValue[]>[] = [];\n\n        function readEntries() {\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n            reader.readEntries(async (batch: any[]) => {\n                if (!batch.length) {\n                    // Done reading directory\n                    try {\n                        const files = await Promise.all(entries);\n                        resolve(files);\n                    } catch (err) {\n                        reject(err);\n                    }\n                } else {\n                    const items = Promise.all(batch.map(fromEntry));\n                    entries.push(items);\n\n                    // Continue reading\n                    readEntries();\n                }\n            }, (err: any) => {\n                reject(err);\n            });\n        }\n\n        readEntries();\n    });\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nasync function fromFileEntry(entry: any) {\n    return new Promise<FileWithPath>((resolve, reject) => {\n        entry.file((file: FileWithPath) => {\n            const fwp = toFileWithPath(file, entry.fullPath);\n            resolve(fwp);\n        }, (err: any) => {\n            reject(err);\n        });\n    });\n}\n\n// Infinite type recursion\n// https://github.com/Microsoft/TypeScript/issues/3496#issuecomment-128553540\ninterface FileArray extends Array<FileValue> {}\ntype FileValue = FileWithPath\n    | FileArray[];\n", "function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport _accepts from \"attr-accept\";\nvar accepts = typeof _accepts === \"function\" ? _accepts : _accepts.default; // Error codes\n\nexport var FILE_INVALID_TYPE = \"file-invalid-type\";\nexport var FILE_TOO_LARGE = \"file-too-large\";\nexport var FILE_TOO_SMALL = \"file-too-small\";\nexport var TOO_MANY_FILES = \"too-many-files\";\nexport var ErrorCode = {\n  FileInvalidType: FILE_INVALID_TYPE,\n  FileTooLarge: FILE_TOO_LARGE,\n  FileTooSmall: FILE_TOO_SMALL,\n  TooManyFiles: TOO_MANY_FILES\n};\n/**\n *\n * @param {string} accept\n */\n\nexport var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr() {\n  var accept = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var acceptArr = accept.split(\",\");\n  var msg = acceptArr.length > 1 ? \"one of \".concat(acceptArr.join(\", \")) : acceptArr[0];\n  return {\n    code: FILE_INVALID_TYPE,\n    message: \"File type must be \".concat(msg)\n  };\n};\nexport var getTooLargeRejectionErr = function getTooLargeRejectionErr(maxSize) {\n  return {\n    code: FILE_TOO_LARGE,\n    message: \"File is larger than \".concat(maxSize, \" \").concat(maxSize === 1 ? \"byte\" : \"bytes\")\n  };\n};\nexport var getTooSmallRejectionErr = function getTooSmallRejectionErr(minSize) {\n  return {\n    code: FILE_TOO_SMALL,\n    message: \"File is smaller than \".concat(minSize, \" \").concat(minSize === 1 ? \"byte\" : \"bytes\")\n  };\n};\nexport var TOO_MANY_FILES_REJECTION = {\n  code: TOO_MANY_FILES,\n  message: \"Too many files\"\n};\n/**\n * Check if file is accepted.\n *\n * Firefox versions prior to 53 return a bogus MIME type for every file drag,\n * so dragovers with that MIME type will always be accepted.\n *\n * @param {File} file\n * @param {string} accept\n * @returns\n */\n\nexport function fileAccepted(file, accept) {\n  var isAcceptable = file.type === \"application/x-moz-file\" || accepts(file, accept);\n  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];\n}\nexport function fileMatchSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\n      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];\n    } else if (isDefined(minSize) && file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];else if (isDefined(maxSize) && file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\n  }\n\n  return [true, null];\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n/**\n *\n * @param {object} options\n * @param {File[]} options.files\n * @param {string} [options.accept]\n * @param {number} [options.minSize]\n * @param {number} [options.maxSize]\n * @param {boolean} [options.multiple]\n * @param {number} [options.maxFiles]\n * @param {(f: File) => FileError|FileError[]|null} [options.validator]\n * @returns\n */\n\n\nexport function allFilesAccepted(_ref) {\n  var files = _ref.files,\n      accept = _ref.accept,\n      minSize = _ref.minSize,\n      maxSize = _ref.maxSize,\n      multiple = _ref.multiple,\n      maxFiles = _ref.maxFiles,\n      validator = _ref.validator;\n\n  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {\n    return false;\n  }\n\n  return files.every(function (file) {\n    var _fileAccepted = fileAccepted(file, accept),\n        _fileAccepted2 = _slicedToArray(_fileAccepted, 1),\n        accepted = _fileAccepted2[0];\n\n    var _fileMatchSize = fileMatchSize(file, minSize, maxSize),\n        _fileMatchSize2 = _slicedToArray(_fileMatchSize, 1),\n        sizeMatch = _fileMatchSize2[0];\n\n    var customErrors = validator ? validator(file) : null;\n    return accepted && sizeMatch && !customErrors;\n  });\n} // React's synthetic events has event.isPropagationStopped,\n// but to remain compatibility with other libs (Preact) fall back\n// to check event.cancelBubble\n\nexport function isPropagationStopped(event) {\n  if (typeof event.isPropagationStopped === \"function\") {\n    return event.isPropagationStopped();\n  } else if (typeof event.cancelBubble !== \"undefined\") {\n    return event.cancelBubble;\n  }\n\n  return false;\n}\nexport function isEvtWithFiles(event) {\n  if (!event.dataTransfer) {\n    return !!event.target && !!event.target.files;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\n\n\n  return Array.prototype.some.call(event.dataTransfer.types, function (type) {\n    return type === \"Files\" || type === \"application/x-moz-file\";\n  });\n}\nexport function isKindFile(item) {\n  return _typeof(item) === \"object\" && item !== null && item.kind === \"file\";\n} // allow the entire document to be a drag target\n\nexport function onDocumentDragOver(event) {\n  event.preventDefault();\n}\n\nfunction isIe(userAgent) {\n  return userAgent.indexOf(\"MSIE\") !== -1 || userAgent.indexOf(\"Trident/\") !== -1;\n}\n\nfunction isEdge(userAgent) {\n  return userAgent.indexOf(\"Edge/\") !== -1;\n}\n\nexport function isIeOrEdge() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\n  return isIe(userAgent) || isEdge(userAgent);\n}\n/**\n * This is intended to be used to compose event handlers\n * They are executed in order until one of them calls `event.isPropagationStopped()`.\n * Note that the check is done on the first invoke too,\n * meaning that if propagation was stopped before invoking the fns,\n * no handlers will be executed.\n *\n * @param {Function} fns the event hanlder functions\n * @return {Function} the event handler to add to an element\n */\n\nexport function composeEventHandlers() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function (event) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return fns.some(function (fn) {\n      if (!isPropagationStopped(event) && fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return isPropagationStopped(event);\n    });\n  };\n}\n/**\n * canUseFileSystemAccessAPI checks if the [File System Access API](https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API)\n * is supported by the browser.\n * @returns {boolean}\n */\n\nexport function canUseFileSystemAccessAPI() {\n  return \"showOpenFilePicker\" in window;\n}\n/**\n * Convert the `{accept}` dropzone prop to the\n * `{types}` option for https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker\n *\n * @param {AcceptProp} accept\n * @returns {{accept: string[]}[]}\n */\n\nexport function pickerOptionsFromAccept(accept) {\n  if (isDefined(accept)) {\n    var acceptForPicker = Object.entries(accept).filter(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          mimeType = _ref3[0],\n          ext = _ref3[1];\n\n      var ok = true;\n\n      if (!isMIMEType(mimeType)) {\n        console.warn(\"Skipped \\\"\".concat(mimeType, \"\\\" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.\"));\n        ok = false;\n      }\n\n      if (!Array.isArray(ext) || !ext.every(isExt)) {\n        console.warn(\"Skipped \\\"\".concat(mimeType, \"\\\" because an invalid file extension was provided.\"));\n        ok = false;\n      }\n\n      return ok;\n    }).reduce(function (agg, _ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          mimeType = _ref5[0],\n          ext = _ref5[1];\n\n      return _objectSpread(_objectSpread({}, agg), {}, _defineProperty({}, mimeType, ext));\n    }, {});\n    return [{\n      // description is required due to https://crbug.com/1264708\n      description: \"Files\",\n      accept: acceptForPicker\n    }];\n  }\n\n  return accept;\n}\n/**\n * Convert the `{accept}` dropzone prop to an array of MIME types/extensions.\n * @param {AcceptProp} accept\n * @returns {string}\n */\n\nexport function acceptPropAsAcceptAttr(accept) {\n  if (isDefined(accept)) {\n    return Object.entries(accept).reduce(function (a, _ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          mimeType = _ref7[0],\n          ext = _ref7[1];\n\n      return [].concat(_toConsumableArray(a), [mimeType], _toConsumableArray(ext));\n    }, []) // Silently discard invalid entries as pickerOptionsFromAccept warns about these\n    .filter(function (v) {\n      return isMIMEType(v) || isExt(v);\n    }).join(\",\");\n  }\n\n  return undefined;\n}\n/**\n * Check if v is an exception caused by aborting a request (e.g window.showOpenFilePicker()).\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\n * @param {any} v\n * @returns {boolean} True if v is an abort exception.\n */\n\nexport function isAbort(v) {\n  return v instanceof DOMException && (v.name === \"AbortError\" || v.code === v.ABORT_ERR);\n}\n/**\n * Check if v is a security error.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/DOMException.\n * @param {any} v\n * @returns {boolean} True if v is a security error.\n */\n\nexport function isSecurityError(v) {\n  return v instanceof DOMException && (v.name === \"SecurityError\" || v.code === v.SECURITY_ERR);\n}\n/**\n * Check if v is a MIME type string.\n *\n * See accepted format: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers.\n *\n * @param {string} v\n */\n\nexport function isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || v === \"application/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\n/**\n * Check if v is a file extension.\n * @param {string} v\n */\n\nexport function isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\n/**\n * @typedef {Object.<string, string[]>} AcceptProp\n */\n\n/**\n * @typedef {object} FileError\n * @property {string} message\n * @property {ErrorCode|string} code\n */\n\n/**\n * @typedef {\"file-invalid-type\"|\"file-too-large\"|\"file-too-small\"|\"too-many-files\"} ErrorCode\n */", "import { createContext, useCallback, useContext, useEffect } from 'react';\n\nimport { Flex, Box, Typography } from '@strapi/design-system';\nimport { useDropzone } from 'react-dropzone';\n\n/* -------------------------------------------------------------------------------------------------\n * Hooks\n * -----------------------------------------------------------------------------------------------*/\n\ninterface UseClipboardPasteProps {\n  onAddFiles: (files: File[]) => void;\n  isEnabled?: boolean;\n  accept?: {\n    [key: string]: string[];\n  };\n}\n\nexport const useClipboardPasteImages = ({\n  onAddFiles,\n  isEnabled = false,\n}: UseClipboardPasteProps) => {\n  const handlePaste = useCallback(\n    async (e: ClipboardEvent) => {\n      if (!isEnabled) return;\n      // Try to get items from clipboard\n      const items = e.clipboardData?.items;\n\n      if (!items || items.length === 0) return;\n\n      const files: File[] = [];\n\n      // Process clipboard items\n      for (const item of items) {\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file && file.type.startsWith('image/')) {\n            files.push(file);\n          }\n        }\n      }\n\n      if (files.length > 0) {\n        onAddFiles(files);\n        e.preventDefault(); // Prevent the default paste behavior\n      }\n    },\n    [isEnabled, onAddFiles]\n  );\n\n  // Set up the paste event listener\n  useEffect(() => {\n    document.addEventListener('paste', handlePaste);\n    return () => {\n      document.removeEventListener('paste', handlePaste);\n    };\n  }, [handlePaste]);\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Dropzone Context\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface DropzoneContextValue {\n  isEnabled?: boolean;\n  isDragActive?: boolean;\n  onAddFiles?: (files: File[]) => void;\n}\n\nconst DropzoneContext = createContext<DropzoneContextValue>({});\n\nexport const useDropzoneContext = () => useContext(DropzoneContext);\n\n/* -------------------------------------------------------------------------------------------------\n * Dropzone Root\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface DropzoneRootProps extends React.ComponentPropsWithoutRef<typeof Flex> {\n  children: React.ReactNode;\n  isEnabled?: boolean;\n  onAddFiles?: (files: File[]) => void;\n  accept?: {\n    [key: string]: string[];\n  };\n}\n\nexport const Root = ({\n  children,\n  isEnabled = true,\n  onAddFiles = () => {},\n  accept = { 'image/*': [] },\n  ...props\n}: DropzoneRootProps) => {\n  // Use clipboard paste hook for handling clipboard events\n  useClipboardPasteImages({ onAddFiles, isEnabled, accept });\n\n  // Use dropzone for drag and drop functionality\n  const { getRootProps, isDragActive } = useDropzone({\n    onDrop: onAddFiles,\n    noClick: true,\n    noKeyboard: true,\n    accept,\n  });\n\n  return (\n    <DropzoneContext.Provider\n      value={{\n        isEnabled,\n        isDragActive,\n        onAddFiles,\n      }}\n    >\n      <Flex\n        direction=\"column\"\n        alignItems=\"flex-start\"\n        width=\"100%\"\n        position=\"relative\"\n        {...getRootProps()}\n        {...props}\n      >\n        {children}\n      </Flex>\n    </DropzoneContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Dropzone Area\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DropzoneAreaProps extends React.ComponentPropsWithoutRef<typeof Flex> {\n  error?: string | null;\n  title?: string;\n}\n\nconst Area = ({ error, title, ...props }: DropzoneAreaProps) => {\n  const { isEnabled, isDragActive } = useDropzoneContext();\n\n  // If not dragging, don't render the dropzone area\n  if (!isDragActive) {\n    return null;\n  }\n\n  const displayTitle = title || 'Drop images here';\n\n  return (\n    <Flex\n      position=\"absolute\"\n      top={0}\n      left={0}\n      right={0}\n      bottom={0}\n      zIndex={2}\n      cursor={isEnabled ? 'pointer' : 'not-allowed'}\n      width=\"100%\"\n      height=\"100%\"\n      borderStyle=\"dashed\"\n      borderColor={error ? 'danger600' : 'primary500'}\n      background={error ? 'danger100' : 'primary100'}\n      hasRadius\n      padding={7}\n      justifyContent=\"center\"\n      direction=\"column\"\n      alignItems=\"center\"\n      gap={2}\n      {...props}\n    >\n      <Box width=\"24px\" height=\"24px\">\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M19.5 13.572L12 6.072L4.5 13.572\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M12 6.072V20.072\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M3.9998 20.072H20.0001\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </Box>\n      <Flex direction=\"column\" alignItems=\"center\" gap={2}>\n        <Typography variant=\"omega\" textColor=\"neutral600\" textAlign=\"center\">\n          {displayTitle}\n        </Typography>\n        {error && (\n          <Typography variant=\"pi\" textColor=\"danger600\">\n            {error}\n          </Typography>\n        )}\n      </Flex>\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Dropzone Compound\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Dropzone = {\n  Root,\n  Area,\n  useDropzoneContext,\n};\n", "import { createContext, useContext } from 'react';\n\nimport { Box, Flex, IconButton } from '@strapi/design-system';\nimport { Cross } from '@strapi/icons';\nimport { styled } from 'styled-components';\n\nimport { ANIMATIONS } from './animations';\n\ntype PanelSize = 'sm' | 'md' | 'lg';\ntype PanelPosition = 'bottom-right' | 'bottom-left' | 'top-right' | 'top-left';\n\ninterface PanelContextValue {\n  size: PanelSize;\n  position: PanelPosition;\n  isOpen: boolean;\n  onToggle: () => void;\n}\n\nconst PanelContext = createContext<PanelContextValue>({\n  size: 'md',\n  position: 'bottom-right',\n  isOpen: false,\n  onToggle: () => {},\n});\n\nconst PANEL_SIZES: Record<PanelSize, { width: string; height: string }> = {\n  sm: { width: '350px', height: '500px' },\n  md: { width: '480px', height: '600px' },\n  lg: { width: '600px', height: '700px' },\n};\n\nconst PANEL_POSITIONS: Record<PanelPosition, { [key: string]: number }> = {\n  'bottom-right': { bottom: 4, right: 4 },\n  'bottom-left': { bottom: 4, left: 4 },\n  'top-right': { top: 4, right: 4 },\n  'top-left': { top: 4, left: 4 },\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Panel Root\n * -----------------------------------------------------------------------------------------------*/\ninterface RootProps {\n  children: React.ReactNode;\n  size?: PanelSize;\n  position?: PanelPosition;\n  isOpen?: boolean;\n  onToggle?: () => void;\n  toggleIcon?: React.ReactNode;\n}\n\nconst FixedWrapper = styled(Box)<{ $position: PanelPosition }>`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  z-index: 11;\n  align-items: ${({ $position }) => ($position.includes('right') ? 'flex-end' : 'flex-start')};\n  ${({ $position, theme }) =>\n    Object.entries(PANEL_POSITIONS[$position]).reduce(\n      (acc, [key, value]) => ({\n        ...acc,\n        [key]: theme.spaces[value],\n      }),\n      {}\n    )}\n`;\n\nconst PanelContainer = styled(Box)<{ $size: PanelSize; $position: PanelPosition }>`\n  width: ${({ $size }) => PANEL_SIZES[$size].width};\n  max-height: 85vh;\n  max-width: 85vw;\n  display: flex;\n  flex-direction: column;\n  height: ${({ $size }) => PANEL_SIZES[$size].height};\n\n  @media (prefers-reduced-motion: no-preference) {\n    animation-duration: 200ms;\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n    &[data-state='open'] {\n      animation-name: ${({ $position }) =>\n        $position.startsWith('top') ? ANIMATIONS.slideDownIn : ANIMATIONS.slideUpIn};\n    }\n\n    &[data-state='closed'] {\n      animation-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n      animation-name: ${({ $position }) =>\n        $position.startsWith('top') ? ANIMATIONS.slideDownOut : ANIMATIONS.slideUpOut};\n    }\n  }\n`;\n\nconst Root = ({\n  children,\n  size = 'md',\n  position = 'bottom-right',\n  isOpen = false,\n  onToggle = () => {},\n  toggleIcon,\n}: RootProps) => {\n  return (\n    <PanelContext.Provider value={{ size, position, isOpen, onToggle }}>\n      <FixedWrapper $position={position}>\n        {isOpen ? (\n          <PanelContainer\n            $size={size}\n            $position={position}\n            background=\"neutral0\"\n            shadow=\"popupShadow\"\n            hasRadius\n            borderColor=\"neutral200\"\n            borderStyle=\"solid\"\n            borderWidth=\"1px\"\n            data-state={isOpen ? 'open' : 'closed'}\n          >\n            {children}\n          </PanelContainer>\n        ) : null}\n        {toggleIcon && !isOpen && toggleIcon}\n      </FixedWrapper>\n    </PanelContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Header\n * -----------------------------------------------------------------------------------------------*/\nconst Header = ({ children }: { children: React.ReactNode }) => (\n  // Adjust padding to fit title and right icons\n  <Box padding={[2, 2, 2, 4]} borderColor=\"neutral150\" borderStyle=\"solid\" borderWidth=\"0 0 1px 0\">\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      {children}\n    </Flex>\n  </Box>\n);\n\n/* -------------------------------------------------------------------------------------------------\n * Body\n * -----------------------------------------------------------------------------------------------*/\nconst Body = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <Box padding={4} flex=\"1\" overflow=\"auto\">\n      {children}\n    </Box>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Footer\n * -----------------------------------------------------------------------------------------------*/\nconst Footer = ({ children }: { children: React.ReactNode }) => <Box padding={4}>{children}</Box>;\n\n/* -------------------------------------------------------------------------------------------------\n * Close Panel\n * -----------------------------------------------------------------------------------------------*/\nconst Close = ({ label }: { label?: string }) => {\n  const { onToggle } = usePanel();\n\n  return (\n    <IconButton onClick={onToggle} variant=\"ghost\" label={label || 'Close'}>\n      <Cross />\n    </IconButton>\n  );\n};\n\nexport const Panel = {\n  Root,\n  Header,\n  Body,\n  Footer,\n  Close,\n};\n\nexport const usePanel = () => useContext(PanelContext);\n", "interface FigmaIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const FigmaIcon = (props: FigmaIconProps) => {\n  return (\n    <svg\n      width={props.width || 16}\n      height={props.height || 16}\n      viewBox=\"0 0 200 300\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      aria-label=\"Figma logo\"\n      style={{ display: 'block', margin: '0 auto', ...props.style }}\n      {...props}\n    >\n      <title>Figma.logo</title>\n      <desc>Created using Figma</desc>\n      <path\n        d=\"M50 300c27.6 0 50-22.4 50-50v-50H50c-27.6 0-50 22.4-50 50s22.4 50 50 50z\"\n        fill=\"#0acf83\"\n      />\n      <path d=\"M50 200c-27.6 0-50-22.4-50-50s22.4-50 50-50h50v100H50z\" fill=\"#a259ff\" />\n      <path d=\"M0 50C0 22.4 22.4 0 50 0h50v100H50C22.4 100 0 77.6 0 50z\" fill=\"#f24e1e\" />\n      <path d=\"M100 0h50c27.6 0 50 22.4 50 50s-22.4 50-50 50h-50V0z\" fill=\"#ff7262\" />\n      <path\n        d=\"M200 150c0 27.6-22.4 50-50 50s-50-22.4-50-50 22.4-50 50-50 50 22.4 50 50z\"\n        fill=\"#1abcfe\"\n      />\n    </svg>\n  );\n};\n", "interface StopIconProps extends React.SVGProps<SVGSVGElement> {}\n\nexport const StopIcon = (props: StopIconProps) => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <rect x=\"2\" y=\"2\" width=\"11\" height=\"11\" rx=\"2\" fill=\"white\" />\n    </svg>\n  );\n};\n", "import { createContext, useContext } from 'react';\n\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\n/* -------------------------------------------------------------------------------------------------\n * Input Context\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface InputContextValue {\n  isLoading?: boolean;\n}\n\nexport const InputContext = createContext<InputContextValue>({});\n\nexport const useInput = () => useContext(InputContext);\n\n/* -------------------------------------------------------------------------------------------------\n * Input Root\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface InputRootProps extends React.ComponentPropsWithoutRef<typeof Flex> {\n  children: React.ReactNode;\n  isLoading?: boolean;\n}\n\nexport const Root = ({ children, isLoading = false, ...props }: InputRootProps) => {\n  return (\n    <InputContext.Provider\n      value={{\n        isLoading,\n      }}\n    >\n      <Flex\n        direction=\"column\"\n        alignItems={'flex-start'}\n        width=\"100%\"\n        position=\"relative\"\n        {...props}\n      >\n        {children}\n      </Flex>\n    </InputContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Input Header\n * -----------------------------------------------------------------------------------------------*/\n\ninterface HeaderProps extends React.ComponentPropsWithoutRef<typeof Box> {\n  children: React.ReactNode;\n  isThinking?: boolean;\n  thinkingMessage?: string;\n}\n\nconst Header = ({ children, ...props }: HeaderProps) => {\n  return (\n    <Box\n      position=\"absolute\"\n      bottom={'102%'}\n      left={0}\n      right={0}\n      background=\"neutral0\"\n      width=\"100%\"\n      {...props}\n    >\n      {children}\n    </Box>\n  );\n};\n\nconst HeaderItem = styled(Box)`\n  padding: ${({ theme }) => theme.spaces[3]} 0};\n`;\n\n/* -------------------------------------------------------------------------------------------------\n * Input Attachments\n * -----------------------------------------------------------------------------------------------*/\ninterface InputAttachmentsProps extends React.ComponentPropsWithoutRef<typeof Flex> {\n  children: React.ReactNode;\n}\n\nconst Attachments = ({ children, gap = 2, ...props }: InputAttachmentsProps) => {\n  return (\n    <Flex gap={gap} wrap=\"wrap\" paddingBottom={2} maxHeight=\"150px\" overflow=\"auto\" {...props}>\n      {children}\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Input Content\n * -----------------------------------------------------------------------------------------------*/\n\nconst InputContainer = styled(Box)`\n  outline: none;\n  box-shadow: none;\n  transition-property: border-color, box-shadow, fill;\n  transition-duration: 0.2s;\n\n  &:focus-within {\n    border: 1px solid\n      ${({ theme, $hasError }) => ($hasError ? theme.colors.danger600 : theme.colors.primary600)};\n    box-shadow: ${({ theme, $hasError }) =>\n        $hasError ? theme.colors.danger600 : theme.colors.primary600}\n      0px 0px 0px 2px;\n  }\n`;\n\ninterface ContentProps extends React.ComponentPropsWithoutRef<typeof Box> {\n  children: React.ReactNode;\n  disclaimer?: string;\n  error?: boolean;\n}\n\nconst Content = ({ children, disclaimer, error = false, ...props }: ContentProps) => {\n  return (\n    <InputContainer\n      background=\"neutral0\"\n      hasRadius\n      borderColor={error ? 'danger600' : 'neutral200'}\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      width=\"100%\"\n      $hasError={error}\n      {...props}\n    >\n      <Box padding={3}>{children}</Box>\n      {disclaimer && (\n        <Box\n          background=\"neutral100\"\n          padding={[2, 3]}\n          borderColor=\"neutral200\"\n          borderWidth=\"1px 0 0 0\"\n          borderStyle=\"solid\"\n          borderRadius={'0 0 4px 4px'}\n        >\n          <Typography variant=\"pi\" textColor=\"neutral600\">\n            {disclaimer}\n          </Typography>\n        </Box>\n      )}\n    </InputContainer>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Input Actions\n * -----------------------------------------------------------------------------------------------*/\n\nconst Actions = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <Flex justifyContent=\"flex-end\" alignItems=\"center\" gap={2}>\n      {children}\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Input Compound\n * -----------------------------------------------------------------------------------------------*/\n\nexport const Input = {\n  Root,\n  Header,\n  HeaderItem,\n  Attachments,\n  Content,\n  Actions,\n  useInput,\n};\n", "import {dequal} from 'dequal'\n\n/**\n * @type {Set<string>}\n */\nconst codesWarned = new Set()\n\nclass AssertionError extends Error {\n  name = /** @type {const} */ ('Assertion')\n  code = /** @type {const} */ ('ERR_ASSERTION')\n\n  /**\n   * Create an assertion error.\n   *\n   * @param {string} message\n   *   Message explaining error.\n   * @param {unknown} actual\n   *   Value.\n   * @param {unknown} expected\n   *   Baseline.\n   * @param {string} operator\n   *   Name of equality operation.\n   * @param {boolean} generated\n   *   Whether `message` is a custom message or not\n   * @returns\n   *   Instance.\n   */\n  // eslint-disable-next-line max-params\n  constructor(message, actual, expected, operator, generated) {\n    super(message)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n\n    /**\n     * @type {unknown}\n     */\n    this.actual = actual\n\n    /**\n     * @type {unknown}\n     */\n    this.expected = expected\n\n    /**\n     * @type {boolean}\n     */\n    this.generated = generated\n\n    /**\n     * @type {string}\n     */\n    this.operator = operator\n  }\n}\n\nclass DeprecationError extends Error {\n  name = /** @type {const} */ ('DeprecationWarning')\n\n  /**\n   * Create a deprecation message.\n   *\n   * @param {string} message\n   *   Message explaining deprecation.\n   * @param {string | undefined} code\n   *   Deprecation identifier; deprecation messages will be generated only once per code.\n   * @returns\n   *   Instance.\n   */\n  constructor(message, code) {\n    super(message)\n\n    /**\n     * @type {string | undefined}\n     */\n    this.code = code\n  }\n}\n\n/**\n * Wrap a function or class to show a deprecation message when first called.\n *\n * > 👉 **Important**: only shows a message when the `development` condition is\n * > used, does nothing in production.\n *\n * When the resulting wrapped `fn` is called, emits a warning once to\n * `console.error` (`stderr`).\n * If a code is given, one warning message will be emitted in total per code.\n *\n * @template {Function} T\n *   Function or class kind.\n * @param {T} fn\n *   Function or class.\n * @param {string} message\n *   Message explaining deprecation.\n * @param {string | null | undefined} [code]\n *   Deprecation identifier (optional); deprecation messages will be generated\n *   only once per code.\n * @returns {T}\n *   Wrapped `fn`.\n */\nexport function deprecate(fn, message, code) {\n  let warned = false\n\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  Object.setPrototypeOf(deprecated, fn)\n\n  // @ts-expect-error: it’s perfect, typescript…\n  return deprecated\n\n  /**\n   * @this {unknown}\n   * @param  {...Array<unknown>} args\n   * @returns {unknown}\n   */\n  function deprecated(...args) {\n    if (!warned) {\n      warned = true\n\n      if (typeof code === 'string' && codesWarned.has(code)) {\n        // Empty.\n      } else {\n        console.error(new DeprecationError(message, code || undefined))\n\n        if (typeof code === 'string') codesWarned.add(code)\n      }\n    }\n\n    return new.target\n      ? Reflect.construct(fn, args, new.target)\n      : Reflect.apply(fn, this, args)\n  }\n}\n\n/**\n * Assert deep strict equivalence.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @template {unknown} T\n *   Expected kind.\n * @param {unknown} actual\n *   Value.\n * @param {T} expected\n *   Baseline.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected values to be deeply equal'`).\n * @returns {asserts actual is T}\n *   Nothing; throws when `actual` is not deep strict equal to `expected`.\n * @throws {AssertionError}\n *   Throws when `actual` is not deep strict equal to `expected`.\n */\nexport function equal(actual, expected, message) {\n  assert(\n    dequal(actual, expected),\n    actual,\n    expected,\n    'equal',\n    'Expected values to be deeply equal',\n    message\n  )\n}\n\n/**\n * Assert if `value` is truthy.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {unknown} value\n *   Value to assert.\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Expected value to be truthy'`).\n * @returns {asserts value}\n *   Nothing; throws when `value` is falsey.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function ok(value, message) {\n  assert(\n    Boolean(value),\n    false,\n    true,\n    'ok',\n    'Expected value to be truthy',\n    message\n  )\n}\n\n/**\n * Assert that a code path never happens.\n *\n * > 👉 **Important**: only asserts when the `development` condition is used,\n * > does nothing in production.\n *\n * @param {Error | string | null | undefined} [message]\n *   Message for assertion error (default: `'Unreachable'`).\n * @returns {never}\n *   Nothing; always throws.\n * @throws {AssertionError}\n *   Throws when `value` is falsey.\n */\nexport function unreachable(message) {\n  assert(false, false, true, 'ok', 'Unreachable', message)\n}\n\n/**\n * @param {boolean} bool\n *   Whether to skip this operation.\n * @param {unknown} actual\n *   Actual value.\n * @param {unknown} expected\n *   Expected value.\n * @param {string} operator\n *   Operator.\n * @param {string} defaultMessage\n *   Default message for operation.\n * @param {Error | string | null | undefined} userMessage\n *   User-provided message.\n * @returns {asserts bool}\n *   Nothing; throws when falsey.\n */\n// eslint-disable-next-line max-params\nfunction assert(bool, actual, expected, operator, defaultMessage, userMessage) {\n  if (!bool) {\n    throw userMessage instanceof Error\n      ? userMessage\n      : new AssertionError(\n          userMessage || defaultMessage,\n          actual,\n          expected,\n          operator,\n          !userMessage\n        )\n  }\n}\n", "/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n", "/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n", "/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n", "/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n", "import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n", "/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n", "import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n", "/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n", "/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n", "/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n", "/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n", "/**\n * @import {Element, ElementContent, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentProps, ElementType, ReactElement} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in Extract<ElementType, string>]?: ElementType<ComponentProps<Key> & ExtraProps>\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {createElement, useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    /* c8 ignore next 7 -- hooks are client-only. */\n    function () {\n      const file = createFile(options)\n      processor.run(processor.parse(file), file, function (error, tree) {\n        setError(error)\n        setTree(tree)\n      })\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  /* c8 ignore next -- hooks are client-only. */\n  if (error) throw error\n\n  /* c8 ignore next -- hooks are client-only. */\n  return tree ? post(tree, options) : createElement(Fragment)\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  // Wrap in `div` if there’s a class name.\n  if (options.className) {\n    tree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className: options.className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        tree.type === 'root' ? tree.children : [tree]\n      )\n    }\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    // @ts-expect-error\n    // React components are allowed to return numbers,\n    // but not according to the types in hast-util-to-jsx-runtime\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n", "/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n", "/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n", "/**\n * Character codes.\n *\n * This module is compiled away!\n *\n * micromark works based on character codes.\n * This module contains constants for the ASCII block and the replacement\n * character.\n * A couple of them are handled in a special way, such as the line endings\n * (CR, LF, and CR+LF, commonly known as end-of-line: EOLs), the tab (horizontal\n * tab) and its expansion based on what column it’s at (virtual space),\n * and the end-of-file (eof) character.\n * As values are preprocessed before handling them, the actual characters LF,\n * CR, HT, and NUL (which is present as the replacement character), are\n * guaranteed to not exist.\n *\n * Unicode basic latin block.\n */\nexport const codes = /** @type {const} */ ({\n  carriageReturn: -5,\n  lineFeed: -4,\n  carriageReturnLineFeed: -3,\n  horizontalTab: -2,\n  virtualSpace: -1,\n  eof: null,\n  nul: 0,\n  soh: 1,\n  stx: 2,\n  etx: 3,\n  eot: 4,\n  enq: 5,\n  ack: 6,\n  bel: 7,\n  bs: 8,\n  ht: 9, // `\\t`\n  lf: 10, // `\\n`\n  vt: 11, // `\\v`\n  ff: 12, // `\\f`\n  cr: 13, // `\\r`\n  so: 14,\n  si: 15,\n  dle: 16,\n  dc1: 17,\n  dc2: 18,\n  dc3: 19,\n  dc4: 20,\n  nak: 21,\n  syn: 22,\n  etb: 23,\n  can: 24,\n  em: 25,\n  sub: 26,\n  esc: 27,\n  fs: 28,\n  gs: 29,\n  rs: 30,\n  us: 31,\n  space: 32,\n  exclamationMark: 33, // `!`\n  quotationMark: 34, // `\"`\n  numberSign: 35, // `#`\n  dollarSign: 36, // `$`\n  percentSign: 37, // `%`\n  ampersand: 38, // `&`\n  apostrophe: 39, // `'`\n  leftParenthesis: 40, // `(`\n  rightParenthesis: 41, // `)`\n  asterisk: 42, // `*`\n  plusSign: 43, // `+`\n  comma: 44, // `,`\n  dash: 45, // `-`\n  dot: 46, // `.`\n  slash: 47, // `/`\n  digit0: 48, // `0`\n  digit1: 49, // `1`\n  digit2: 50, // `2`\n  digit3: 51, // `3`\n  digit4: 52, // `4`\n  digit5: 53, // `5`\n  digit6: 54, // `6`\n  digit7: 55, // `7`\n  digit8: 56, // `8`\n  digit9: 57, // `9`\n  colon: 58, // `:`\n  semicolon: 59, // `;`\n  lessThan: 60, // `<`\n  equalsTo: 61, // `=`\n  greaterThan: 62, // `>`\n  questionMark: 63, // `?`\n  atSign: 64, // `@`\n  uppercaseA: 65, // `A`\n  uppercaseB: 66, // `B`\n  uppercaseC: 67, // `C`\n  uppercaseD: 68, // `D`\n  uppercaseE: 69, // `E`\n  uppercaseF: 70, // `F`\n  uppercaseG: 71, // `G`\n  uppercaseH: 72, // `H`\n  uppercaseI: 73, // `I`\n  uppercaseJ: 74, // `J`\n  uppercaseK: 75, // `K`\n  uppercaseL: 76, // `L`\n  uppercaseM: 77, // `M`\n  uppercaseN: 78, // `N`\n  uppercaseO: 79, // `O`\n  uppercaseP: 80, // `P`\n  uppercaseQ: 81, // `Q`\n  uppercaseR: 82, // `R`\n  uppercaseS: 83, // `S`\n  uppercaseT: 84, // `T`\n  uppercaseU: 85, // `U`\n  uppercaseV: 86, // `V`\n  uppercaseW: 87, // `W`\n  uppercaseX: 88, // `X`\n  uppercaseY: 89, // `Y`\n  uppercaseZ: 90, // `Z`\n  leftSquareBracket: 91, // `[`\n  backslash: 92, // `\\`\n  rightSquareBracket: 93, // `]`\n  caret: 94, // `^`\n  underscore: 95, // `_`\n  graveAccent: 96, // `` ` ``\n  lowercaseA: 97, // `a`\n  lowercaseB: 98, // `b`\n  lowercaseC: 99, // `c`\n  lowercaseD: 100, // `d`\n  lowercaseE: 101, // `e`\n  lowercaseF: 102, // `f`\n  lowercaseG: 103, // `g`\n  lowercaseH: 104, // `h`\n  lowercaseI: 105, // `i`\n  lowercaseJ: 106, // `j`\n  lowercaseK: 107, // `k`\n  lowercaseL: 108, // `l`\n  lowercaseM: 109, // `m`\n  lowercaseN: 110, // `n`\n  lowercaseO: 111, // `o`\n  lowercaseP: 112, // `p`\n  lowercaseQ: 113, // `q`\n  lowercaseR: 114, // `r`\n  lowercaseS: 115, // `s`\n  lowercaseT: 116, // `t`\n  lowercaseU: 117, // `u`\n  lowercaseV: 118, // `v`\n  lowercaseW: 119, // `w`\n  lowercaseX: 120, // `x`\n  lowercaseY: 121, // `y`\n  lowercaseZ: 122, // `z`\n  leftCurlyBrace: 123, // `{`\n  verticalBar: 124, // `|`\n  rightCurlyBrace: 125, // `}`\n  tilde: 126, // `~`\n  del: 127,\n  // Unicode Specials block.\n  byteOrderMarker: 65_279,\n  // Unicode Specials block.\n  replacementCharacter: 65_533 // `�`\n})\n", "/**\n * This module is compiled away!\n *\n * Parsing markdown comes with a couple of constants, such as minimum or maximum\n * sizes of certain sequences.\n * Additionally, there are a couple symbols used inside micromark.\n * These are all defined here, but compiled away by scripts.\n */\nexport const constants = /** @type {const} */ ({\n  attentionSideAfter: 2, // Symbol to mark an attention sequence as after content: `a*`\n  attentionSideBefore: 1, // Symbol to mark an attention sequence as before content: `*a`\n  atxHeadingOpeningFenceSizeMax: 6, // 6 number signs is fine, 7 isn’t.\n  autolinkDomainSizeMax: 63, // 63 characters is fine, 64 is too many.\n  autolinkSchemeSizeMax: 32, // 32 characters is fine, 33 is too many.\n  cdataOpeningString: 'CDATA[', // And preceded by `<![`.\n  characterGroupPunctuation: 2, // Symbol used to indicate a character is punctuation\n  characterGroupWhitespace: 1, // Symbol used to indicate a character is whitespace\n  characterReferenceDecimalSizeMax: 7, // `&#9999999;`.\n  characterReferenceHexadecimalSizeMax: 6, // `&#xff9999;`.\n  characterReferenceNamedSizeMax: 31, // `&CounterClockwiseContourIntegral;`.\n  codeFencedSequenceSizeMin: 3, // At least 3 ticks or tildes are needed.\n  contentTypeContent: 'content',\n  contentTypeDocument: 'document',\n  contentTypeFlow: 'flow',\n  contentTypeString: 'string',\n  contentTypeText: 'text',\n  hardBreakPrefixSizeMin: 2, // At least 2 trailing spaces are needed.\n  htmlBasic: 6, // Symbol for `<div`\n  htmlCdata: 5, // Symbol for `<![CDATA[]]>`\n  htmlComment: 2, // Symbol for `<!---->`\n  htmlComplete: 7, // Symbol for `<x>`\n  htmlDeclaration: 4, // Symbol for `<!doctype>`\n  htmlInstruction: 3, // Symbol for `<?php?>`\n  htmlRawSizeMax: 8, // Length of `textarea`.\n  htmlRaw: 1, // Symbol for `<script>`\n  linkResourceDestinationBalanceMax: 32, // See: <https://spec.commonmark.org/0.30/#link-destination>, <https://github.com/remarkjs/react-markdown/issues/658#issuecomment-984345577>\n  linkReferenceSizeMax: 999, // See: <https://spec.commonmark.org/0.30/#link-label>\n  listItemValueSizeMax: 10, // See: <https://spec.commonmark.org/0.30/#ordered-list-marker>\n  numericBaseDecimal: 10,\n  numericBaseHexadecimal: 0x10,\n  tabSize: 4, // Tabs have a hard-coded size of 4, per CommonMark.\n  thematicBreakMarkerCountMin: 3, // At least 3 asterisks, dashes, or underscores are needed.\n  v8MaxSafeChunkSize: 10_000 // V8 (and potentially others) have problems injecting giant arrays into other arrays, hence we operate in chunks.\n})\n", "/**\n * This module is compiled away!\n *\n * Here is the list of all types of tokens exposed by micromark, with a short\n * explanation of what they include and where they are found.\n * In picking names, generally, the rule is to be as explicit as possible\n * instead of reusing names.\n * For example, there is a `definitionDestination` and a `resourceDestination`,\n * instead of one shared name.\n */\n\n// Note: when changing the next record, you must also change `TokenTypeMap`\n// in `micromark-util-types/index.d.ts`.\nexport const types = /** @type {const} */ ({\n  // Generic type for data, such as in a title, a destination, etc.\n  data: 'data',\n\n  // Generic type for syntactic whitespace (tabs, virtual spaces, spaces).\n  // Such as, between a fenced code fence and an info string.\n  whitespace: 'whitespace',\n\n  // Generic type for line endings (line feed, carriage return, carriage return +\n  // line feed).\n  lineEnding: 'lineEnding',\n\n  // A line ending, but ending a blank line.\n  lineEndingBlank: 'lineEndingBlank',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the start of a\n  // line.\n  linePrefix: 'linePrefix',\n\n  // Generic type for whitespace (tabs, virtual spaces, spaces) at the end of a\n  // line.\n  lineSuffix: 'lineSuffix',\n\n  // Whole ATX heading:\n  //\n  // ```markdown\n  // #\n  // ## Alpha\n  // ### Bravo ###\n  // ```\n  //\n  // Includes `atxHeadingSequence`, `whitespace`, `atxHeadingText`.\n  atxHeading: 'atxHeading',\n\n  // Sequence of number signs in an ATX heading (`###`).\n  atxHeadingSequence: 'atxHeadingSequence',\n\n  // Content in an ATX heading (`alpha`).\n  // Includes text.\n  atxHeadingText: 'atxHeadingText',\n\n  // Whole autolink (`<https://example.com>` or `<admin@example.com>`)\n  // Includes `autolinkMarker` and `autolinkProtocol` or `autolinkEmail`.\n  autolink: 'autolink',\n\n  // Email autolink w/o markers (`admin@example.com`)\n  autolinkEmail: 'autolinkEmail',\n\n  // Marker around an `autolinkProtocol` or `autolinkEmail` (`<` or `>`).\n  autolinkMarker: 'autolinkMarker',\n\n  // Protocol autolink w/o markers (`https://example.com`)\n  autolinkProtocol: 'autolinkProtocol',\n\n  // A whole character escape (`\\-`).\n  // Includes `escapeMarker` and `characterEscapeValue`.\n  characterEscape: 'characterEscape',\n\n  // The escaped character (`-`).\n  characterEscapeValue: 'characterEscapeValue',\n\n  // A whole character reference (`&amp;`, `&#8800;`, or `&#x1D306;`).\n  // Includes `characterReferenceMarker`, an optional\n  // `characterReferenceMarkerNumeric`, in which case an optional\n  // `characterReferenceMarkerHexadecimal`, and a `characterReferenceValue`.\n  characterReference: 'characterReference',\n\n  // The start or end marker (`&` or `;`).\n  characterReferenceMarker: 'characterReferenceMarker',\n\n  // Mark reference as numeric (`#`).\n  characterReferenceMarkerNumeric: 'characterReferenceMarkerNumeric',\n\n  // Mark reference as numeric (`x` or `X`).\n  characterReferenceMarkerHexadecimal: 'characterReferenceMarkerHexadecimal',\n\n  // Value of character reference w/o markers (`amp`, `8800`, or `1D306`).\n  characterReferenceValue: 'characterReferenceValue',\n\n  // Whole fenced code:\n  //\n  // ````markdown\n  // ```js\n  // alert(1)\n  // ```\n  // ````\n  codeFenced: 'codeFenced',\n\n  // A fenced code fence, including whitespace, sequence, info, and meta\n  // (` ```js `).\n  codeFencedFence: 'codeFencedFence',\n\n  // Sequence of grave accent or tilde characters (` ``` `) in a fence.\n  codeFencedFenceSequence: 'codeFencedFenceSequence',\n\n  // Info word (`js`) in a fence.\n  // Includes string.\n  codeFencedFenceInfo: 'codeFencedFenceInfo',\n\n  // Meta words (`highlight=\"1\"`) in a fence.\n  // Includes string.\n  codeFencedFenceMeta: 'codeFencedFenceMeta',\n\n  // A line of code.\n  codeFlowValue: 'codeFlowValue',\n\n  // Whole indented code:\n  //\n  // ```markdown\n  //     alert(1)\n  // ```\n  //\n  // Includes `lineEnding`, `linePrefix`, and `codeFlowValue`.\n  codeIndented: 'codeIndented',\n\n  // A text code (``` `alpha` ```).\n  // Includes `codeTextSequence`, `codeTextData`, `lineEnding`, and can include\n  // `codeTextPadding`.\n  codeText: 'codeText',\n\n  codeTextData: 'codeTextData',\n\n  // A space or line ending right after or before a tick.\n  codeTextPadding: 'codeTextPadding',\n\n  // A text code fence (` `` `).\n  codeTextSequence: 'codeTextSequence',\n\n  // Whole content:\n  //\n  // ```markdown\n  // [a]: b\n  // c\n  // =\n  // d\n  // ```\n  //\n  // Includes `paragraph` and `definition`.\n  content: 'content',\n  // Whole definition:\n  //\n  // ```markdown\n  // [micromark]: https://github.com/micromark/micromark\n  // ```\n  //\n  // Includes `definitionLabel`, `definitionMarker`, `whitespace`,\n  // `definitionDestination`, and optionally `lineEnding` and `definitionTitle`.\n  definition: 'definition',\n\n  // Destination of a definition (`https://github.com/micromark/micromark` or\n  // `<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteral` or `definitionDestinationRaw`.\n  definitionDestination: 'definitionDestination',\n\n  // Enclosed destination of a definition\n  // (`<https://github.com/micromark/micromark>`).\n  // Includes `definitionDestinationLiteralMarker` and optionally\n  // `definitionDestinationString`.\n  definitionDestinationLiteral: 'definitionDestinationLiteral',\n\n  // Markers of an enclosed definition destination (`<` or `>`).\n  definitionDestinationLiteralMarker: 'definitionDestinationLiteralMarker',\n\n  // Unenclosed destination of a definition\n  // (`https://github.com/micromark/micromark`).\n  // Includes `definitionDestinationString`.\n  definitionDestinationRaw: 'definitionDestinationRaw',\n\n  // Text in an destination (`https://github.com/micromark/micromark`).\n  // Includes string.\n  definitionDestinationString: 'definitionDestinationString',\n\n  // Label of a definition (`[micromark]`).\n  // Includes `definitionLabelMarker` and `definitionLabelString`.\n  definitionLabel: 'definitionLabel',\n\n  // Markers of a definition label (`[` or `]`).\n  definitionLabelMarker: 'definitionLabelMarker',\n\n  // Value of a definition label (`micromark`).\n  // Includes string.\n  definitionLabelString: 'definitionLabelString',\n\n  // Marker between a label and a destination (`:`).\n  definitionMarker: 'definitionMarker',\n\n  // Title of a definition (`\"x\"`, `'y'`, or `(z)`).\n  // Includes `definitionTitleMarker` and optionally `definitionTitleString`.\n  definitionTitle: 'definitionTitle',\n\n  // Marker around a title of a definition (`\"`, `'`, `(`, or `)`).\n  definitionTitleMarker: 'definitionTitleMarker',\n\n  // Data without markers in a title (`z`).\n  // Includes string.\n  definitionTitleString: 'definitionTitleString',\n\n  // Emphasis (`*alpha*`).\n  // Includes `emphasisSequence` and `emphasisText`.\n  emphasis: 'emphasis',\n\n  // Sequence of emphasis markers (`*` or `_`).\n  emphasisSequence: 'emphasisSequence',\n\n  // Emphasis text (`alpha`).\n  // Includes text.\n  emphasisText: 'emphasisText',\n\n  // The character escape marker (`\\`).\n  escapeMarker: 'escapeMarker',\n\n  // A hard break created with a backslash (`\\\\n`).\n  // Note: does not include the line ending.\n  hardBreakEscape: 'hardBreakEscape',\n\n  // A hard break created with trailing spaces (`  \\n`).\n  // Does not include the line ending.\n  hardBreakTrailing: 'hardBreakTrailing',\n\n  // Flow HTML:\n  //\n  // ```markdown\n  // <div\n  // ```\n  //\n  // Inlcudes `lineEnding`, `htmlFlowData`.\n  htmlFlow: 'htmlFlow',\n\n  htmlFlowData: 'htmlFlowData',\n\n  // HTML in text (the tag in `a <i> b`).\n  // Includes `lineEnding`, `htmlTextData`.\n  htmlText: 'htmlText',\n\n  htmlTextData: 'htmlTextData',\n\n  // Whole image (`![alpha](bravo)`, `![alpha][bravo]`, `![alpha][]`, or\n  // `![alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  image: 'image',\n\n  // Whole link label (`[*alpha*]`).\n  // Includes `labelLink` or `labelImage`, `labelText`, and `labelEnd`.\n  label: 'label',\n\n  // Text in an label (`*alpha*`).\n  // Includes text.\n  labelText: 'labelText',\n\n  // Start a link label (`[`).\n  // Includes a `labelMarker`.\n  labelLink: 'labelLink',\n\n  // Start an image label (`![`).\n  // Includes `labelImageMarker` and `labelMarker`.\n  labelImage: 'labelImage',\n\n  // Marker of a label (`[` or `]`).\n  labelMarker: 'labelMarker',\n\n  // Marker to start an image (`!`).\n  labelImageMarker: 'labelImageMarker',\n\n  // End a label (`]`).\n  // Includes `labelMarker`.\n  labelEnd: 'labelEnd',\n\n  // Whole link (`[alpha](bravo)`, `[alpha][bravo]`, `[alpha][]`, or `[alpha]`).\n  // Includes `label` and an optional `resource` or `reference`.\n  link: 'link',\n\n  // Whole paragraph:\n  //\n  // ```markdown\n  // alpha\n  // bravo.\n  // ```\n  //\n  // Includes text.\n  paragraph: 'paragraph',\n\n  // A reference (`[alpha]` or `[]`).\n  // Includes `referenceMarker` and an optional `referenceString`.\n  reference: 'reference',\n\n  // A reference marker (`[` or `]`).\n  referenceMarker: 'referenceMarker',\n\n  // Reference text (`alpha`).\n  // Includes string.\n  referenceString: 'referenceString',\n\n  // A resource (`(https://example.com \"alpha\")`).\n  // Includes `resourceMarker`, an optional `resourceDestination` with an optional\n  // `whitespace` and `resourceTitle`.\n  resource: 'resource',\n\n  // A resource destination (`https://example.com`).\n  // Includes `resourceDestinationLiteral` or `resourceDestinationRaw`.\n  resourceDestination: 'resourceDestination',\n\n  // A literal resource destination (`<https://example.com>`).\n  // Includes `resourceDestinationLiteralMarker` and optionally\n  // `resourceDestinationString`.\n  resourceDestinationLiteral: 'resourceDestinationLiteral',\n\n  // A resource destination marker (`<` or `>`).\n  resourceDestinationLiteralMarker: 'resourceDestinationLiteralMarker',\n\n  // A raw resource destination (`https://example.com`).\n  // Includes `resourceDestinationString`.\n  resourceDestinationRaw: 'resourceDestinationRaw',\n\n  // Resource destination text (`https://example.com`).\n  // Includes string.\n  resourceDestinationString: 'resourceDestinationString',\n\n  // A resource marker (`(` or `)`).\n  resourceMarker: 'resourceMarker',\n\n  // A resource title (`\"alpha\"`, `'alpha'`, or `(alpha)`).\n  // Includes `resourceTitleMarker` and optionally `resourceTitleString`.\n  resourceTitle: 'resourceTitle',\n\n  // A resource title marker (`\"`, `'`, `(`, or `)`).\n  resourceTitleMarker: 'resourceTitleMarker',\n\n  // Resource destination title (`alpha`).\n  // Includes string.\n  resourceTitleString: 'resourceTitleString',\n\n  // Whole setext heading:\n  //\n  // ```markdown\n  // alpha\n  // bravo\n  // =====\n  // ```\n  //\n  // Includes `setextHeadingText`, `lineEnding`, `linePrefix`, and\n  // `setextHeadingLine`.\n  setextHeading: 'setextHeading',\n\n  // Content in a setext heading (`alpha\\nbravo`).\n  // Includes text.\n  setextHeadingText: 'setextHeadingText',\n\n  // Underline in a setext heading, including whitespace suffix (`==`).\n  // Includes `setextHeadingLineSequence`.\n  setextHeadingLine: 'setextHeadingLine',\n\n  // Sequence of equals or dash characters in underline in a setext heading (`-`).\n  setextHeadingLineSequence: 'setextHeadingLineSequence',\n\n  // Strong (`**alpha**`).\n  // Includes `strongSequence` and `strongText`.\n  strong: 'strong',\n\n  // Sequence of strong markers (`**` or `__`).\n  strongSequence: 'strongSequence',\n\n  // Strong text (`alpha`).\n  // Includes text.\n  strongText: 'strongText',\n\n  // Whole thematic break:\n  //\n  // ```markdown\n  // * * *\n  // ```\n  //\n  // Includes `thematicBreakSequence` and `whitespace`.\n  thematicBreak: 'thematicBreak',\n\n  // A sequence of one or more thematic break markers (`***`).\n  thematicBreakSequence: 'thematicBreakSequence',\n\n  // Whole block quote:\n  //\n  // ```markdown\n  // > a\n  // >\n  // > b\n  // ```\n  //\n  // Includes `blockQuotePrefix` and flow.\n  blockQuote: 'blockQuote',\n  // The `>` or `> ` of a block quote.\n  blockQuotePrefix: 'blockQuotePrefix',\n  // The `>` of a block quote prefix.\n  blockQuoteMarker: 'blockQuoteMarker',\n  // The optional ` ` of a block quote prefix.\n  blockQuotePrefixWhitespace: 'blockQuotePrefixWhitespace',\n\n  // Whole ordered list:\n  //\n  // ```markdown\n  // 1. a\n  //    b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listOrdered: 'listOrdered',\n\n  // Whole unordered list:\n  //\n  // ```markdown\n  // - a\n  //   b\n  // ```\n  //\n  // Includes `listItemPrefix`, flow, and optionally  `listItemIndent` on further\n  // lines.\n  listUnordered: 'listUnordered',\n\n  // The indent of further list item lines.\n  listItemIndent: 'listItemIndent',\n\n  // A marker, as in, `*`, `+`, `-`, `.`, or `)`.\n  listItemMarker: 'listItemMarker',\n\n  // The thing that starts a list item, such as `1. `.\n  // Includes `listItemValue` if ordered, `listItemMarker`, and\n  // `listItemPrefixWhitespace` (unless followed by a line ending).\n  listItemPrefix: 'listItemPrefix',\n\n  // The whitespace after a marker.\n  listItemPrefixWhitespace: 'listItemPrefixWhitespace',\n\n  // The numerical value of an ordered item.\n  listItemValue: 'listItemValue',\n\n  // Internal types used for subtokenizers, compiled away\n  chunkDocument: 'chunkDocument',\n  chunkContent: 'chunkContent',\n  chunkFlow: 'chunkFlow',\n  chunkText: 'chunkText',\n  chunkString: 'chunkString'\n})\n", "/**\n * This module is compiled away!\n *\n * While micromark works based on character codes, this module includes the\n * string versions of ’em.\n * The C0 block, except for LF, CR, HT, and w/ the replacement character added,\n * are available here.\n */\nexport const values = /** @type {const} */ ({\n  ht: '\\t',\n  lf: '\\n',\n  cr: '\\r',\n  space: ' ',\n  exclamationMark: '!',\n  quotationMark: '\"',\n  numberSign: '#',\n  dollarSign: '$',\n  percentSign: '%',\n  ampersand: '&',\n  apostrophe: \"'\",\n  leftParenthesis: '(',\n  rightParenthesis: ')',\n  asterisk: '*',\n  plusSign: '+',\n  comma: ',',\n  dash: '-',\n  dot: '.',\n  slash: '/',\n  digit0: '0',\n  digit1: '1',\n  digit2: '2',\n  digit3: '3',\n  digit4: '4',\n  digit5: '5',\n  digit6: '6',\n  digit7: '7',\n  digit8: '8',\n  digit9: '9',\n  colon: ':',\n  semicolon: ';',\n  lessThan: '<',\n  equalsTo: '=',\n  greaterThan: '>',\n  questionMark: '?',\n  atSign: '@',\n  uppercaseA: 'A',\n  uppercaseB: 'B',\n  uppercaseC: 'C',\n  uppercaseD: 'D',\n  uppercaseE: 'E',\n  uppercaseF: 'F',\n  uppercaseG: 'G',\n  uppercaseH: 'H',\n  uppercaseI: 'I',\n  uppercaseJ: 'J',\n  uppercaseK: 'K',\n  uppercaseL: 'L',\n  uppercaseM: 'M',\n  uppercaseN: 'N',\n  uppercaseO: 'O',\n  uppercaseP: 'P',\n  uppercaseQ: 'Q',\n  uppercaseR: 'R',\n  uppercaseS: 'S',\n  uppercaseT: 'T',\n  uppercaseU: 'U',\n  uppercaseV: 'V',\n  uppercaseW: 'W',\n  uppercaseX: 'X',\n  uppercaseY: 'Y',\n  uppercaseZ: 'Z',\n  leftSquareBracket: '[',\n  backslash: '\\\\',\n  rightSquareBracket: ']',\n  caret: '^',\n  underscore: '_',\n  graveAccent: '`',\n  lowercaseA: 'a',\n  lowercaseB: 'b',\n  lowercaseC: 'c',\n  lowercaseD: 'd',\n  lowercaseE: 'e',\n  lowercaseF: 'f',\n  lowercaseG: 'g',\n  lowercaseH: 'h',\n  lowercaseI: 'i',\n  lowercaseJ: 'j',\n  lowercaseK: 'k',\n  lowercaseL: 'l',\n  lowercaseM: 'm',\n  lowercaseN: 'n',\n  lowercaseO: 'o',\n  lowercaseP: 'p',\n  lowercaseQ: 'q',\n  lowercaseR: 'r',\n  lowercaseS: 's',\n  lowercaseT: 't',\n  lowercaseU: 'u',\n  lowercaseV: 'v',\n  lowercaseW: 'w',\n  lowercaseX: 'x',\n  lowercaseY: 'y',\n  lowercaseZ: 'z',\n  leftCurlyBrace: '{',\n  verticalBar: '|',\n  rightCurlyBrace: '}',\n  tilde: '~',\n  replacementCharacter: '�'\n})\n", "import {constants} from 'micromark-util-symbol'\n\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < constants.v8MaxSafeChunkSize) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(\n        chunkStart,\n        chunkStart + constants.v8MaxSafeChunkSize\n      )\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n\n      chunkStart += constants.v8MaxSafeChunkSize\n      start += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n", "/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n", "import {codes, values} from 'micromark-util-symbol'\n\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < codes.ht ||\n    code === codes.vt ||\n    (code > codes.cr && code < codes.space) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > codes.tilde && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55_295 && code < 57_344) ||\n    // Noncharacters.\n    (code > 64_975 && code < 65_008) ||\n    /* eslint-disable no-bitwise */\n    (code & 65_535) === 65_535 ||\n    (code & 65_535) === 65_534 ||\n    /* eslint-enable no-bitwise */\n    // Out of range\n    code > 1_114_111\n  ) {\n    return values.replacementCharacter\n  }\n\n  return String.fromCodePoint(code)\n}\n", "import {values} from 'micromark-util-symbol'\n\n/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, values.space)\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n", "/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport {codes} from 'micromark-util-symbol'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < codes.space || code === codes.del)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < codes.horizontalTab\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < codes.nul || code === codes.space)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return (\n    code === codes.horizontalTab ||\n    code === codes.virtualSpace ||\n    code === codes.space\n  )\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n", "import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\nimport {codes, values} from 'micromark-util-symbol'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === codes.percentSign &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = values.replacementCharacter\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n", "/**\n * While micromark is a lexer/tokenizer, the common case of going from markdown\n * to html is currently built in as this module, even though the parts can be\n * used separately to build ASTs, CSTs, or many other output formats.\n *\n * Having an HTML compiler built in is useful because it allows us to check for\n * compliancy to CommonMark, the de facto norm of markdown, specified in roughly\n * 600 input/output cases.\n *\n * This module has an interface that accepts lists of events instead of the\n * whole at once, however, because markdown can’t be truly streaming, we buffer\n * events before processing and outputting the final result.\n */\n\n/**\n * @import {\n *   CompileContext,\n *   CompileData,\n *   CompileOptions,\n *   Compile,\n *   Definition,\n *   Event,\n *   Handle,\n *   HtmlExtension,\n *   LineEnding,\n *   NormalizedHtmlExtension,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef Media\n * @property {boolean | undefined} [image]\n * @property {string | undefined} [labelId]\n * @property {string | undefined} [label]\n * @property {string | undefined} [referenceId]\n * @property {string | undefined} [destination]\n * @property {string | undefined} [title]\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {ok as assert} from 'devlop'\nimport {push} from 'micromark-util-chunked'\nimport {combineHtmlExtensions} from 'micromark-util-combine-extensions'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {encode as _encode} from 'micromark-util-encode'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * These two are allowlists of safe protocols for full URLs in respectively the\n * `href` (on `<a>`) and `src` (on `<img>`) attributes.\n * They are based on what is allowed on GitHub,\n * <https://github.com/syntax-tree/hast-util-sanitize/blob/9275b21/lib/github.json#L31>\n */\nconst protocolHref = /^(https?|ircs?|mailto|xmpp)$/i\nconst protocolSource = /^https?$/i\n\n/**\n * @param {CompileOptions | null | undefined} [options]\n * @returns {Compile}\n */\nexport function compile(options) {\n  const settings = options || {}\n\n  /**\n   * Tags is needed because according to markdown, links and emphasis and\n   * whatnot can exist in images, however, as HTML doesn’t allow content in\n   * images, the tags are ignored in the `alt` attribute, but the content\n   * remains.\n   *\n   * @type {boolean | undefined}\n   */\n  let tags = true\n\n  /**\n   * An object to track identifiers to media (URLs and titles) defined with\n   * definitions.\n   *\n   * @type {Record<string, Definition>}\n   */\n  const definitions = {}\n\n  /**\n   * A lot of the handlers need to capture some of the output data, modify it\n   * somehow, and then deal with it.\n   * We do that by tracking a stack of buffers, that can be opened (with\n   * `buffer`) and closed (with `resume`) to access them.\n   *\n   * @type {Array<Array<string>>}\n   */\n  const buffers = [[]]\n\n  /**\n   * As we can have links in images and the other way around, where the deepest\n   * ones are closed first, we need to track which one we’re in.\n   *\n   * @type {Array<Media>}\n   */\n  const mediaStack = []\n\n  /**\n   * Same as `mediaStack` for tightness, which is specific to lists.\n   * We need to track if we’re currently in a tight or loose container.\n   *\n   * @type {Array<boolean>}\n   */\n  const tightStack = []\n\n  /** @type {HtmlExtension} */\n  const defaultHandlers = {\n    enter: {\n      blockQuote: onenterblockquote,\n      codeFenced: onentercodefenced,\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: onentercodeindented,\n      codeText: onentercodetext,\n      content: onentercontent,\n      definition: onenterdefinition,\n      definitionDestinationString: onenterdefinitiondestinationstring,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: onenteremphasis,\n      htmlFlow: onenterhtmlflow,\n      htmlText: onenterhtml,\n      image: onenterimage,\n      label: buffer,\n      link: onenterlink,\n      listItemMarker: onenterlistitemmarker,\n      listItemValue: onenterlistitemvalue,\n      listOrdered: onenterlistordered,\n      listUnordered: onenterlistunordered,\n      paragraph: onenterparagraph,\n      reference: buffer,\n      resource: onenterresource,\n      resourceDestinationString: onenterresourcedestinationstring,\n      resourceTitleString: buffer,\n      setextHeading: onentersetextheading,\n      strong: onenterstrong\n    },\n    exit: {\n      atxHeading: onexitatxheading,\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: onexitblockquote,\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: onexitflowcode,\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onresumedrop,\n      codeFlowValue: onexitcodeflowvalue,\n      codeIndented: onexitflowcode,\n      codeText: onexitcodetext,\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: onexitdefinition,\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: onexitemphasis,\n      hardBreakEscape: onexithardbreak,\n      hardBreakTrailing: onexithardbreak,\n      htmlFlow: onexithtml,\n      htmlFlowData: onexitdata,\n      htmlText: onexithtml,\n      htmlTextData: onexitdata,\n      image: onexitmedia,\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: onexitmedia,\n      listOrdered: onexitlistordered,\n      listUnordered: onexitlistunordered,\n      paragraph: onexitparagraph,\n      reference: onresumedrop,\n      referenceString: onexitreferencestring,\n      resource: onresumedrop,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      setextHeading: onexitsetextheading,\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: onexitstrong,\n      thematicBreak: onexitthematicbreak\n    }\n  }\n\n  /**\n   * Combine the HTML extensions with the default handlers.\n   * An HTML extension is an object whose fields are either `enter` or `exit`\n   * (reflecting whether a token is entered or exited).\n   * The values at such objects are names of tokens mapping to handlers.\n   * Handlers are called, respectively when a token is opener or closed, with\n   * that token, and a context as `this`.\n   */\n  const handlers = /** @type {NormalizedHtmlExtension} */ (\n    combineHtmlExtensions([defaultHandlers, ...(settings.htmlExtensions || [])])\n  )\n\n  /**\n   * Handlers do often need to keep track of some state.\n   * That state is provided here as a key-value store (an object).\n   *\n   * @type {CompileData}\n   */\n  const data = {\n    definitions,\n    tightStack\n  }\n\n  /**\n   * The context for handlers references a couple of useful functions.\n   * In handlers from extensions, those can be accessed at `this`.\n   * For the handlers here, they can be accessed directly.\n   *\n   * @type {Omit<CompileContext, 'sliceSerialize'>}\n   */\n  const context = {\n    buffer,\n    encode,\n    getData,\n    lineEndingIfNeeded,\n    options: settings,\n    raw,\n    resume,\n    setData,\n    tag\n  }\n\n  /**\n   * Generally, micromark copies line endings (`'\\r'`, `'\\n'`, `'\\r\\n'`) in the\n   * markdown document over to the compiled HTML.\n   * In some cases, such as `> a`, CommonMark requires that extra line endings\n   * are added: `<blockquote>\\n<p>a</p>\\n</blockquote>`.\n   * This variable hold the default line ending when given (or `undefined`),\n   * and in the latter case will be updated to the first found line ending if\n   * there is one.\n   */\n  let lineEndingStyle = settings.defaultLineEnding\n\n  // Return the function that handles a slice of events.\n  return compile\n\n  /**\n   * Deal w/ a slice of events.\n   * Return either the empty string if there’s nothing of note to return, or the\n   * result when done.\n   *\n   * @param {ReadonlyArray<Event>} events\n   * @returns {string}\n   */\n  function compile(events) {\n    let index = -1\n    let start = 0\n    /** @type {Array<number>} */\n    const listStack = []\n    // As definitions can come after references, we need to figure out the media\n    // (urls and titles) defined by them before handling the references.\n    // So, we do sort of what HTML does: put metadata at the start (in head), and\n    // then put content after (`body`).\n    /** @type {Array<Event>} */\n    let head = []\n    /** @type {Array<Event>} */\n    let body = []\n\n    while (++index < events.length) {\n      // Figure out the line ending style used in the document.\n      if (\n        !lineEndingStyle &&\n        (events[index][1].type === types.lineEnding ||\n          events[index][1].type === types.lineEndingBlank)\n      ) {\n        lineEndingStyle = /** @type {LineEnding} */ (\n          events[index][2].sliceSerialize(events[index][1])\n        )\n      }\n\n      // Preprocess lists to infer whether the list is loose or not.\n      if (\n        events[index][1].type === types.listOrdered ||\n        events[index][1].type === types.listUnordered\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          prepareList(events.slice(listStack.pop(), index))\n        }\n      }\n\n      // Move definitions to the front.\n      if (events[index][1].type === types.definition) {\n        if (events[index][0] === 'enter') {\n          body = push(body, events.slice(start, index))\n          start = index\n        } else {\n          head = push(head, events.slice(start, index + 1))\n          start = index + 1\n        }\n      }\n    }\n\n    head = push(head, body)\n    head = push(head, events.slice(start))\n    index = -1\n    const result = head\n\n    // Handle the start of the document, if defined.\n    if (handlers.enter.null) {\n      handlers.enter.null.call(context)\n    }\n\n    // Handle all events.\n    while (++index < events.length) {\n      const handles = handlers[result[index][0]]\n      const kind = result[index][1].type\n      const handle = handles[kind]\n\n      if (hasOwnProperty.call(handles, kind) && handle) {\n        handle.call(\n          {sliceSerialize: result[index][2].sliceSerialize, ...context},\n          result[index][1]\n        )\n      }\n    }\n\n    // Handle the end of the document, if defined.\n    if (handlers.exit.null) {\n      handlers.exit.null.call(context)\n    }\n\n    return buffers[0].join('')\n  }\n\n  /**\n   * Figure out whether lists are loose or not.\n   *\n   * @param {ReadonlyArray<Event>} slice\n   * @returns {undefined}\n   */\n  function prepareList(slice) {\n    const length = slice.length\n    let index = 0 // Skip open.\n    let containerBalance = 0\n    let loose = false\n    /** @type {boolean | undefined} */\n    let atMarker\n\n    while (++index < length) {\n      const event = slice[index]\n\n      if (event[1]._container) {\n        atMarker = undefined\n\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n      } else\n        switch (event[1].type) {\n          case types.listItemPrefix: {\n            if (event[0] === 'exit') {\n              atMarker = true\n            }\n\n            break\n          }\n\n          case types.linePrefix: {\n            // Ignore\n\n            break\n          }\n\n          case types.lineEndingBlank: {\n            if (event[0] === 'enter' && !containerBalance) {\n              if (atMarker) {\n                atMarker = undefined\n              } else {\n                loose = true\n              }\n            }\n\n            break\n          }\n\n          default: {\n            atMarker = undefined\n          }\n        }\n    }\n\n    slice[0][1]._loose = loose\n  }\n\n  /**\n   * @type {CompileContext['setData']}\n   */\n  function setData(key, value) {\n    // @ts-expect-error: assume `value` is omitted (`undefined` is passed) only\n    // if allowed.\n    data[key] = value\n  }\n\n  /**\n   * @type {CompileContext['getData']}\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /** @type {CompileContext['buffer']} */\n  function buffer() {\n    buffers.push([])\n  }\n\n  /** @type {CompileContext['resume']} */\n  function resume() {\n    const buf = buffers.pop()\n    assert(buf !== undefined, 'Cannot resume w/o buffer')\n    return buf.join('')\n  }\n\n  /** @type {CompileContext['tag']} */\n  function tag(value) {\n    if (!tags) return\n    setData('lastWasTag', true)\n    buffers[buffers.length - 1].push(value)\n  }\n\n  /** @type {CompileContext['raw']} */\n  function raw(value) {\n    setData('lastWasTag')\n    buffers[buffers.length - 1].push(value)\n  }\n\n  /**\n   * Output an extra line ending.\n   *\n   * @returns {undefined}\n   */\n  function lineEnding() {\n    raw(lineEndingStyle || '\\n')\n  }\n\n  /** @type {CompileContext['lineEndingIfNeeded']} */\n  function lineEndingIfNeeded() {\n    const buffer = buffers[buffers.length - 1]\n    const slice = buffer[buffer.length - 1]\n    const previous = slice ? slice.charCodeAt(slice.length - 1) : codes.eof\n\n    if (\n      previous === codes.lf ||\n      previous === codes.cr ||\n      previous === codes.eof\n    ) {\n      return\n    }\n\n    lineEnding()\n  }\n\n  /** @type {CompileContext['encode']} */\n  function encode(value) {\n    return getData('ignoreEncode') ? value : _encode(value)\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @returns {undefined}\n   */\n  function onresumedrop() {\n    resume()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered(token) {\n    tightStack.push(!token._loose)\n    lineEndingIfNeeded()\n    tag('<ol')\n    setData('expectFirstItem', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistunordered(token) {\n    tightStack.push(!token._loose)\n    lineEndingIfNeeded()\n    tag('<ul')\n    setData('expectFirstItem', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectFirstItem')) {\n      const value = Number.parseInt(\n        this.sliceSerialize(token),\n        constants.numericBaseDecimal\n      )\n\n      if (value !== 1) {\n        tag(' start=\"' + encode(String(value)) + '\"')\n      }\n    }\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onenterlistitemmarker() {\n    if (getData('expectFirstItem')) {\n      tag('>')\n    } else {\n      onexitlistitem()\n    }\n\n    lineEndingIfNeeded()\n    tag('<li>')\n    setData('expectFirstItem')\n    // “Hack” to prevent a line ending from showing up if the item is empty.\n    setData('lastWasTag')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexitlistordered() {\n    onexitlistitem()\n    tightStack.pop()\n    lineEnding()\n    tag('</ol>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexitlistunordered() {\n    onexitlistitem()\n    tightStack.pop()\n    lineEnding()\n    tag('</ul>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexitlistitem() {\n    if (getData('lastWasTag') && !getData('slurpAllLineEndings')) {\n      lineEndingIfNeeded()\n    }\n\n    tag('</li>')\n    setData('slurpAllLineEndings')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterblockquote() {\n    tightStack.push(false)\n    lineEndingIfNeeded()\n    tag('<blockquote>')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitblockquote() {\n    tightStack.pop()\n    lineEndingIfNeeded()\n    tag('</blockquote>')\n    setData('slurpAllLineEndings')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterparagraph() {\n    if (!tightStack[tightStack.length - 1]) {\n      lineEndingIfNeeded()\n      tag('<p>')\n    }\n\n    setData('slurpAllLineEndings')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitparagraph() {\n    if (tightStack[tightStack.length - 1]) {\n      setData('slurpAllLineEndings', true)\n    } else {\n      tag('</p>')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onentercodefenced() {\n    lineEndingIfNeeded()\n    tag('<pre><code')\n    setData('fencesCount', 0)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const value = resume()\n    tag(' class=\"language-' + value + '\"')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    const count = getData('fencesCount') || 0\n\n    if (!count) {\n      tag('>')\n      setData('slurpOneLineEnding', true)\n    }\n\n    setData('fencesCount', count + 1)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onentercodeindented() {\n    lineEndingIfNeeded()\n    tag('<pre><code>')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitflowcode() {\n    const count = getData('fencesCount')\n\n    // One special case is if we are inside a container, and the fenced code was\n    // not closed (meaning it runs to the end).\n    // In that case, the following line ending, is considered *outside* the\n    // fenced code and block quote by micromark, but CM wants to treat that\n    // ending as part of the code.\n    if (\n      count !== undefined &&\n      count < 2 &&\n      data.tightStack.length > 0 &&\n      !getData('lastWasTag')\n    ) {\n      lineEnding()\n    }\n\n    // But in most cases, it’s simpler: when we’ve seen some data, emit an extra\n    // line ending when needed.\n    if (getData('flowCodeSeenData')) {\n      lineEndingIfNeeded()\n    }\n\n    tag('</code></pre>')\n    if (count !== undefined && count < 2) lineEndingIfNeeded()\n    setData('flowCodeSeenData')\n    setData('fencesCount')\n    setData('slurpOneLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterimage() {\n    mediaStack.push({image: true})\n    tags = undefined // Disallow tags.\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlink() {\n    mediaStack.push({})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitlabeltext(token) {\n    mediaStack[mediaStack.length - 1].labelId = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitlabel() {\n    mediaStack[mediaStack.length - 1].label = resume()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitreferencestring(token) {\n    mediaStack[mediaStack.length - 1].referenceId = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterresource() {\n    buffer() // We can have line endings in the resource, ignore them.\n    mediaStack[mediaStack.length - 1].destination = ''\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterresourcedestinationstring() {\n    buffer()\n    // Ignore encoding the result, as we’ll first percent encode the url and\n    // encode manually after.\n    setData('ignoreEncode', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitresourcedestinationstring() {\n    mediaStack[mediaStack.length - 1].destination = resume()\n    setData('ignoreEncode')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitresourcetitlestring() {\n    mediaStack[mediaStack.length - 1].title = resume()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitmedia() {\n    let index = mediaStack.length - 1 // Skip current.\n    const media = mediaStack[index]\n    const id = media.referenceId || media.labelId\n    assert(id !== undefined, 'media should have `referenceId` or `labelId`')\n    assert(media.label !== undefined, 'media should have `label`')\n    const context =\n      media.destination === undefined\n        ? definitions[normalizeIdentifier(id)]\n        : media\n\n    tags = true\n\n    while (index--) {\n      if (mediaStack[index].image) {\n        tags = undefined\n        break\n      }\n    }\n\n    if (media.image) {\n      tag(\n        '<img src=\"' +\n          sanitizeUri(\n            context.destination,\n            settings.allowDangerousProtocol ? undefined : protocolSource\n          ) +\n          '\" alt=\"'\n      )\n      raw(media.label)\n      tag('\"')\n    } else {\n      tag(\n        '<a href=\"' +\n          sanitizeUri(\n            context.destination,\n            settings.allowDangerousProtocol ? undefined : protocolHref\n          ) +\n          '\"'\n      )\n    }\n\n    tag(context.title ? ' title=\"' + context.title + '\"' : '')\n\n    if (media.image) {\n      tag(' />')\n    } else {\n      tag('>')\n      raw(media.label)\n      tag('</a>')\n    }\n\n    mediaStack.pop()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterdefinition() {\n    buffer()\n    mediaStack.push({})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    resume()\n    mediaStack[mediaStack.length - 1].labelId = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterdefinitiondestinationstring() {\n    buffer()\n    setData('ignoreEncode', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    mediaStack[mediaStack.length - 1].destination = resume()\n    setData('ignoreEncode')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    mediaStack[mediaStack.length - 1].title = resume()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinition() {\n    const media = mediaStack[mediaStack.length - 1]\n    assert(media.labelId !== undefined, 'media should have `labelId`')\n    const id = normalizeIdentifier(media.labelId)\n\n    resume()\n\n    if (!hasOwnProperty.call(definitions, id)) {\n      definitions[id] = mediaStack[mediaStack.length - 1]\n    }\n\n    mediaStack.pop()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onentercontent() {\n    setData('slurpAllLineEndings', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    // Exit for further sequences.\n    if (getData('headingRank')) return\n    setData('headingRank', this.sliceSerialize(token).length)\n    lineEndingIfNeeded()\n    tag('<h' + getData('headingRank') + '>')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onentersetextheading() {\n    buffer()\n    setData('slurpAllLineEndings')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('slurpAllLineEndings', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheading() {\n    tag('</h' + getData('headingRank') + '>')\n    setData('headingRank')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    setData(\n      'headingRank',\n      this.sliceSerialize(token).charCodeAt(0) === codes.equalsTo ? 1 : 2\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    const value = resume()\n    lineEndingIfNeeded()\n    tag('<h' + getData('headingRank') + '>')\n    raw(value)\n    tag('</h' + getData('headingRank') + '>')\n    setData('slurpAllLineEndings')\n    setData('headingRank')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdata(token) {\n    raw(encode(this.sliceSerialize(token)))\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitlineending(token) {\n    if (getData('slurpAllLineEndings')) {\n      return\n    }\n\n    if (getData('slurpOneLineEnding')) {\n      setData('slurpOneLineEnding')\n      return\n    }\n\n    if (getData('inCodeText')) {\n      raw(' ')\n      return\n    }\n\n    raw(encode(this.sliceSerialize(token)))\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeflowvalue(token) {\n    raw(encode(this.sliceSerialize(token)))\n    setData('flowCodeSeenData', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexithardbreak() {\n    tag('<br />')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onenterhtmlflow() {\n    lineEndingIfNeeded()\n    onenterhtml()\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexithtml() {\n    setData('ignoreEncode')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onenterhtml() {\n    if (settings.allowDangerousHtml) {\n      setData('ignoreEncode', true)\n    }\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onenteremphasis() {\n    tag('<em>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onenterstrong() {\n    tag('<strong>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onentercodetext() {\n    setData('inCodeText', true)\n    tag('<code>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexitcodetext() {\n    setData('inCodeText')\n    tag('</code>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexitemphasis() {\n    tag('</em>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexitstrong() {\n    tag('</strong>')\n  }\n\n  /**\n   * @returns {undefined}\n   */\n  function onexitthematicbreak() {\n    lineEndingIfNeeded()\n    tag('<hr />')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @param {Token} token\n   * @returns {undefined}\n   */\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const value = this.sliceSerialize(token)\n    const decoded = getData('characterReferenceType')\n      ? decodeNumericCharacterReference(\n          value,\n          getData('characterReferenceType') ===\n            types.characterReferenceMarkerNumeric\n            ? constants.numericBaseDecimal\n            : constants.numericBaseHexadecimal\n        )\n      : decodeNamedCharacterReference(value)\n\n    // `decodeNamedCharacterReference` can return `false` for invalid named\n    // character references,\n    // but everything we’ve tokenized is valid.\n    raw(encode(/** @type {string} */ (decoded)))\n    setData('characterReferenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    const uri = this.sliceSerialize(token)\n    tag(\n      '<a href=\"' +\n        sanitizeUri(\n          uri,\n          settings.allowDangerousProtocol ? undefined : protocolHref\n        ) +\n        '\">'\n    )\n    raw(encode(uri))\n    tag('</a>')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    const uri = this.sliceSerialize(token)\n    tag('<a href=\"' + sanitizeUri('mailto:' + uri) + '\">')\n    raw(encode(uri))\n    tag('</a>')\n  }\n}\n", "/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n", "/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const content = {tokenize: initializeContent}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, contentStart, types.linePrefix)\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected anything other than a line ending or EOF'\n    )\n    effects.enter(types.paragraph)\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(types.chunkText, {\n      contentType: constants.contentTypeText,\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === codes.eof) {\n      effects.exit(types.chunkText)\n      effects.exit(types.paragraph)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit(types.chunkText)\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const document = {tokenize: initializeDocument}\n\n/** @type {Construct} */\nconst containerConstruct = {tokenize: tokenizeContainer}\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      assert(\n        item[0].continuation,\n        'expected `continuation` to be defined on container construct'\n      )\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined after continuation'\n    )\n\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = {...point}\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    assert(\n      self.currentConstruct,\n      'expected `currentConstruct` to be defined on tokenizer'\n    )\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined on tokenizer'\n    )\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === codes.eof) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter(types.chunkFlow, {\n      _tokenizer: childFlow,\n      contentType: constants.contentTypeFlow,\n      previous: childToken\n    })\n\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === codes.eof) {\n      writeToChild(effects.exit(types.chunkFlow), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit(types.chunkFlow))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    assert(childFlow, 'expected `childFlow` to be defined when continuing')\n    const stream = self.sliceStream(token)\n    if (endOfFile) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === types.chunkFlow\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      assert(point, 'could not find previous flow chunk')\n\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = {...point}\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      assert(\n        entry[0].exit,\n        'expected `exit` to be defined on container construct'\n      )\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    assert(\n      self.containerState,\n      'expected `containerState` to be defined when closing flow'\n    )\n    assert(childFlow, 'expected `childFlow` to be defined when closing it')\n    childFlow.write([codes.eof])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n  assert(\n    this.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    types.linePrefix,\n    this.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize\n  )\n}\n", "/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {codes, constants} from 'micromark-util-symbol'\n\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === codes.eof ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return constants.characterGroupWhitespace\n  }\n\n  if (unicodePunctuation(code)) {\n    return constants.characterGroupPunctuation\n  }\n}\n", "/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n\n          const start = {...events[open][1].end}\n          const end = {...events[index][1].start}\n          movePoint(start, -use)\n          movePoint(end, use)\n\n          openingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start,\n            end: {...events[open][1].end}\n          }\n          closingSequence = {\n            type: use > 1 ? types.strongSequence : types.emphasisSequence,\n            start: {...events[index][1].start},\n            end\n          }\n          text = {\n            type: use > 1 ? types.strongText : types.emphasisText,\n            start: {...events[open][1].end},\n            end: {...events[index][1].start}\n          }\n          group = {\n            type: use > 1 ? types.strong : types.emphasis,\n            start: {...openingSequence.start},\n            end: {...closingSequence.end}\n          }\n\n          events[open][1].end = {...openingSequence.start}\n          events[index][1].start = {...closingSequence.end}\n\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.insideSpan.null,\n            'expected `insideSpan` to be populated'\n          )\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(\n      code === codes.asterisk || code === codes.underscore,\n      'expected asterisk or underscore'\n    )\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n    assert(attentionMarkers, 'expected `attentionMarkers` to be populated')\n\n    const open =\n      !after ||\n      (after === constants.characterGroupPunctuation && before) ||\n      attentionMarkers.includes(code)\n    const close =\n      !before ||\n      (before === constants.characterGroupPunctuation && after) ||\n      attentionMarkers.includes(previous)\n\n    token._open = Boolean(\n      marker === codes.asterisk ? open : open && (before || !close)\n    )\n    token._close = Boolean(\n      marker === codes.asterisk ? close : close && (after || !open)\n    )\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {\n  asciiAlphanumeric,\n  asciiAlpha,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const autolink = {name: 'autolink', tokenize: tokenizeAutolink}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.autolink)\n    effects.enter(types.autolinkMarker)\n    effects.consume(code)\n    effects.exit(types.autolinkMarker)\n    effects.enter(types.autolinkProtocol)\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    if (code === codes.atSign) {\n      return nok(code)\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      code === codes.plusSign ||\n      code === codes.dash ||\n      code === codes.dot ||\n      asciiAlphanumeric(code)\n    ) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === codes.colon) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === codes.plusSign ||\n        code === codes.dash ||\n        code === codes.dot ||\n        asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkSchemeSizeMax\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.autolinkProtocol)\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.lessThan ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === codes.atSign) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === codes.dot) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === codes.greaterThan) {\n      // Exit, then change the token type.\n      effects.exit(types.autolinkProtocol).type = types.autolinkEmail\n      effects.enter(types.autolinkMarker)\n      effects.consume(code)\n      effects.exit(types.autolinkMarker)\n      effects.exit(types.autolink)\n      return ok\n    }\n\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if (\n      (code === codes.dash || asciiAlphanumeric(code)) &&\n      size++ < constants.autolinkDomainSizeMax\n    ) {\n      const next = code === codes.dash ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const blankLine = {partial: true, tokenize: tokenizeBlankLine}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.linePrefix)(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {tokenize: tokenizeBlockQuoteContinuation},\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.greaterThan) {\n      const state = self.containerState\n\n      assert(state, 'expected `containerState` to be defined in container')\n\n      if (!state.open) {\n        effects.enter(types.blockQuote, {_container: true})\n        state.open = true\n      }\n\n      effects.enter(types.blockQuotePrefix)\n      effects.enter(types.blockQuoteMarker)\n      effects.consume(code)\n      effects.exit(types.blockQuoteMarker)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.blockQuotePrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.blockQuotePrefixWhitespace)\n      effects.exit(types.blockQuotePrefix)\n      return ok\n    }\n\n    effects.exit(types.blockQuotePrefix)\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      return factorySpace(\n        effects,\n        contBefore,\n        types.linePrefix,\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : constants.tabSize\n      )(code)\n    }\n\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(types.blockQuote)\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {asciiPunctuation} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.characterEscape)\n    effects.enter(types.escapeMarker)\n    effects.consume(code)\n    effects.exit(types.escapeMarker)\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(types.characterEscapeValue)\n      effects.consume(code)\n      effects.exit(types.characterEscapeValue)\n      effects.exit(types.characterEscape)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.ampersand, 'expected `&`')\n    effects.enter(types.characterReference)\n    effects.enter(types.characterReferenceMarker)\n    effects.consume(code)\n    effects.exit(types.characterReferenceMarker)\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.characterReferenceMarkerNumeric)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerNumeric)\n      return numeric\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceNamedSizeMax\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === codes.uppercaseX || code === codes.lowercaseX) {\n      effects.enter(types.characterReferenceMarkerHexadecimal)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarkerHexadecimal)\n      effects.enter(types.characterReferenceValue)\n      max = constants.characterReferenceHexadecimalSizeMax\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter(types.characterReferenceValue)\n    max = constants.characterReferenceDecimalSizeMax\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === codes.semicolon && size) {\n      const token = effects.exit(types.characterReferenceValue)\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(types.characterReferenceMarker)\n      effects.consume(code)\n      effects.exit(types.characterReferenceMarker)\n      effects.exit(types.characterReference)\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {partial: true, tokenize: tokenizeCloseStart}\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    assert(\n      code === codes.graveAccent || code === codes.tilde,\n      'expected `` ` `` or `~`'\n    )\n\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === types.linePrefix\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n\n    marker = code\n    effects.enter(types.codeFenced)\n    effects.enter(types.codeFencedFence)\n    effects.enter(types.codeFencedFenceSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    if (sizeOpen < constants.codeFencedSequenceSizeMin) {\n      return nok(code)\n    }\n\n    effects.exit(types.codeFencedFenceSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, types.whitespace)(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFencedFence)\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFencedFenceInfo)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return infoBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceInfo)\n      return factorySpace(effects, metaBefore, types.whitespace)(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n\n    effects.enter(types.codeFencedFenceMeta)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      effects.exit(types.codeFencedFenceMeta)\n      return infoBefore(code)\n    }\n\n    if (code === codes.graveAccent && code === marker) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          types.linePrefix,\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return beforeContentChunk(code)\n    }\n\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(types.codeFenced)\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      assert(markdownLineEnding(code), 'expected eol')\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n      assert(\n        self.parser.constructs.disable.null,\n        'expected `disable.null` to be populated'\n      )\n\n      // To do: `enter` here or in next state?\n      effects.enter(types.codeFencedFence)\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            types.linePrefix,\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : constants.tabSize\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(types.codeFencedFenceSequence)\n        return sequenceClose(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n\n      if (size >= sizeOpen) {\n        effects.exit(types.codeFencedFenceSequence)\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, types.whitespace)(code)\n          : sequenceCloseAfter(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === codes.eof || markdownLineEnding(code)) {\n        effects.exit(types.codeFencedFence)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {partial: true, tokenize: tokenizeFurtherStart}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n    assert(markdownSpace(code))\n    effects.enter(types.codeIndented)\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.eof) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n\n    effects.enter(types.codeFlowValue)\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.codeFlowValue)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(types.codeIndented)\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(\n      effects,\n      afterPrefix,\n      types.linePrefix,\n      constants.tabSize + 1\n    )(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n      ? ok(code)\n      : markdownLineEnding(code)\n        ? furtherStart(code)\n        : nok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === types.lineEnding ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === types.lineEnding ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === types.codeTextData) {\n        // Then we have padding.\n        events[headEnterIndex][1].type = types.codeTextPadding\n        events[tailExitIndex][1].type = types.codeTextPadding\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (\n        index !== tailExitIndex &&\n        events[index][1].type !== types.lineEnding\n      ) {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === types.lineEnding\n    ) {\n      events[enter][1].type = types.codeTextData\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== codes.graveAccent ||\n    this.events[this.events.length - 1][1].type === types.characterEscape\n  )\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.graveAccent, 'expected `` ` ``')\n    assert(previous.call(self, self.previous), 'expected correct previous')\n    effects.enter(types.codeText)\n    effects.enter(types.codeTextSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit(types.codeTextSequence)\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === codes.space) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === codes.graveAccent) {\n      token = effects.enter(types.codeTextSequence)\n      size = 0\n      return sequenceClose(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return between\n    }\n\n    // Data.\n    effects.enter(types.codeTextData)\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.graveAccent ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit(types.codeTextData)\n      return between(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === codes.graveAccent) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(types.codeTextSequence)\n      effects.exit(types.codeText)\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = types.codeTextData\n    return data(code)\n  }\n}\n", "import {constants} from 'micromark-util-symbol'\n\n/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : []\n    /** @type {Array<T>} */\n    this.right = []\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError(\n        'Cannot access index `' +\n          index +\n          '` in a splice buffer of size `' +\n          (this.left.length + this.right.length) +\n          '`'\n      )\n    }\n\n    if (index < this.left.length) return this.left[index]\n    return this.right[this.right.length - index + this.left.length - 1]\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0)\n    return this.right.pop()\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop =\n      end === null || end === undefined ? Number.POSITIVE_INFINITY : end\n\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop)\n    }\n\n    if (start > this.left.length) {\n      return this.right\n        .slice(\n          this.right.length - stop + this.left.length,\n          this.right.length - start + this.left.length\n        )\n        .reverse()\n    }\n\n    return this.left\n      .slice(start)\n      .concat(\n        this.right.slice(this.right.length - stop + this.left.length).reverse()\n      )\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0\n\n    this.setCursor(Math.trunc(start))\n    const removed = this.right.splice(\n      this.right.length - count,\n      Number.POSITIVE_INFINITY\n    )\n    if (items) chunkedPush(this.left, items)\n    return removed.reverse()\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    return this.left.pop()\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    this.left.push(item)\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY)\n    chunkedPush(this.left, items)\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0)\n    this.right.push(item)\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0)\n    chunkedPush(this.right, items.reverse())\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (\n      n === this.left.length ||\n      (n > this.left.length && this.right.length === 0) ||\n      (n < 0 && this.left.length === 0)\n    )\n      return\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY)\n      chunkedPush(this.right, removed.reverse())\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(\n        this.left.length + this.right.length - n,\n        Number.POSITIVE_INFINITY\n      )\n      chunkedPush(this.left, removed.reverse())\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0\n\n  if (right.length < constants.v8MaxSafeChunkSize) {\n    list.push(...right)\n  } else {\n    while (chunkStart < right.length) {\n      list.push(\n        ...right.slice(chunkStart, chunkStart + constants.v8MaxSafeChunkSize)\n      )\n      chunkStart += constants.v8MaxSafeChunkSize\n    }\n  }\n}\n", "/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, types} from 'micromark-util-symbol'\nimport {SpliceBuffer} from './lib/splice-buffer.js'\n\n// Hidden API exposed for testing.\nexport {SpliceBuffer} from './lib/splice-buffer.js'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  const events = new SpliceBuffer(eventsArray)\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events.get(index)\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === types.chunkFlow &&\n      events.get(index - 1)[1].type === types.listItemPrefix\n    ) {\n      assert(event[1]._tokenizer, 'expected `_tokenizer` on subtokens')\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.lineEndingBlank\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === types.content\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === types.content) {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === types.chunkText) {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex)\n\n        if (\n          otherEvent[1].type === types.lineEnding ||\n          otherEvent[1].type === types.lineEndingBlank\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = types.lineEndingBlank\n            }\n\n            otherEvent[1].type = types.lineEnding\n            lineIndex = otherIndex\n          }\n        } else if (\n          otherEvent[1].type === types.linePrefix ||\n          otherEvent[1].type === types.listItemIndent\n        ) {\n          // Move past.\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {...events.get(lineIndex)[1].start}\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        events.splice(lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0))\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1]\n  const context = events.get(eventIndex)[2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  assert(token.contentType, 'expected `contentType` on subtokens')\n\n  let tokenizer = token._tokenizer\n\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start)\n\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true\n    }\n  }\n\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n\n    assert(\n      !previous || current.previous === previous,\n      'expected previous to match'\n    )\n    assert(!previous || previous.next === current, 'expected next to match')\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(codes.eof)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      assert(current, 'expected a current token')\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n    assert(!current.next, 'expected no next token')\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    assert(start !== undefined, 'expected a start position when splicing')\n    jumps.push([start, start + slice.length - 1])\n    events.splice(start, 2, slice)\n  }\n\n  jumps.reverse()\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n", "/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {resolve: resolveContent, tokenize: tokenizeContent}\n\n/** @type {Construct} */\nconst continuationConstruct = {partial: true, tokenize: tokenizeContinuation}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    assert(\n      code !== codes.eof && !markdownLineEnding(code),\n      'expected no eof or eol'\n    )\n\n    effects.enter(types.content)\n    previous = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === codes.eof) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(types.chunkContent)\n    effects.exit(types.content)\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.consume(code)\n    effects.exit(types.chunkContent)\n    assert(previous, 'expected previous token')\n    previous.next = effects.enter(types.chunkContent, {\n      contentType: constants.contentTypeContent,\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.exit(types.chunkContent)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, prefixed, types.linePrefix)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === types.linePrefix &&\n      tail[2].sliceSerialize(tail[1], true).length >= constants.tabSize\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n", "/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === codes.lessThan) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.rightParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === codes.greaterThan) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === codes.greaterThan) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      markdownLineEnding(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (\n      code === codes.lessThan ||\n      code === codes.greaterThan ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return enclosed\n    }\n\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === codes.eof ||\n        code === codes.rightParenthesis ||\n        markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit(types.chunkString)\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (balance < limit && code === codes.leftParenthesis) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n\n    if (code === codes.rightParenthesis) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (\n      code === codes.eof ||\n      code === codes.space ||\n      code === codes.leftParenthesis ||\n      asciiControl(code)\n    ) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (\n      code === codes.leftParenthesis ||\n      code === codes.rightParenthesis ||\n      code === codes.backslash\n    ) {\n      effects.consume(code)\n      return raw\n    }\n\n    return raw(code)\n  }\n}\n", "/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > constants.linkReferenceSizeMax ||\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      (code === codes.rightSquareBracket && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === codes.caret &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return atBreak\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === codes.eof ||\n      code === codes.leftSquareBracket ||\n      code === codes.rightSquareBracket ||\n      markdownLineEnding(code) ||\n      size++ > constants.linkReferenceSizeMax\n    ) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === codes.backslash ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (\n      code === codes.leftSquareBracket ||\n      code === codes.backslash ||\n      code === codes.rightSquareBracket\n    ) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n\n    return labelInside(code)\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === codes.leftParenthesis ? codes.rightParenthesis : code\n      return begin\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return factorySpace(effects, atBreak, types.linePrefix)\n    }\n\n    effects.enter(types.chunkString, {contentType: constants.contentTypeString})\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.chunkString)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return code === codes.backslash ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === codes.backslash) {\n      effects.consume(code)\n      return inside\n    }\n\n    return inside(code)\n  }\n}\n", "/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol'\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? types.linePrefix : types.lineSuffix\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const definition = {name: 'definition', tokenize: tokenizeDefinition}\n\n/** @type {Construct} */\nconst titleBefore = {partial: true, tokenize: tokenizeTitleBefore}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(types.definition)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionLabel,\n      types.definitionLabelMarker,\n      types.definitionLabelString\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === codes.colon) {\n      effects.enter(types.definitionMarker)\n      effects.consume(code)\n      effects.exit(types.definitionMarker)\n      return markerAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      types.definitionDestination,\n      types.definitionDestinationLiteral,\n      types.definitionDestinationLiteralMarker,\n      types.definitionDestinationRaw,\n      types.definitionDestinationString\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, types.whitespace)(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.definition)\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      types.definitionTitle,\n      types.definitionTitleMarker,\n      types.definitionTitleString\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          titleAfterOptionalWhitespace,\n          types.whitespace\n        )(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === codes.eof || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.backslash, 'expected `\\\\`')\n    effects.enter(types.hardBreakEscape)\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(types.hardBreakEscape)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === types.whitespace) {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === types.whitespace\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === types.atxHeadingSequence &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === types.whitespace))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: types.atxHeadingText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: types.chunkText,\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: constants.contentTypeText\n    }\n\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(types.atxHeading)\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.numberSign, 'expected `#`')\n    effects.enter(types.atxHeadingSequence)\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (\n      code === codes.numberSign &&\n      size++ < constants.atxHeadingOpeningFenceSizeMax\n    ) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === codes.eof || markdownLineEndingOrSpace(code)) {\n      effects.exit(types.atxHeadingSequence)\n      return atBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === codes.numberSign) {\n      effects.enter(types.atxHeadingSequence)\n      return sequenceFurther(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.atxHeading)\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, types.whitespace)(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(types.atxHeadingText)\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === codes.numberSign) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n\n    effects.exit(types.atxHeadingSequence)\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === codes.eof ||\n      code === codes.numberSign ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(types.atxHeadingText)\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {\n  asciiAlphanumeric,\n  asciiAlpha,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {partial: true, tokenize: tokenizeBlankLineBefore}\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === types.htmlFlow\n    ) {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === types.linePrefix) {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlFlow)\n    effects.enter(types.htmlFlowData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      marker = constants.htmlInstruction\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      assert(code !== null) // Always the case.\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      marker = constants.htmlComment\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      marker = constants.htmlCdata\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = constants.htmlDeclaration\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n\n      return cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      assert(code !== null) // Always the case.\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === codes.eof ||\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === codes.slash\n      const name = buffer.toLowerCase()\n\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = constants.htmlRaw\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = constants.htmlBasic\n\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      marker = constants.htmlComplete\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n          ? completeClosingTagAfter(code)\n          : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.slash ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownSpace(code)\n    ) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === codes.lessThan && marker === constants.htmlRaw) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === codes.greaterThan && marker === constants.htmlDeclaration) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === codes.questionMark && marker === constants.htmlInstruction) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === codes.rightSquareBracket && marker === constants.htmlCdata) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n\n    if (\n      markdownLineEnding(code) &&\n      (marker === constants.htmlBasic || marker === constants.htmlComplete)\n    ) {\n      effects.exit(types.htmlFlowData)\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationStart(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    assert(markdownLineEnding(code))\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n\n    effects.enter(types.htmlFlowData)\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === codes.greaterThan) {\n      const name = buffer.toLowerCase()\n\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n\n      return continuation(code)\n    }\n\n    if (asciiAlpha(code) && buffer.length < constants.htmlRawSizeMax) {\n      assert(code !== null) // Always the case.\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === codes.dash && marker === constants.htmlComment) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.htmlFlowData)\n      return continuationAfter(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(types.htmlFlow)\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(types.lineEnding)\n      effects.consume(code)\n      effects.exit(types.lineEnding)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected a line ending')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlphanumeric,\n  asciiAlpha,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const htmlText = {name: 'htmlText', tokenize: tokenizeHtmlText}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.lessThan, 'expected `<`')\n    effects.enter(types.htmlText)\n    effects.enter(types.htmlTextData)\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.exclamationMark) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === codes.slash) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n\n    if (code === codes.leftSquareBracket) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === codes.dash) {\n      effects.consume(code)\n      return commentEnd\n    }\n\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === codes.greaterThan\n      ? end(code)\n      : code === codes.dash\n        ? commentClose(code)\n        : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = constants.cdataOpeningString\n\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (code === codes.rightSquareBracket) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === codes.eof || code === codes.greaterThan) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (code === codes.questionMark) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === codes.greaterThan ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === codes.dash || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === codes.slash) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === codes.colon || code === codes.underscore || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === codes.dash ||\n      code === codes.dot ||\n      code === codes.colon ||\n      code === codes.underscore ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === codes.equalsTo) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === codes.eof ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.greaterThan ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (code === codes.quotationMark || code === codes.apostrophe) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === codes.eof) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === codes.eof ||\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.lessThan ||\n      code === codes.equalsTo ||\n      code === codes.graveAccent\n    ) {\n      return nok(code)\n    }\n\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (\n      code === codes.slash ||\n      code === codes.greaterThan ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === codes.greaterThan) {\n      effects.consume(code)\n      effects.exit(types.htmlTextData)\n      effects.exit(types.htmlText)\n      return ok\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    assert(returnState, 'expected return state')\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.exit(types.htmlTextData)\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          types.linePrefix,\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : constants.tabSize\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(types.htmlTextData)\n    return returnState(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {tokenize: tokenizeResource}\n/** @type {Construct} */\nconst referenceFullConstruct = {tokenize: tokenizeReferenceFull}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {tokenize: tokenizeReferenceCollapsed}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Array<Event>} */\n  const newEvents = []\n  while (++index < events.length) {\n    const token = events[index][1]\n    newEvents.push(events[index])\n\n    if (\n      token.type === types.labelImage ||\n      token.type === types.labelLink ||\n      token.type === types.labelEnd\n    ) {\n      // Remove the marker.\n      const offset = token.type === types.labelImage ? 4 : 2\n      token.type = types.data\n      index += offset\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents)\n  }\n\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === types.link ||\n        (token.type === types.labelLink && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === types.labelLink) {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === types.labelImage || token.type === types.labelLink) &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== types.labelLink) {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === types.labelEnd) {\n      close = index\n    }\n  }\n\n  assert(open !== undefined, '`open` is supposed to be found')\n  assert(close !== undefined, '`close` is supposed to be found')\n\n  const group = {\n    type: events[open][1].type === types.labelLink ? types.link : types.image,\n    start: {...events[open][1].start},\n    end: {...events[events.length - 1][1].end}\n  }\n\n  const label = {\n    type: types.label,\n    start: {...events[open][1].start},\n    end: {...events[close][1].end}\n  }\n\n  const text = {\n    type: types.labelText,\n    start: {...events[open + offset + 2][1].end},\n    end: {...events[close - 2][1].start}\n  }\n\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n  assert(\n    context.parser.constructs.insideSpan.null,\n    'expected `insideSpan.null` to be populated'\n  )\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n\n  splice(events, open, events.length, media)\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === types.labelImage ||\n        self.events[index][1].type === types.labelLink) &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.rightSquareBracket, 'expected `]`')\n\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({start: labelStart.end, end: self.now()})\n      )\n    )\n    effects.enter(types.labelEnd)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelEnd)\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === codes.leftParenthesis) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === codes.leftSquareBracket) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    assert(code === codes.leftParenthesis, 'expected left paren')\n    effects.enter(types.resource)\n    effects.enter(types.resourceMarker)\n    effects.consume(code)\n    effects.exit(types.resourceMarker)\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === codes.rightParenthesis) {\n      return resourceEnd(code)\n    }\n\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      types.resourceDestination,\n      types.resourceDestinationLiteral,\n      types.resourceDestinationLiteralMarker,\n      types.resourceDestinationRaw,\n      types.resourceDestinationString,\n      constants.linkResourceDestinationBalanceMax\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (\n      code === codes.quotationMark ||\n      code === codes.apostrophe ||\n      code === codes.leftParenthesis\n    ) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        types.resourceTitle,\n        types.resourceTitleMarker,\n        types.resourceTitleString\n      )(code)\n    }\n\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === codes.rightParenthesis) {\n      effects.enter(types.resourceMarker)\n      effects.consume(code)\n      effects.exit(types.resourceMarker)\n      effects.exit(types.resource)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      types.reference,\n      types.referenceMarker,\n      types.referenceString\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n    assert(code === codes.leftSquareBracket, 'expected left bracket')\n    effects.enter(types.reference)\n    effects.enter(types.referenceMarker)\n    effects.consume(code)\n    effects.exit(types.referenceMarker)\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === codes.rightSquareBracket) {\n      effects.enter(types.referenceMarker)\n      effects.consume(code)\n      effects.exit(types.referenceMarker)\n      effects.exit(types.reference)\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {codes, types} from 'micromark-util-symbol'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.exclamationMark, 'expected `!`')\n    effects.enter(types.labelImage)\n    effects.enter(types.labelImageMarker)\n    effects.consume(code)\n    effects.exit(types.labelImageMarker)\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === codes.leftSquareBracket) {\n      effects.enter(types.labelMarker)\n      effects.consume(code)\n      effects.exit(types.labelMarker)\n      effects.exit(types.labelImage)\n      return after\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {codes, types} from 'micromark-util-symbol'\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    assert(code === codes.leftSquareBracket, 'expected `[`')\n    effects.enter(types.labelLink)\n    effects.enter(types.labelMarker)\n    effects.consume(code)\n    effects.exit(types.labelMarker)\n    effects.exit(types.labelLink)\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === codes.caret &&\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const lineEnding = {name: 'lineEnding', tokenize: tokenizeLineEnding}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(markdownLineEnding(code), 'expected eol')\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    return factorySpace(effects, ok, types.linePrefix)\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(types.thematicBreak)\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    assert(\n      code === codes.asterisk ||\n        code === codes.dash ||\n        code === codes.underscore,\n      'expected `*`, `-`, or `_`'\n    )\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(types.thematicBreakSequence)\n      return sequence(code)\n    }\n\n    if (\n      size >= constants.thematicBreakMarkerCountMin &&\n      (code === codes.eof || markdownLineEnding(code))\n    ) {\n      effects.exit(types.thematicBreak)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit(types.thematicBreakSequence)\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, types.whitespace)(code)\n      : atBreak(code)\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {tokenize: tokenizeListContinuation},\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n}\n\n/** @type {Construct} */\nconst indentConstruct = {partial: true, tokenize: tokenizeIndent}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === types.linePrefix\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    assert(self.containerState, 'expected state')\n    const kind =\n      self.containerState.type ||\n      (code === codes.asterisk || code === codes.plusSign || code === codes.dash\n        ? types.listUnordered\n        : types.listOrdered)\n\n    if (\n      kind === types.listUnordered\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {_container: true})\n      }\n\n      if (kind === types.listUnordered) {\n        effects.enter(types.listItemPrefix)\n        return code === codes.asterisk || code === codes.dash\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === codes.digit1) {\n        effects.enter(types.listItemPrefix)\n        effects.enter(types.listItemValue)\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    assert(self.containerState, 'expected state')\n    if (asciiDigit(code) && ++size < constants.listItemValueSizeMax) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === codes.rightParenthesis || code === codes.dot)\n    ) {\n      effects.exit(types.listItemValue)\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    assert(self.containerState, 'expected state')\n    assert(code !== codes.eof, 'eof (`null`) is not a marker')\n    effects.enter(types.listItemMarker)\n    effects.consume(code)\n    effects.exit(types.listItemMarker)\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(types.listItemPrefixWhitespace)\n      effects.consume(code)\n      effects.exit(types.listItemPrefixWhitespace)\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    assert(self.containerState, 'expected state')\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit(types.listItemPrefix), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  self.containerState._closeFlow = undefined\n\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    assert(self.containerState, 'expected state')\n    assert(typeof self.containerState.size === 'number', 'expected size')\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      types.listItemIndent,\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    assert(self.containerState, 'expected state')\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    assert(self.containerState, 'expected state')\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n    assert(\n      self.parser.constructs.disable.null,\n      'expected `disable.null` to be populated'\n    )\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      types.linePrefix,\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : constants.tabSize\n    )(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n\n  assert(self.containerState, 'expected state')\n  assert(typeof self.containerState.size === 'number', 'expected size')\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemIndent,\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    assert(self.containerState, 'expected state')\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === types.listItemIndent &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  assert(this.containerState, 'expected state')\n  assert(typeof this.containerState.type === 'string', 'expected type')\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n  assert(\n    self.parser.constructs.disable.null,\n    'expected `disable.null` to be populated'\n  )\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    types.listItemPrefixWhitespace,\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : constants.tabSize + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === types.listItemPrefixWhitespace\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === types.content) {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === types.paragraph) {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === types.content) {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === types.definition) {\n        definition = index\n      }\n    }\n  }\n\n  assert(text !== undefined, 'expected a `text` index to be found')\n  assert(content !== undefined, 'expected a `text` index to be found')\n  assert(events[content][2] === context, 'enter context should be same')\n  assert(\n    events[events.length - 1][2] === context,\n    'enter context should be same'\n  )\n  const heading = {\n    type: types.setextHeading,\n    start: {...events[content][1].start},\n    end: {...events[events.length - 1][1].end}\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = types.setextHeadingText\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = {...events[definition][1].end}\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n\n    assert(\n      code === codes.dash || code === codes.equalsTo,\n      'expected `=` or `-`'\n    )\n\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== types.lineEnding &&\n        self.events[index][1].type !== types.linePrefix &&\n        self.events[index][1].type !== types.content\n      ) {\n        paragraph = self.events[index][1].type === types.paragraph\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(types.setextHeadingLine)\n      marker = code\n      return before(code)\n    }\n\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(types.setextHeadingLineSequence)\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n\n    effects.exit(types.setextHeadingLineSequence)\n\n    return markdownSpace(code)\n      ? factorySpace(effects, after, types.lineSuffix)(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === codes.eof || markdownLineEnding(code)) {\n      effects.exit(types.setextHeadingLine)\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {codes, types} from 'micromark-util-symbol'\n\n/** @type {InitialConstruct} */\nexport const flow = {tokenize: initializeFlow}\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        types.linePrefix\n      )\n    )\n  )\n\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEndingBlank)\n    effects.consume(code)\n    effects.exit(types.lineEndingBlank)\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    assert(\n      code === codes.eof || markdownLineEnding(code),\n      'expected eol or eof'\n    )\n\n    if (code === codes.eof) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter(types.lineEnding)\n    effects.consume(code)\n    effects.exit(types.lineEnding)\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n", "/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport {ok as assert} from 'devlop'\nimport {codes, constants, types} from 'micromark-util-symbol'\n\nexport const resolver = {resolveAll: createResolver()}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    ),\n    tokenize: initializeText\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === codes.eof) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter(types.data)\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(types.data)\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === codes.eof) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        // Always populated by defaults.\n        assert(Array.isArray(list), 'expected `disable.null` to be populated')\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === types.data) {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== types.data) {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === types.lineEnding) &&\n      events[eventIndex - 1][1].type === types.data\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === codes.space) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === codes.horizontalTab) {\n          tabs = true\n          size++\n        } else if (chunk === codes.virtualSpace) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length ||\n            tabs ||\n            size < constants.hardBreakPrefixSizeMin\n              ? types.lineSuffix\n              : types.hardBreakTrailing,\n          start: {\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {...data.end}\n        }\n\n        data.end = {...token.start}\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n", "/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {codes} from 'micromark-util-symbol'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [codes.asterisk]: list,\n  [codes.plusSign]: list,\n  [codes.dash]: list,\n  [codes.digit0]: list,\n  [codes.digit1]: list,\n  [codes.digit2]: list,\n  [codes.digit3]: list,\n  [codes.digit4]: list,\n  [codes.digit5]: list,\n  [codes.digit6]: list,\n  [codes.digit7]: list,\n  [codes.digit8]: list,\n  [codes.digit9]: list,\n  [codes.greaterThan]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [codes.leftSquareBracket]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [codes.horizontalTab]: codeIndented,\n  [codes.virtualSpace]: codeIndented,\n  [codes.space]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [codes.numberSign]: headingAtx,\n  [codes.asterisk]: thematicBreak,\n  [codes.dash]: [setextUnderline, thematicBreak],\n  [codes.lessThan]: htmlFlow,\n  [codes.equalsTo]: setextUnderline,\n  [codes.underscore]: thematicBreak,\n  [codes.graveAccent]: codeFenced,\n  [codes.tilde]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [codes.ampersand]: characterReference,\n  [codes.backslash]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [codes.carriageReturn]: lineEnding,\n  [codes.lineFeed]: lineEnding,\n  [codes.carriageReturnLineFeed]: lineEnding,\n  [codes.exclamationMark]: labelStartImage,\n  [codes.ampersand]: characterReference,\n  [codes.asterisk]: attention,\n  [codes.lessThan]: [autolink, htmlText],\n  [codes.leftSquareBracket]: labelStartLink,\n  [codes.backslash]: [hardBreakEscape, characterEscape],\n  [codes.rightSquareBracket]: labelEnd,\n  [codes.underscore]: attention,\n  [codes.graveAccent]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {null: [attention, resolveText]}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {null: [codes.asterisk, codes.underscore]}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {null: []}\n", "/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport createDebug from 'debug'\nimport {ok as assert} from 'devlop'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\nimport {codes, values} from 'micromark-util-symbol'\n\nconst debug = createDebug('micromark')\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: (from && from.line) || 1,\n    column: (from && from.column) || 1,\n    offset: (from && from.offset) || 0\n  }\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {interrupt: true})\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: codes.eof,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: codes.eof,\n    sliceSerialize,\n    sliceStream,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== codes.eof) {\n      return []\n    }\n\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {_bufferIndex, _index, line, column, offset} = point\n    return {_bufferIndex, _index, line, column, offset}\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n    debug('position: define skip: `%j`', point)\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    assert(consumed === true, 'expected character to be consumed')\n    consumed = undefined\n    debug('main: passing `%s` to %s', code, state && state.name)\n    expectedCode = code\n    assert(typeof state === 'function', 'expected state')\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    assert(code === expectedCode, 'expected given code to equal expected code')\n\n    debug('consume: `%s`', code)\n\n    assert(\n      consumed === undefined,\n      'expected code to not have been consumed: this might be because `return x(code)` instead of `return x` was used'\n    )\n    assert(\n      code === null\n        ? context.events.length === 0 ||\n            context.events[context.events.length - 1][0] === 'exit'\n        : context.events[context.events.length - 1][0] === 'enter',\n      'expected last token to be open'\n    )\n\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === codes.carriageReturnLineFeed ? 2 : 1\n      accountForPotentialSkip()\n      debug('position: after eol: `%j`', point)\n    } else if (code !== codes.virtualSpace) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      if (\n        point._bufferIndex ===\n        // Points w/ non-negative `_bufferIndex` reference\n        // strings.\n        /** @type {string} */ (chunks[point._index]).length\n      ) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n    debug('enter: `%s`', type)\n\n    context.events.push(['enter', token, context])\n\n    stack.push(token)\n\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    assert(typeof type === 'string', 'expected string type')\n    assert(type.length > 0, 'expected non-empty string')\n\n    const token = stack.pop()\n    assert(token, 'cannot close w/o open tokens')\n    token.end = now()\n\n    assert(type === token.type, 'expected exit token to match current token')\n\n    assert(\n      !(\n        token.start._index === token.end._index &&\n        token.start._bufferIndex === token.end._bufferIndex\n      ),\n      'expected non-empty token (`' + type + '`)'\n    )\n\n    debug('exit: `%s`', token.type)\n    context.events.push(['exit', token, context])\n\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n          ? // Looks like a construct.\n            handleListOfConstructs([/** @type {Construct} */ (constructs)])\n          : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(left) ? left : left ? [left] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          assert(bogusState, 'expected `bogusState` to be given')\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n          assert(\n            context.parser.constructs.disable.null,\n            'expected `disable.null` to be populated'\n          )\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        assert(code === expectedCode, 'expected code')\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n\n    assert(\n      construct.partial ||\n        context.events.length === 0 ||\n        context.events[context.events.length - 1][0] === 'exit',\n      'expected last token to end'\n    )\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n\n    return {from: startEventsIndex, restore}\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n      debug('position: restore: `%j`', point)\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n\n  if (startIndex === endIndex) {\n    assert(endBufferIndex > -1, 'expected non-negative end buffer index')\n    assert(startBufferIndex > -1, 'expected non-negative start buffer index')\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        assert(startBufferIndex === 0, 'expected `startBufferIndex` to be `0`')\n        view.shift()\n      }\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case codes.carriageReturn: {\n          value = values.cr\n\n          break\n        }\n\n        case codes.lineFeed: {\n          value = values.lf\n\n          break\n        }\n\n        case codes.carriageReturnLineFeed: {\n          value = values.cr + values.lf\n\n          break\n        }\n\n        case codes.horizontalTab: {\n          value = expandTabs ? values.space : values.ht\n\n          break\n        }\n\n        case codes.virtualSpace: {\n          if (!expandTabs && atTab) continue\n          value = values.space\n\n          break\n        }\n\n        default: {\n          assert(typeof chunk === 'number', 'expected number')\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === codes.horizontalTab\n    result.push(value)\n  }\n\n  return result.join('')\n}\n", "/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport * as defaultConstructs from './constructs.js'\nimport {createTokenizer} from './create-tokenizer.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs = /** @type {FullNormalizedExtension} */ (\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n  )\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  }\n\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n", "/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n", "/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nimport {codes, constants} from 'micromark-util-symbol'\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === codes.byteOrderMarker) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (\n        code === codes.lf &&\n        startPosition === endPosition &&\n        atCarriageReturn\n      ) {\n        chunks.push(codes.carriageReturnLineFeed)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(codes.carriageReturn)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case codes.nul: {\n            chunks.push(codes.replacementCharacter)\n            column++\n\n            break\n          }\n\n          case codes.ht: {\n            next = Math.ceil(column / constants.tabSize) * constants.tabSize\n            chunks.push(codes.horizontalTab)\n            while (column++ < next) chunks.push(codes.virtualSpace)\n\n            break\n          }\n\n          case codes.lf: {\n            chunks.push(codes.lineFeed)\n            column = 1\n\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(codes.carriageReturn)\n      if (buffer) chunks.push(buffer)\n      chunks.push(codes.eof)\n    }\n\n    return chunks\n  }\n}\n", "import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {codes, constants} from 'micromark-util-symbol'\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n\n  if (head === codes.numberSign) {\n    const head = $2.charCodeAt(1)\n    const hex = head === codes.lowercaseX || head === codes.uppercaseX\n    return decodeNumericCharacterReference(\n      $2.slice(hex ? 2 : 1),\n      hex ? constants.numericBaseHexadecimal : constants.numericBaseDecimal\n    )\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n", "/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport {ok as assert} from 'devlop'\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {codes, constants, types} from 'micromark-util-symbol'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parse(options)\n        .document()\n        .write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {type: 'root', children: []}\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === types.listOrdered ||\n        events[index][1].type === types.listUnordered\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          assert(typeof tail === 'number', 'expected list ot be open')\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {sliceSerialize: events[index][2].sliceSerialize},\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0 ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      switch (event[1].type) {\n        case types.listUnordered:\n        case types.listOrdered:\n        case types.blockQuote: {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n\n          atMarker = undefined\n\n          break\n        }\n\n        case types.lineEndingBlank: {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n\n            atMarker = undefined\n          }\n\n          break\n        }\n\n        case types.linePrefix:\n        case types.listItemValue:\n        case types.listItemMarker:\n        case types.listItemPrefix:\n        case types.listItemPrefixWhitespace: {\n          // Empty.\n\n          break\n        }\n\n        default: {\n          atMarker = undefined\n        }\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === types.listItemPrefix) ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === types.listUnordered ||\n            event[1].type === types.listOrdered))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === types.lineEnding ||\n              tailEvent[1].type === types.lineEndingBlank\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = types.lineEndingBlank\n                listSpread = true\n              }\n\n              tailEvent[1].type = types.lineEnding\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === types.linePrefix ||\n              tailEvent[1].type === types.blockQuotePrefix ||\n              tailEvent[1].type === types.blockQuotePrefixWhitespace ||\n              tailEvent[1].type === types.blockQuoteMarker ||\n              tailEvent[1].type === types.listItemIndent\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === types.listItemPrefix) {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    assert(parent, 'expected `parent`')\n    assert('children' in parent, 'expected `parent`')\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler || undefined])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    assert(node, 'expected `node`')\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    assert(node.type !== 'fragment', 'unexpected fragment `exit`ed')\n    assert(node.position, 'expected `position` to be defined')\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      assert(ancestor, 'expected nodes on stack')\n      assert(ancestor.type === 'list', 'expected list on stack')\n      ancestor.start = Number.parseInt(\n        this.sliceSerialize(token),\n        constants.numericBaseDecimal\n      )\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'code', 'expected code on stack')\n\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'definition', 'expected definition on stack')\n\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n\n      assert(\n        depth === 1 ||\n          depth === 2 ||\n          depth === 3 ||\n          depth === 4 ||\n          depth === 5 ||\n          depth === 6,\n        'expected `depth` between `1` and `6`'\n      )\n\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'heading', 'expected heading on stack')\n\n    node.depth =\n      this.sliceSerialize(token).codePointAt(0) === codes.equalsTo ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert('children' in node, 'expected parent on stack')\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n\n    let tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected a `node` to be on the stack')\n    assert('value' in tail, 'expected a `literal` to be on the stack')\n    assert(tail.position, 'expected `node` to have an open position')\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    assert(context, 'expected `node`')\n\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      assert('children' in context, 'expected `parent`')\n      const tail = context.children[context.children.length - 1]\n      assert(tail.position, 'expected tail to have a starting position')\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'html', 'expected html on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'inlineCode', 'expected inline code on stack')\n\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'image', 'expected image on stack')\n\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    assert(ancestor, 'expected ancestor on stack')\n    assert(\n      ancestor.type === 'image' || ancestor.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    assert(fragment, 'expected node on stack')\n    assert(fragment.type === 'fragment', 'expected fragment on stack')\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n\n    // Assume a reference.\n    this.data.inReference = true\n\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image or link on stack'\n    )\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(\n      node.type === 'image' || node.type === 'link',\n      'expected image reference or link reference on stack'\n    )\n\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    assert(\n      token.type === 'characterReferenceMarkerNumeric' ||\n        token.type === 'characterReferenceMarkerHexadecimal'\n    )\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === types.characterReferenceMarkerNumeric\n          ? constants.numericBaseDecimal\n          : constants.numericBaseHexadecimal\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      assert(result !== false, 'expected reference to decode')\n      value = result\n    }\n\n    const tail = this.stack[this.stack.length - 1]\n    assert(tail, 'expected `node`')\n    assert('value' in tail, 'expected `node.value`')\n    tail.value += value\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop()\n    assert(tail, 'expected `node`')\n    assert(tail.position, 'expected `node.position`')\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    assert(node, 'expected node on stack')\n    assert(node.type === 'link', 'expected link on stack')\n\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {line: d.line, column: d.column, offset: d.offset}\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n\n          break\n        }\n\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n\n          break\n        }\n\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({start: left.start, end: left.end}) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({start: right.start, end: right.end}) +\n        ') is still open'\n    )\n  }\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n", "/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n", "export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n", "import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n", "import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n", "/**\n * @import {Node, Parent} from 'unist'\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | ReadonlyArray<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends ReadonlyArray<string>>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition[number]}) &\n   *   (<Condition extends Array<string>>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition[number]}) &\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test)\n          ? anyFactory(test)\n          : // Cast because `ReadonlyArray` goes into the above but `isArray`\n            // narrows to `Array`.\n            propertiesFactory(/** @type {Props} */ (test))\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propertiesFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n", "/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n", "/**\n * @import {Node as UnistNode, Parent as UnistParent} from 'unist'\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends ReadonlyArray<infer T>\n *   ? MatchesOne<Value, T>\n *   : Check extends Array<infer T>\n *   ? MatchesOne<Value, T>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n            typeof value.name === 'string'\n            ? value.name\n            : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n", "/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n", "/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n", "/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n", "/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n", "/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n", "/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n", "// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n", "// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n", "// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n", "/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n", "import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n", "/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n", "export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n", "import {\n  AbstractChat,\n  ChatInit,\n  type CreateUIMessage,\n  type UIMessage,\n} from 'ai';\nimport { useCallback, useEffect, useRef, useSyncExternalStore } from 'react';\nimport { Chat } from './chat.react';\n\nexport type { CreateUIMessage, UIMessage };\n\nexport type UseChatHelpers<UI_MESSAGE extends UIMessage> = {\n  /**\n   * The id of the chat.\n   */\n  readonly id: string;\n\n  /**\n   * Update the `messages` state locally. This is useful when you want to\n   * edit the messages on the client, and then trigger the `reload` method\n   * manually to regenerate the AI response.\n   */\n  setMessages: (\n    messages: UI_MESSAGE[] | ((messages: UI_MESSAGE[]) => UI_MESSAGE[]),\n  ) => void;\n\n  error: Error | undefined;\n} & Pick<\n  AbstractChat<UI_MESSAGE>,\n  | 'sendMessage'\n  | 'regenerate'\n  | 'stop'\n  | 'resumeStream'\n  | 'addToolResult'\n  | 'status'\n  | 'messages'\n  | 'clearError'\n>;\n\nexport type UseChatOptions<UI_MESSAGE extends UIMessage> = (\n  | { chat: Chat<UI_MESSAGE> }\n  | ChatInit<UI_MESSAGE>\n) & {\n  /**\nCustom throttle wait in ms for the chat messages and data updates.\nDefault is undefined, which disables throttling.\n   */\n  experimental_throttle?: number;\n\n  /**\n   * Whether to resume an ongoing chat generation stream.\n   */\n  resume?: boolean;\n};\n\nexport function useChat<UI_MESSAGE extends UIMessage = UIMessage>({\n  experimental_throttle: throttleWaitMs,\n  resume = false,\n  ...options\n}: UseChatOptions<UI_MESSAGE> = {}): UseChatHelpers<UI_MESSAGE> {\n  const chatRef = useRef<Chat<UI_MESSAGE>>(\n    'chat' in options ? options.chat : new Chat(options),\n  );\n\n  const shouldRecreateChat =\n    ('chat' in options && options.chat !== chatRef.current) ||\n    ('id' in options && chatRef.current.id !== options.id);\n\n  if (shouldRecreateChat) {\n    chatRef.current = 'chat' in options ? options.chat : new Chat(options);\n  }\n\n  const optionsId = 'id' in options ? options.id : null;\n\n  const subscribeToMessages = useCallback(\n    (update: () => void) =>\n      chatRef.current['~registerMessagesCallback'](update, throttleWaitMs),\n    // optionsId is required to trigger re-subscription when the chat ID changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [throttleWaitMs, optionsId],\n  );\n\n  const messages = useSyncExternalStore(\n    subscribeToMessages,\n    () => chatRef.current.messages,\n    () => chatRef.current.messages,\n  );\n\n  const status = useSyncExternalStore(\n    chatRef.current['~registerStatusCallback'],\n    () => chatRef.current.status,\n    () => chatRef.current.status,\n  );\n\n  const error = useSyncExternalStore(\n    chatRef.current['~registerErrorCallback'],\n    () => chatRef.current.error,\n    () => chatRef.current.error,\n  );\n\n  const setMessages = useCallback(\n    (\n      messagesParam: UI_MESSAGE[] | ((messages: UI_MESSAGE[]) => UI_MESSAGE[]),\n    ) => {\n      if (typeof messagesParam === 'function') {\n        messagesParam = messagesParam(chatRef.current.messages);\n      }\n      chatRef.current.messages = messagesParam;\n    },\n    [chatRef],\n  );\n\n  useEffect(() => {\n    if (resume) {\n      chatRef.current.resumeStream();\n    }\n  }, [resume, chatRef]);\n\n  return {\n    id: chatRef.current.id,\n    messages,\n    setMessages,\n    sendMessage: chatRef.current.sendMessage,\n    regenerate: chatRef.current.regenerate,\n    clearError: chatRef.current.clearError,\n    stop: chatRef.current.stop,\n    error,\n    resumeStream: chatRef.current.resumeStream,\n    status,\n    addToolResult: chatRef.current.addToolResult,\n  };\n}\n", "import { AbstractChat, ChatInit, ChatState, ChatStatus, UIMessage } from 'ai';\nimport { throttle } from './throttle';\n\nclass ReactChatState<UI_MESSAGE extends UIMessage>\n  implements ChatState<UI_MESSAGE>\n{\n  #messages: UI_MESSAGE[];\n  #status: ChatStatus = 'ready';\n  #error: Error | undefined = undefined;\n\n  #messagesCallbacks = new Set<() => void>();\n  #statusCallbacks = new Set<() => void>();\n  #errorCallbacks = new Set<() => void>();\n\n  constructor(initialMessages: UI_MESSAGE[] = []) {\n    this.#messages = initialMessages;\n  }\n\n  get status(): ChatStatus {\n    return this.#status;\n  }\n\n  set status(newStatus: ChatStatus) {\n    this.#status = newStatus;\n    this.#callStatusCallbacks();\n  }\n\n  get error(): Error | undefined {\n    return this.#error;\n  }\n\n  set error(newError: Error | undefined) {\n    this.#error = newError;\n    this.#callErrorCallbacks();\n  }\n\n  get messages(): UI_MESSAGE[] {\n    return this.#messages;\n  }\n\n  set messages(newMessages: UI_MESSAGE[]) {\n    this.#messages = [...newMessages];\n    this.#callMessagesCallbacks();\n  }\n\n  pushMessage = (message: UI_MESSAGE) => {\n    this.#messages = this.#messages.concat(message);\n    this.#callMessagesCallbacks();\n  };\n\n  popMessage = () => {\n    this.#messages = this.#messages.slice(0, -1);\n    this.#callMessagesCallbacks();\n  };\n\n  replaceMessage = (index: number, message: UI_MESSAGE) => {\n    this.#messages = [\n      ...this.#messages.slice(0, index),\n      // We deep clone the message here to ensure the new React Compiler (currently in RC) detects deeply nested parts/metadata changes:\n      this.snapshot(message),\n      ...this.#messages.slice(index + 1),\n    ];\n    this.#callMessagesCallbacks();\n  };\n\n  snapshot = <T>(value: T): T => structuredClone(value);\n\n  '~registerMessagesCallback' = (\n    onChange: () => void,\n    throttleWaitMs?: number,\n  ): (() => void) => {\n    const callback = throttleWaitMs\n      ? throttle(onChange, throttleWaitMs)\n      : onChange;\n    this.#messagesCallbacks.add(callback);\n    return () => {\n      this.#messagesCallbacks.delete(callback);\n    };\n  };\n\n  '~registerStatusCallback' = (onChange: () => void): (() => void) => {\n    this.#statusCallbacks.add(onChange);\n    return () => {\n      this.#statusCallbacks.delete(onChange);\n    };\n  };\n\n  '~registerErrorCallback' = (onChange: () => void): (() => void) => {\n    this.#errorCallbacks.add(onChange);\n    return () => {\n      this.#errorCallbacks.delete(onChange);\n    };\n  };\n\n  #callMessagesCallbacks = () => {\n    this.#messagesCallbacks.forEach(callback => callback());\n  };\n\n  #callStatusCallbacks = () => {\n    this.#statusCallbacks.forEach(callback => callback());\n  };\n\n  #callErrorCallbacks = () => {\n    this.#errorCallbacks.forEach(callback => callback());\n  };\n}\n\nexport class Chat<\n  UI_MESSAGE extends UIMessage,\n> extends AbstractChat<UI_MESSAGE> {\n  #state: ReactChatState<UI_MESSAGE>;\n\n  constructor({ messages, ...init }: ChatInit<UI_MESSAGE>) {\n    const state = new ReactChatState(messages);\n    super({ ...init, state });\n    this.#state = state;\n  }\n\n  '~registerMessagesCallback' = (\n    onChange: () => void,\n    throttleWaitMs?: number,\n  ): (() => void) =>\n    this.#state['~registerMessagesCallback'](onChange, throttleWaitMs);\n\n  '~registerStatusCallback' = (onChange: () => void): (() => void) =>\n    this.#state['~registerStatusCallback'](onChange);\n\n  '~registerErrorCallback' = (onChange: () => void): (() => void) =>\n    this.#state['~registerErrorCallback'](onChange);\n}\n", "import throttleFunction from 'throttleit';\n\nexport function throttle<T extends (...args: any[]) => any>(\n  fn: T,\n  waitMs: number | undefined,\n): T {\n  return waitMs != null ? throttleFunction(fn, waitMs) : fn;\n}\n", "import {\n  CompletionRequestOptions,\n  UseCompletionOptions,\n  callCompletionApi,\n} from 'ai';\nimport { useCallback, useEffect, useId, useRef, useState } from 'react';\nimport useSWR from 'swr';\nimport { throttle } from './throttle';\n\nexport type { UseCompletionOptions };\n\nexport type UseCompletionHelpers = {\n  /** The current completion result */\n  completion: string;\n  /**\n   * Send a new prompt to the API endpoint and update the completion state.\n   */\n  complete: (\n    prompt: string,\n    options?: CompletionRequestOptions,\n  ) => Promise<string | null | undefined>;\n  /** The error object of the API request */\n  error: undefined | Error;\n  /**\n   * Abort the current API request but keep the generated tokens.\n   */\n  stop: () => void;\n  /**\n   * Update the `completion` state locally.\n   */\n  setCompletion: (completion: string) => void;\n  /** The current value of the input */\n  input: string;\n  /** setState-powered method to update the input value */\n  setInput: React.Dispatch<React.SetStateAction<string>>;\n  /**\n   * An input/textarea-ready onChange handler to control the value of the input\n   * @example\n   * ```jsx\n   * <input onChange={handleInputChange} value={input} />\n   * ```\n   */\n  handleInputChange: (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>,\n  ) => void;\n\n  /**\n   * Form submission handler to automatically reset input and append a user message\n   * @example\n   * ```jsx\n   * <form onSubmit={handleSubmit}>\n   *  <input onChange={handleInputChange} value={input} />\n   * </form>\n   * ```\n   */\n  handleSubmit: (event?: { preventDefault?: () => void }) => void;\n\n  /** Whether the API request is in progress */\n  isLoading: boolean;\n};\n\nexport function useCompletion({\n  api = '/api/completion',\n  id,\n  initialCompletion = '',\n  initialInput = '',\n  credentials,\n  headers,\n  body,\n  streamProtocol = 'data',\n  fetch,\n  onFinish,\n  onError,\n  experimental_throttle: throttleWaitMs,\n}: UseCompletionOptions & {\n  /**\n   * Custom throttle wait in ms for the completion and data updates.\n   * Default is undefined, which disables throttling.\n   */\n  experimental_throttle?: number;\n} = {}): UseCompletionHelpers {\n  // Generate an unique id for the completion if not provided.\n  const hookId = useId();\n  const completionId = id || hookId;\n\n  // Store the completion state in SWR, using the completionId as the key to share states.\n  const { data, mutate } = useSWR<string>([api, completionId], null, {\n    fallbackData: initialCompletion,\n  });\n\n  const { data: isLoading = false, mutate: mutateLoading } = useSWR<boolean>(\n    [completionId, 'loading'],\n    null,\n  );\n\n  const [error, setError] = useState<undefined | Error>(undefined);\n  const completion = data!;\n\n  // Abort controller to cancel the current API call.\n  const [abortController, setAbortController] =\n    useState<AbortController | null>(null);\n\n  const extraMetadataRef = useRef({\n    credentials,\n    headers,\n    body,\n  });\n\n  useEffect(() => {\n    extraMetadataRef.current = {\n      credentials,\n      headers,\n      body,\n    };\n  }, [credentials, headers, body]);\n\n  const triggerRequest = useCallback(\n    async (prompt: string, options?: CompletionRequestOptions) =>\n      callCompletionApi({\n        api,\n        prompt,\n        credentials: extraMetadataRef.current.credentials,\n        headers: { ...extraMetadataRef.current.headers, ...options?.headers },\n        body: {\n          ...extraMetadataRef.current.body,\n          ...options?.body,\n        },\n        streamProtocol,\n        fetch,\n        // throttle streamed ui updates:\n        setCompletion: throttle(\n          (completion: string) => mutate(completion, false),\n          throttleWaitMs,\n        ),\n        setLoading: mutateLoading,\n        setError,\n        setAbortController,\n        onFinish,\n        onError,\n      }),\n    [\n      mutate,\n      mutateLoading,\n      api,\n      extraMetadataRef,\n      setAbortController,\n      onFinish,\n      onError,\n      setError,\n      streamProtocol,\n      fetch,\n      throttleWaitMs,\n    ],\n  );\n\n  const stop = useCallback(() => {\n    if (abortController) {\n      abortController.abort();\n      setAbortController(null);\n    }\n  }, [abortController]);\n\n  const setCompletion = useCallback(\n    (completion: string) => {\n      mutate(completion, false);\n    },\n    [mutate],\n  );\n\n  const complete = useCallback<UseCompletionHelpers['complete']>(\n    async (prompt, options) => {\n      return triggerRequest(prompt, options);\n    },\n    [triggerRequest],\n  );\n\n  const [input, setInput] = useState(initialInput);\n\n  const handleSubmit = useCallback(\n    (event?: { preventDefault?: () => void }) => {\n      event?.preventDefault?.();\n      return input ? complete(input) : undefined;\n    },\n    [input, complete],\n  );\n\n  const handleInputChange = useCallback(\n    (e: any) => {\n      setInput(e.target.value);\n    },\n    [setInput],\n  );\n\n  return {\n    completion,\n    complete,\n    error,\n    setCompletion,\n    stop,\n    input,\n    setInput,\n    handleInputChange,\n    handleSubmit,\n    isLoading,\n  };\n}\n", "import {\n  FetchFunction,\n  InferSchema,\n  isAbortError,\n  safeValidateTypes,\n} from '@ai-sdk/provider-utils';\nimport {\n  asSchema,\n  DeepPartial,\n  isDeepEqualData,\n  parsePartialJson,\n  Schema,\n} from 'ai';\nimport { useCallback, useId, useRef, useState } from 'react';\nimport useSWR from 'swr';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport type Experimental_UseObjectOptions<\n  SCHEMA extends z4.core.$ZodType | z3.Schema | Schema,\n  RESULT,\n> = {\n  /**\n   * The API endpoint. It should stream JSON that matches the schema as chunked text.\n   */\n  api: string;\n\n  /**\n   * A Zod schema that defines the shape of the complete object.\n   */\n  schema: SCHEMA;\n\n  /**\n   * An unique identifier. If not provided, a random one will be\n   * generated. When provided, the `useObject` hook with the same `id` will\n   * have shared states across components.\n   */\n  id?: string;\n\n  /**\n   * An optional value for the initial object.\n   */\n  initialValue?: DeepPartial<RESULT>;\n\n  /**\nCustom fetch implementation. You can use it as a middleware to intercept requests,\nor to provide a custom fetch implementation for e.g. testing.\n    */\n  fetch?: FetchFunction;\n\n  /**\nCallback that is called when the stream has finished.\n     */\n  onFinish?: (event: {\n    /**\nThe generated object (typed according to the schema).\nCan be undefined if the final object does not match the schema.\n   */\n    object: RESULT | undefined;\n\n    /**\nOptional error object. This is e.g. a TypeValidationError when the final object does not match the schema.\n */\n    error: Error | undefined;\n  }) => Promise<void> | void;\n\n  /**\n   * Callback function to be called when an error is encountered.\n   */\n  onError?: (error: Error) => void;\n\n  /**\n   * Additional HTTP headers to be included in the request.\n   */\n  headers?: Record<string, string> | Headers;\n\n  /**\n   * The credentials mode to be used for the fetch request.\n   * Possible values are: 'omit', 'same-origin', 'include'.\n   * Defaults to 'same-origin'.\n   */\n  credentials?: RequestCredentials;\n};\n\nexport type Experimental_UseObjectHelpers<RESULT, INPUT> = {\n  /**\n   * Calls the API with the provided input as JSON body.\n   */\n  submit: (input: INPUT) => void;\n\n  /**\n   * The current value for the generated object. Updated as the API streams JSON chunks.\n   */\n  object: DeepPartial<RESULT> | undefined;\n\n  /**\n   * The error object of the API request if any.\n   */\n  error: Error | undefined;\n\n  /**\n   * Flag that indicates whether an API request is in progress.\n   */\n  isLoading: boolean;\n\n  /**\n   * Abort the current request immediately, keep the current partial object if any.\n   */\n  stop: () => void;\n\n  /**\n   * Clear the object state.\n   */\n  clear: () => void;\n};\n\nfunction useObject<\n  SCHEMA extends z4.core.$ZodType | z3.Schema | Schema,\n  RESULT = InferSchema<SCHEMA>,\n  INPUT = any,\n>({\n  api,\n  id,\n  schema, // required, in the future we will use it for validation\n  initialValue,\n  fetch,\n  onError,\n  onFinish,\n  headers,\n  credentials,\n}: Experimental_UseObjectOptions<\n  SCHEMA,\n  RESULT\n>): Experimental_UseObjectHelpers<RESULT, INPUT> {\n  // Generate an unique id if not provided.\n  const hookId = useId();\n  const completionId = id ?? hookId;\n\n  // Store the completion state in SWR, using the completionId as the key to share states.\n  const { data, mutate } = useSWR<DeepPartial<RESULT>>(\n    [api, completionId],\n    null,\n    { fallbackData: initialValue },\n  );\n\n  const [error, setError] = useState<undefined | Error>(undefined);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Abort controller to cancel the current API call.\n  const abortControllerRef = useRef<AbortController | null>(null);\n\n  const stop = useCallback(() => {\n    try {\n      abortControllerRef.current?.abort();\n    } catch (ignored) {\n    } finally {\n      setIsLoading(false);\n      abortControllerRef.current = null;\n    }\n  }, []);\n\n  const submit = async (input: INPUT) => {\n    try {\n      clearObject();\n\n      setIsLoading(true);\n\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n\n      const actualFetch = fetch ?? getOriginalFetch();\n      const response = await actualFetch(api, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...headers,\n        },\n        credentials,\n        signal: abortController.signal,\n        body: JSON.stringify(input),\n      });\n\n      if (!response.ok) {\n        throw new Error(\n          (await response.text()) ?? 'Failed to fetch the response.',\n        );\n      }\n\n      if (response.body == null) {\n        throw new Error('The response body is empty.');\n      }\n\n      let accumulatedText = '';\n      let latestObject: DeepPartial<RESULT> | undefined = undefined;\n\n      await response.body.pipeThrough(new TextDecoderStream()).pipeTo(\n        new WritableStream<string>({\n          async write(chunk) {\n            accumulatedText += chunk;\n\n            const { value } = await parsePartialJson(accumulatedText);\n            const currentObject = value as DeepPartial<RESULT>;\n\n            if (!isDeepEqualData(latestObject, currentObject)) {\n              latestObject = currentObject;\n\n              mutate(currentObject);\n            }\n          },\n\n          async close() {\n            setIsLoading(false);\n            abortControllerRef.current = null;\n\n            if (onFinish != null) {\n              const validationResult = await safeValidateTypes({\n                value: latestObject,\n                schema: asSchema(schema),\n              });\n\n              onFinish(\n                validationResult.success\n                  ? { object: validationResult.value, error: undefined }\n                  : { object: undefined, error: validationResult.error },\n              );\n            }\n          },\n        }),\n      );\n    } catch (error) {\n      if (isAbortError(error)) {\n        return;\n      }\n\n      if (onError && error instanceof Error) {\n        onError(error);\n      }\n\n      setIsLoading(false);\n      setError(error instanceof Error ? error : new Error(String(error)));\n    }\n  };\n\n  const clear = () => {\n    stop();\n    clearObject();\n  };\n\n  const clearObject = () => {\n    setError(undefined);\n    setIsLoading(false);\n    mutate(undefined);\n  };\n\n  return {\n    submit,\n    object: data,\n    error,\n    isLoading,\n    stop,\n    clear,\n  };\n}\n\nexport const experimental_useObject = useObject;\n", "/**\n * Symbol used for identifying AI SDK Error instances.\n * Enables checking if an error is an instance of AISDKError across package versions.\n */\nconst marker = 'vercel.ai.error';\nconst symbol = Symbol.for(marker);\n\n/**\n * Custom error class for AI SDK related errors.\n * @extends Error\n */\nexport class AISDKError extends Error {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n   * The underlying cause of the error, if any.\n   */\n  readonly cause?: unknown;\n\n  /**\n   * Creates an AI SDK Error.\n   *\n   * @param {Object} params - The parameters for creating the error.\n   * @param {string} params.name - The name of the error.\n   * @param {string} params.message - The error message.\n   * @param {unknown} [params.cause] - The underlying cause of the error.\n   */\n  constructor({\n    name,\n    message,\n    cause,\n  }: {\n    name: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super(message);\n\n    this.name = name;\n    this.cause = cause;\n  }\n\n  /**\n   * Checks if the given error is an AI SDK Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is an AI SDK Error, false otherwise.\n   */\n  static isInstance(error: unknown): error is AISDKError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  protected static hasMarker(error: unknown, marker: string): boolean {\n    const markerSymbol = Symbol.for(marker);\n    return (\n      error != null &&\n      typeof error === 'object' &&\n      markerSymbol in error &&\n      typeof error[markerSymbol] === 'boolean' &&\n      error[markerSymbol] === true\n    );\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_APICallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class APICallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly requestBodyValues: unknown;\n  readonly statusCode?: number;\n\n  readonly responseHeaders?: Record<string, string>;\n  readonly responseBody?: string;\n\n  readonly isRetryable: boolean;\n  readonly data?: unknown;\n\n  constructor({\n    message,\n    url,\n    requestBodyValues,\n    statusCode,\n    responseHeaders,\n    responseBody,\n    cause,\n    isRetryable = statusCode != null &&\n      (statusCode === 408 || // request timeout\n        statusCode === 409 || // conflict\n        statusCode === 429 || // too many requests\n        statusCode >= 500), // server error\n    data,\n  }: {\n    message: string;\n    url: string;\n    requestBodyValues: unknown;\n    statusCode?: number;\n    responseHeaders?: Record<string, string>;\n    responseBody?: string;\n    cause?: unknown;\n    isRetryable?: boolean;\n    data?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.requestBodyValues = requestBodyValues;\n    this.statusCode = statusCode;\n    this.responseHeaders = responseHeaders;\n    this.responseBody = responseBody;\n    this.isRetryable = isRetryable;\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is APICallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_EmptyResponseBodyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class EmptyResponseBodyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'Empty response body' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is EmptyResponseBodyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidArgumentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A function argument is invalid.\n */\nexport class InvalidArgumentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly argument: string;\n\n  constructor({\n    message,\n    cause,\n    argument,\n  }: {\n    argument: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.argument = argument;\n  }\n\n  static isInstance(error: unknown): error is InvalidArgumentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidPromptError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * A prompt is invalid. This error should be thrown by providers when they cannot\n * process a prompt.\n */\nexport class InvalidPromptError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly prompt: unknown;\n\n  constructor({\n    prompt,\n    message,\n    cause,\n  }: {\n    prompt: unknown;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message: `Invalid prompt: ${message}`, cause });\n\n    this.prompt = prompt;\n  }\n\n  static isInstance(error: unknown): error is InvalidPromptError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_InvalidResponseDataError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Server returned a response with invalid data content.\n * This should be thrown by providers when they cannot parse the response from the API.\n */\nexport class InvalidResponseDataError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly data: unknown;\n\n  constructor({\n    data,\n    message = `Invalid response data: ${JSON.stringify(data)}.`,\n  }: {\n    data: unknown;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.data = data;\n  }\n\n  static isInstance(error: unknown): error is InvalidResponseDataError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_JSONParseError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n// TODO v5: rename to ParseError\nexport class JSONParseError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly text: string;\n\n  constructor({ text, cause }: { text: string; cause: unknown }) {\n    super({\n      name,\n      message:\n        `JSON parsing failed: ` +\n        `Text: ${text}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.text = text;\n  }\n\n  static isInstance(error: unknown): error is JSONParseError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadAPIKeyError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadAPIKeyError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadAPIKeyError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_LoadSettingError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class LoadSettingError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message }: { message: string }) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is LoadSettingError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoContentGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when the AI provider fails to generate any content.\n */\nexport class NoContentGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({\n    message = 'No content generated.',\n  }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoContentGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_NoSuchModelError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchModelError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly modelId: string;\n  readonly modelType:\n    | 'languageModel'\n    | 'textEmbeddingModel'\n    | 'imageModel'\n    | 'transcriptionModel'\n    | 'speechModel';\n\n  constructor({\n    errorName = name,\n    modelId,\n    modelType,\n    message = `No such ${modelType}: ${modelId}`,\n  }: {\n    errorName?: string;\n    modelId: string;\n    modelType:\n      | 'languageModel'\n      | 'textEmbeddingModel'\n      | 'imageModel'\n      | 'transcriptionModel'\n      | 'speechModel';\n    message?: string;\n  }) {\n    super({ name: errorName, message });\n\n    this.modelId = modelId;\n    this.modelType = modelType;\n  }\n\n  static isInstance(error: unknown): error is NoSuchModelError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_TooManyEmbeddingValuesForCallError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TooManyEmbeddingValuesForCallError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly provider: string;\n  readonly modelId: string;\n  readonly maxEmbeddingsPerCall: number;\n  readonly values: Array<unknown>;\n\n  constructor(options: {\n    provider: string;\n    modelId: string;\n    maxEmbeddingsPerCall: number;\n    values: Array<unknown>;\n  }) {\n    super({\n      name,\n      message:\n        `Too many values for a single embedding call. ` +\n        `The ${options.provider} model \"${options.modelId}\" can only embed up to ` +\n        `${options.maxEmbeddingsPerCall} values per call, but ${options.values.length} values were provided.`,\n    });\n\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n    this.maxEmbeddingsPerCall = options.maxEmbeddingsPerCall;\n    this.values = options.values;\n  }\n\n  static isInstance(\n    error: unknown,\n  ): error is TooManyEmbeddingValuesForCallError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\nimport { getErrorMessage } from './get-error-message';\n\nconst name = 'AI_TypeValidationError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class TypeValidationError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly value: unknown;\n\n  constructor({ value, cause }: { value: unknown; cause: unknown }) {\n    super({\n      name,\n      message:\n        `Type validation failed: ` +\n        `Value: ${JSON.stringify(value)}.\\n` +\n        `Error message: ${getErrorMessage(cause)}`,\n      cause,\n    });\n\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is TypeValidationError {\n    return AISDKError.hasMarker(error, marker);\n  }\n\n  /**\n   * Wraps an error into a TypeValidationError.\n   * If the cause is already a TypeValidationError with the same value, it returns the cause.\n   * Otherwise, it creates a new TypeValidationError.\n   *\n   * @param {Object} params - The parameters for wrapping the error.\n   * @param {unknown} params.value - The value that failed validation.\n   * @param {unknown} params.cause - The original error or cause of the validation failure.\n   * @returns {TypeValidationError} A TypeValidationError instance.\n   */\n  static wrap({\n    value,\n    cause,\n  }: {\n    value: unknown;\n    cause: unknown;\n  }): TypeValidationError {\n    return TypeValidationError.isInstance(cause) && cause.value === value\n      ? cause\n      : new TypeValidationError({ value, cause });\n  }\n}\n", "import { AISDKError } from './ai-sdk-error';\n\nconst name = 'AI_UnsupportedFunctionalityError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class UnsupportedFunctionalityError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly functionality: string;\n\n  constructor({\n    functionality,\n    message = `'${functionality}' functionality not supported.`,\n  }: {\n    functionality: string;\n    message?: string;\n  }) {\n    super({ name, message });\n    this.functionality = functionality;\n  }\n\n  static isInstance(error: unknown): error is UnsupportedFunctionalityError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { JSONArray, JSONObject, JSONValue } from './json-value';\n\nexport function isJSONValue(value: unknown): value is JSONValue {\n  if (\n    value === null ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  ) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(isJSONValue);\n  }\n\n  if (typeof value === 'object') {\n    return Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    );\n  }\n\n  return false;\n}\n\nexport function isJSONArray(value: unknown): value is JSONArray {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\n\nexport function isJSONObject(value: unknown): value is JSONObject {\n  return (\n    value != null &&\n    typeof value === 'object' &&\n    Object.entries(value).every(\n      ([key, val]) => typeof key === 'string' && isJSONValue(val),\n    )\n  );\n}\n", "/**\n * The type of error that occurred.\n * @public\n */\nexport type ErrorType = 'invalid-retry' | 'unknown-field'\n\n/**\n * Error thrown when encountering an issue during parsing.\n *\n * @public\n */\nexport class ParseError extends Error {\n  /**\n   * The type of error that occurred.\n   */\n  type: ErrorType\n\n  /**\n   * In the case of an unknown field encountered in the stream, this will be the field name.\n   */\n  field?: string | undefined\n\n  /**\n   * In the case of an unknown field encountered in the stream, this will be the value of the field.\n   */\n  value?: string | undefined\n\n  /**\n   * The line that caused the error, if available.\n   */\n  line?: string | undefined\n\n  constructor(\n    message: string,\n    options: {type: ErrorType; field?: string; value?: string; line?: string},\n  ) {\n    super(message)\n    this.name = 'ParseError'\n    this.type = options.type\n    this.field = options.field\n    this.value = options.value\n    this.line = options.line\n  }\n}\n", "/**\n * EventSource/Server-Sent Events parser\n * @see https://html.spec.whatwg.org/multipage/server-sent-events.html\n */\nimport {ParseError} from './errors.ts'\nimport type {EventSourceParser, ParserCallbacks} from './types.ts'\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction noop(_arg: unknown) {\n  // intentional noop\n}\n\n/**\n * Creates a new EventSource parser.\n *\n * @param callbacks - Callbacks to invoke on different parsing events:\n *   - `onEvent` when a new event is parsed\n *   - `onError` when an error occurs\n *   - `onRetry` when a new reconnection interval has been sent from the server\n *   - `onComment` when a comment is encountered in the stream\n *\n * @returns A new EventSource parser, with `parse` and `reset` methods.\n * @public\n */\nexport function createParser(callbacks: ParserCallbacks): EventSourceParser {\n  if (typeof callbacks === 'function') {\n    throw new TypeError(\n      '`callbacks` must be an object, got a function instead. Did you mean `{onEvent: fn}`?',\n    )\n  }\n\n  const {onEvent = noop, onError = noop, onRetry = noop, onComment} = callbacks\n\n  let incompleteLine = ''\n\n  let isFirstChunk = true\n  let id: string | undefined\n  let data = ''\n  let eventType = ''\n\n  function feed(newChunk: string) {\n    // Strip any UTF8 byte order mark (BOM) at the start of the stream\n    const chunk = isFirstChunk ? newChunk.replace(/^\\xEF\\xBB\\xBF/, '') : newChunk\n\n    // If there was a previous incomplete line, append it to the new chunk,\n    // so we may process it together as a new (hopefully complete) chunk.\n    const [complete, incomplete] = splitLines(`${incompleteLine}${chunk}`)\n\n    for (const line of complete) {\n      parseLine(line)\n    }\n\n    incompleteLine = incomplete\n    isFirstChunk = false\n  }\n\n  function parseLine(line: string) {\n    // If the line is empty (a blank line), dispatch the event\n    if (line === '') {\n      dispatchEvent()\n      return\n    }\n\n    // If the line starts with a U+003A COLON character (:), ignore the line.\n    if (line.startsWith(':')) {\n      if (onComment) {\n        onComment(line.slice(line.startsWith(': ') ? 2 : 1))\n      }\n      return\n    }\n\n    // If the line contains a U+003A COLON character (:)\n    const fieldSeparatorIndex = line.indexOf(':')\n    if (fieldSeparatorIndex !== -1) {\n      // Collect the characters on the line before the first U+003A COLON character (:),\n      // and let `field` be that string.\n      const field = line.slice(0, fieldSeparatorIndex)\n\n      // Collect the characters on the line after the first U+003A COLON character (:),\n      // and let `value` be that string. If value starts with a U+0020 SPACE character,\n      // remove it from value.\n      const offset = line[fieldSeparatorIndex + 1] === ' ' ? 2 : 1\n      const value = line.slice(fieldSeparatorIndex + offset)\n\n      processField(field, value, line)\n      return\n    }\n\n    // Otherwise, the string is not empty but does not contain a U+003A COLON character (:)\n    // Process the field using the whole line as the field name, and an empty string as the field value.\n    // 👆 This is according to spec. That means that a line that has the value `data` will result in\n    // a newline being added to the current `data` buffer, for instance.\n    processField(line, '', line)\n  }\n\n  function processField(field: string, value: string, line: string) {\n    // Field names must be compared literally, with no case folding performed.\n    switch (field) {\n      case 'event':\n        // Set the `event type` buffer to field value\n        eventType = value\n        break\n      case 'data':\n        // Append the field value to the `data` buffer, then append a single U+000A LINE FEED(LF)\n        // character to the `data` buffer.\n        data = `${data}${value}\\n`\n        break\n      case 'id':\n        // If the field value does not contain U+0000 NULL, then set the `ID` buffer to\n        // the field value. Otherwise, ignore the field.\n        id = value.includes('\\0') ? undefined : value\n        break\n      case 'retry':\n        // If the field value consists of only ASCII digits, then interpret the field value as an\n        // integer in base ten, and set the event stream's reconnection time to that integer.\n        // Otherwise, ignore the field.\n        if (/^\\d+$/.test(value)) {\n          onRetry(parseInt(value, 10))\n        } else {\n          onError(\n            new ParseError(`Invalid \\`retry\\` value: \"${value}\"`, {\n              type: 'invalid-retry',\n              value,\n              line,\n            }),\n          )\n        }\n        break\n      default:\n        // Otherwise, the field is ignored.\n        onError(\n          new ParseError(\n            `Unknown field \"${field.length > 20 ? `${field.slice(0, 20)}…` : field}\"`,\n            {type: 'unknown-field', field, value, line},\n          ),\n        )\n        break\n    }\n  }\n\n  function dispatchEvent() {\n    const shouldDispatch = data.length > 0\n    if (shouldDispatch) {\n      onEvent({\n        id,\n        event: eventType || undefined,\n        // If the data buffer's last character is a U+000A LINE FEED (LF) character,\n        // then remove the last character from the data buffer.\n        data: data.endsWith('\\n') ? data.slice(0, -1) : data,\n      })\n    }\n\n    // Reset for the next event\n    id = undefined\n    data = ''\n    eventType = ''\n  }\n\n  function reset(options: {consume?: boolean} = {}) {\n    if (incompleteLine && options.consume) {\n      parseLine(incompleteLine)\n    }\n\n    isFirstChunk = true\n    id = undefined\n    data = ''\n    eventType = ''\n    incompleteLine = ''\n  }\n\n  return {feed, reset}\n}\n\n/**\n * For the given `chunk`, split it into lines according to spec, and return any remaining incomplete line.\n *\n * @param chunk - The chunk to split into lines\n * @returns A tuple containing an array of complete lines, and any remaining incomplete line\n * @internal\n */\nfunction splitLines(chunk: string): [complete: Array<string>, incomplete: string] {\n  /**\n   * According to the spec, a line is terminated by either:\n   * - U+000D CARRIAGE RETURN U+000A LINE FEED (CRLF) character pair\n   * - a single U+000A LINE FEED(LF) character not preceded by a U+000D CARRIAGE RETURN(CR) character\n   * - a single U+000D CARRIAGE RETURN(CR) character not followed by a U+000A LINE FEED(LF) character\n   */\n  const lines: Array<string> = []\n  let incompleteLine = ''\n  let searchIndex = 0\n\n  while (searchIndex < chunk.length) {\n    // Find next line terminator\n    const crIndex = chunk.indexOf('\\r', searchIndex)\n    const lfIndex = chunk.indexOf('\\n', searchIndex)\n\n    // Determine line end\n    let lineEnd = -1\n    if (crIndex !== -1 && lfIndex !== -1) {\n      // CRLF case\n      lineEnd = Math.min(crIndex, lfIndex)\n    } else if (crIndex !== -1) {\n      // CR at the end of a chunk might be part of a CRLF sequence that spans chunks,\n      // so we shouldn't treat it as a line terminator (yet)\n      if (crIndex === chunk.length - 1) {\n        lineEnd = -1\n      } else {\n        lineEnd = crIndex\n      }\n    } else if (lfIndex !== -1) {\n      lineEnd = lfIndex\n    }\n\n    // Extract line if terminator found\n    if (lineEnd === -1) {\n      // No terminator found, rest is incomplete\n      incompleteLine = chunk.slice(searchIndex)\n      break\n    } else {\n      const line = chunk.slice(searchIndex, lineEnd)\n      lines.push(line)\n\n      // Move past line terminator\n      searchIndex = lineEnd + 1\n      if (chunk[searchIndex - 1] === '\\r' && chunk[searchIndex] === '\\n') {\n        searchIndex++\n      }\n    }\n  }\n\n  return [lines, incompleteLine]\n}\n", "import {createParser} from './parse.ts'\nimport type {EventSourceMessage, EventSourceParser} from './types.ts'\n\n/**\n * Options for the EventSourceParserStream.\n *\n * @public\n */\nexport interface StreamOptions {\n  /**\n   * Behavior when a parsing error occurs.\n   *\n   * - A custom function can be provided to handle the error.\n   * - `'terminate'` will error the stream and stop parsing.\n   * - Any other value will ignore the error and continue parsing.\n   *\n   * @defaultValue `undefined`\n   */\n  onError?: ('terminate' | ((error: Error) => void)) | undefined\n\n  /**\n   * Callback for when a reconnection interval is sent from the server.\n   *\n   * @param retry - The number of milliseconds to wait before reconnecting.\n   */\n  onRetry?: ((retry: number) => void) | undefined\n\n  /**\n   * Callback for when a comment is encountered in the stream.\n   *\n   * @param comment - The comment encountered in the stream.\n   */\n  onComment?: ((comment: string) => void) | undefined\n}\n\n/**\n * A TransformStream that ingests a stream of strings and produces a stream of `EventSourceMessage`.\n *\n * @example Basic usage\n * ```\n * const eventStream =\n *   response.body\n *     .pipeThrough(new TextDecoderStream())\n *     .pipeThrough(new EventSourceParserStream())\n * ```\n *\n * @example Terminate stream on parsing errors\n * ```\n * const eventStream =\n *  response.body\n *   .pipeThrough(new TextDecoderStream())\n *   .pipeThrough(new EventSourceParserStream({terminateOnError: true}))\n * ```\n *\n * @public\n */\nexport class EventSourceParserStream extends TransformStream<string, EventSourceMessage> {\n  constructor({onError, onRetry, onComment}: StreamOptions = {}) {\n    let parser!: EventSourceParser\n\n    super({\n      start(controller) {\n        parser = createParser({\n          onEvent: (event) => {\n            controller.enqueue(event)\n          },\n          onError(error) {\n            if (onError === 'terminate') {\n              controller.error(error)\n            } else if (typeof onError === 'function') {\n              onError(error)\n            }\n\n            // Ignore by default\n          },\n          onRetry,\n          onComment,\n        })\n      },\n      transform(chunk) {\n        parser.feed(chunk)\n      },\n    })\n  }\n}\n\nexport {type ErrorType, ParseError} from './errors.ts'\nexport type {EventSourceMessage} from './types.ts'\n", "export * as core from \"zod/v4/core\";\nexport * from \"./schemas.js\";\nexport * from \"./checks.js\";\nexport * from \"./errors.js\";\nexport * from \"./parse.js\";\nexport * from \"./compat.js\";\n// zod-specified\nimport { config } from \"zod/v4/core\";\nimport en from \"zod/v4/locales/en.js\";\nconfig(en());\nexport { globalRegistry, registry, config, function, $output, $input, $brand, clone, regexes, treeifyError, prettifyError, formatError, flattenError, toJSONSchema, TimePrecision, } from \"zod/v4/core\";\nexport * as locales from \"../locales/index.js\";\n// iso\n// must be exported from top-level\n// https://github.com/colinhacks/zod/issues/4491\nexport { ZodISODateTime, ZodISODate, ZodISOTime, ZodISODuration } from \"./iso.js\";\nexport * as iso from \"./iso.js\";\nexport * as coerce from \"./coerce.js\";\n", "export * from \"./core.js\";\nexport * from \"./parse.js\";\nexport * from \"./errors.js\";\nexport * from \"./schemas.js\";\nexport * from \"./checks.js\";\nexport * from \"./versions.js\";\nexport * as util from \"./util.js\";\nexport * as regexes from \"./regexes.js\";\nexport * as locales from \"../locales/index.js\";\nexport * from \"./registries.js\";\nexport * from \"./doc.js\";\nexport * from \"./function.js\";\nexport * from \"./api.js\";\nexport * from \"./to-json-schema.js\";\nexport * as JSONSchema from \"./json-schema.js\";\n", "export /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\n    function init(inst, def) {\n        var _a;\n        Object.defineProperty(inst, \"_zod\", {\n            value: inst._zod ?? {},\n            enumerable: false,\n        });\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\n        inst._zod.traits.add(name);\n        initializer(inst, def);\n        // support prototype modifications\n        for (const k in _.prototype) {\n            if (!(k in inst))\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\n        }\n        inst._zod.constr = _;\n        inst._zod.def = def;\n    }\n    // doesn't work if Parent has a constructor with arguments\n    const Parent = params?.Parent ?? Object;\n    class Definition extends Parent {\n    }\n    Object.defineProperty(Definition, \"name\", { value: name });\n    function _(def) {\n        var _a;\n        const inst = params?.Parent ? new Definition() : this;\n        init(inst, def);\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        for (const fn of inst._zod.deferred) {\n            fn();\n        }\n        return inst;\n    }\n    Object.defineProperty(_, \"init\", { value: init });\n    Object.defineProperty(_, Symbol.hasInstance, {\n        value: (inst) => {\n            if (params?.Parent && inst instanceof params.Parent)\n                return true;\n            return inst?._zod?.traits?.has(name);\n        },\n    });\n    Object.defineProperty(_, \"name\", { value: name });\n    return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n    constructor() {\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\n    }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n    if (newConfig)\n        Object.assign(globalConfig, newConfig);\n    return globalConfig;\n}\n", "// functions\nexport function assertEqual(val) {\n    return val;\n}\nexport function assertNotEqual(val) {\n    return val;\n}\nexport function assertIs(_arg) { }\nexport function assertNever(_x) {\n    throw new Error();\n}\nexport function assert(_) { }\nexport function getEnumValues(entries) {\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\n    const values = Object.entries(entries)\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\n        .map(([_, v]) => v);\n    return values;\n}\nexport function joinValues(array, separator = \"|\") {\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\n}\nexport function jsonStringifyReplacer(_, value) {\n    if (typeof value === \"bigint\")\n        return value.toString();\n    return value;\n}\nexport function cached(getter) {\n    const set = false;\n    return {\n        get value() {\n            if (!set) {\n                const value = getter();\n                Object.defineProperty(this, \"value\", { value });\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n    };\n}\nexport function nullish(input) {\n    return input === null || input === undefined;\n}\nexport function cleanRegex(source) {\n    const start = source.startsWith(\"^\") ? 1 : 0;\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n    return source.slice(start, end);\n}\nexport function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport function defineLazy(object, key, getter) {\n    const set = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!set) {\n                const value = getter();\n                object[key] = value;\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n        set(v) {\n            Object.defineProperty(object, key, {\n                value: v,\n                // configurable: true,\n            });\n            // object[key] = v;\n        },\n        configurable: true,\n    });\n}\nexport function assignProp(target, prop, value) {\n    Object.defineProperty(target, prop, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n}\nexport function getElementAtPath(obj, path) {\n    if (!path)\n        return obj;\n    return path.reduce((acc, key) => acc?.[key], obj);\n}\nexport function promiseAllObject(promisesObj) {\n    const keys = Object.keys(promisesObj);\n    const promises = keys.map((key) => promisesObj[key]);\n    return Promise.all(promises).then((results) => {\n        const resolvedObj = {};\n        for (let i = 0; i < keys.length; i++) {\n            resolvedObj[keys[i]] = results[i];\n        }\n        return resolvedObj;\n    });\n}\nexport function randomString(length = 10) {\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\nexport function esc(str) {\n    return JSON.stringify(str);\n}\nexport const captureStackTrace = Error.captureStackTrace\n    ? Error.captureStackTrace\n    : (..._args) => { };\nexport function isObject(data) {\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\n}\nexport const allowsEval = cached(() => {\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent?.includes(\"Cloudflare\")) {\n        return false;\n    }\n    try {\n        const F = Function;\n        new F(\"\");\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n});\nfunction _isObject(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nexport function isPlainObject(o) {\n    if (isObject(o) === false)\n        return false;\n    // modified constructor\n    const ctor = o.constructor;\n    if (ctor === undefined)\n        return true;\n    // modified prototype\n    const prot = ctor.prototype;\n    if (isObject(prot) === false)\n        return false;\n    // ctor doesn't have static `isPrototypeOf`\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\n        return false;\n    }\n    return true;\n}\nexport function numKeys(data) {\n    let keyCount = 0;\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            keyCount++;\n        }\n    }\n    return keyCount;\n}\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return \"undefined\";\n        case \"string\":\n            return \"string\";\n        case \"number\":\n            return Number.isNaN(data) ? \"nan\" : \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"function\":\n            return \"function\";\n        case \"bigint\":\n            return \"bigint\";\n        case \"symbol\":\n            return \"symbol\";\n        case \"object\":\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return \"promise\";\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return \"map\";\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return \"set\";\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return \"date\";\n            }\n            if (typeof File !== \"undefined\" && data instanceof File) {\n                return \"file\";\n            }\n            return \"object\";\n        default:\n            throw new Error(`Unknown data type: ${t}`);\n    }\n};\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\nexport function escapeRegex(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n// zod-specific utils\nexport function clone(inst, def, params) {\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\n    if (!def || params?.parent)\n        cl._zod.parent = inst;\n    return cl;\n}\nexport function normalizeParams(_params) {\n    const params = _params;\n    if (!params)\n        return {};\n    if (typeof params === \"string\")\n        return { error: () => params };\n    if (params?.message !== undefined) {\n        if (params?.error !== undefined)\n            throw new Error(\"Cannot specify both `message` and `error` params\");\n        params.error = params.message;\n    }\n    delete params.message;\n    if (typeof params.error === \"string\")\n        return { ...params, error: () => params.error };\n    return params;\n}\nexport function createTransparentProxy(getter) {\n    let target;\n    return new Proxy({}, {\n        get(_, prop, receiver) {\n            target ?? (target = getter());\n            return Reflect.get(target, prop, receiver);\n        },\n        set(_, prop, value, receiver) {\n            target ?? (target = getter());\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has(_, prop) {\n            target ?? (target = getter());\n            return Reflect.has(target, prop);\n        },\n        deleteProperty(_, prop) {\n            target ?? (target = getter());\n            return Reflect.deleteProperty(target, prop);\n        },\n        ownKeys(_) {\n            target ?? (target = getter());\n            return Reflect.ownKeys(target);\n        },\n        getOwnPropertyDescriptor(_, prop) {\n            target ?? (target = getter());\n            return Reflect.getOwnPropertyDescriptor(target, prop);\n        },\n        defineProperty(_, prop, descriptor) {\n            target ?? (target = getter());\n            return Reflect.defineProperty(target, prop, descriptor);\n        },\n    });\n}\nexport function stringifyPrimitive(value) {\n    if (typeof value === \"bigint\")\n        return value.toString() + \"n\";\n    if (typeof value === \"string\")\n        return `\"${value}\"`;\n    return `${value}`;\n}\nexport function optionalKeys(shape) {\n    return Object.keys(shape).filter((k) => {\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\n    });\n}\nexport const NUMBER_FORMAT_RANGES = {\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n    int32: [-2147483648, 2147483647],\n    uint32: [0, 4294967295],\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\n};\nexport const BIGINT_FORMAT_RANGES = {\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\n};\nexport function pick(schema, mask) {\n    const newShape = {};\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        // pick key\n        newShape[key] = currDef.shape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function omit(schema, mask) {\n    const newShape = { ...schema._zod.def.shape };\n    const currDef = schema._zod.def; //.shape;\n    for (const key in mask) {\n        if (!(key in currDef.shape)) {\n            throw new Error(`Unrecognized key: \"${key}\"`);\n        }\n        if (!mask[key])\n            continue;\n        delete newShape[key];\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape: newShape,\n        checks: [],\n    });\n}\nexport function extend(schema, shape) {\n    const def = {\n        ...schema._zod.def,\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: [], // delete existing checks\n    };\n    return clone(schema, def);\n}\nexport function merge(a, b) {\n    return clone(a, {\n        ...a._zod.def,\n        get shape() {\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        catchall: b._zod.def.catchall,\n        checks: [], // delete existing checks\n    });\n}\nexport function partial(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in oldShape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            shape[key] = Class\n                ? new Class({\n                    type: \"optional\",\n                    innerType: oldShape[key],\n                })\n                : oldShape[key];\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        checks: [],\n    });\n}\nexport function required(Class, schema, mask) {\n    const oldShape = schema._zod.def.shape;\n    const shape = { ...oldShape };\n    if (mask) {\n        for (const key in mask) {\n            if (!(key in shape)) {\n                throw new Error(`Unrecognized key: \"${key}\"`);\n            }\n            if (!mask[key])\n                continue;\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    else {\n        for (const key in oldShape) {\n            // overwrite with non-optional\n            shape[key] = new Class({\n                type: \"nonoptional\",\n                innerType: oldShape[key],\n            });\n        }\n    }\n    return clone(schema, {\n        ...schema._zod.def,\n        shape,\n        // optional: [],\n        checks: [],\n    });\n}\nexport function aborted(x, startIndex = 0) {\n    for (let i = startIndex; i < x.issues.length; i++) {\n        if (x.issues[i].continue !== true)\n            return true;\n    }\n    return false;\n}\nexport function prefixIssues(path, issues) {\n    return issues.map((iss) => {\n        var _a;\n        (_a = iss).path ?? (_a.path = []);\n        iss.path.unshift(path);\n        return iss;\n    });\n}\nexport function unwrapMessage(message) {\n    return typeof message === \"string\" ? message : message?.message;\n}\nexport function finalizeIssue(iss, ctx, config) {\n    const full = { ...iss, path: iss.path ?? [] };\n    // for backwards compatibility\n    if (!iss.message) {\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\n            unwrapMessage(ctx?.error?.(iss)) ??\n            unwrapMessage(config.customError?.(iss)) ??\n            unwrapMessage(config.localeError?.(iss)) ??\n            \"Invalid input\";\n        full.message = message;\n    }\n    // delete (full as any).def;\n    delete full.inst;\n    delete full.continue;\n    if (!ctx?.reportInput) {\n        delete full.input;\n    }\n    return full;\n}\nexport function getSizableOrigin(input) {\n    if (input instanceof Set)\n        return \"set\";\n    if (input instanceof Map)\n        return \"map\";\n    if (input instanceof File)\n        return \"file\";\n    return \"unknown\";\n}\nexport function getLengthableOrigin(input) {\n    if (Array.isArray(input))\n        return \"array\";\n    if (typeof input === \"string\")\n        return \"string\";\n    return \"unknown\";\n}\nexport function issue(...args) {\n    const [iss, input, inst] = args;\n    if (typeof iss === \"string\") {\n        return {\n            message: iss,\n            code: \"custom\",\n            input,\n            inst,\n        };\n    }\n    return { ...iss };\n}\nexport function cleanEnum(obj) {\n    return Object.entries(obj)\n        .filter(([k, _]) => {\n        // return true if NaN, meaning it's not a number, thus a string key\n        return Number.isNaN(Number.parseInt(k, 10));\n    })\n        .map((el) => el[1]);\n}\n// instanceof\nexport class Class {\n    constructor(..._args) { }\n}\n", "import { $constructor } from \"./core.js\";\nimport * as util from \"./util.js\";\nconst initializer = (inst, def) => {\n    inst.name = \"$ZodError\";\n    Object.defineProperty(inst, \"_zod\", {\n        value: inst._zod,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"issues\", {\n        value: def,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"message\", {\n        get() {\n            return JSON.stringify(def, util.jsonStringifyReplacer, 2);\n        },\n        enumerable: true,\n        // configurable: false,\n    });\n};\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\nexport function flattenError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of error.issues) {\n        if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n        }\n        else {\n            formErrors.push(mapper(sub));\n        }\n    }\n    return { formErrors, fieldErrors };\n}\nexport function formatError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const fieldErrors = { _errors: [] };\n    const processError = (error) => {\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                issue.errors.map((issues) => processError({ issues }));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n            }\n            else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                    const el = issue.path[i];\n                    const terminal = i === issue.path.length - 1;\n                    if (!terminal) {\n                        curr[el] = curr[el] || { _errors: [] };\n                    }\n                    else {\n                        curr[el] = curr[el] || { _errors: [] };\n                        curr[el]._errors.push(mapper(issue));\n                    }\n                    curr = curr[el];\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return fieldErrors;\n}\nexport function treeifyError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const result = { errors: [] };\n    const processError = (error, path = []) => {\n        var _a, _b;\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                // regular union error\n                issue.errors.map((issues) => processError({ issues }, issue.path));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else {\n                const fullpath = [...path, ...issue.path];\n                if (fullpath.length === 0) {\n                    result.errors.push(mapper(issue));\n                    continue;\n                }\n                let curr = result;\n                let i = 0;\n                while (i < fullpath.length) {\n                    const el = fullpath[i];\n                    const terminal = i === fullpath.length - 1;\n                    if (typeof el === \"string\") {\n                        curr.properties ?? (curr.properties = {});\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\n                        curr = curr.properties[el];\n                    }\n                    else {\n                        curr.items ?? (curr.items = []);\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\n                        curr = curr.items[el];\n                    }\n                    if (terminal) {\n                        curr.errors.push(mapper(issue));\n                    }\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return result;\n}\n/** Format a ZodError as a human-readable string in the following form.\n *\n * From\n *\n * ```ts\n * ZodError {\n *   issues: [\n *     {\n *       expected: 'string',\n *       code: 'invalid_type',\n *       path: [ 'username' ],\n *       message: 'Invalid input: expected string'\n *     },\n *     {\n *       expected: 'number',\n *       code: 'invalid_type',\n *       path: [ 'favoriteNumbers', 1 ],\n *       message: 'Invalid input: expected number'\n *     }\n *   ];\n * }\n * ```\n *\n * to\n *\n * ```\n * username\n *   ✖ Expected number, received string at \"username\n * favoriteNumbers[0]\n *   ✖ Invalid input: expected number\n * ```\n */\nexport function toDotPath(path) {\n    const segs = [];\n    for (const seg of path) {\n        if (typeof seg === \"number\")\n            segs.push(`[${seg}]`);\n        else if (typeof seg === \"symbol\")\n            segs.push(`[${JSON.stringify(String(seg))}]`);\n        else if (/[^\\w$]/.test(seg))\n            segs.push(`[${JSON.stringify(seg)}]`);\n        else {\n            if (segs.length)\n                segs.push(\".\");\n            segs.push(seg);\n        }\n    }\n    return segs.join(\"\");\n}\nexport function prettifyError(error) {\n    const lines = [];\n    // sort by path length\n    const issues = [...error.issues].sort((a, b) => a.path.length - b.path.length);\n    // Process each issue\n    for (const issue of issues) {\n        lines.push(`✖ ${issue.message}`);\n        if (issue.path?.length)\n            lines.push(`  → at ${toDotPath(issue.path)}`);\n    }\n    // Convert Map to formatted string\n    return lines.join(\"\\n\");\n}\n", "import * as core from \"./core.js\";\nimport * as errors from \"./errors.js\";\nimport * as util from \"./util.js\";\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    if (result.issues.length) {\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, _params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    if (result.issues.length) {\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    return result.issues.length\n        ? {\n            success: false,\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    return result.issues.length\n        ? {\n            success: false,\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\n", "export const cuid = /^[cC][^\\s-]{8,}$/;\nexport const cuid2 = /^[0-9a-z]+$/;\nexport const ulid = /^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/;\nexport const xid = /^[0-9a-vA-V]{20}$/;\nexport const ksuid = /^[A-Za-z0-9]{27}$/;\nexport const nanoid = /^[a-zA-Z0-9_-]{21}$/;\n/** ISO 8601-1 duration regex. Does not support the 8601-2 extensions like negative durations or fractional/negative components. */\nexport const duration = /^P(?:(\\d+W)|(?!.*W)(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+([.,]\\d+)?S)?)?)$/;\n/** Implements ISO 8601-2 extensions like explicit +- prefixes, mixing weeks with other units, and fractional/negative components. */\nexport const extendedDuration = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n/** A regex for any UUID-like identifier: 8-4-4-4-12 hex pattern */\nexport const guid = /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/;\n/** Returns a regex for validating an RFC 4122 UUID.\n *\n * @param version Optionally specify a version 1-8. If no version is specified, all versions are supported. */\nexport const uuid = (version) => {\n    if (!version)\n        return /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$/;\n    return new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${version}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`);\n};\nexport const uuid4 = /*@__PURE__*/ uuid(4);\nexport const uuid6 = /*@__PURE__*/ uuid(6);\nexport const uuid7 = /*@__PURE__*/ uuid(7);\n/** Practical email validation */\nexport const email = /^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$/;\n/** Equivalent to the HTML5 input[type=email] validation implemented by browsers. Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email */\nexport const html5Email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/** The classic emailregex.com regex for RFC 5322-compliant emails */\nexport const rfc5322Email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/** A loose regex that allows Unicode characters, enforces length limits, and that's about it. */\nexport const unicodeEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\nexport const browserEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nexport const _emoji = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nexport function emoji() {\n    return new RegExp(_emoji, \"u\");\n}\nexport const ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nexport const ipv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})$/;\nexport const cidrv4 = /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/([0-9]|[1-2][0-9]|3[0-2])$/;\nexport const cidrv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nexport const base64 = /^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/;\nexport const base64url = /^[A-Za-z0-9_-]*$/;\n// based on https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address\n// export const hostname: RegExp =\n//   /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/;\nexport const hostname = /^([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+$/;\nexport const domain = /^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n// https://blog.stevenlevithan.com/archives/validate-phone-number#r4-3 (regex sans spaces)\nexport const e164 = /^\\+(?:[0-9]){6,14}[0-9]$/;\n// const dateSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateSource = `(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))`;\nexport const date = /*@__PURE__*/ new RegExp(`^${dateSource}$`);\nfunction timeSource(args) {\n    const hhmm = `(?:[01]\\\\d|2[0-3]):[0-5]\\\\d`;\n    const regex = typeof args.precision === \"number\"\n        ? args.precision === -1\n            ? `${hhmm}`\n            : args.precision === 0\n                ? `${hhmm}:[0-5]\\\\d`\n                : `${hhmm}:[0-5]\\\\d\\\\.\\\\d{${args.precision}}`\n        : `${hhmm}(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?`;\n    return regex;\n}\nexport function time(args) {\n    return new RegExp(`^${timeSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetime(args) {\n    const time = timeSource({ precision: args.precision });\n    const opts = [\"Z\"];\n    if (args.local)\n        opts.push(\"\");\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:\\\\d{2})`);\n    const timeRegex = `${time}(?:${opts.join(\"|\")})`;\n    return new RegExp(`^${dateSource}T(?:${timeRegex})$`);\n}\nexport const string = (params) => {\n    const regex = params ? `[\\\\s\\\\S]{${params?.minimum ?? 0},${params?.maximum ?? \"\"}}` : `[\\\\s\\\\S]*`;\n    return new RegExp(`^${regex}$`);\n};\nexport const bigint = /^\\d+n?$/;\nexport const integer = /^\\d+$/;\nexport const number = /^-?\\d+(?:\\.\\d+)?/i;\nexport const boolean = /true|false/i;\nconst _null = /null/i;\nexport { _null as null };\nconst _undefined = /undefined/i;\nexport { _undefined as undefined };\n// regex for string with no uppercase letters\nexport const lowercase = /^[^A-Z]*$/;\n// regex for string with no lowercase letters\nexport const uppercase = /^[^a-z]*$/;\n", "// import { $ZodType } from \"./schemas.js\";\nimport * as core from \"./core.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nexport const $ZodCheck = /*@__PURE__*/ core.$constructor(\"$ZodCheck\", (inst, def) => {\n    var _a;\n    inst._zod ?? (inst._zod = {});\n    inst._zod.def = def;\n    (_a = inst._zod).onattach ?? (_a.onattach = []);\n});\nconst numericOriginMap = {\n    number: \"number\",\n    bigint: \"bigint\",\n    object: \"date\",\n};\nexport const $ZodCheckLessThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckLessThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.maximum : bag.exclusiveMaximum) ?? Number.POSITIVE_INFINITY;\n        if (def.value < curr) {\n            if (def.inclusive)\n                bag.maximum = def.value;\n            else\n                bag.exclusiveMaximum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value <= def.value : payload.value < def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckGreaterThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckGreaterThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.minimum : bag.exclusiveMinimum) ?? Number.NEGATIVE_INFINITY;\n        if (def.value > curr) {\n            if (def.inclusive)\n                bag.minimum = def.value;\n            else\n                bag.exclusiveMinimum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value >= def.value : payload.value > def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin: origin,\n            code: \"too_small\",\n            minimum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMultipleOf = \n/*@__PURE__*/ core.$constructor(\"$ZodCheckMultipleOf\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        var _a;\n        (_a = inst._zod.bag).multipleOf ?? (_a.multipleOf = def.value);\n    });\n    inst._zod.check = (payload) => {\n        if (typeof payload.value !== typeof def.value)\n            throw new Error(\"Cannot mix number and bigint in multiple_of check.\");\n        const isMultiple = typeof payload.value === \"bigint\"\n            ? payload.value % def.value === BigInt(0)\n            : util.floatSafeRemainder(payload.value, def.value) === 0;\n        if (isMultiple)\n            return;\n        payload.issues.push({\n            origin: typeof payload.value,\n            code: \"not_multiple_of\",\n            divisor: def.value,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckNumberFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    def.format = def.format || \"float64\";\n    const isInt = def.format?.includes(\"int\");\n    const origin = isInt ? \"int\" : \"number\";\n    const [minimum, maximum] = util.NUMBER_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n        if (isInt)\n            bag.pattern = regexes.integer;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (isInt) {\n            if (!Number.isInteger(input)) {\n                // invalid_format issue\n                // payload.issues.push({\n                //   expected: def.format,\n                //   format: def.format,\n                //   code: \"invalid_format\",\n                //   input,\n                //   inst,\n                // });\n                // invalid_type issue\n                payload.issues.push({\n                    expected: origin,\n                    format: def.format,\n                    code: \"invalid_type\",\n                    input,\n                    inst,\n                });\n                return;\n                // not_multiple_of issue\n                // payload.issues.push({\n                //   code: \"not_multiple_of\",\n                //   origin: \"number\",\n                //   input,\n                //   inst,\n                //   divisor: 1,\n                // });\n            }\n            if (!Number.isSafeInteger(input)) {\n                if (input > 0) {\n                    // too_big\n                    payload.issues.push({\n                        input,\n                        code: \"too_big\",\n                        maximum: Number.MAX_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                else {\n                    // too_small\n                    payload.issues.push({\n                        input,\n                        code: \"too_small\",\n                        minimum: Number.MIN_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                return;\n            }\n        }\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_small\",\n                minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckBigIntFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    const [minimum, maximum] = util.BIGINT_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_small\",\n                minimum: minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckMaxSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxSize\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size <= def.maximum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_big\",\n            maximum: def.maximum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinSize\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size >= def.minimum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_small\",\n            minimum: def.minimum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckSizeEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckSizeEquals\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.size;\n        bag.maximum = def.size;\n        bag.size = def.size;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size === def.size)\n            return;\n        const tooBig = size > def.size;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            ...(tooBig ? { code: \"too_big\", maximum: def.size } : { code: \"too_small\", minimum: def.size }),\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMaxLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxLength\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length <= def.maximum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinLength\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length >= def.minimum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLengthEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckLengthEquals\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    };\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.length;\n        bag.maximum = def.length;\n        bag.length = def.length;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length === def.length)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        const tooBig = length > def.length;\n        payload.issues.push({\n            origin,\n            ...(tooBig ? { code: \"too_big\", maximum: def.length } : { code: \"too_small\", minimum: def.length }),\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckStringFormat\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        if (def.pattern) {\n            bag.patterns ?? (bag.patterns = new Set());\n            bag.patterns.add(def.pattern);\n        }\n    });\n    (_a = inst._zod).check ?? (_a.check = (payload) => {\n        if (!def.pattern)\n            throw new Error(\"Not implemented.\");\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: def.format,\n            input: payload.value,\n            ...(def.pattern ? { pattern: def.pattern.toString() } : {}),\n            inst,\n            continue: !def.abort,\n        });\n    });\n});\nexport const $ZodCheckRegex = /*@__PURE__*/ core.$constructor(\"$ZodCheckRegex\", (inst, def) => {\n    $ZodCheckStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"regex\",\n            input: payload.value,\n            pattern: def.pattern.toString(),\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLowerCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckLowerCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.lowercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckUpperCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckUpperCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.uppercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckIncludes = /*@__PURE__*/ core.$constructor(\"$ZodCheckIncludes\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const escapedRegex = util.escapeRegex(def.includes);\n    const pattern = new RegExp(typeof def.position === \"number\" ? `^.{${def.position}}${escapedRegex}` : escapedRegex);\n    def.pattern = pattern;\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.includes(def.includes, def.position))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"includes\",\n            includes: def.includes,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStartsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckStartsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`^${util.escapeRegex(def.prefix)}.*`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.startsWith(def.prefix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"starts_with\",\n            prefix: def.prefix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckEndsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckEndsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`.*${util.escapeRegex(def.suffix)}$`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.endsWith(def.suffix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"ends_with\",\n            suffix: def.suffix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n///////////////////////////////////\n/////    $ZodCheckProperty    /////\n///////////////////////////////////\nfunction handleCheckPropertyResult(result, payload, property) {\n    if (result.issues.length) {\n        payload.issues.push(...util.prefixIssues(property, result.issues));\n    }\n}\nexport const $ZodCheckProperty = /*@__PURE__*/ core.$constructor(\"$ZodCheckProperty\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        const result = def.schema._zod.run({\n            value: payload.value[def.property],\n            issues: [],\n        }, {});\n        if (result instanceof Promise) {\n            return result.then((result) => handleCheckPropertyResult(result, payload, def.property));\n        }\n        handleCheckPropertyResult(result, payload, def.property);\n        return;\n    };\n});\nexport const $ZodCheckMimeType = /*@__PURE__*/ core.$constructor(\"$ZodCheckMimeType\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const mimeSet = new Set(def.mime);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.mime = def.mime;\n    });\n    inst._zod.check = (payload) => {\n        if (mimeSet.has(payload.value.type))\n            return;\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.mime,\n            input: payload.value.type,\n            inst,\n        });\n    };\n});\nexport const $ZodCheckOverwrite = /*@__PURE__*/ core.$constructor(\"$ZodCheckOverwrite\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        payload.value = def.tx(payload.value);\n    };\n});\n", "export class Doc {\n    constructor(args = []) {\n        this.content = [];\n        this.indent = 0;\n        if (this)\n            this.args = args;\n    }\n    indented(fn) {\n        this.indent += 1;\n        fn(this);\n        this.indent -= 1;\n    }\n    write(arg) {\n        if (typeof arg === \"function\") {\n            arg(this, { execution: \"sync\" });\n            arg(this, { execution: \"async\" });\n            return;\n        }\n        const content = arg;\n        const lines = content.split(\"\\n\").filter((x) => x);\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\n        for (const line of dedented) {\n            this.content.push(line);\n        }\n    }\n    compile() {\n        const F = Function;\n        const args = this?.args;\n        const content = this?.content ?? [``];\n        const lines = [...content.map((x) => `  ${x}`)];\n        // console.log(lines.join(\"\\n\"));\n        return new F(...args, lines.join(\"\\n\"));\n    }\n}\n", "export const version = {\n    major: 4,\n    minor: 0,\n    patch: 0,\n};\n", "import * as checks from \"./checks.js\";\nimport * as core from \"./core.js\";\nimport { Doc } from \"./doc.js\";\nimport { safeParse, safeParseAsync } from \"./parse.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nimport { version } from \"./versions.js\";\nexport const $ZodType = /*@__PURE__*/ core.$constructor(\"$ZodType\", (inst, def) => {\n    var _a;\n    inst ?? (inst = {});\n    // avoids issues with using Math.random() in Next.js caching\n    util.defineLazy(inst._zod, \"id\", () => def.type + \"_\" + util.randomString(10));\n    inst._zod.def = def; // set _def property\n    inst._zod.bag = inst._zod.bag || {}; // initialize _bag object\n    inst._zod.version = version;\n    const checks = [...(inst._zod.def.checks ?? [])];\n    // if inst is itself a checks.$ZodCheck, run it as a check\n    if (inst._zod.traits.has(\"$ZodCheck\")) {\n        checks.unshift(inst);\n    }\n    //\n    for (const ch of checks) {\n        for (const fn of ch._zod.onattach) {\n            fn(inst);\n        }\n    }\n    if (checks.length === 0) {\n        // deferred initializer\n        // inst._zod.parse is not yet defined\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        inst._zod.deferred?.push(() => {\n            inst._zod.run = inst._zod.parse;\n        });\n    }\n    else {\n        const runChecks = (payload, checks, ctx) => {\n            let isAborted = util.aborted(payload);\n            let asyncResult;\n            for (const ch of checks) {\n                if (ch._zod.when) {\n                    const shouldRun = ch._zod.when(payload);\n                    if (!shouldRun)\n                        continue;\n                }\n                else if (isAborted) {\n                    continue;\n                }\n                const currLen = payload.issues.length;\n                const _ = ch._zod.check(payload);\n                if (_ instanceof Promise && ctx?.async === false) {\n                    throw new core.$ZodAsyncError();\n                }\n                if (asyncResult || _ instanceof Promise) {\n                    asyncResult = (asyncResult ?? Promise.resolve()).then(async () => {\n                        await _;\n                        const nextLen = payload.issues.length;\n                        if (nextLen === currLen)\n                            return;\n                        if (!isAborted)\n                            isAborted = util.aborted(payload, currLen);\n                    });\n                }\n                else {\n                    const nextLen = payload.issues.length;\n                    if (nextLen === currLen)\n                        continue;\n                    if (!isAborted)\n                        isAborted = util.aborted(payload, currLen);\n                }\n            }\n            if (asyncResult) {\n                return asyncResult.then(() => {\n                    return payload;\n                });\n            }\n            return payload;\n        };\n        inst._zod.run = (payload, ctx) => {\n            const result = inst._zod.parse(payload, ctx);\n            if (result instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return result.then((result) => runChecks(result, checks, ctx));\n            }\n            return runChecks(result, checks, ctx);\n        };\n    }\n    inst[\"~standard\"] = {\n        validate: (value) => {\n            try {\n                const r = safeParse(inst, value);\n                return r.success ? { value: r.data } : { issues: r.error?.issues };\n            }\n            catch (_) {\n                return safeParseAsync(inst, value).then((r) => (r.success ? { value: r.data } : { issues: r.error?.issues }));\n            }\n        },\n        vendor: \"zod\",\n        version: 1,\n    };\n});\nexport { clone } from \"./util.js\";\nexport const $ZodString = /*@__PURE__*/ core.$constructor(\"$ZodString\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = [...(inst?._zod.bag?.patterns ?? [])].pop() ?? regexes.string(inst._zod.bag);\n    inst._zod.parse = (payload, _) => {\n        if (def.coerce)\n            try {\n                payload.value = String(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"string\")\n            return payload;\n        payload.issues.push({\n            expected: \"string\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodStringFormat\", (inst, def) => {\n    // check initialization must come first\n    checks.$ZodCheckStringFormat.init(inst, def);\n    $ZodString.init(inst, def);\n});\nexport const $ZodGUID = /*@__PURE__*/ core.$constructor(\"$ZodGUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.guid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodUUID = /*@__PURE__*/ core.$constructor(\"$ZodUUID\", (inst, def) => {\n    if (def.version) {\n        const versionMap = {\n            v1: 1,\n            v2: 2,\n            v3: 3,\n            v4: 4,\n            v5: 5,\n            v6: 6,\n            v7: 7,\n            v8: 8,\n        };\n        const v = versionMap[def.version];\n        if (v === undefined)\n            throw new Error(`Invalid UUID version: \"${def.version}\"`);\n        def.pattern ?? (def.pattern = regexes.uuid(v));\n    }\n    else\n        def.pattern ?? (def.pattern = regexes.uuid());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodEmail = /*@__PURE__*/ core.$constructor(\"$ZodEmail\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.email);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodURL = /*@__PURE__*/ core.$constructor(\"$ZodURL\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        try {\n            const url = new URL(payload.value);\n            if (def.hostname) {\n                def.hostname.lastIndex = 0;\n                if (!def.hostname.test(url.hostname)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid hostname\",\n                        pattern: regexes.hostname.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            if (def.protocol) {\n                def.protocol.lastIndex = 0;\n                if (!def.protocol.test(url.protocol.endsWith(\":\") ? url.protocol.slice(0, -1) : url.protocol)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid protocol\",\n                        pattern: def.protocol.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            return;\n        }\n        catch (_) {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"url\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodEmoji = /*@__PURE__*/ core.$constructor(\"$ZodEmoji\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.emoji());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodNanoID = /*@__PURE__*/ core.$constructor(\"$ZodNanoID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.nanoid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID = /*@__PURE__*/ core.$constructor(\"$ZodCUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID2 = /*@__PURE__*/ core.$constructor(\"$ZodCUID2\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid2);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodULID = /*@__PURE__*/ core.$constructor(\"$ZodULID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ulid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodXID = /*@__PURE__*/ core.$constructor(\"$ZodXID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.xid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodKSUID = /*@__PURE__*/ core.$constructor(\"$ZodKSUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ksuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODateTime = /*@__PURE__*/ core.$constructor(\"$ZodISODateTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.datetime(def));\n    $ZodStringFormat.init(inst, def);\n    const _super = inst._zod.check;\n});\nexport const $ZodISODate = /*@__PURE__*/ core.$constructor(\"$ZodISODate\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.date);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISOTime = /*@__PURE__*/ core.$constructor(\"$ZodISOTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.time(def));\n    $ZodStringFormat.init(inst, def);\n    const _super = inst._zod.check;\n});\nexport const $ZodISODuration = /*@__PURE__*/ core.$constructor(\"$ZodISODuration\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.duration);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodIPv4 = /*@__PURE__*/ core.$constructor(\"$ZodIPv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv4);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv4`;\n    });\n});\nexport const $ZodIPv6 = /*@__PURE__*/ core.$constructor(\"$ZodIPv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv6);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv6`;\n    });\n    inst._zod.check = (payload) => {\n        try {\n            new URL(`http://[${payload.value}]`);\n            // return;\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"ipv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv4);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv6); // not used for validation\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        const [address, prefix] = payload.value.split(\"/\");\n        try {\n            if (!prefix)\n                throw new Error();\n            const prefixNum = Number(prefix);\n            if (`${prefixNum}` !== prefix)\n                throw new Error();\n            if (prefixNum < 0 || prefixNum > 128)\n                throw new Error();\n            new URL(`http://[${address}]`);\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"cidrv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64(data) {\n    if (data === \"\")\n        return true;\n    if (data.length % 4 !== 0)\n        return false;\n    try {\n        atob(data);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodBase64 = /*@__PURE__*/ core.$constructor(\"$ZodBase64\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64URL(data) {\n    if (!regexes.base64url.test(data))\n        return false;\n    const base64 = data.replace(/[-_]/g, (c) => (c === \"-\" ? \"+\" : \"/\"));\n    const padded = base64.padEnd(Math.ceil(base64.length / 4) * 4, \"=\");\n    return isValidBase64(padded);\n}\nexport const $ZodBase64URL = /*@__PURE__*/ core.$constructor(\"$ZodBase64URL\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64url);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64url\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64URL(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64url\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodE164 = /*@__PURE__*/ core.$constructor(\"$ZodE164\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.e164);\n    $ZodStringFormat.init(inst, def);\n});\n//////////////////////////////   ZodJWT   //////////////////////////////\nexport function isValidJWT(token, algorithm = null) {\n    try {\n        const tokensParts = token.split(\".\");\n        if (tokensParts.length !== 3)\n            return false;\n        const [header] = tokensParts;\n        const parsedHeader = JSON.parse(atob(header));\n        if (\"typ\" in parsedHeader && parsedHeader?.typ !== \"JWT\")\n            return false;\n        if (!parsedHeader.alg)\n            return false;\n        if (algorithm && (!(\"alg\" in parsedHeader) || parsedHeader.alg !== algorithm))\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodJWT = /*@__PURE__*/ core.$constructor(\"$ZodJWT\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (isValidJWT(payload.value, def.alg))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"jwt\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodNumber = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = inst._zod.bag.pattern ?? regexes.number;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Number(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"number\" && !Number.isNaN(input) && Number.isFinite(input)) {\n            return payload;\n        }\n        const received = typeof input === \"number\"\n            ? Number.isNaN(input)\n                ? \"NaN\"\n                : !Number.isFinite(input)\n                    ? \"Infinity\"\n                    : undefined\n            : undefined;\n        payload.issues.push({\n            expected: \"number\",\n            code: \"invalid_type\",\n            input,\n            inst,\n            ...(received ? { received } : {}),\n        });\n        return payload;\n    };\n});\nexport const $ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    checks.$ZodCheckNumberFormat.init(inst, def);\n    $ZodNumber.init(inst, def); // no format checksp\n});\nexport const $ZodBoolean = /*@__PURE__*/ core.$constructor(\"$ZodBoolean\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.boolean;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Boolean(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"boolean\")\n            return payload;\n        payload.issues.push({\n            expected: \"boolean\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigInt = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.bigint;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = BigInt(payload.value);\n            }\n            catch (_) { }\n        const { value: input } = payload;\n        if (typeof input === \"bigint\")\n            return payload;\n        payload.issues.push({\n            expected: \"bigint\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    checks.$ZodCheckBigIntFormat.init(inst, def);\n    $ZodBigInt.init(inst, def); // no format checks\n});\nexport const $ZodSymbol = /*@__PURE__*/ core.$constructor(\"$ZodSymbol\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (typeof input === \"symbol\")\n            return payload;\n        payload.issues.push({\n            expected: \"symbol\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodUndefined = /*@__PURE__*/ core.$constructor(\"$ZodUndefined\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.undefined;\n    inst._zod.values = new Set([undefined]);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"undefined\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodNull = /*@__PURE__*/ core.$constructor(\"$ZodNull\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.null;\n    inst._zod.values = new Set([null]);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (input === null)\n            return payload;\n        payload.issues.push({\n            expected: \"null\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodAny = /*@__PURE__*/ core.$constructor(\"$ZodAny\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodUnknown = /*@__PURE__*/ core.$constructor(\"$ZodUnknown\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodNever = /*@__PURE__*/ core.$constructor(\"$ZodNever\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.issues.push({\n            expected: \"never\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodVoid = /*@__PURE__*/ core.$constructor(\"$ZodVoid\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const { value: input } = payload;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"void\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodDate = /*@__PURE__*/ core.$constructor(\"$ZodDate\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce) {\n            try {\n                payload.value = new Date(payload.value);\n            }\n            catch (_err) { }\n        }\n        const input = payload.value;\n        const isDate = input instanceof Date;\n        const isValidDate = isDate && !Number.isNaN(input.getTime());\n        if (isValidDate)\n            return payload;\n        payload.issues.push({\n            expected: \"date\",\n            code: \"invalid_type\",\n            input,\n            ...(isDate ? { received: \"Invalid Date\" } : {}),\n            inst,\n        });\n        return payload;\n    };\n});\nfunction handleArrayResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodArray = /*@__PURE__*/ core.$constructor(\"$ZodArray\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                expected: \"array\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = Array(input.length);\n        const proms = [];\n        for (let i = 0; i < input.length; i++) {\n            const item = input[i];\n            const result = def.element._zod.run({\n                value: item,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleArrayResult(result, payload, i)));\n            }\n            else {\n                handleArrayResult(result, payload, i);\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload; //handleArrayResultsAsync(parseResults, final);\n    };\n});\nfunction handleObjectResult(result, final, key) {\n    // if(isOptional)\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(key, result.issues));\n    }\n    final.value[key] = result.value;\n}\nfunction handleOptionalObjectResult(result, final, key, input) {\n    if (result.issues.length) {\n        // validation failed against value schema\n        if (input[key] === undefined) {\n            // if input was undefined, ignore the error\n            if (key in input) {\n                final.value[key] = undefined;\n            }\n            else {\n                final.value[key] = result.value;\n            }\n        }\n        else {\n            final.issues.push(...util.prefixIssues(key, result.issues));\n        }\n    }\n    else if (result.value === undefined) {\n        // validation returned `undefined`\n        if (key in input)\n            final.value[key] = undefined;\n    }\n    else {\n        // non-undefined value\n        final.value[key] = result.value;\n    }\n}\nexport const $ZodObject = /*@__PURE__*/ core.$constructor(\"$ZodObject\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodType.init(inst, def);\n    const _normalized = util.cached(() => {\n        const keys = Object.keys(def.shape);\n        for (const k of keys) {\n            if (!(def.shape[k] instanceof $ZodType)) {\n                throw new Error(`Invalid element at key \"${k}\": expected a Zod schema`);\n            }\n        }\n        const okeys = util.optionalKeys(def.shape);\n        return {\n            shape: def.shape,\n            keys,\n            keySet: new Set(keys),\n            numKeys: keys.length,\n            optionalKeys: new Set(okeys),\n        };\n    });\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const shape = def.shape;\n        const propValues = {};\n        for (const key in shape) {\n            const field = shape[key]._zod;\n            if (field.values) {\n                propValues[key] ?? (propValues[key] = new Set());\n                for (const v of field.values)\n                    propValues[key].add(v);\n            }\n        }\n        return propValues;\n    });\n    const generateFastpass = (shape) => {\n        const doc = new Doc([\"shape\", \"payload\", \"ctx\"]);\n        const { keys, optionalKeys } = _normalized.value;\n        const parseStr = (key) => {\n            const k = util.esc(key);\n            return `shape[${k}]._zod.run({ value: input[${k}], issues: [] }, ctx)`;\n        };\n        doc.write(`const input = payload.value;`);\n        const ids = Object.create(null);\n        for (const key of keys) {\n            ids[key] = util.randomString(15);\n        }\n        // A: preserve key order {\n        doc.write(`const newResult = {}`);\n        for (const key of keys) {\n            if (optionalKeys.has(key)) {\n                const id = ids[key];\n                doc.write(`const ${id} = ${parseStr(key)};`);\n                const k = util.esc(key);\n                doc.write(`\n        if (${id}.issues.length) {\n          if (input[${k}] === undefined) {\n            if (${k} in input) {\n              newResult[${k}] = undefined;\n            }\n          } else {\n            payload.issues = payload.issues.concat(\n              ${id}.issues.map((iss) => ({\n                ...iss,\n                path: iss.path ? [${k}, ...iss.path] : [${k}],\n              }))\n            );\n          }\n        } else if (${id}.value === undefined) {\n          if (${k} in input) newResult[${k}] = undefined;\n        } else {\n          newResult[${k}] = ${id}.value;\n        }\n        `);\n            }\n            else {\n                const id = ids[key];\n                //  const id = ids[key];\n                doc.write(`const ${id} = ${parseStr(key)};`);\n                doc.write(`\n          if (${id}.issues.length) payload.issues = payload.issues.concat(${id}.issues.map(iss => ({\n            ...iss,\n            path: iss.path ? [${util.esc(key)}, ...iss.path] : [${util.esc(key)}]\n          })));`);\n                doc.write(`newResult[${util.esc(key)}] = ${id}.value`);\n            }\n        }\n        doc.write(`payload.value = newResult;`);\n        doc.write(`return payload;`);\n        const fn = doc.compile();\n        return (payload, ctx) => fn(shape, payload, ctx);\n    };\n    let fastpass;\n    const isObject = util.isObject;\n    const jit = !core.globalConfig.jitless;\n    const allowsEval = util.allowsEval;\n    const fastEnabled = jit && allowsEval.value; // && !def.catchall;\n    const { catchall } = def;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (jit && fastEnabled && ctx?.async === false && ctx.jitless !== true) {\n            // always synchronous\n            if (!fastpass)\n                fastpass = generateFastpass(def.shape);\n            payload = fastpass(payload, ctx);\n        }\n        else {\n            payload.value = {};\n            const shape = value.shape;\n            for (const key of value.keys) {\n                const el = shape[key];\n                // do not add omitted optional keys\n                // if (!(key in input)) {\n                //   if (optionalKeys.has(key)) continue;\n                //   payload.issues.push({\n                //     code: \"invalid_type\",\n                //     path: [key],\n                //     expected: \"nonoptional\",\n                //     note: `Missing required key: \"${key}\"`,\n                //     input,\n                //     inst,\n                //   });\n                // }\n                const r = el._zod.run({ value: input[key], issues: [] }, ctx);\n                const isOptional = el._zod.optin === \"optional\" && el._zod.optout === \"optional\";\n                if (r instanceof Promise) {\n                    proms.push(r.then((r) => isOptional ? handleOptionalObjectResult(r, payload, key, input) : handleObjectResult(r, payload, key)));\n                }\n                else if (isOptional) {\n                    handleOptionalObjectResult(r, payload, key, input);\n                }\n                else {\n                    handleObjectResult(r, payload, key);\n                }\n            }\n        }\n        if (!catchall) {\n            // return payload;\n            return proms.length ? Promise.all(proms).then(() => payload) : payload;\n        }\n        const unrecognized = [];\n        // iterate over input keys\n        const keySet = value.keySet;\n        const _catchall = catchall._zod;\n        const t = _catchall.def.type;\n        for (const key of Object.keys(input)) {\n            if (keySet.has(key))\n                continue;\n            if (t === \"never\") {\n                unrecognized.push(key);\n                continue;\n            }\n            const r = _catchall.run({ value: input[key], issues: [] }, ctx);\n            if (r instanceof Promise) {\n                proms.push(r.then((r) => handleObjectResult(r, payload, key)));\n            }\n            else {\n                handleObjectResult(r, payload, key);\n            }\n        }\n        if (unrecognized.length) {\n            payload.issues.push({\n                code: \"unrecognized_keys\",\n                keys: unrecognized,\n                input,\n                inst,\n            });\n        }\n        if (!proms.length)\n            return payload;\n        return Promise.all(proms).then(() => {\n            return payload;\n        });\n    };\n});\nfunction handleUnionResults(results, final, inst, ctx) {\n    for (const result of results) {\n        if (result.issues.length === 0) {\n            final.value = result.value;\n            return final;\n        }\n    }\n    final.issues.push({\n        code: \"invalid_union\",\n        input: final.value,\n        inst,\n        errors: results.map((result) => result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n    });\n    return final;\n}\nexport const $ZodUnion = /*@__PURE__*/ core.$constructor(\"$ZodUnion\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        if (def.options.every((o) => o._zod.values)) {\n            return new Set(def.options.flatMap((option) => Array.from(option._zod.values)));\n        }\n        return undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        if (def.options.every((o) => o._zod.pattern)) {\n            const patterns = def.options.map((o) => o._zod.pattern);\n            return new RegExp(`^(${patterns.map((p) => util.cleanRegex(p.source)).join(\"|\")})$`);\n        }\n        return undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        let async = false;\n        const results = [];\n        for (const option of def.options) {\n            const result = option._zod.run({\n                value: payload.value,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                results.push(result);\n                async = true;\n            }\n            else {\n                if (result.issues.length === 0)\n                    return result;\n                results.push(result);\n            }\n        }\n        if (!async)\n            return handleUnionResults(results, payload, inst, ctx);\n        return Promise.all(results).then((results) => {\n            return handleUnionResults(results, payload, inst, ctx);\n        });\n    };\n});\nexport const $ZodDiscriminatedUnion = \n/*@__PURE__*/\ncore.$constructor(\"$ZodDiscriminatedUnion\", (inst, def) => {\n    $ZodUnion.init(inst, def);\n    const _super = inst._zod.parse;\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const propValues = {};\n        for (const option of def.options) {\n            const pv = option._zod.propValues;\n            if (!pv || Object.keys(pv).length === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(option)}\"`);\n            for (const [k, v] of Object.entries(pv)) {\n                if (!propValues[k])\n                    propValues[k] = new Set();\n                for (const val of v) {\n                    propValues[k].add(val);\n                }\n            }\n        }\n        return propValues;\n    });\n    const disc = util.cached(() => {\n        const opts = def.options;\n        const map = new Map();\n        for (const o of opts) {\n            const values = o._zod.propValues[def.discriminator];\n            if (!values || values.size === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(o)}\"`);\n            for (const v of values) {\n                if (map.has(v)) {\n                    throw new Error(`Duplicate discriminator value \"${String(v)}\"`);\n                }\n                map.set(v, o);\n            }\n        }\n        return map;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isObject(input)) {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"object\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const opt = disc.value.get(input?.[def.discriminator]);\n        if (opt) {\n            return opt._zod.run(payload, ctx);\n        }\n        if (def.unionFallback) {\n            return _super(payload, ctx);\n        }\n        // no matching discriminator\n        payload.issues.push({\n            code: \"invalid_union\",\n            errors: [],\n            note: \"No matching discriminator\",\n            input,\n            path: [def.discriminator],\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodIntersection = /*@__PURE__*/ core.$constructor(\"$ZodIntersection\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const { value: input } = payload;\n        const left = def.left._zod.run({ value: input, issues: [] }, ctx);\n        const right = def.right._zod.run({ value: input, issues: [] }, ctx);\n        const async = left instanceof Promise || right instanceof Promise;\n        if (async) {\n            return Promise.all([left, right]).then(([left, right]) => {\n                return handleIntersectionResults(payload, left, right);\n            });\n        }\n        return handleIntersectionResults(payload, left, right);\n    };\n});\nfunction mergeValues(a, b) {\n    // const aType = parse.t(a);\n    // const bType = parse.t(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    if (a instanceof Date && b instanceof Date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    if (util.isPlainObject(a) && util.isPlainObject(b)) {\n        const bKeys = Object.keys(b);\n        const sharedKeys = Object.keys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [key, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return { valid: false, mergeErrorPath: [] };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [index, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    return { valid: false, mergeErrorPath: [] };\n}\nfunction handleIntersectionResults(result, left, right) {\n    if (left.issues.length) {\n        result.issues.push(...left.issues);\n    }\n    if (right.issues.length) {\n        result.issues.push(...right.issues);\n    }\n    if (util.aborted(result))\n        return result;\n    const merged = mergeValues(left.value, right.value);\n    if (!merged.valid) {\n        throw new Error(`Unmergable intersection. Error path: ` + `${JSON.stringify(merged.mergeErrorPath)}`);\n    }\n    result.value = merged.data;\n    return result;\n}\nexport const $ZodTuple = /*@__PURE__*/ core.$constructor(\"$ZodTuple\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const items = def.items;\n    const optStart = items.length - [...items].reverse().findIndex((item) => item._zod.optin !== \"optional\");\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"tuple\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        payload.value = [];\n        const proms = [];\n        if (!def.rest) {\n            const tooBig = input.length > items.length;\n            const tooSmall = input.length < optStart - 1;\n            if (tooBig || tooSmall) {\n                payload.issues.push({\n                    input,\n                    inst,\n                    origin: \"array\",\n                    ...(tooBig ? { code: \"too_big\", maximum: items.length } : { code: \"too_small\", minimum: items.length }),\n                });\n                return payload;\n            }\n        }\n        let i = -1;\n        for (const item of items) {\n            i++;\n            if (i >= input.length)\n                if (i >= optStart)\n                    continue;\n            const result = item._zod.run({\n                value: input[i],\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n            }\n            else {\n                handleTupleResult(result, payload, i);\n            }\n        }\n        if (def.rest) {\n            const rest = input.slice(items.length);\n            for (const el of rest) {\n                i++;\n                const result = def.rest._zod.run({\n                    value: el,\n                    issues: [],\n                }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n                }\n                else {\n                    handleTupleResult(result, payload, i);\n                }\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleTupleResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodRecord = /*@__PURE__*/ core.$constructor(\"$ZodRecord\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isPlainObject(input)) {\n            payload.issues.push({\n                expected: \"record\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (def.keyType._zod.values) {\n            const values = def.keyType._zod.values;\n            payload.value = {};\n            for (const key of values) {\n                if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"symbol\") {\n                    const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                    if (result instanceof Promise) {\n                        proms.push(result.then((result) => {\n                            if (result.issues.length) {\n                                payload.issues.push(...util.prefixIssues(key, result.issues));\n                            }\n                            payload.value[key] = result.value;\n                        }));\n                    }\n                    else {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[key] = result.value;\n                    }\n                }\n            }\n            let unrecognized;\n            for (const key in input) {\n                if (!values.has(key)) {\n                    unrecognized = unrecognized ?? [];\n                    unrecognized.push(key);\n                }\n            }\n            if (unrecognized && unrecognized.length > 0) {\n                payload.issues.push({\n                    code: \"unrecognized_keys\",\n                    input,\n                    inst,\n                    keys: unrecognized,\n                });\n            }\n        }\n        else {\n            payload.value = {};\n            for (const key of Reflect.ownKeys(input)) {\n                if (key === \"__proto__\")\n                    continue;\n                const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n                if (keyResult instanceof Promise) {\n                    throw new Error(\"Async schemas not supported in object keys currently\");\n                }\n                if (keyResult.issues.length) {\n                    payload.issues.push({\n                        origin: \"record\",\n                        code: \"invalid_key\",\n                        issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        input: key,\n                        path: [key],\n                        inst,\n                    });\n                    payload.value[keyResult.value] = keyResult.value;\n                    continue;\n                }\n                const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[keyResult.value] = result.value;\n                    }));\n                }\n                else {\n                    if (result.issues.length) {\n                        payload.issues.push(...util.prefixIssues(key, result.issues));\n                    }\n                    payload.value[keyResult.value] = result.value;\n                }\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload;\n    };\n});\nexport const $ZodMap = /*@__PURE__*/ core.$constructor(\"$ZodMap\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Map)) {\n            payload.issues.push({\n                expected: \"map\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Map();\n        for (const [key, value] of input) {\n            const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n            const valueResult = def.valueType._zod.run({ value: value, issues: [] }, ctx);\n            if (keyResult instanceof Promise || valueResult instanceof Promise) {\n                proms.push(Promise.all([keyResult, valueResult]).then(([keyResult, valueResult]) => {\n                    handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n                }));\n            }\n            else {\n                handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleMapResult(keyResult, valueResult, final, key, input, inst, ctx) {\n    if (keyResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, keyResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_key\",\n                input,\n                inst,\n                issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    if (valueResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, valueResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_element\",\n                input,\n                inst,\n                key: key,\n                issues: valueResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    final.value.set(keyResult.value, valueResult.value);\n}\nexport const $ZodSet = /*@__PURE__*/ core.$constructor(\"$ZodSet\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Set)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"set\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Set();\n        for (const item of input) {\n            const result = def.valueType._zod.run({ value: item, issues: [] }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleSetResult(result, payload)));\n            }\n            else\n                handleSetResult(result, payload);\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleSetResult(result, final) {\n    if (result.issues.length) {\n        final.issues.push(...result.issues);\n    }\n    final.value.add(result.value);\n}\nexport const $ZodEnum = /*@__PURE__*/ core.$constructor(\"$ZodEnum\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const values = util.getEnumValues(def.entries);\n    inst._zod.values = new Set(values);\n    inst._zod.pattern = new RegExp(`^(${values\n        .filter((k) => util.propertyKeyTypes.has(typeof k))\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o.toString()))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodLiteral = /*@__PURE__*/ core.$constructor(\"$ZodLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.values = new Set(def.values);\n    inst._zod.pattern = new RegExp(`^(${def.values\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o ? o.toString() : String(o)))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodFile = /*@__PURE__*/ core.$constructor(\"$ZodFile\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (input instanceof File)\n            return payload;\n        payload.issues.push({\n            expected: \"file\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodTransform = /*@__PURE__*/ core.$constructor(\"$ZodTransform\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const _out = def.transform(payload.value, payload);\n        if (_ctx.async) {\n            const output = _out instanceof Promise ? _out : Promise.resolve(_out);\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        if (_out instanceof Promise) {\n            throw new core.$ZodAsyncError();\n        }\n        payload.value = _out;\n        return payload;\n    };\n});\nexport const $ZodOptional = /*@__PURE__*/ core.$constructor(\"$ZodOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, undefined]) : undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)})?$`) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            return payload;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNullable = /*@__PURE__*/ core.$constructor(\"$ZodNullable\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)}|null)$`) : undefined;\n    });\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, null]) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === null)\n            return payload;\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodDefault = /*@__PURE__*/ core.$constructor(\"$ZodDefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // inst._zod.qin = \"true\";\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n            /**\n             * $ZodDefault always returns the default value immediately.\n             * It doesn't pass the default value into the validator (\"prefault\"). There's no reason to pass the default value through validation. The validity of the default is enforced by TypeScript statically. Otherwise, it's the responsibility of the user to ensure the default is valid. In the case of pipes with divergent in/out types, you can specify the default on the `in` schema of your ZodPipe to set a \"prefault\" for the pipe.   */\n            return payload;\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleDefaultResult(result, def));\n        }\n        return handleDefaultResult(result, def);\n    };\n});\nfunction handleDefaultResult(payload, def) {\n    if (payload.value === undefined) {\n        payload.value = def.defaultValue;\n    }\n    return payload;\n}\nexport const $ZodPrefault = /*@__PURE__*/ core.$constructor(\"$ZodPrefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNonOptional = /*@__PURE__*/ core.$constructor(\"$ZodNonOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        const v = def.innerType._zod.values;\n        return v ? new Set([...v].filter((x) => x !== undefined)) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleNonOptionalResult(result, inst));\n        }\n        return handleNonOptionalResult(result, inst);\n    };\n});\nfunction handleNonOptionalResult(payload, inst) {\n    if (!payload.issues.length && payload.value === undefined) {\n        payload.issues.push({\n            code: \"invalid_type\",\n            expected: \"nonoptional\",\n            input: payload.value,\n            inst,\n        });\n    }\n    return payload;\n}\nexport const $ZodSuccess = /*@__PURE__*/ core.$constructor(\"$ZodSuccess\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.issues.length === 0;\n                return payload;\n            });\n        }\n        payload.value = result.issues.length === 0;\n        return payload;\n    };\n});\nexport const $ZodCatch = /*@__PURE__*/ core.$constructor(\"$ZodCatch\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.value;\n                if (result.issues.length) {\n                    payload.value = def.catchValue({\n                        ...payload,\n                        error: {\n                            issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        },\n                        input: payload.value,\n                    });\n                    payload.issues = [];\n                }\n                return payload;\n            });\n        }\n        payload.value = result.value;\n        if (result.issues.length) {\n            payload.value = def.catchValue({\n                ...payload,\n                error: {\n                    issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                },\n                input: payload.value,\n            });\n            payload.issues = [];\n        }\n        return payload;\n    };\n});\nexport const $ZodNaN = /*@__PURE__*/ core.$constructor(\"$ZodNaN\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"number\" || !Number.isNaN(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"nan\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPipe = /*@__PURE__*/ core.$constructor(\"$ZodPipe\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const left = def.in._zod.run(payload, ctx);\n        if (left instanceof Promise) {\n            return left.then((left) => handlePipeResult(left, def, ctx));\n        }\n        return handlePipeResult(left, def, ctx);\n    };\n});\nfunction handlePipeResult(left, def, ctx) {\n    if (util.aborted(left)) {\n        return left;\n    }\n    return def.out._zod.run({ value: left.value, issues: left.issues }, ctx);\n}\nexport const $ZodReadonly = /*@__PURE__*/ core.$constructor(\"$ZodReadonly\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"propValues\", () => def.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then(handleReadonlyResult);\n        }\n        return handleReadonlyResult(result);\n    };\n});\nfunction handleReadonlyResult(payload) {\n    payload.value = Object.freeze(payload.value);\n    return payload;\n}\nexport const $ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"$ZodTemplateLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const regexParts = [];\n    for (const part of def.parts) {\n        if (part instanceof $ZodType) {\n            if (!part._zod.pattern) {\n                // if (!source)\n                throw new Error(`Invalid template literal part, no pattern found: ${[...part._zod.traits].shift()}`);\n            }\n            const source = part._zod.pattern instanceof RegExp ? part._zod.pattern.source : part._zod.pattern;\n            if (!source)\n                throw new Error(`Invalid template literal part: ${part._zod.traits}`);\n            const start = source.startsWith(\"^\") ? 1 : 0;\n            const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n            regexParts.push(source.slice(start, end));\n        }\n        else if (part === null || util.primitiveTypes.has(typeof part)) {\n            regexParts.push(util.escapeRegex(`${part}`));\n        }\n        else {\n            throw new Error(`Invalid template literal part: ${part}`);\n        }\n    }\n    inst._zod.pattern = new RegExp(`^${regexParts.join(\"\")}$`);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"string\") {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"template_literal\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        inst._zod.pattern.lastIndex = 0;\n        if (!inst._zod.pattern.test(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                code: \"invalid_format\",\n                format: \"template_literal\",\n                pattern: inst._zod.pattern.source,\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPromise = /*@__PURE__*/ core.$constructor(\"$ZodPromise\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        return Promise.resolve(payload.value).then((inner) => def.innerType._zod.run({ value: inner, issues: [] }, ctx));\n    };\n});\nexport const $ZodLazy = /*@__PURE__*/ core.$constructor(\"$ZodLazy\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"innerType\", () => def.getter());\n    util.defineLazy(inst._zod, \"pattern\", () => inst._zod.innerType._zod.pattern);\n    util.defineLazy(inst._zod, \"propValues\", () => inst._zod.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => inst._zod.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => inst._zod.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const inner = inst._zod.innerType;\n        return inner._zod.run(payload, ctx);\n    };\n});\nexport const $ZodCustom = /*@__PURE__*/ core.$constructor(\"$ZodCustom\", (inst, def) => {\n    checks.$ZodCheck.init(inst, def);\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _) => {\n        return payload;\n    };\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const r = def.fn(input);\n        if (r instanceof Promise) {\n            return r.then((r) => handleRefineResult(r, payload, input, inst));\n        }\n        handleRefineResult(r, payload, input, inst);\n        return;\n    };\n});\nfunction handleRefineResult(result, payload, input, inst) {\n    if (!result) {\n        const _iss = {\n            code: \"custom\",\n            input,\n            inst, // incorporates params.error into issue reporting\n            path: [...(inst._zod.def.path ?? [])], // incorporates params.error into issue reporting\n            continue: !inst._zod.def.abort,\n            // params: inst._zod.def.params,\n        };\n        if (inst._zod.def.params)\n            _iss.params = inst._zod.def.params;\n        payload.issues.push(util.issue(_iss));\n    }\n}\n", "export { default as ar } from \"./ar.js\";\nexport { default as az } from \"./az.js\";\nexport { default as be } from \"./be.js\";\nexport { default as ca } from \"./ca.js\";\nexport { default as cs } from \"./cs.js\";\nexport { default as de } from \"./de.js\";\nexport { default as en } from \"./en.js\";\nexport { default as es } from \"./es.js\";\nexport { default as fa } from \"./fa.js\";\nexport { default as fi } from \"./fi.js\";\nexport { default as fr } from \"./fr.js\";\nexport { default as frCA } from \"./fr-CA.js\";\nexport { default as he } from \"./he.js\";\nexport { default as hu } from \"./hu.js\";\nexport { default as id } from \"./id.js\";\nexport { default as it } from \"./it.js\";\nexport { default as ja } from \"./ja.js\";\nexport { default as kh } from \"./kh.js\";\nexport { default as ko } from \"./ko.js\";\nexport { default as mk } from \"./mk.js\";\nexport { default as ms } from \"./ms.js\";\nexport { default as nl } from \"./nl.js\";\nexport { default as no } from \"./no.js\";\nexport { default as ota } from \"./ota.js\";\nexport { default as ps } from \"./ps.js\";\nexport { default as pl } from \"./pl.js\";\nexport { default as pt } from \"./pt.js\";\nexport { default as ru } from \"./ru.js\";\nexport { default as sl } from \"./sl.js\";\nexport { default as sv } from \"./sv.js\";\nexport { default as ta } from \"./ta.js\";\nexport { default as th } from \"./th.js\";\nexport { default as tr } from \"./tr.js\";\nexport { default as ua } from \"./ua.js\";\nexport { default as ur } from \"./ur.js\";\nexport { default as vi } from \"./vi.js\";\nexport { default as zhCN } from \"./zh-CN.js\";\nexport { default as zhTW } from \"./zh-TW.js\";\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"حرف\", verb: \"أن يحوي\" },\n        file: { unit: \"بايت\", verb: \"أن يحوي\" },\n        array: { unit: \"عنصر\", verb: \"أن يحوي\" },\n        set: { unit: \"عنصر\", verb: \"أن يحوي\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"مدخل\",\n        email: \"بريد إلكتروني\",\n        url: \"رابط\",\n        emoji: \"إيموجي\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"تاريخ ووقت بمعيار ISO\",\n        date: \"تاريخ بمعيار ISO\",\n        time: \"وقت بمعيار ISO\",\n        duration: \"مدة بمعيار ISO\",\n        ipv4: \"عنوان IPv4\",\n        ipv6: \"عنوان IPv6\",\n        cidrv4: \"مدى عناوين بصيغة IPv4\",\n        cidrv6: \"مدى عناوين بصيغة IPv6\",\n        base64: \"نَص بترميز base64-encoded\",\n        base64url: \"نَص بترميز base64url-encoded\",\n        json_string: \"نَص على هيئة JSON\",\n        e164: \"رقم هاتف بمعيار E.164\",\n        jwt: \"JWT\",\n        template_literal: \"مدخل\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `مدخلات غير مقبولة: يفترض إدخال ${issue.expected}، ولكن تم إدخال ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `مدخلات غير مقبولة: يفترض إدخال ${util.stringifyPrimitive(issue.values[0])}`;\n                return `اختيار غير مقبول: يتوقع انتقاء أحد هذه الخيارات: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return ` أكبر من اللازم: يفترض أن تكون ${issue.origin ?? \"القيمة\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"عنصر\"}`;\n                return `أكبر من اللازم: يفترض أن تكون ${issue.origin ?? \"القيمة\"} ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `أصغر من اللازم: يفترض لـ ${issue.origin} أن يكون ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `أصغر من اللازم: يفترض لـ ${issue.origin} أن يكون ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `نَص غير مقبول: يجب أن يبدأ بـ \"${issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `نَص غير مقبول: يجب أن ينتهي بـ \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `نَص غير مقبول: يجب أن يتضمَّن \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `نَص غير مقبول: يجب أن يطابق النمط ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} غير مقبول`;\n            }\n            case \"not_multiple_of\":\n                return `رقم غير مقبول: يجب أن يكون من مضاعفات ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `معرف${issue.keys.length > 1 ? \"ات\" : \"\"} غريب${issue.keys.length > 1 ? \"ة\" : \"\"}: ${util.joinValues(issue.keys, \"، \")}`;\n            case \"invalid_key\":\n                return `معرف غير مقبول في ${issue.origin}`;\n            case \"invalid_union\":\n                return \"مدخل غير مقبول\";\n            case \"invalid_element\":\n                return `مدخل غير مقبول في ${issue.origin}`;\n            default:\n                return \"مدخل غير مقبول\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"simvol\", verb: \"olmalıdır\" },\n        file: { unit: \"bayt\", verb: \"olmalıdır\" },\n        array: { unit: \"element\", verb: \"olmalıdır\" },\n        set: { unit: \"element\", verb: \"olmalıdır\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"email address\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datetime\",\n        date: \"ISO date\",\n        time: \"ISO time\",\n        duration: \"ISO duration\",\n        ipv4: \"IPv4 address\",\n        ipv6: \"IPv6 address\",\n        cidrv4: \"IPv4 range\",\n        cidrv6: \"IPv6 range\",\n        base64: \"base64-encoded string\",\n        base64url: \"base64url-encoded string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 number\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Yanlış dəyər: gözlənilən ${issue.expected}, daxil olan ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Yanlış dəyər: gözlənilən ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Yanlış seçim: aşağıdakılardan biri olmalıdır: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çox böyük: gözlənilən ${issue.origin ?? \"dəyər\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\n                return `Çox böyük: gözlənilən ${issue.origin ?? \"dəyər\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çox kiçik: gözlənilən ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                return `Çox kiçik: gözlənilən ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Yanlış mətn: \"${_issue.prefix}\" ilə başlamalıdır`;\n                if (_issue.format === \"ends_with\")\n                    return `Yanlış mətn: \"${_issue.suffix}\" ilə bitməlidir`;\n                if (_issue.format === \"includes\")\n                    return `Yanlış mətn: \"${_issue.includes}\" daxil olmalıdır`;\n                if (_issue.format === \"regex\")\n                    return `Yanlış mətn: ${_issue.pattern} şablonuna uyğun olmalıdır`;\n                return `Yanlış ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Yanlış ədəd: ${issue.divisor} ilə bölünə bilən olmalıdır`;\n            case \"unrecognized_keys\":\n                return `Tanınmayan açar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} daxilində yanlış açar`;\n            case \"invalid_union\":\n                return \"Yanlış dəyər\";\n            case \"invalid_element\":\n                return `${issue.origin} daxilində yanlış dəyər`;\n            default:\n                return `Yanlış dəyər`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nfunction getBelarusianPlural(count, one, few, many) {\n    const absCount = Math.abs(count);\n    const lastDigit = absCount % 10;\n    const lastTwoDigits = absCount % 100;\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\n        return many;\n    }\n    if (lastDigit === 1) {\n        return one;\n    }\n    if (lastDigit >= 2 && lastDigit <= 4) {\n        return few;\n    }\n    return many;\n}\nconst error = () => {\n    const Sizable = {\n        string: {\n            unit: {\n                one: \"сімвал\",\n                few: \"сімвалы\",\n                many: \"сімвалаў\",\n            },\n            verb: \"мець\",\n        },\n        array: {\n            unit: {\n                one: \"элемент\",\n                few: \"элементы\",\n                many: \"элементаў\",\n            },\n            verb: \"мець\",\n        },\n        set: {\n            unit: {\n                one: \"элемент\",\n                few: \"элементы\",\n                many: \"элементаў\",\n            },\n            verb: \"мець\",\n        },\n        file: {\n            unit: {\n                one: \"байт\",\n                few: \"байты\",\n                many: \"байтаў\",\n            },\n            verb: \"мець\",\n        },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"лік\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"масіў\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"увод\",\n        email: \"email адрас\",\n        url: \"URL\",\n        emoji: \"эмодзі\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO дата і час\",\n        date: \"ISO дата\",\n        time: \"ISO час\",\n        duration: \"ISO працягласць\",\n        ipv4: \"IPv4 адрас\",\n        ipv6: \"IPv6 адрас\",\n        cidrv4: \"IPv4 дыяпазон\",\n        cidrv6: \"IPv6 дыяпазон\",\n        base64: \"радок у фармаце base64\",\n        base64url: \"радок у фармаце base64url\",\n        json_string: \"JSON радок\",\n        e164: \"нумар E.164\",\n        jwt: \"JWT\",\n        template_literal: \"увод\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Няправільны ўвод: чакаўся ${issue.expected}, атрымана ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Няправільны ўвод: чакалася ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Няправільны варыянт: чакаўся адзін з ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const maxValue = Number(issue.maximum);\n                    const unit = getBelarusianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Занадта вялікі: чакалася, што ${issue.origin ?? \"значэнне\"} павінна ${sizing.verb} ${adj}${issue.maximum.toString()} ${unit}`;\n                }\n                return `Занадта вялікі: чакалася, што ${issue.origin ?? \"значэнне\"} павінна быць ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const minValue = Number(issue.minimum);\n                    const unit = getBelarusianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Занадта малы: чакалася, што ${issue.origin} павінна ${sizing.verb} ${adj}${issue.minimum.toString()} ${unit}`;\n                }\n                return `Занадта малы: чакалася, што ${issue.origin} павінна быць ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Няправільны радок: павінен пачынацца з \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Няправільны радок: павінен заканчвацца на \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Няправільны радок: павінен змяшчаць \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Няправільны радок: павінен адпавядаць шаблону ${_issue.pattern}`;\n                return `Няправільны ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Няправільны лік: павінен быць кратным ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Нераспазнаны ${issue.keys.length > 1 ? \"ключы\" : \"ключ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Няправільны ключ у ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Няправільны ўвод\";\n            case \"invalid_element\":\n                return `Няправільнае значэнне ў ${issue.origin}`;\n            default:\n                return `Няправільны ўвод`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caràcters\", verb: \"contenir\" },\n        file: { unit: \"bytes\", verb: \"contenir\" },\n        array: { unit: \"elements\", verb: \"contenir\" },\n        set: { unit: \"elements\", verb: \"contenir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrada\",\n        email: \"adreça electrònica\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data i hora ISO\",\n        date: \"data ISO\",\n        time: \"hora ISO\",\n        duration: \"durada ISO\",\n        ipv4: \"adreça IPv4\",\n        ipv6: \"adreça IPv6\",\n        cidrv4: \"rang IPv4\",\n        cidrv6: \"rang IPv6\",\n        base64: \"cadena codificada en base64\",\n        base64url: \"cadena codificada en base64url\",\n        json_string: \"cadena JSON\",\n        e164: \"número E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Tipus invàlid: s'esperava ${issue.expected}, s'ha rebut ${parsedType(issue.input)}`;\n            // return `Tipus invàlid: s'esperava ${issue.expected}, s'ha rebut ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Valor invàlid: s'esperava ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opció invàlida: s'esperava una de ${util.joinValues(issue.values, \" o \")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"com a màxim\" : \"menys de\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} contingués ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} fos ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"com a mínim\" : \"més de\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Massa petit: s'esperava que ${issue.origin} contingués ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Massa petit: s'esperava que ${issue.origin} fos ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Format invàlid: ha de començar amb \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Format invàlid: ha d'acabar amb \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Format invàlid: ha d'incloure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Format invàlid: ha de coincidir amb el patró ${_issue.pattern}`;\n                return `Format invàlid per a ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Número invàlid: ha de ser múltiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Clau${issue.keys.length > 1 ? \"s\" : \"\"} no reconeguda${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Clau invàlida a ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada invàlida\"; // Could also be \"Tipus d'unió invàlid\" but \"Entrada invàlida\" is more general\n            case \"invalid_element\":\n                return `Element invàlid a ${issue.origin}`;\n            default:\n                return `Entrada invàlida`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znaků\", verb: \"mít\" },\n        file: { unit: \"bajtů\", verb: \"mít\" },\n        array: { unit: \"prvků\", verb: \"mít\" },\n        set: { unit: \"prvků\", verb: \"mít\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"číslo\";\n            }\n            case \"string\": {\n                return \"řetězec\";\n            }\n            case \"boolean\": {\n                return \"boolean\";\n            }\n            case \"bigint\": {\n                return \"bigint\";\n            }\n            case \"function\": {\n                return \"funkce\";\n            }\n            case \"symbol\": {\n                return \"symbol\";\n            }\n            case \"undefined\": {\n                return \"undefined\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"pole\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"regulární výraz\",\n        email: \"e-mailová adresa\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"datum a čas ve formátu ISO\",\n        date: \"datum ve formátu ISO\",\n        time: \"čas ve formátu ISO\",\n        duration: \"doba trvání ISO\",\n        ipv4: \"IPv4 adresa\",\n        ipv6: \"IPv6 adresa\",\n        cidrv4: \"rozsah IPv4\",\n        cidrv6: \"rozsah IPv6\",\n        base64: \"řetězec zakódovaný ve formátu base64\",\n        base64url: \"řetězec zakódovaný ve formátu base64url\",\n        json_string: \"řetězec ve formátu JSON\",\n        e164: \"číslo E.164\",\n        jwt: \"JWT\",\n        template_literal: \"vstup\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Neplatný vstup: očekáváno ${issue.expected}, obdrženo ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Neplatný vstup: očekáváno ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Neplatná možnost: očekávána jedna z hodnot ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Hodnota je příliš velká: ${issue.origin ?? \"hodnota\"} musí mít ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"prvků\"}`;\n                }\n                return `Hodnota je příliš velká: ${issue.origin ?? \"hodnota\"} musí být ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Hodnota je příliš malá: ${issue.origin ?? \"hodnota\"} musí mít ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"prvků\"}`;\n                }\n                return `Hodnota je příliš malá: ${issue.origin ?? \"hodnota\"} musí být ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Neplatný řetězec: musí začínat na \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Neplatný řetězec: musí končit na \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Neplatný řetězec: musí obsahovat \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Neplatný řetězec: musí odpovídat vzoru ${_issue.pattern}`;\n                return `Neplatný formát ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Neplatné číslo: musí být násobkem ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Neznámé klíče: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Neplatný klíč v ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Neplatný vstup\";\n            case \"invalid_element\":\n                return `Neplatná hodnota v ${issue.origin}`;\n            default:\n                return `Neplatný vstup`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"Zeichen\", verb: \"zu haben\" },\n        file: { unit: \"Bytes\", verb: \"zu haben\" },\n        array: { unit: \"Elemente\", verb: \"zu haben\" },\n        set: { unit: \"Elemente\", verb: \"zu haben\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"Zahl\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"Array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"Eingabe\",\n        email: \"E-Mail-Adresse\",\n        url: \"URL\",\n        emoji: \"Emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-Datum und -Uhrzeit\",\n        date: \"ISO-Datum\",\n        time: \"ISO-Uhrzeit\",\n        duration: \"ISO-Dauer\",\n        ipv4: \"IPv4-Adresse\",\n        ipv6: \"IPv6-Adresse\",\n        cidrv4: \"IPv4-Bereich\",\n        cidrv6: \"IPv6-Bereich\",\n        base64: \"Base64-codierter String\",\n        base64url: \"Base64-URL-codierter String\",\n        json_string: \"JSON-String\",\n        e164: \"E.164-Nummer\",\n        jwt: \"JWT\",\n        template_literal: \"Eingabe\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ungültige Eingabe: erwartet ${issue.expected}, erhalten ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ungültige Eingabe: erwartet ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ungültige Option: erwartet eine von ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Zu groß: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"Elemente\"} hat`;\n                return `Zu groß: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ist`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} hat`;\n                }\n                return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ist`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ungültiger String: muss mit \"${_issue.prefix}\" beginnen`;\n                if (_issue.format === \"ends_with\")\n                    return `Ungültiger String: muss mit \"${_issue.suffix}\" enden`;\n                if (_issue.format === \"includes\")\n                    return `Ungültiger String: muss \"${_issue.includes}\" enthalten`;\n                if (_issue.format === \"regex\")\n                    return `Ungültiger String: muss dem Muster ${_issue.pattern} entsprechen`;\n                return `Ungültig: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ungültige Zahl: muss ein Vielfaches von ${issue.divisor} sein`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Unbekannte Schlüssel\" : \"Unbekannter Schlüssel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ungültiger Schlüssel in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ungültige Eingabe\";\n            case \"invalid_element\":\n                return `Ungültiger Wert in ${issue.origin}`;\n            default:\n                return `Ungültige Eingabe`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"characters\", verb: \"to have\" },\n        file: { unit: \"bytes\", verb: \"to have\" },\n        array: { unit: \"items\", verb: \"to have\" },\n        set: { unit: \"items\", verb: \"to have\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"input\",\n        email: \"email address\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datetime\",\n        date: \"ISO date\",\n        time: \"ISO time\",\n        duration: \"ISO duration\",\n        ipv4: \"IPv4 address\",\n        ipv6: \"IPv6 address\",\n        cidrv4: \"IPv4 range\",\n        cidrv6: \"IPv6 range\",\n        base64: \"base64-encoded string\",\n        base64url: \"base64url-encoded string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 number\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Invalid input: expected ${issue.expected}, received ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Invalid option: expected one of ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Too big: expected ${issue.origin ?? \"value\"} to have ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `Too big: expected ${issue.origin ?? \"value\"} to be ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Too small: expected ${issue.origin} to have ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Too small: expected ${issue.origin} to be ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Invalid string: must start with \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Invalid string: must end with \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Invalid string: must include \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Invalid string: must match pattern ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Invalid number: must be a multiple of ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Unrecognized key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Invalid key in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Invalid input\";\n            case \"invalid_element\":\n                return `Invalid value in ${issue.origin}`;\n            default:\n                return `Invalid input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caracteres\", verb: \"tener\" },\n        file: { unit: \"bytes\", verb: \"tener\" },\n        array: { unit: \"elementos\", verb: \"tener\" },\n        set: { unit: \"elementos\", verb: \"tener\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"número\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"arreglo\";\n                }\n                if (data === null) {\n                    return \"nulo\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrada\",\n        email: \"dirección de correo electrónico\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"fecha y hora ISO\",\n        date: \"fecha ISO\",\n        time: \"hora ISO\",\n        duration: \"duración ISO\",\n        ipv4: \"dirección IPv4\",\n        ipv6: \"dirección IPv6\",\n        cidrv4: \"rango IPv4\",\n        cidrv6: \"rango IPv6\",\n        base64: \"cadena codificada en base64\",\n        base64url: \"URL codificada en base64\",\n        json_string: \"cadena JSON\",\n        e164: \"número E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entrada inválida: se esperaba ${issue.expected}, recibido ${parsedType(issue.input)}`;\n            // return `Entrada inválida: se esperaba ${issue.expected}, recibido ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrada inválida: se esperaba ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opción inválida: se esperaba una de ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Demasiado grande: se esperaba que ${issue.origin ?? \"valor\"} tuviera ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\n                return `Demasiado grande: se esperaba que ${issue.origin ?? \"valor\"} fuera ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Demasiado pequeño: se esperaba que ${issue.origin} tuviera ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Demasiado pequeño: se esperaba que ${issue.origin} fuera ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Cadena inválida: debe comenzar con \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Cadena inválida: debe terminar en \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Cadena inválida: debe incluir \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Cadena inválida: debe coincidir con el patrón ${_issue.pattern}`;\n                return `Inválido ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Número inválido: debe ser múltiplo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Llave${issue.keys.length > 1 ? \"s\" : \"\"} desconocida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Llave inválida en ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada inválida\";\n            case \"invalid_element\":\n                return `Valor inválido en ${issue.origin}`;\n            default:\n                return `Entrada inválida`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"کاراکتر\", verb: \"داشته باشد\" },\n        file: { unit: \"بایت\", verb: \"داشته باشد\" },\n        array: { unit: \"آیتم\", verb: \"داشته باشد\" },\n        set: { unit: \"آیتم\", verb: \"داشته باشد\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"آرایه\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ورودی\",\n        email: \"آدرس ایمیل\",\n        url: \"URL\",\n        emoji: \"ایموجی\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"تاریخ و زمان ایزو\",\n        date: \"تاریخ ایزو\",\n        time: \"زمان ایزو\",\n        duration: \"مدت زمان ایزو\",\n        ipv4: \"IPv4 آدرس\",\n        ipv6: \"IPv6 آدرس\",\n        cidrv4: \"IPv4 دامنه\",\n        cidrv6: \"IPv6 دامنه\",\n        base64: \"base64-encoded رشته\",\n        base64url: \"base64url-encoded رشته\",\n        json_string: \"JSON رشته\",\n        e164: \"E.164 عدد\",\n        jwt: \"JWT\",\n        template_literal: \"ورودی\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ورودی نامعتبر: می‌بایست ${issue.expected} می‌بود، ${parsedType(issue.input)} دریافت شد`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `ورودی نامعتبر: می‌بایست ${util.stringifyPrimitive(issue.values[0])} می‌بود`;\n                }\n                return `گزینه نامعتبر: می‌بایست یکی از ${util.joinValues(issue.values, \"|\")} می‌بود`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `خیلی بزرگ: ${issue.origin ?? \"مقدار\"} باید ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عنصر\"} باشد`;\n                }\n                return `خیلی بزرگ: ${issue.origin ?? \"مقدار\"} باید ${adj}${issue.maximum.toString()} باشد`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `خیلی کوچک: ${issue.origin} باید ${adj}${issue.minimum.toString()} ${sizing.unit} باشد`;\n                }\n                return `خیلی کوچک: ${issue.origin} باید ${adj}${issue.minimum.toString()} باشد`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `رشته نامعتبر: باید با \"${_issue.prefix}\" شروع شود`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `رشته نامعتبر: باید با \"${_issue.suffix}\" تمام شود`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `رشته نامعتبر: باید شامل \"${_issue.includes}\" باشد`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `رشته نامعتبر: باید با الگوی ${_issue.pattern} مطابقت داشته باشد`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} نامعتبر`;\n            }\n            case \"not_multiple_of\":\n                return `عدد نامعتبر: باید مضرب ${issue.divisor} باشد`;\n            case \"unrecognized_keys\":\n                return `کلید${issue.keys.length > 1 ? \"های\" : \"\"} ناشناس: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `کلید ناشناس در ${issue.origin}`;\n            case \"invalid_union\":\n                return `ورودی نامعتبر`;\n            case \"invalid_element\":\n                return `مقدار نامعتبر در ${issue.origin}`;\n            default:\n                return `ورودی نامعتبر`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"merkkiä\", subject: \"merkkijonon\" },\n        file: { unit: \"tavua\", subject: \"tiedoston\" },\n        array: { unit: \"alkiota\", subject: \"listan\" },\n        set: { unit: \"alkiota\", subject: \"joukon\" },\n        number: { unit: \"\", subject: \"luvun\" },\n        bigint: { unit: \"\", subject: \"suuren kokonaisluvun\" },\n        int: { unit: \"\", subject: \"kokonaisluvun\" },\n        date: { unit: \"\", subject: \"päivämäärän\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"säännöllinen lauseke\",\n        email: \"sähköpostiosoite\",\n        url: \"URL-osoite\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-aikaleima\",\n        date: \"ISO-päivämäärä\",\n        time: \"ISO-aika\",\n        duration: \"ISO-kesto\",\n        ipv4: \"IPv4-osoite\",\n        ipv6: \"IPv6-osoite\",\n        cidrv4: \"IPv4-alue\",\n        cidrv6: \"IPv6-alue\",\n        base64: \"base64-koodattu merkkijono\",\n        base64url: \"base64url-koodattu merkkijono\",\n        json_string: \"JSON-merkkijono\",\n        e164: \"E.164-luku\",\n        jwt: \"JWT\",\n        template_literal: \"templaattimerkkijono\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Virheellinen tyyppi: odotettiin ${issue.expected}, oli ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Virheellinen syöte: täytyy olla ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Virheellinen valinta: täytyy olla yksi seuraavista: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian suuri: ${sizing.subject} täytyy olla ${adj}${issue.maximum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian suuri: arvon täytyy olla ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Liian pieni: ${sizing.subject} täytyy olla ${adj}${issue.minimum.toString()} ${sizing.unit}`.trim();\n                }\n                return `Liian pieni: arvon täytyy olla ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Virheellinen syöte: täytyy alkaa \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Virheellinen syöte: täytyy loppua \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Virheellinen syöte: täytyy sisältää \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\") {\n                    return `Virheellinen syöte: täytyy vastata säännöllistä lauseketta ${_issue.pattern}`;\n                }\n                return `Virheellinen ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Virheellinen luku: täytyy olla luvun ${issue.divisor} monikerta`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Tuntemattomat avaimet\" : \"Tuntematon avain\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return \"Virheellinen avain tietueessa\";\n            case \"invalid_union\":\n                return \"Virheellinen unioni\";\n            case \"invalid_element\":\n                return \"Virheellinen arvo joukossa\";\n            default:\n                return `Virheellinen syöte`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caractères\", verb: \"avoir\" },\n        file: { unit: \"octets\", verb: \"avoir\" },\n        array: { unit: \"éléments\", verb: \"avoir\" },\n        set: { unit: \"éléments\", verb: \"avoir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"nombre\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tableau\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrée\",\n        email: \"adresse e-mail\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"date et heure ISO\",\n        date: \"date ISO\",\n        time: \"heure ISO\",\n        duration: \"durée ISO\",\n        ipv4: \"adresse IPv4\",\n        ipv6: \"adresse IPv6\",\n        cidrv4: \"plage IPv4\",\n        cidrv6: \"plage IPv6\",\n        base64: \"chaîne encodée en base64\",\n        base64url: \"chaîne encodée en base64url\",\n        json_string: \"chaîne JSON\",\n        e164: \"numéro E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrée\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entrée invalide : ${issue.expected} attendu, ${parsedType(issue.input)} reçu`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrée invalide : ${util.stringifyPrimitive(issue.values[0])} attendu`;\n                return `Option invalide : une valeur parmi ${util.joinValues(issue.values, \"|\")} attendue`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Trop grand : ${issue.origin ?? \"valeur\"} doit ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"élément(s)\"}`;\n                return `Trop grand : ${issue.origin ?? \"valeur\"} doit être ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Trop petit : ${issue.origin} doit ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Trop petit : ${issue.origin} doit être ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Chaîne invalide : doit commencer par \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Chaîne invalide : doit se terminer par \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Chaîne invalide : doit inclure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Chaîne invalide : doit correspondre au modèle ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\n            }\n            case \"not_multiple_of\":\n                return `Nombre invalide : doit être un multiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Clé${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Clé invalide dans ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrée invalide\";\n            case \"invalid_element\":\n                return `Valeur invalide dans ${issue.origin}`;\n            default:\n                return `Entrée invalide`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caractères\", verb: \"avoir\" },\n        file: { unit: \"octets\", verb: \"avoir\" },\n        array: { unit: \"éléments\", verb: \"avoir\" },\n        set: { unit: \"éléments\", verb: \"avoir\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"entrée\",\n        email: \"adresse courriel\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"date-heure ISO\",\n        date: \"date ISO\",\n        time: \"heure ISO\",\n        duration: \"durée ISO\",\n        ipv4: \"adresse IPv4\",\n        ipv6: \"adresse IPv6\",\n        cidrv4: \"plage IPv4\",\n        cidrv6: \"plage IPv6\",\n        base64: \"chaîne encodée en base64\",\n        base64url: \"chaîne encodée en base64url\",\n        json_string: \"chaîne JSON\",\n        e164: \"numéro E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrée\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Entrée invalide : attendu ${issue.expected}, reçu ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrée invalide : attendu ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Option invalide : attendu l'une des valeurs suivantes ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"≤\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} ait ${adj}${issue.maximum.toString()} ${sizing.unit}`;\n                return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} soit ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"≥\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Trop petit : attendu que ${issue.origin} ait ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Trop petit : attendu que ${issue.origin} soit ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Chaîne invalide : doit commencer par \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Chaîne invalide : doit se terminer par \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Chaîne invalide : doit inclure \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Chaîne invalide : doit correspondre au motif ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\n            }\n            case \"not_multiple_of\":\n                return `Nombre invalide : doit être un multiple de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Clé${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Clé invalide dans ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrée invalide\";\n            case \"invalid_element\":\n                return `Valeur invalide dans ${issue.origin}`;\n            default:\n                return `Entrée invalide`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"אותיות\", verb: \"לכלול\" },\n        file: { unit: \"בייטים\", verb: \"לכלול\" },\n        array: { unit: \"פריטים\", verb: \"לכלול\" },\n        set: { unit: \"פריטים\", verb: \"לכלול\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"קלט\",\n        email: \"כתובת אימייל\",\n        url: \"כתובת רשת\",\n        emoji: \"אימוג'י\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"תאריך וזמן ISO\",\n        date: \"תאריך ISO\",\n        time: \"זמן ISO\",\n        duration: \"משך זמן ISO\",\n        ipv4: \"כתובת IPv4\",\n        ipv6: \"כתובת IPv6\",\n        cidrv4: \"טווח IPv4\",\n        cidrv6: \"טווח IPv6\",\n        base64: \"מחרוזת בבסיס 64\",\n        base64url: \"מחרוזת בבסיס 64 לכתובות רשת\",\n        json_string: \"מחרוזת JSON\",\n        e164: \"מספר E.164\",\n        jwt: \"JWT\",\n        template_literal: \"קלט\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `קלט לא תקין: צריך ${issue.expected}, התקבל ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `קלט לא תקין: צריך ${util.stringifyPrimitive(issue.values[0])}`;\n                return `קלט לא תקין: צריך אחת מהאפשרויות  ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `גדול מדי: ${issue.origin ?? \"value\"} צריך להיות ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\n                return `גדול מדי: ${issue.origin ?? \"value\"} צריך להיות ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `קטן מדי: ${issue.origin} צריך להיות ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `קטן מדי: ${issue.origin} צריך להיות ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `מחרוזת לא תקינה: חייבת להתחיל ב\"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `מחרוזת לא תקינה: חייבת להסתיים ב \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `מחרוזת לא תקינה: חייבת לכלול \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `מחרוזת לא תקינה: חייבת להתאים לתבנית ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} לא תקין`;\n            }\n            case \"not_multiple_of\":\n                return `מספר לא תקין: חייב להיות מכפלה של ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `מפתח${issue.keys.length > 1 ? \"ות\" : \"\"} לא מזוה${issue.keys.length > 1 ? \"ים\" : \"ה\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `מפתח לא תקין ב${issue.origin}`;\n            case \"invalid_union\":\n                return \"קלט לא תקין\";\n            case \"invalid_element\":\n                return `ערך לא תקין ב${issue.origin}`;\n            default:\n                return `קלט לא תקין`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"legyen\" },\n        file: { unit: \"byte\", verb: \"legyen\" },\n        array: { unit: \"elem\", verb: \"legyen\" },\n        set: { unit: \"elem\", verb: \"legyen\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"szám\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tömb\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"bemenet\",\n        email: \"email cím\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO időbélyeg\",\n        date: \"ISO dátum\",\n        time: \"ISO idő\",\n        duration: \"ISO időintervallum\",\n        ipv4: \"IPv4 cím\",\n        ipv6: \"IPv6 cím\",\n        cidrv4: \"IPv4 tartomány\",\n        cidrv6: \"IPv6 tartomány\",\n        base64: \"base64-kódolt string\",\n        base64url: \"base64url-kódolt string\",\n        json_string: \"JSON string\",\n        e164: \"E.164 szám\",\n        jwt: \"JWT\",\n        template_literal: \"bemenet\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Érvénytelen bemenet: a várt érték ${issue.expected}, a kapott érték ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Érvénytelen bemenet: a várt érték ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Érvénytelen opció: valamelyik érték várt ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Túl nagy: ${issue.origin ?? \"érték\"} mérete túl nagy ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elem\"}`;\n                return `Túl nagy: a bemeneti érték ${issue.origin ?? \"érték\"} túl nagy: ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Túl kicsi: a bemeneti érték ${issue.origin} mérete túl kicsi ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Túl kicsi: a bemeneti érték ${issue.origin} túl kicsi ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Érvénytelen string: \"${_issue.prefix}\" értékkel kell kezdődnie`;\n                if (_issue.format === \"ends_with\")\n                    return `Érvénytelen string: \"${_issue.suffix}\" értékkel kell végződnie`;\n                if (_issue.format === \"includes\")\n                    return `Érvénytelen string: \"${_issue.includes}\" értéket kell tartalmaznia`;\n                if (_issue.format === \"regex\")\n                    return `Érvénytelen string: ${_issue.pattern} mintának kell megfelelnie`;\n                return `Érvénytelen ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Érvénytelen szám: ${issue.divisor} többszörösének kell lennie`;\n            case \"unrecognized_keys\":\n                return `Ismeretlen kulcs${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Érvénytelen kulcs ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Érvénytelen bemenet\";\n            case \"invalid_element\":\n                return `Érvénytelen érték: ${issue.origin}`;\n            default:\n                return `Érvénytelen bemenet`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"memiliki\" },\n        file: { unit: \"byte\", verb: \"memiliki\" },\n        array: { unit: \"item\", verb: \"memiliki\" },\n        set: { unit: \"item\", verb: \"memiliki\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"alamat email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"tanggal dan waktu format ISO\",\n        date: \"tanggal format ISO\",\n        time: \"jam format ISO\",\n        duration: \"durasi format ISO\",\n        ipv4: \"alamat IPv4\",\n        ipv6: \"alamat IPv6\",\n        cidrv4: \"rentang alamat IPv4\",\n        cidrv6: \"rentang alamat IPv6\",\n        base64: \"string dengan enkode base64\",\n        base64url: \"string dengan enkode base64url\",\n        json_string: \"string JSON\",\n        e164: \"angka E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input tidak valid: diharapkan ${issue.expected}, diterima ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input tidak valid: diharapkan ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Pilihan tidak valid: diharapkan salah satu dari ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} memiliki ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n                return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} menjadi ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Terlalu kecil: diharapkan ${issue.origin} memiliki ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Terlalu kecil: diharapkan ${issue.origin} menjadi ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `String tidak valid: harus dimulai dengan \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `String tidak valid: harus berakhir dengan \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `String tidak valid: harus menyertakan \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `String tidak valid: harus sesuai pola ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} tidak valid`;\n            }\n            case \"not_multiple_of\":\n                return `Angka tidak valid: harus kelipatan dari ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kunci tidak dikenali ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kunci tidak valid di ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input tidak valid\";\n            case \"invalid_element\":\n                return `Nilai tidak valid di ${issue.origin}`;\n            default:\n                return `Input tidak valid`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caratteri\", verb: \"avere\" },\n        file: { unit: \"byte\", verb: \"avere\" },\n        array: { unit: \"elementi\", verb: \"avere\" },\n        set: { unit: \"elementi\", verb: \"avere\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"numero\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"vettore\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"indirizzo email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data e ora ISO\",\n        date: \"data ISO\",\n        time: \"ora ISO\",\n        duration: \"durata ISO\",\n        ipv4: \"indirizzo IPv4\",\n        ipv6: \"indirizzo IPv6\",\n        cidrv4: \"intervallo IPv4\",\n        cidrv6: \"intervallo IPv6\",\n        base64: \"stringa codificata in base64\",\n        base64url: \"URL codificata in base64\",\n        json_string: \"stringa JSON\",\n        e164: \"numero E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input non valido: atteso ${issue.expected}, ricevuto ${parsedType(issue.input)}`;\n            // return `Input non valido: atteso ${issue.expected}, ricevuto ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input non valido: atteso ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opzione non valida: atteso uno tra ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Troppo grande: ${issue.origin ?? \"valore\"} deve avere ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementi\"}`;\n                return `Troppo grande: ${issue.origin ?? \"valore\"} deve essere ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Troppo piccolo: ${issue.origin} deve avere ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Troppo piccolo: ${issue.origin} deve essere ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Stringa non valida: deve iniziare con \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Stringa non valida: deve terminare con \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Stringa non valida: deve includere \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Stringa non valida: deve corrispondere al pattern ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Numero non valido: deve essere un multiplo di ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Chiav${issue.keys.length > 1 ? \"i\" : \"e\"} non riconosciut${issue.keys.length > 1 ? \"e\" : \"a\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Chiave non valida in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input non valido\";\n            case \"invalid_element\":\n                return `Valore non valido in ${issue.origin}`;\n            default:\n                return `Input non valido`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"文字\", verb: \"である\" },\n        file: { unit: \"バイト\", verb: \"である\" },\n        array: { unit: \"要素\", verb: \"である\" },\n        set: { unit: \"要素\", verb: \"である\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"数値\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"配列\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"入力値\",\n        email: \"メールアドレス\",\n        url: \"URL\",\n        emoji: \"絵文字\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO日時\",\n        date: \"ISO日付\",\n        time: \"ISO時刻\",\n        duration: \"ISO期間\",\n        ipv4: \"IPv4アドレス\",\n        ipv6: \"IPv6アドレス\",\n        cidrv4: \"IPv4範囲\",\n        cidrv6: \"IPv6範囲\",\n        base64: \"base64エンコード文字列\",\n        base64url: \"base64urlエンコード文字列\",\n        json_string: \"JSON文字列\",\n        e164: \"E.164番号\",\n        jwt: \"JWT\",\n        template_literal: \"入力値\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `無効な入力: ${issue.expected}が期待されましたが、${parsedType(issue.input)}が入力されました`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `無効な入力: ${util.stringifyPrimitive(issue.values[0])}が期待されました`;\n                return `無効な選択: ${util.joinValues(issue.values, \"、\")}のいずれかである必要があります`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"以下である\" : \"より小さい\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${sizing.unit ?? \"要素\"}${adj}必要があります`;\n                return `大きすぎる値: ${issue.origin ?? \"値\"}は${issue.maximum.toString()}${adj}必要があります`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"以上である\" : \"より大きい\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${sizing.unit}${adj}必要があります`;\n                return `小さすぎる値: ${issue.origin}は${issue.minimum.toString()}${adj}必要があります`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `無効な文字列: \"${_issue.prefix}\"で始まる必要があります`;\n                if (_issue.format === \"ends_with\")\n                    return `無効な文字列: \"${_issue.suffix}\"で終わる必要があります`;\n                if (_issue.format === \"includes\")\n                    return `無効な文字列: \"${_issue.includes}\"を含む必要があります`;\n                if (_issue.format === \"regex\")\n                    return `無効な文字列: パターン${_issue.pattern}に一致する必要があります`;\n                return `無効な${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `無効な数値: ${issue.divisor}の倍数である必要があります`;\n            case \"unrecognized_keys\":\n                return `認識されていないキー${issue.keys.length > 1 ? \"群\" : \"\"}: ${util.joinValues(issue.keys, \"、\")}`;\n            case \"invalid_key\":\n                return `${issue.origin}内の無効なキー`;\n            case \"invalid_union\":\n                return \"無効な入力\";\n            case \"invalid_element\":\n                return `${issue.origin}内の無効な値`;\n            default:\n                return `無効な入力`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"តួអក្សរ\", verb: \"គួរមាន\" },\n        file: { unit: \"បៃ\", verb: \"គួរមាន\" },\n        array: { unit: \"ធាតុ\", verb: \"គួរមាន\" },\n        set: { unit: \"ធាតុ\", verb: \"គួរមាន\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"មិនមែនជាលេខ (NaN)\" : \"លេខ\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"អារេ (Array)\";\n                }\n                if (data === null) {\n                    return \"គ្មានតម្លៃ (null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ទិន្នន័យបញ្ចូល\",\n        email: \"អាសយដ្ឋានអ៊ីមែល\",\n        url: \"URL\",\n        emoji: \"សញ្ញាអារម្មណ៍\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"កាលបរិច្ឆេទ និងម៉ោង ISO\",\n        date: \"កាលបរិច្ឆេទ ISO\",\n        time: \"ម៉ោង ISO\",\n        duration: \"រយៈពេល ISO\",\n        ipv4: \"អាសយដ្ឋាន IPv4\",\n        ipv6: \"អាសយដ្ឋាន IPv6\",\n        cidrv4: \"ដែនអាសយដ្ឋាន IPv4\",\n        cidrv6: \"ដែនអាសយដ្ឋាន IPv6\",\n        base64: \"ខ្សែអក្សរអ៊ិកូដ base64\",\n        base64url: \"ខ្សែអក្សរអ៊ិកូដ base64url\",\n        json_string: \"ខ្សែអក្សរ JSON\",\n        e164: \"លេខ E.164\",\n        jwt: \"JWT\",\n        template_literal: \"ទិន្នន័យបញ្ចូល\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${issue.expected} ប៉ុន្តែទទួលបាន ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${util.stringifyPrimitive(issue.values[0])}`;\n                return `ជម្រើសមិនត្រឹមត្រូវ៖ ត្រូវជាមួយក្នុងចំណោម ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `ធំពេក៖ ត្រូវការ ${issue.origin ?? \"តម្លៃ\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"ធាតុ\"}`;\n                return `ធំពេក៖ ត្រូវការ ${issue.origin ?? \"តម្លៃ\"} ${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `តូចពេក៖ ត្រូវការ ${issue.origin} ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `តូចពេក៖ ត្រូវការ ${issue.origin} ${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវចាប់ផ្តើមដោយ \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវបញ្ចប់ដោយ \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវមាន \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវតែផ្គូផ្គងនឹងទម្រង់ដែលបានកំណត់ ${_issue.pattern}`;\n                return `មិនត្រឹមត្រូវ៖ ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `លេខមិនត្រឹមត្រូវ៖ ត្រូវតែជាពហុគុណនៃ ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `រកឃើញសោមិនស្គាល់៖ ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `សោមិនត្រឹមត្រូវនៅក្នុង ${issue.origin}`;\n            case \"invalid_union\":\n                return `ទិន្នន័យមិនត្រឹមត្រូវ`;\n            case \"invalid_element\":\n                return `ទិន្នន័យមិនត្រឹមត្រូវនៅក្នុង ${issue.origin}`;\n            default:\n                return `ទិន្នន័យមិនត្រឹមត្រូវ`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"문자\", verb: \"to have\" },\n        file: { unit: \"바이트\", verb: \"to have\" },\n        array: { unit: \"개\", verb: \"to have\" },\n        set: { unit: \"개\", verb: \"to have\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"입력\",\n        email: \"이메일 주소\",\n        url: \"URL\",\n        emoji: \"이모지\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO 날짜시간\",\n        date: \"ISO 날짜\",\n        time: \"ISO 시간\",\n        duration: \"ISO 기간\",\n        ipv4: \"IPv4 주소\",\n        ipv6: \"IPv6 주소\",\n        cidrv4: \"IPv4 범위\",\n        cidrv6: \"IPv6 범위\",\n        base64: \"base64 인코딩 문자열\",\n        base64url: \"base64url 인코딩 문자열\",\n        json_string: \"JSON 문자열\",\n        e164: \"E.164 번호\",\n        jwt: \"JWT\",\n        template_literal: \"입력\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `잘못된 입력: 예상 타입은 ${issue.expected}, 받은 타입은 ${parsedType(issue.input)}입니다`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `잘못된 입력: 값은 ${util.stringifyPrimitive(issue.values[0])} 이어야 합니다`;\n                return `잘못된 옵션: ${util.joinValues(issue.values, \"또는 \")} 중 하나여야 합니다`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"이하\" : \"미만\";\n                const suffix = adj === \"미만\" ? \"이어야 합니다\" : \"여야 합니다\";\n                const sizing = getSizing(issue.origin);\n                const unit = sizing?.unit ?? \"요소\";\n                if (sizing)\n                    return `${issue.origin ?? \"값\"}이 너무 큽니다: ${issue.maximum.toString()}${unit} ${adj}${suffix}`;\n                return `${issue.origin ?? \"값\"}이 너무 큽니다: ${issue.maximum.toString()} ${adj}${suffix}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"이상\" : \"초과\";\n                const suffix = adj === \"이상\" ? \"이어야 합니다\" : \"여야 합니다\";\n                const sizing = getSizing(issue.origin);\n                const unit = sizing?.unit ?? \"요소\";\n                if (sizing) {\n                    return `${issue.origin ?? \"값\"}이 너무 작습니다: ${issue.minimum.toString()}${unit} ${adj}${suffix}`;\n                }\n                return `${issue.origin ?? \"값\"}이 너무 작습니다: ${issue.minimum.toString()} ${adj}${suffix}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `잘못된 문자열: \"${_issue.prefix}\"(으)로 시작해야 합니다`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `잘못된 문자열: \"${_issue.suffix}\"(으)로 끝나야 합니다`;\n                if (_issue.format === \"includes\")\n                    return `잘못된 문자열: \"${_issue.includes}\"을(를) 포함해야 합니다`;\n                if (_issue.format === \"regex\")\n                    return `잘못된 문자열: 정규식 ${_issue.pattern} 패턴과 일치해야 합니다`;\n                return `잘못된 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `잘못된 숫자: ${issue.divisor}의 배수여야 합니다`;\n            case \"unrecognized_keys\":\n                return `인식할 수 없는 키: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `잘못된 키: ${issue.origin}`;\n            case \"invalid_union\":\n                return `잘못된 입력`;\n            case \"invalid_element\":\n                return `잘못된 값: ${issue.origin}`;\n            default:\n                return `잘못된 입력`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"знаци\", verb: \"да имаат\" },\n        file: { unit: \"бајти\", verb: \"да имаат\" },\n        array: { unit: \"ставки\", verb: \"да имаат\" },\n        set: { unit: \"ставки\", verb: \"да имаат\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"број\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"низа\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"внес\",\n        email: \"адреса на е-пошта\",\n        url: \"URL\",\n        emoji: \"емоџи\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO датум и време\",\n        date: \"ISO датум\",\n        time: \"ISO време\",\n        duration: \"ISO времетраење\",\n        ipv4: \"IPv4 адреса\",\n        ipv6: \"IPv6 адреса\",\n        cidrv4: \"IPv4 опсег\",\n        cidrv6: \"IPv6 опсег\",\n        base64: \"base64-енкодирана низа\",\n        base64url: \"base64url-енкодирана низа\",\n        json_string: \"JSON низа\",\n        e164: \"E.164 број\",\n        jwt: \"JWT\",\n        template_literal: \"внес\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Грешен внес: се очекува ${issue.expected}, примено ${parsedType(issue.input)}`;\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Грешана опција: се очекува една ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Премногу голем: се очекува ${issue.origin ?? \"вредноста\"} да има ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"елементи\"}`;\n                return `Премногу голем: се очекува ${issue.origin ?? \"вредноста\"} да биде ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Премногу мал: се очекува ${issue.origin} да има ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Премногу мал: се очекува ${issue.origin} да биде ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Неважечка низа: мора да започнува со \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Неважечка низа: мора да завршува со \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Неважечка низа: мора да вклучува \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Неважечка низа: мора да одгоара на патернот ${_issue.pattern}`;\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Грешен број: мора да биде делив со ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Непрепознаени клучеви\" : \"Непрепознаен клуч\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Грешен клуч во ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Грешен внес\";\n            case \"invalid_element\":\n                return `Грешна вредност во ${issue.origin}`;\n            default:\n                return `Грешен внес`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"aksara\", verb: \"mempunyai\" },\n        file: { unit: \"bait\", verb: \"mempunyai\" },\n        array: { unit: \"elemen\", verb: \"mempunyai\" },\n        set: { unit: \"elemen\", verb: \"mempunyai\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"nombor\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"alamat e-mel\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"tarikh masa ISO\",\n        date: \"tarikh ISO\",\n        time: \"masa ISO\",\n        duration: \"tempoh ISO\",\n        ipv4: \"alamat IPv4\",\n        ipv6: \"alamat IPv6\",\n        cidrv4: \"julat IPv4\",\n        cidrv6: \"julat IPv6\",\n        base64: \"string dikodkan base64\",\n        base64url: \"string dikodkan base64url\",\n        json_string: \"string JSON\",\n        e164: \"nombor E.164\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Input tidak sah: dijangka ${issue.expected}, diterima ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Input tidak sah: dijangka ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Pilihan tidak sah: dijangka salah satu daripada ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\n                return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} adalah ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Terlalu kecil: dijangka ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Terlalu kecil: dijangka ${issue.origin} adalah ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `String tidak sah: mesti bermula dengan \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `String tidak sah: mesti berakhir dengan \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `String tidak sah: mesti mengandungi \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `String tidak sah: mesti sepadan dengan corak ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} tidak sah`;\n            }\n            case \"not_multiple_of\":\n                return `Nombor tidak sah: perlu gandaan ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Kunci tidak dikenali: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Kunci tidak sah dalam ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Input tidak sah\";\n            case \"invalid_element\":\n                return `Nilai tidak sah dalam ${issue.origin}`;\n            default:\n                return `Input tidak sah`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tekens\" },\n        file: { unit: \"bytes\" },\n        array: { unit: \"elementen\" },\n        set: { unit: \"elementen\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"getal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"invoer\",\n        email: \"emailadres\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datum en tijd\",\n        date: \"ISO datum\",\n        time: \"ISO tijd\",\n        duration: \"ISO duur\",\n        ipv4: \"IPv4-adres\",\n        ipv6: \"IPv6-adres\",\n        cidrv4: \"IPv4-bereik\",\n        cidrv6: \"IPv6-bereik\",\n        base64: \"base64-gecodeerde tekst\",\n        base64url: \"base64 URL-gecodeerde tekst\",\n        json_string: \"JSON string\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"invoer\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ongeldige invoer: verwacht ${issue.expected}, ontving ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ongeldige invoer: verwacht ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ongeldige optie: verwacht één van ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementen\"} bevat`;\n                return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} is`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} bevat`;\n                }\n                return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} is`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Ongeldige tekst: moet met \"${_issue.prefix}\" beginnen`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Ongeldige tekst: moet op \"${_issue.suffix}\" eindigen`;\n                if (_issue.format === \"includes\")\n                    return `Ongeldige tekst: moet \"${_issue.includes}\" bevatten`;\n                if (_issue.format === \"regex\")\n                    return `Ongeldige tekst: moet overeenkomen met patroon ${_issue.pattern}`;\n                return `Ongeldig: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ongeldig getal: moet een veelvoud van ${issue.divisor} zijn`;\n            case \"unrecognized_keys\":\n                return `Onbekende key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ongeldige key in ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ongeldige invoer\";\n            case \"invalid_element\":\n                return `Ongeldige waarde in ${issue.origin}`;\n            default:\n                return `Ongeldige invoer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tegn\", verb: \"å ha\" },\n        file: { unit: \"bytes\", verb: \"å ha\" },\n        array: { unit: \"elementer\", verb: \"å inneholde\" },\n        set: { unit: \"elementer\", verb: \"å inneholde\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"tall\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"liste\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"input\",\n        email: \"e-postadresse\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO dato- og klokkeslett\",\n        date: \"ISO-dato\",\n        time: \"ISO-klokkeslett\",\n        duration: \"ISO-varighet\",\n        ipv4: \"IPv4-område\",\n        ipv6: \"IPv6-område\",\n        cidrv4: \"IPv4-spekter\",\n        cidrv6: \"IPv6-spekter\",\n        base64: \"base64-enkodet streng\",\n        base64url: \"base64url-enkodet streng\",\n        json_string: \"JSON-streng\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ugyldig input: forventet ${issue.expected}, fikk ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ugyldig verdi: forventet ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ugyldig valg: forventet en av ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `For stor(t): forventet ${issue.origin ?? \"value\"} til å ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementer\"}`;\n                return `For stor(t): forventet ${issue.origin ?? \"value\"} til å ha ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `For lite(n): forventet ${issue.origin} til å ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `For lite(n): forventet ${issue.origin} til å ha ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Ugyldig streng: må starte med \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Ugyldig streng: må ende med \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Ugyldig streng: må inneholde \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Ugyldig streng: må matche mønsteret ${_issue.pattern}`;\n                return `Ugyldig ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ugyldig tall: må være et multiplum av ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Ukjente nøkler\" : \"Ukjent nøkkel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ugyldig nøkkel i ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Ugyldig input\";\n            case \"invalid_element\":\n                return `Ugyldig verdi i ${issue.origin}`;\n            default:\n                return `Ugyldig input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"harf\", verb: \"olmalıdır\" },\n        file: { unit: \"bayt\", verb: \"olmalıdır\" },\n        array: { unit: \"unsur\", verb: \"olmalıdır\" },\n        set: { unit: \"unsur\", verb: \"olmalıdır\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"numara\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"saf\";\n                }\n                if (data === null) {\n                    return \"gayb\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"giren\",\n        email: \"epostagâh\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO hengâmı\",\n        date: \"ISO tarihi\",\n        time: \"ISO zamanı\",\n        duration: \"ISO müddeti\",\n        ipv4: \"IPv4 nişânı\",\n        ipv6: \"IPv6 nişânı\",\n        cidrv4: \"IPv4 menzili\",\n        cidrv6: \"IPv6 menzili\",\n        base64: \"base64-şifreli metin\",\n        base64url: \"base64url-şifreli metin\",\n        json_string: \"JSON metin\",\n        e164: \"E.164 sayısı\",\n        jwt: \"JWT\",\n        template_literal: \"giren\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Fâsit giren: umulan ${issue.expected}, alınan ${parsedType(issue.input)}`;\n            // return `Fâsit giren: umulan ${issue.expected}, alınan ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Fâsit giren: umulan ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Fâsit tercih: mûteberler ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Fazla büyük: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"} sahip olmalıydı.`;\n                return `Fazla büyük: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} olmalıydı.`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Fazla küçük: ${issue.origin}, ${adj}${issue.minimum.toString()} ${sizing.unit} sahip olmalıydı.`;\n                }\n                return `Fazla küçük: ${issue.origin}, ${adj}${issue.minimum.toString()} olmalıydı.`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Fâsit metin: \"${_issue.prefix}\" ile başlamalı.`;\n                if (_issue.format === \"ends_with\")\n                    return `Fâsit metin: \"${_issue.suffix}\" ile bitmeli.`;\n                if (_issue.format === \"includes\")\n                    return `Fâsit metin: \"${_issue.includes}\" ihtivâ etmeli.`;\n                if (_issue.format === \"regex\")\n                    return `Fâsit metin: ${_issue.pattern} nakşına uymalı.`;\n                return `Fâsit ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Fâsit sayı: ${issue.divisor} katı olmalıydı.`;\n            case \"unrecognized_keys\":\n                return `Tanınmayan anahtar ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} için tanınmayan anahtar var.`;\n            case \"invalid_union\":\n                return \"Giren tanınamadı.\";\n            case \"invalid_element\":\n                return `${issue.origin} için tanınmayan kıymet var.`;\n            default:\n                return `Kıymet tanınamadı.`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"توکي\", verb: \"ولري\" },\n        file: { unit: \"بایټس\", verb: \"ولري\" },\n        array: { unit: \"توکي\", verb: \"ولري\" },\n        set: { unit: \"توکي\", verb: \"ولري\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"ارې\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ورودي\",\n        email: \"بریښنالیک\",\n        url: \"یو آر ال\",\n        emoji: \"ایموجي\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"نیټه او وخت\",\n        date: \"نېټه\",\n        time: \"وخت\",\n        duration: \"موده\",\n        ipv4: \"د IPv4 پته\",\n        ipv6: \"د IPv6 پته\",\n        cidrv4: \"د IPv4 ساحه\",\n        cidrv6: \"د IPv6 ساحه\",\n        base64: \"base64-encoded متن\",\n        base64url: \"base64url-encoded متن\",\n        json_string: \"JSON متن\",\n        e164: \"د E.164 شمېره\",\n        jwt: \"JWT\",\n        template_literal: \"ورودي\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ناسم ورودي: باید ${issue.expected} وای, مګر ${parsedType(issue.input)} ترلاسه شو`;\n            case \"invalid_value\":\n                if (issue.values.length === 1) {\n                    return `ناسم ورودي: باید ${util.stringifyPrimitive(issue.values[0])} وای`;\n                }\n                return `ناسم انتخاب: باید یو له ${util.joinValues(issue.values, \"|\")} څخه وای`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عنصرونه\"} ولري`;\n                }\n                return `ډیر لوی: ${issue.origin ?? \"ارزښت\"} باید ${adj}${issue.maximum.toString()} وي`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} ${sizing.unit} ولري`;\n                }\n                return `ډیر کوچنی: ${issue.origin} باید ${adj}${issue.minimum.toString()} وي`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `ناسم متن: باید د \"${_issue.prefix}\" سره پیل شي`;\n                }\n                if (_issue.format === \"ends_with\") {\n                    return `ناسم متن: باید د \"${_issue.suffix}\" سره پای ته ورسيږي`;\n                }\n                if (_issue.format === \"includes\") {\n                    return `ناسم متن: باید \"${_issue.includes}\" ولري`;\n                }\n                if (_issue.format === \"regex\") {\n                    return `ناسم متن: باید د ${_issue.pattern} سره مطابقت ولري`;\n                }\n                return `${Nouns[_issue.format] ?? issue.format} ناسم دی`;\n            }\n            case \"not_multiple_of\":\n                return `ناسم عدد: باید د ${issue.divisor} مضرب وي`;\n            case \"unrecognized_keys\":\n                return `ناسم ${issue.keys.length > 1 ? \"کلیډونه\" : \"کلیډ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `ناسم کلیډ په ${issue.origin} کې`;\n            case \"invalid_union\":\n                return `ناسمه ورودي`;\n            case \"invalid_element\":\n                return `ناسم عنصر په ${issue.origin} کې`;\n            default:\n                return `ناسمه ورودي`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znaków\", verb: \"mieć\" },\n        file: { unit: \"bajtów\", verb: \"mieć\" },\n        array: { unit: \"elementów\", verb: \"mieć\" },\n        set: { unit: \"elementów\", verb: \"mieć\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"liczba\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tablica\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"wyrażenie\",\n        email: \"adres email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data i godzina w formacie ISO\",\n        date: \"data w formacie ISO\",\n        time: \"godzina w formacie ISO\",\n        duration: \"czas trwania ISO\",\n        ipv4: \"adres IPv4\",\n        ipv6: \"adres IPv6\",\n        cidrv4: \"zakres IPv4\",\n        cidrv6: \"zakres IPv6\",\n        base64: \"ciąg znaków zakodowany w formacie base64\",\n        base64url: \"ciąg znaków zakodowany w formacie base64url\",\n        json_string: \"ciąg znaków w formacie JSON\",\n        e164: \"liczba E.164\",\n        jwt: \"JWT\",\n        template_literal: \"wejście\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Nieprawidłowe dane wejściowe: oczekiwano ${issue.expected}, otrzymano ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Nieprawidłowe dane wejściowe: oczekiwano ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Nieprawidłowa opcja: oczekiwano jednej z wartości ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Za duża wartość: oczekiwano, że ${issue.origin ?? \"wartość\"} będzie mieć ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementów\"}`;\n                }\n                return `Zbyt duż(y/a/e): oczekiwano, że ${issue.origin ?? \"wartość\"} będzie wynosić ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Za mała wartość: oczekiwano, że ${issue.origin ?? \"wartość\"} będzie mieć ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"elementów\"}`;\n                }\n                return `Zbyt mał(y/a/e): oczekiwano, że ${issue.origin ?? \"wartość\"} będzie wynosić ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Nieprawidłowy ciąg znaków: musi zaczynać się od \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Nieprawidłowy ciąg znaków: musi kończyć się na \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Nieprawidłowy ciąg znaków: musi zawierać \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Nieprawidłowy ciąg znaków: musi odpowiadać wzorcowi ${_issue.pattern}`;\n                return `Nieprawidłow(y/a/e) ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Nieprawidłowa liczba: musi być wielokrotnością ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Nierozpoznane klucze${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Nieprawidłowy klucz w ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Nieprawidłowe dane wejściowe\";\n            case \"invalid_element\":\n                return `Nieprawidłowa wartość w ${issue.origin}`;\n            default:\n                return `Nieprawidłowe dane wejściowe`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"caracteres\", verb: \"ter\" },\n        file: { unit: \"bytes\", verb: \"ter\" },\n        array: { unit: \"itens\", verb: \"ter\" },\n        set: { unit: \"itens\", verb: \"ter\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"número\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"nulo\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"padrão\",\n        email: \"endereço de e-mail\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"data e hora ISO\",\n        date: \"data ISO\",\n        time: \"hora ISO\",\n        duration: \"duração ISO\",\n        ipv4: \"endereço IPv4\",\n        ipv6: \"endereço IPv6\",\n        cidrv4: \"faixa de IPv4\",\n        cidrv6: \"faixa de IPv6\",\n        base64: \"texto codificado em base64\",\n        base64url: \"URL codificada em base64\",\n        json_string: \"texto JSON\",\n        e164: \"número E.164\",\n        jwt: \"JWT\",\n        template_literal: \"entrada\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Tipo inválido: esperado ${issue.expected}, recebido ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Entrada inválida: esperado ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Opção inválida: esperada uma das ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Muito grande: esperado que ${issue.origin ?? \"valor\"} tivesse ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\n                return `Muito grande: esperado que ${issue.origin ?? \"valor\"} fosse ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Muito pequeno: esperado que ${issue.origin} tivesse ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Muito pequeno: esperado que ${issue.origin} fosse ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Texto inválido: deve começar com \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Texto inválido: deve terminar com \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Texto inválido: deve incluir \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Texto inválido: deve corresponder ao padrão ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} inválido`;\n            }\n            case \"not_multiple_of\":\n                return `Número inválido: deve ser múltiplo de ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Chave${issue.keys.length > 1 ? \"s\" : \"\"} desconhecida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Chave inválida em ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Entrada inválida\";\n            case \"invalid_element\":\n                return `Valor inválido em ${issue.origin}`;\n            default:\n                return `Campo inválido`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nfunction getRussianPlural(count, one, few, many) {\n    const absCount = Math.abs(count);\n    const lastDigit = absCount % 10;\n    const lastTwoDigits = absCount % 100;\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\n        return many;\n    }\n    if (lastDigit === 1) {\n        return one;\n    }\n    if (lastDigit >= 2 && lastDigit <= 4) {\n        return few;\n    }\n    return many;\n}\nconst error = () => {\n    const Sizable = {\n        string: {\n            unit: {\n                one: \"символ\",\n                few: \"символа\",\n                many: \"символов\",\n            },\n            verb: \"иметь\",\n        },\n        file: {\n            unit: {\n                one: \"байт\",\n                few: \"байта\",\n                many: \"байт\",\n            },\n            verb: \"иметь\",\n        },\n        array: {\n            unit: {\n                one: \"элемент\",\n                few: \"элемента\",\n                many: \"элементов\",\n            },\n            verb: \"иметь\",\n        },\n        set: {\n            unit: {\n                one: \"элемент\",\n                few: \"элемента\",\n                many: \"элементов\",\n            },\n            verb: \"иметь\",\n        },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"число\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"массив\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ввод\",\n        email: \"email адрес\",\n        url: \"URL\",\n        emoji: \"эмодзи\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO дата и время\",\n        date: \"ISO дата\",\n        time: \"ISO время\",\n        duration: \"ISO длительность\",\n        ipv4: \"IPv4 адрес\",\n        ipv6: \"IPv6 адрес\",\n        cidrv4: \"IPv4 диапазон\",\n        cidrv6: \"IPv6 диапазон\",\n        base64: \"строка в формате base64\",\n        base64url: \"строка в формате base64url\",\n        json_string: \"JSON строка\",\n        e164: \"номер E.164\",\n        jwt: \"JWT\",\n        template_literal: \"ввод\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Неверный ввод: ожидалось ${issue.expected}, получено ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Неверный ввод: ожидалось ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Неверный вариант: ожидалось одно из ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const maxValue = Number(issue.maximum);\n                    const unit = getRussianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Слишком большое значение: ожидалось, что ${issue.origin ?? \"значение\"} будет иметь ${adj}${issue.maximum.toString()} ${unit}`;\n                }\n                return `Слишком большое значение: ожидалось, что ${issue.origin ?? \"значение\"} будет ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    const minValue = Number(issue.minimum);\n                    const unit = getRussianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\n                    return `Слишком маленькое значение: ожидалось, что ${issue.origin} будет иметь ${adj}${issue.minimum.toString()} ${unit}`;\n                }\n                return `Слишком маленькое значение: ожидалось, что ${issue.origin} будет ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Неверная строка: должна начинаться с \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Неверная строка: должна заканчиваться на \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Неверная строка: должна содержать \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Неверная строка: должна соответствовать шаблону ${_issue.pattern}`;\n                return `Неверный ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Неверное число: должно быть кратным ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Нераспознанн${issue.keys.length > 1 ? \"ые\" : \"ый\"} ключ${issue.keys.length > 1 ? \"и\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Неверный ключ в ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Неверные входные данные\";\n            case \"invalid_element\":\n                return `Неверное значение в ${issue.origin}`;\n            default:\n                return `Неверные входные данные`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"znakov\", verb: \"imeti\" },\n        file: { unit: \"bajtov\", verb: \"imeti\" },\n        array: { unit: \"elementov\", verb: \"imeti\" },\n        set: { unit: \"elementov\", verb: \"imeti\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"število\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"tabela\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"vnos\",\n        email: \"e-poštni naslov\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO datum in čas\",\n        date: \"ISO datum\",\n        time: \"ISO čas\",\n        duration: \"ISO trajanje\",\n        ipv4: \"IPv4 naslov\",\n        ipv6: \"IPv6 naslov\",\n        cidrv4: \"obseg IPv4\",\n        cidrv6: \"obseg IPv6\",\n        base64: \"base64 kodiran niz\",\n        base64url: \"base64url kodiran niz\",\n        json_string: \"JSON niz\",\n        e164: \"E.164 številka\",\n        jwt: \"JWT\",\n        template_literal: \"vnos\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Neveljaven vnos: pričakovano ${issue.expected}, prejeto ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Neveljaven vnos: pričakovano ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Neveljavna možnost: pričakovano eno izmed ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Preveliko: pričakovano, da bo ${issue.origin ?? \"vrednost\"} imelo ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementov\"}`;\n                return `Preveliko: pričakovano, da bo ${issue.origin ?? \"vrednost\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Premajhno: pričakovano, da bo ${issue.origin} imelo ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Premajhno: pričakovano, da bo ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Neveljaven niz: mora se začeti z \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Neveljaven niz: mora se končati z \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Neveljaven niz: mora vsebovati \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Neveljaven niz: mora ustrezati vzorcu ${_issue.pattern}`;\n                return `Neveljaven ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Neveljavno število: mora biti večkratnik ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Neprepoznan${issue.keys.length > 1 ? \"i ključi\" : \" ključ\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Neveljaven ključ v ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Neveljaven vnos\";\n            case \"invalid_element\":\n                return `Neveljavna vrednost v ${issue.origin}`;\n            default:\n                return \"Neveljaven vnos\";\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"tecken\", verb: \"att ha\" },\n        file: { unit: \"bytes\", verb: \"att ha\" },\n        array: { unit: \"objekt\", verb: \"att innehålla\" },\n        set: { unit: \"objekt\", verb: \"att innehålla\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"antal\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"lista\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"reguljärt uttryck\",\n        email: \"e-postadress\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO-datum och tid\",\n        date: \"ISO-datum\",\n        time: \"ISO-tid\",\n        duration: \"ISO-varaktighet\",\n        ipv4: \"IPv4-intervall\",\n        ipv6: \"IPv6-intervall\",\n        cidrv4: \"IPv4-spektrum\",\n        cidrv6: \"IPv6-spektrum\",\n        base64: \"base64-kodad sträng\",\n        base64url: \"base64url-kodad sträng\",\n        json_string: \"JSON-sträng\",\n        e164: \"E.164-nummer\",\n        jwt: \"JWT\",\n        template_literal: \"mall-literal\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Ogiltig inmatning: förväntat ${issue.expected}, fick ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Ogiltig inmatning: förväntat ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Ogiltigt val: förväntade en av ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `För stor(t): förväntade ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\n                }\n                return `För stor(t): förväntat ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `För lite(t): förväntade ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `För lite(t): förväntade ${issue.origin ?? \"värdet\"} att ha ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `Ogiltig sträng: måste börja med \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `Ogiltig sträng: måste sluta med \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Ogiltig sträng: måste innehålla \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Ogiltig sträng: måste matcha mönstret \"${_issue.pattern}\"`;\n                return `Ogiltig(t) ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Ogiltigt tal: måste vara en multipel av ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `${issue.keys.length > 1 ? \"Okända nycklar\" : \"Okänd nyckel\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Ogiltig nyckel i ${issue.origin ?? \"värdet\"}`;\n            case \"invalid_union\":\n                return \"Ogiltig input\";\n            case \"invalid_element\":\n                return `Ogiltigt värde i ${issue.origin ?? \"värdet\"}`;\n            default:\n                return `Ogiltig input`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"எழுத்துக்கள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        file: { unit: \"பைட்டுகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        array: { unit: \"உறுப்புகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n        set: { unit: \"உறுப்புகள்\", verb: \"கொண்டிருக்க வேண்டும்\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"எண் அல்லாதது\" : \"எண்\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"அணி\";\n                }\n                if (data === null) {\n                    return \"வெறுமை\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"உள்ளீடு\",\n        email: \"மின்னஞ்சல் முகவரி\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO தேதி நேரம்\",\n        date: \"ISO தேதி\",\n        time: \"ISO நேரம்\",\n        duration: \"ISO கால அளவு\",\n        ipv4: \"IPv4 முகவரி\",\n        ipv6: \"IPv6 முகவரி\",\n        cidrv4: \"IPv4 வரம்பு\",\n        cidrv6: \"IPv6 வரம்பு\",\n        base64: \"base64-encoded சரம்\",\n        base64url: \"base64url-encoded சரம்\",\n        json_string: \"JSON சரம்\",\n        e164: \"E.164 எண்\",\n        jwt: \"JWT\",\n        template_literal: \"input\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${issue.expected}, பெறப்பட்டது ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `தவறான உள்ளீடு: எதிர்பார்க்கப்பட்டது ${util.stringifyPrimitive(issue.values[0])}`;\n                return `தவறான விருப்பம்: எதிர்பார்க்கப்பட்டது ${util.joinValues(issue.values, \"|\")} இல் ஒன்று`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"உறுப்புகள்\"} ஆக இருக்க வேண்டும்`;\n                }\n                return `மிக பெரியது: எதிர்பார்க்கப்பட்டது ${issue.origin ?? \"மதிப்பு\"} ${adj}${issue.maximum.toString()} ஆக இருக்க வேண்டும்`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} ஆக இருக்க வேண்டும்`; //\n                }\n                return `மிகச் சிறியது: எதிர்பார்க்கப்பட்டது ${issue.origin} ${adj}${issue.minimum.toString()} ஆக இருக்க வேண்டும்`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `தவறான சரம்: \"${_issue.prefix}\" இல் தொடங்க வேண்டும்`;\n                if (_issue.format === \"ends_with\")\n                    return `தவறான சரம்: \"${_issue.suffix}\" இல் முடிவடைய வேண்டும்`;\n                if (_issue.format === \"includes\")\n                    return `தவறான சரம்: \"${_issue.includes}\" ஐ உள்ளடக்க வேண்டும்`;\n                if (_issue.format === \"regex\")\n                    return `தவறான சரம்: ${_issue.pattern} முறைபாட்டுடன் பொருந்த வேண்டும்`;\n                return `தவறான ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `தவறான எண்: ${issue.divisor} இன் பலமாக இருக்க வேண்டும்`;\n            case \"unrecognized_keys\":\n                return `அடையாளம் தெரியாத விசை${issue.keys.length > 1 ? \"கள்\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} இல் தவறான விசை`;\n            case \"invalid_union\":\n                return \"தவறான உள்ளீடு\";\n            case \"invalid_element\":\n                return `${issue.origin} இல் தவறான மதிப்பு`;\n            default:\n                return `தவறான உள்ளீடு`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"ตัวอักษร\", verb: \"ควรมี\" },\n        file: { unit: \"ไบต์\", verb: \"ควรมี\" },\n        array: { unit: \"รายการ\", verb: \"ควรมี\" },\n        set: { unit: \"รายการ\", verb: \"ควรมี\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"ไม่ใช่ตัวเลข (NaN)\" : \"ตัวเลข\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"อาร์เรย์ (Array)\";\n                }\n                if (data === null) {\n                    return \"ไม่มีค่า (null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ข้อมูลที่ป้อน\",\n        email: \"ที่อยู่อีเมล\",\n        url: \"URL\",\n        emoji: \"อิโมจิ\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"วันที่เวลาแบบ ISO\",\n        date: \"วันที่แบบ ISO\",\n        time: \"เวลาแบบ ISO\",\n        duration: \"ช่วงเวลาแบบ ISO\",\n        ipv4: \"ที่อยู่ IPv4\",\n        ipv6: \"ที่อยู่ IPv6\",\n        cidrv4: \"ช่วง IP แบบ IPv4\",\n        cidrv6: \"ช่วง IP แบบ IPv6\",\n        base64: \"ข้อความแบบ Base64\",\n        base64url: \"ข้อความแบบ Base64 สำหรับ URL\",\n        json_string: \"ข้อความแบบ JSON\",\n        e164: \"เบอร์โทรศัพท์ระหว่างประเทศ (E.164)\",\n        jwt: \"โทเคน JWT\",\n        template_literal: \"ข้อมูลที่ป้อน\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `ประเภทข้อมูลไม่ถูกต้อง: ควรเป็น ${issue.expected} แต่ได้รับ ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `ค่าไม่ถูกต้อง: ควรเป็น ${util.stringifyPrimitive(issue.values[0])}`;\n                return `ตัวเลือกไม่ถูกต้อง: ควรเป็นหนึ่งใน ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"ไม่เกิน\" : \"น้อยกว่า\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `เกินกำหนด: ${issue.origin ?? \"ค่า\"} ควรมี${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"รายการ\"}`;\n                return `เกินกำหนด: ${issue.origin ?? \"ค่า\"} ควรมี${adj} ${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \"อย่างน้อย\" : \"มากกว่า\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `น้อยกว่ากำหนด: ${issue.origin} ควรมี${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `น้อยกว่ากำหนด: ${issue.origin} ควรมี${adj} ${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `รูปแบบไม่ถูกต้อง: ข้อความต้องขึ้นต้นด้วย \"${_issue.prefix}\"`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `รูปแบบไม่ถูกต้อง: ข้อความต้องลงท้ายด้วย \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `รูปแบบไม่ถูกต้อง: ข้อความต้องมี \"${_issue.includes}\" อยู่ในข้อความ`;\n                if (_issue.format === \"regex\")\n                    return `รูปแบบไม่ถูกต้อง: ต้องตรงกับรูปแบบที่กำหนด ${_issue.pattern}`;\n                return `รูปแบบไม่ถูกต้อง: ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `ตัวเลขไม่ถูกต้อง: ต้องเป็นจำนวนที่หารด้วย ${issue.divisor} ได้ลงตัว`;\n            case \"unrecognized_keys\":\n                return `พบคีย์ที่ไม่รู้จัก: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `คีย์ไม่ถูกต้องใน ${issue.origin}`;\n            case \"invalid_union\":\n                return \"ข้อมูลไม่ถูกต้อง: ไม่ตรงกับรูปแบบยูเนียนที่กำหนดไว้\";\n            case \"invalid_element\":\n                return `ข้อมูลไม่ถูกต้องใน ${issue.origin}`;\n            default:\n                return `ข้อมูลไม่ถูกต้อง`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nexport const parsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"number\": {\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n        case \"object\": {\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                return data.constructor.name;\n            }\n        }\n    }\n    return t;\n};\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"karakter\", verb: \"olmalı\" },\n        file: { unit: \"bayt\", verb: \"olmalı\" },\n        array: { unit: \"öğe\", verb: \"olmalı\" },\n        set: { unit: \"öğe\", verb: \"olmalı\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const Nouns = {\n        regex: \"girdi\",\n        email: \"e-posta adresi\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO tarih ve saat\",\n        date: \"ISO tarih\",\n        time: \"ISO saat\",\n        duration: \"ISO süre\",\n        ipv4: \"IPv4 adresi\",\n        ipv6: \"IPv6 adresi\",\n        cidrv4: \"IPv4 aralığı\",\n        cidrv6: \"IPv6 aralığı\",\n        base64: \"base64 ile şifrelenmiş metin\",\n        base64url: \"base64url ile şifrelenmiş metin\",\n        json_string: \"JSON dizesi\",\n        e164: \"E.164 sayısı\",\n        jwt: \"JWT\",\n        template_literal: \"Şablon dizesi\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Geçersiz değer: beklenen ${issue.expected}, alınan ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Geçersiz değer: beklenen ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Geçersiz seçenek: aşağıdakilerden biri olmalı: ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"öğe\"}`;\n                return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Geçersiz metin: \"${_issue.prefix}\" ile başlamalı`;\n                if (_issue.format === \"ends_with\")\n                    return `Geçersiz metin: \"${_issue.suffix}\" ile bitmeli`;\n                if (_issue.format === \"includes\")\n                    return `Geçersiz metin: \"${_issue.includes}\" içermeli`;\n                if (_issue.format === \"regex\")\n                    return `Geçersiz metin: ${_issue.pattern} desenine uymalı`;\n                return `Geçersiz ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Geçersiz sayı: ${issue.divisor} ile tam bölünebilmeli`;\n            case \"unrecognized_keys\":\n                return `Tanınmayan anahtar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} içinde geçersiz anahtar`;\n            case \"invalid_union\":\n                return \"Geçersiz değer\";\n            case \"invalid_element\":\n                return `${issue.origin} içinde geçersiz değer`;\n            default:\n                return `Geçersiz değer`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"символів\", verb: \"матиме\" },\n        file: { unit: \"байтів\", verb: \"матиме\" },\n        array: { unit: \"елементів\", verb: \"матиме\" },\n        set: { unit: \"елементів\", verb: \"матиме\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"число\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"масив\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"вхідні дані\",\n        email: \"адреса електронної пошти\",\n        url: \"URL\",\n        emoji: \"емодзі\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"дата та час ISO\",\n        date: \"дата ISO\",\n        time: \"час ISO\",\n        duration: \"тривалість ISO\",\n        ipv4: \"адреса IPv4\",\n        ipv6: \"адреса IPv6\",\n        cidrv4: \"діапазон IPv4\",\n        cidrv6: \"діапазон IPv6\",\n        base64: \"рядок у кодуванні base64\",\n        base64url: \"рядок у кодуванні base64url\",\n        json_string: \"рядок JSON\",\n        e164: \"номер E.164\",\n        jwt: \"JWT\",\n        template_literal: \"вхідні дані\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Неправильні вхідні дані: очікується ${issue.expected}, отримано ${parsedType(issue.input)}`;\n            // return `Неправильні вхідні дані: очікується ${issue.expected}, отримано ${util.getParsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Неправильні вхідні дані: очікується ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Неправильна опція: очікується одне з ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Занадто велике: очікується, що ${issue.origin ?? \"значення\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"елементів\"}`;\n                return `Занадто велике: очікується, що ${issue.origin ?? \"значення\"} буде ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Занадто мале: очікується, що ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Занадто мале: очікується, що ${issue.origin} буде ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Неправильний рядок: повинен починатися з \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Неправильний рядок: повинен закінчуватися на \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Неправильний рядок: повинен містити \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Неправильний рядок: повинен відповідати шаблону ${_issue.pattern}`;\n                return `Неправильний ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `Неправильне число: повинно бути кратним ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Нерозпізнаний ключ${issue.keys.length > 1 ? \"і\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Неправильний ключ у ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Неправильні вхідні дані\";\n            case \"invalid_element\":\n                return `Неправильне значення у ${issue.origin}`;\n            default:\n                return `Неправильні вхідні дані`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"حروف\", verb: \"ہونا\" },\n        file: { unit: \"بائٹس\", verb: \"ہونا\" },\n        array: { unit: \"آئٹمز\", verb: \"ہونا\" },\n        set: { unit: \"آئٹمز\", verb: \"ہونا\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"نمبر\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"آرے\";\n                }\n                if (data === null) {\n                    return \"نل\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"ان پٹ\",\n        email: \"ای میل ایڈریس\",\n        url: \"یو آر ایل\",\n        emoji: \"ایموجی\",\n        uuid: \"یو یو آئی ڈی\",\n        uuidv4: \"یو یو آئی ڈی وی 4\",\n        uuidv6: \"یو یو آئی ڈی وی 6\",\n        nanoid: \"نینو آئی ڈی\",\n        guid: \"جی یو آئی ڈی\",\n        cuid: \"سی یو آئی ڈی\",\n        cuid2: \"سی یو آئی ڈی 2\",\n        ulid: \"یو ایل آئی ڈی\",\n        xid: \"ایکس آئی ڈی\",\n        ksuid: \"کے ایس یو آئی ڈی\",\n        datetime: \"آئی ایس او ڈیٹ ٹائم\",\n        date: \"آئی ایس او تاریخ\",\n        time: \"آئی ایس او وقت\",\n        duration: \"آئی ایس او مدت\",\n        ipv4: \"آئی پی وی 4 ایڈریس\",\n        ipv6: \"آئی پی وی 6 ایڈریس\",\n        cidrv4: \"آئی پی وی 4 رینج\",\n        cidrv6: \"آئی پی وی 6 رینج\",\n        base64: \"بیس 64 ان کوڈڈ سٹرنگ\",\n        base64url: \"بیس 64 یو آر ایل ان کوڈڈ سٹرنگ\",\n        json_string: \"جے ایس او این سٹرنگ\",\n        e164: \"ای 164 نمبر\",\n        jwt: \"جے ڈبلیو ٹی\",\n        template_literal: \"ان پٹ\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `غلط ان پٹ: ${issue.expected} متوقع تھا، ${parsedType(issue.input)} موصول ہوا`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `غلط ان پٹ: ${util.stringifyPrimitive(issue.values[0])} متوقع تھا`;\n                return `غلط آپشن: ${util.joinValues(issue.values, \"|\")} میں سے ایک متوقع تھا`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `بہت بڑا: ${issue.origin ?? \"ویلیو\"} کے ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"عناصر\"} ہونے متوقع تھے`;\n                return `بہت بڑا: ${issue.origin ?? \"ویلیو\"} کا ${adj}${issue.maximum.toString()} ہونا متوقع تھا`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `بہت چھوٹا: ${issue.origin} کے ${adj}${issue.minimum.toString()} ${sizing.unit} ہونے متوقع تھے`;\n                }\n                return `بہت چھوٹا: ${issue.origin} کا ${adj}${issue.minimum.toString()} ہونا متوقع تھا`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `غلط سٹرنگ: \"${_issue.prefix}\" سے شروع ہونا چاہیے`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `غلط سٹرنگ: \"${_issue.suffix}\" پر ختم ہونا چاہیے`;\n                if (_issue.format === \"includes\")\n                    return `غلط سٹرنگ: \"${_issue.includes}\" شامل ہونا چاہیے`;\n                if (_issue.format === \"regex\")\n                    return `غلط سٹرنگ: پیٹرن ${_issue.pattern} سے میچ ہونا چاہیے`;\n                return `غلط ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `غلط نمبر: ${issue.divisor} کا مضاعف ہونا چاہیے`;\n            case \"unrecognized_keys\":\n                return `غیر تسلیم شدہ کی${issue.keys.length > 1 ? \"ز\" : \"\"}: ${util.joinValues(issue.keys, \"، \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} میں غلط کی`;\n            case \"invalid_union\":\n                return \"غلط ان پٹ\";\n            case \"invalid_element\":\n                return `${issue.origin} میں غلط ویلیو`;\n            default:\n                return `غلط ان پٹ`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"ký tự\", verb: \"có\" },\n        file: { unit: \"byte\", verb: \"có\" },\n        array: { unit: \"phần tử\", verb: \"có\" },\n        set: { unit: \"phần tử\", verb: \"có\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"số\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"mảng\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"đầu vào\",\n        email: \"địa chỉ email\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ngày giờ ISO\",\n        date: \"ngày ISO\",\n        time: \"giờ ISO\",\n        duration: \"khoảng thời gian ISO\",\n        ipv4: \"địa chỉ IPv4\",\n        ipv6: \"địa chỉ IPv6\",\n        cidrv4: \"dải IPv4\",\n        cidrv6: \"dải IPv6\",\n        base64: \"chuỗi mã hóa base64\",\n        base64url: \"chuỗi mã hóa base64url\",\n        json_string: \"chuỗi JSON\",\n        e164: \"số E.164\",\n        jwt: \"JWT\",\n        template_literal: \"đầu vào\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `Đầu vào không hợp lệ: mong đợi ${issue.expected}, nhận được ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `Đầu vào không hợp lệ: mong đợi ${util.stringifyPrimitive(issue.values[0])}`;\n                return `Tùy chọn không hợp lệ: mong đợi một trong các giá trị ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `Quá lớn: mong đợi ${issue.origin ?? \"giá trị\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"phần tử\"}`;\n                return `Quá lớn: mong đợi ${issue.origin ?? \"giá trị\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `Quá nhỏ: mong đợi ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `Quá nhỏ: mong đợi ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `Chuỗi không hợp lệ: phải bắt đầu bằng \"${_issue.prefix}\"`;\n                if (_issue.format === \"ends_with\")\n                    return `Chuỗi không hợp lệ: phải kết thúc bằng \"${_issue.suffix}\"`;\n                if (_issue.format === \"includes\")\n                    return `Chuỗi không hợp lệ: phải bao gồm \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `Chuỗi không hợp lệ: phải khớp với mẫu ${_issue.pattern}`;\n                return `${Nouns[_issue.format] ?? issue.format} không hợp lệ`;\n            }\n            case \"not_multiple_of\":\n                return `Số không hợp lệ: phải là bội số của ${issue.divisor}`;\n            case \"unrecognized_keys\":\n                return `Khóa không được nhận dạng: ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `Khóa không hợp lệ trong ${issue.origin}`;\n            case \"invalid_union\":\n                return \"Đầu vào không hợp lệ\";\n            case \"invalid_element\":\n                return `Giá trị không hợp lệ trong ${issue.origin}`;\n            default:\n                return `Đầu vào không hợp lệ`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"字符\", verb: \"包含\" },\n        file: { unit: \"字节\", verb: \"包含\" },\n        array: { unit: \"项\", verb: \"包含\" },\n        set: { unit: \"项\", verb: \"包含\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"非数字(NaN)\" : \"数字\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"数组\";\n                }\n                if (data === null) {\n                    return \"空值(null)\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"输入\",\n        email: \"电子邮件\",\n        url: \"URL\",\n        emoji: \"表情符号\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO日期时间\",\n        date: \"ISO日期\",\n        time: \"ISO时间\",\n        duration: \"ISO时长\",\n        ipv4: \"IPv4地址\",\n        ipv6: \"IPv6地址\",\n        cidrv4: \"IPv4网段\",\n        cidrv6: \"IPv6网段\",\n        base64: \"base64编码字符串\",\n        base64url: \"base64url编码字符串\",\n        json_string: \"JSON字符串\",\n        e164: \"E.164号码\",\n        jwt: \"JWT\",\n        template_literal: \"输入\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `无效输入：期望 ${issue.expected}，实际接收 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `无效输入：期望 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `无效选项：期望以下之一 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `数值过大：期望 ${issue.origin ?? \"值\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"个元素\"}`;\n                return `数值过大：期望 ${issue.origin ?? \"值\"} ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `数值过小：期望 ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `数值过小：期望 ${issue.origin} ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\")\n                    return `无效字符串：必须以 \"${_issue.prefix}\" 开头`;\n                if (_issue.format === \"ends_with\")\n                    return `无效字符串：必须以 \"${_issue.suffix}\" 结尾`;\n                if (_issue.format === \"includes\")\n                    return `无效字符串：必须包含 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `无效字符串：必须满足正则表达式 ${_issue.pattern}`;\n                return `无效${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `无效数字：必须是 ${issue.divisor} 的倍数`;\n            case \"unrecognized_keys\":\n                return `出现未知的键(key): ${util.joinValues(issue.keys, \", \")}`;\n            case \"invalid_key\":\n                return `${issue.origin} 中的键(key)无效`;\n            case \"invalid_union\":\n                return \"无效输入\";\n            case \"invalid_element\":\n                return `${issue.origin} 中包含无效值(value)`;\n            default:\n                return `无效输入`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "import * as util from \"../core/util.js\";\nconst error = () => {\n    const Sizable = {\n        string: { unit: \"字元\", verb: \"擁有\" },\n        file: { unit: \"位元組\", verb: \"擁有\" },\n        array: { unit: \"項目\", verb: \"擁有\" },\n        set: { unit: \"項目\", verb: \"擁有\" },\n    };\n    function getSizing(origin) {\n        return Sizable[origin] ?? null;\n    }\n    const parsedType = (data) => {\n        const t = typeof data;\n        switch (t) {\n            case \"number\": {\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\n            }\n            case \"object\": {\n                if (Array.isArray(data)) {\n                    return \"array\";\n                }\n                if (data === null) {\n                    return \"null\";\n                }\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n                    return data.constructor.name;\n                }\n            }\n        }\n        return t;\n    };\n    const Nouns = {\n        regex: \"輸入\",\n        email: \"郵件地址\",\n        url: \"URL\",\n        emoji: \"emoji\",\n        uuid: \"UUID\",\n        uuidv4: \"UUIDv4\",\n        uuidv6: \"UUIDv6\",\n        nanoid: \"nanoid\",\n        guid: \"GUID\",\n        cuid: \"cuid\",\n        cuid2: \"cuid2\",\n        ulid: \"ULID\",\n        xid: \"XID\",\n        ksuid: \"KSUID\",\n        datetime: \"ISO 日期時間\",\n        date: \"ISO 日期\",\n        time: \"ISO 時間\",\n        duration: \"ISO 期間\",\n        ipv4: \"IPv4 位址\",\n        ipv6: \"IPv6 位址\",\n        cidrv4: \"IPv4 範圍\",\n        cidrv6: \"IPv6 範圍\",\n        base64: \"base64 編碼字串\",\n        base64url: \"base64url 編碼字串\",\n        json_string: \"JSON 字串\",\n        e164: \"E.164 數值\",\n        jwt: \"JWT\",\n        template_literal: \"輸入\",\n    };\n    return (issue) => {\n        switch (issue.code) {\n            case \"invalid_type\":\n                return `無效的輸入值：預期為 ${issue.expected}，但收到 ${parsedType(issue.input)}`;\n            case \"invalid_value\":\n                if (issue.values.length === 1)\n                    return `無效的輸入值：預期為 ${util.stringifyPrimitive(issue.values[0])}`;\n                return `無效的選項：預期為以下其中之一 ${util.joinValues(issue.values, \"|\")}`;\n            case \"too_big\": {\n                const adj = issue.inclusive ? \"<=\" : \"<\";\n                const sizing = getSizing(issue.origin);\n                if (sizing)\n                    return `數值過大：預期 ${issue.origin ?? \"值\"} 應為 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"個元素\"}`;\n                return `數值過大：預期 ${issue.origin ?? \"值\"} 應為 ${adj}${issue.maximum.toString()}`;\n            }\n            case \"too_small\": {\n                const adj = issue.inclusive ? \">=\" : \">\";\n                const sizing = getSizing(issue.origin);\n                if (sizing) {\n                    return `數值過小：預期 ${issue.origin} 應為 ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n                }\n                return `數值過小：預期 ${issue.origin} 應為 ${adj}${issue.minimum.toString()}`;\n            }\n            case \"invalid_format\": {\n                const _issue = issue;\n                if (_issue.format === \"starts_with\") {\n                    return `無效的字串：必須以 \"${_issue.prefix}\" 開頭`;\n                }\n                if (_issue.format === \"ends_with\")\n                    return `無效的字串：必須以 \"${_issue.suffix}\" 結尾`;\n                if (_issue.format === \"includes\")\n                    return `無效的字串：必須包含 \"${_issue.includes}\"`;\n                if (_issue.format === \"regex\")\n                    return `無效的字串：必須符合格式 ${_issue.pattern}`;\n                return `無效的 ${Nouns[_issue.format] ?? issue.format}`;\n            }\n            case \"not_multiple_of\":\n                return `無效的數字：必須為 ${issue.divisor} 的倍數`;\n            case \"unrecognized_keys\":\n                return `無法識別的鍵值${issue.keys.length > 1 ? \"們\" : \"\"}：${util.joinValues(issue.keys, \"、\")}`;\n            case \"invalid_key\":\n                return `${issue.origin} 中有無效的鍵值`;\n            case \"invalid_union\":\n                return \"無效的輸入值\";\n            case \"invalid_element\":\n                return `${issue.origin} 中有無效的值`;\n            default:\n                return `無效的輸入值`;\n        }\n    };\n};\nexport default function () {\n    return {\n        localeError: error(),\n    };\n}\n", "export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new WeakMap();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    remove(schema) {\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            return { ...pm, ...this._map.get(schema) };\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n", "import * as checks from \"./checks.js\";\nimport * as schemas from \"./schemas.js\";\nimport * as util from \"./util.js\";\nexport function _string(Class, params) {\n    return new Class({\n        type: \"string\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedString(Class, params) {\n    return new Class({\n        type: \"string\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _email(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"email\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _guid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"guid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v4\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v6\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv7(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v7\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _emoji(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"emoji\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nanoid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"nanoid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid2(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid2\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ulid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ulid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _xid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"xid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ksuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ksuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _e164(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"e164\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _jwt(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"jwt\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport const TimePrecision = {\n    Any: null,\n    Minute: -1,\n    Second: 0,\n    Millisecond: 3,\n    Microsecond: 6,\n};\nexport function _isoDateTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"datetime\",\n        check: \"string_format\",\n        offset: false,\n        local: false,\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDate(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"date\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"time\",\n        check: \"string_format\",\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDuration(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"duration\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _number(Class, params) {\n    return new Class({\n        type: \"number\",\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedNumber(Class, params) {\n    return new Class({\n        type: \"number\",\n        coerce: true,\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"safeint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float64(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"int32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"uint32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _boolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBoolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _bigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"int64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"uint64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _symbol(Class, params) {\n    return new Class({\n        type: \"symbol\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _undefined(Class, params) {\n    return new Class({\n        type: \"undefined\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _null(Class, params) {\n    return new Class({\n        type: \"null\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _any(Class) {\n    return new Class({\n        type: \"any\",\n    });\n}\nexport function _unknown(Class) {\n    return new Class({\n        type: \"unknown\",\n    });\n}\nexport function _never(Class, params) {\n    return new Class({\n        type: \"never\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _void(Class, params) {\n    return new Class({\n        type: \"void\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _date(Class, params) {\n    return new Class({\n        type: \"date\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedDate(Class, params) {\n    return new Class({\n        type: \"date\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nan(Class, params) {\n    return new Class({\n        type: \"nan\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lt(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _lte(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.lte()` instead. */\n_lte as _max, };\nexport function _gt(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _gte(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.gte()` instead. */\n_gte as _min, };\nexport function _positive(params) {\n    return _gt(0, params);\n}\n// negative\nexport function _negative(params) {\n    return _lt(0, params);\n}\n// nonpositive\nexport function _nonpositive(params) {\n    return _lte(0, params);\n}\n// nonnegative\nexport function _nonnegative(params) {\n    return _gte(0, params);\n}\nexport function _multipleOf(value, params) {\n    return new checks.$ZodCheckMultipleOf({\n        check: \"multiple_of\",\n        ...util.normalizeParams(params),\n        value,\n    });\n}\nexport function _maxSize(maximum, params) {\n    return new checks.$ZodCheckMaxSize({\n        check: \"max_size\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n}\nexport function _minSize(minimum, params) {\n    return new checks.$ZodCheckMinSize({\n        check: \"min_size\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _size(size, params) {\n    return new checks.$ZodCheckSizeEquals({\n        check: \"size_equals\",\n        ...util.normalizeParams(params),\n        size,\n    });\n}\nexport function _maxLength(maximum, params) {\n    const ch = new checks.$ZodCheckMaxLength({\n        check: \"max_length\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n    return ch;\n}\nexport function _minLength(minimum, params) {\n    return new checks.$ZodCheckMinLength({\n        check: \"min_length\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _length(length, params) {\n    return new checks.$ZodCheckLengthEquals({\n        check: \"length_equals\",\n        ...util.normalizeParams(params),\n        length,\n    });\n}\nexport function _regex(pattern, params) {\n    return new checks.$ZodCheckRegex({\n        check: \"string_format\",\n        format: \"regex\",\n        ...util.normalizeParams(params),\n        pattern,\n    });\n}\nexport function _lowercase(params) {\n    return new checks.$ZodCheckLowerCase({\n        check: \"string_format\",\n        format: \"lowercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uppercase(params) {\n    return new checks.$ZodCheckUpperCase({\n        check: \"string_format\",\n        format: \"uppercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _includes(includes, params) {\n    return new checks.$ZodCheckIncludes({\n        check: \"string_format\",\n        format: \"includes\",\n        ...util.normalizeParams(params),\n        includes,\n    });\n}\nexport function _startsWith(prefix, params) {\n    return new checks.$ZodCheckStartsWith({\n        check: \"string_format\",\n        format: \"starts_with\",\n        ...util.normalizeParams(params),\n        prefix,\n    });\n}\nexport function _endsWith(suffix, params) {\n    return new checks.$ZodCheckEndsWith({\n        check: \"string_format\",\n        format: \"ends_with\",\n        ...util.normalizeParams(params),\n        suffix,\n    });\n}\nexport function _property(property, schema, params) {\n    return new checks.$ZodCheckProperty({\n        check: \"property\",\n        property,\n        schema,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _mime(types, params) {\n    return new checks.$ZodCheckMimeType({\n        check: \"mime_type\",\n        mime: types,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _overwrite(tx) {\n    return new checks.$ZodCheckOverwrite({\n        check: \"overwrite\",\n        tx,\n    });\n}\n// normalize\nexport function _normalize(form) {\n    return _overwrite((input) => input.normalize(form));\n}\n// trim\nexport function _trim() {\n    return _overwrite((input) => input.trim());\n}\n// toLowerCase\nexport function _toLowerCase() {\n    return _overwrite((input) => input.toLowerCase());\n}\n// toUpperCase\nexport function _toUpperCase() {\n    return _overwrite((input) => input.toUpperCase());\n}\nexport function _array(Class, element, params) {\n    return new Class({\n        type: \"array\",\n        element,\n        // get element() {\n        //   return element;\n        // },\n        ...util.normalizeParams(params),\n    });\n}\nexport function _union(Class, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _discriminatedUnion(Class, discriminator, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _intersection(Class, left, right) {\n    return new Class({\n        type: \"intersection\",\n        left,\n        right,\n    });\n}\n// export function _tuple(\n//   Class: util.SchemaClass<schemas.$ZodTuple>,\n//   items: [],\n//   params?: string | $ZodTupleParams\n// ): schemas.$ZodTuple<[], null>;\nexport function _tuple(Class, items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof schemas.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new Class({\n        type: \"tuple\",\n        items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _record(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"record\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _map(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"map\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _set(Class, valueType, params) {\n    return new Class({\n        type: \"set\",\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _enum(Class, values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    // if (Array.isArray(values)) {\n    //   for (const value of values) {\n    //     entries[value] = value;\n    //   }\n    // } else {\n    //   Object.assign(entries, values);\n    // }\n    // const entries: util.EnumLike = {};\n    // for (const val of values) {\n    //   entries[val] = val;\n    // }\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function _nativeEnum(Class, entries, params) {\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _literal(Class, value, params) {\n    return new Class({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _file(Class, params) {\n    return new Class({\n        type: \"file\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _transform(Class, fn) {\n    return new Class({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport function _optional(Class, innerType) {\n    return new Class({\n        type: \"optional\",\n        innerType,\n    });\n}\nexport function _nullable(Class, innerType) {\n    return new Class({\n        type: \"nullable\",\n        innerType,\n    });\n}\nexport function _default(Class, innerType, defaultValue) {\n    return new Class({\n        type: \"default\",\n        innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport function _nonoptional(Class, innerType, params) {\n    return new Class({\n        type: \"nonoptional\",\n        innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _success(Class, innerType) {\n    return new Class({\n        type: \"success\",\n        innerType,\n    });\n}\nexport function _catch(Class, innerType, catchValue) {\n    return new Class({\n        type: \"catch\",\n        innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport function _pipe(Class, in_, out) {\n    return new Class({\n        type: \"pipe\",\n        in: in_,\n        out,\n    });\n}\nexport function _readonly(Class, innerType) {\n    return new Class({\n        type: \"readonly\",\n        innerType,\n    });\n}\nexport function _templateLiteral(Class, parts, params) {\n    return new Class({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lazy(Class, getter) {\n    return new Class({\n        type: \"lazy\",\n        getter,\n    });\n}\nexport function _promise(Class, innerType) {\n    return new Class({\n        type: \"promise\",\n        innerType,\n    });\n}\nexport function _custom(Class, fn, _params) {\n    const norm = util.normalizeParams(_params);\n    norm.abort ?? (norm.abort = true); // default to abort:false\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...norm,\n    });\n    return schema;\n}\n// export function _refine<T>(\n//   Class: util.SchemaClass<schemas.$ZodCustom>,\n//   fn: (arg: NoInfer<T>) => util.MaybeAsync<unknown>,\n//   _params: string | $ZodCustomParams = {}\n// ): checks.$ZodCheck<T> {\n//   return _custom(Class, fn, _params);\n// }\n// same as _custom but defaults to abort:false\nexport function _refine(Class, fn, _params) {\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...util.normalizeParams(_params),\n    });\n    return schema;\n}\nexport function _stringbool(Classes, _params) {\n    const { case: _case, error, truthy, falsy } = util.normalizeParams(_params);\n    let truthyArray = truthy ?? [\"true\", \"1\", \"yes\", \"on\", \"y\", \"enabled\"];\n    let falsyArray = falsy ?? [\"false\", \"0\", \"no\", \"off\", \"n\", \"disabled\"];\n    if (_case !== \"sensitive\") {\n        truthyArray = truthyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n        falsyArray = falsyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n    }\n    const truthySet = new Set(truthyArray);\n    const falsySet = new Set(falsyArray);\n    const _Pipe = Classes.Pipe ?? schemas.$ZodPipe;\n    const _Boolean = Classes.Boolean ?? schemas.$ZodBoolean;\n    const _String = Classes.String ?? schemas.$ZodString;\n    const _Transform = Classes.Transform ?? schemas.$ZodTransform;\n    const tx = new _Transform({\n        type: \"transform\",\n        transform: (input, payload) => {\n            let data = input;\n            if (_case !== \"sensitive\")\n                data = data.toLowerCase();\n            if (truthySet.has(data)) {\n                return true;\n            }\n            else if (falsySet.has(data)) {\n                return false;\n            }\n            else {\n                payload.issues.push({\n                    code: \"invalid_value\",\n                    expected: \"stringbool\",\n                    values: [...truthySet, ...falsySet],\n                    input: payload.value,\n                    inst: tx,\n                });\n                return {};\n            }\n        },\n        error,\n    });\n    const innerPipe = new _Pipe({\n        type: \"pipe\",\n        in: new _String({ type: \"string\", error }),\n        out: tx,\n        error,\n    });\n    const outerPipe = new _Pipe({\n        type: \"pipe\",\n        in: innerPipe,\n        out: new _Boolean({\n            type: \"boolean\",\n            error,\n        }),\n        error,\n    });\n    return outerPipe;\n}\n", "import { _array, _tuple, _unknown } from \"./api.js\";\nimport { parse, parseAsync } from \"./parse.js\";\nimport * as schemas from \"./schemas.js\";\nimport { $ZodTuple } from \"./schemas.js\";\nexport class $ZodFunction {\n    constructor(def) {\n        this._def = def;\n        this.def = def;\n    }\n    implement(func) {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        const impl = ((...args) => {\n            const parsedArgs = this._def.input ? parse(this._def.input, args, undefined, { callee: impl }) : args;\n            if (!Array.isArray(parsedArgs)) {\n                throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n            }\n            const output = func(...parsedArgs);\n            return this._def.output ? parse(this._def.output, output, undefined, { callee: impl }) : output;\n        });\n        return impl;\n    }\n    implementAsync(func) {\n        if (typeof func !== \"function\") {\n            throw new Error(\"implement() must be called with a function\");\n        }\n        const impl = (async (...args) => {\n            const parsedArgs = this._def.input ? await parseAsync(this._def.input, args, undefined, { callee: impl }) : args;\n            if (!Array.isArray(parsedArgs)) {\n                throw new Error(\"Invalid arguments schema: not an array or tuple schema.\");\n            }\n            const output = await func(...parsedArgs);\n            return this._def.output ? parseAsync(this._def.output, output, undefined, { callee: impl }) : output;\n        });\n        return impl;\n    }\n    input(...args) {\n        const F = this.constructor;\n        if (Array.isArray(args[0])) {\n            return new F({\n                type: \"function\",\n                input: new $ZodTuple({\n                    type: \"tuple\",\n                    items: args[0],\n                    rest: args[1],\n                }),\n                output: this._def.output,\n            });\n        }\n        return new F({\n            type: \"function\",\n            input: args[0],\n            output: this._def.output,\n        });\n    }\n    output(output) {\n        const F = this.constructor;\n        return new F({\n            type: \"function\",\n            input: this._def.input,\n            output,\n        });\n    }\n}\nfunction _function(params) {\n    return new $ZodFunction({\n        type: \"function\",\n        input: Array.isArray(params?.input)\n            ? _tuple(schemas.$ZodTuple, params?.input)\n            : (params?.input ?? _array(schemas.$ZodArray, _unknown(schemas.$ZodUnknown))),\n        output: params?.output ?? _unknown(schemas.$ZodUnknown),\n    });\n}\nexport { _function as function };\n", "import { $ZodRegistry, globalRegistry } from \"./registries.js\";\nimport { getEnumValues } from \"./util.js\";\nexport class JSONSchemaGenerator {\n    constructor(params) {\n        this.counter = 0;\n        this.metadataRegistry = params?.metadata ?? globalRegistry;\n        this.target = params?.target ?? \"draft-2020-12\";\n        this.unrepresentable = params?.unrepresentable ?? \"throw\";\n        this.override = params?.override ?? (() => { });\n        this.io = params?.io ?? \"output\";\n        this.seen = new Map();\n    }\n    process(schema, _params = { path: [], schemaPath: [] }) {\n        var _a;\n        const def = schema._zod.def;\n        const formatMap = {\n            guid: \"uuid\",\n            url: \"uri\",\n            datetime: \"date-time\",\n            json_string: \"json-string\",\n            regex: \"\", // do not set\n        };\n        // check for schema in seens\n        const seen = this.seen.get(schema);\n        if (seen) {\n            seen.count++;\n            // check if cycle\n            const isCycle = _params.schemaPath.includes(schema);\n            if (isCycle) {\n                seen.cycle = _params.path;\n            }\n            return seen.schema;\n        }\n        // initialize\n        const result = { schema: {}, count: 1, cycle: undefined };\n        this.seen.set(schema, result);\n        // custom method overrides default behavior\n        const overrideSchema = schema._zod.toJSONSchema?.();\n        if (overrideSchema) {\n            result.schema = overrideSchema;\n        }\n        else {\n            const params = {\n                ..._params,\n                schemaPath: [..._params.schemaPath, schema],\n                path: _params.path,\n            };\n            const parent = schema._zod.parent;\n            if (parent) {\n                // schema was cloned from another schema\n                result.ref = parent;\n                this.process(parent, params);\n                this.seen.get(parent).isParent = true;\n            }\n            else {\n                const _json = result.schema;\n                switch (def.type) {\n                    case \"string\": {\n                        const json = _json;\n                        json.type = \"string\";\n                        const { minimum, maximum, format, patterns, contentEncoding } = schema._zod\n                            .bag;\n                        if (typeof minimum === \"number\")\n                            json.minLength = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxLength = maximum;\n                        // custom pattern overrides format\n                        if (format) {\n                            json.format = formatMap[format] ?? format;\n                            if (json.format === \"\")\n                                delete json.format; // empty format is not valid\n                        }\n                        if (contentEncoding)\n                            json.contentEncoding = contentEncoding;\n                        if (patterns && patterns.size > 0) {\n                            const regexes = [...patterns];\n                            if (regexes.length === 1)\n                                json.pattern = regexes[0].source;\n                            else if (regexes.length > 1) {\n                                result.schema.allOf = [\n                                    ...regexes.map((regex) => ({\n                                        ...(this.target === \"draft-7\" ? { type: \"string\" } : {}),\n                                        pattern: regex.source,\n                                    })),\n                                ];\n                            }\n                        }\n                        break;\n                    }\n                    case \"number\": {\n                        const json = _json;\n                        const { minimum, maximum, format, multipleOf, exclusiveMaximum, exclusiveMinimum } = schema._zod.bag;\n                        if (typeof format === \"string\" && format.includes(\"int\"))\n                            json.type = \"integer\";\n                        else\n                            json.type = \"number\";\n                        if (typeof exclusiveMinimum === \"number\")\n                            json.exclusiveMinimum = exclusiveMinimum;\n                        if (typeof minimum === \"number\") {\n                            json.minimum = minimum;\n                            if (typeof exclusiveMinimum === \"number\") {\n                                if (exclusiveMinimum >= minimum)\n                                    delete json.minimum;\n                                else\n                                    delete json.exclusiveMinimum;\n                            }\n                        }\n                        if (typeof exclusiveMaximum === \"number\")\n                            json.exclusiveMaximum = exclusiveMaximum;\n                        if (typeof maximum === \"number\") {\n                            json.maximum = maximum;\n                            if (typeof exclusiveMaximum === \"number\") {\n                                if (exclusiveMaximum <= maximum)\n                                    delete json.maximum;\n                                else\n                                    delete json.exclusiveMaximum;\n                            }\n                        }\n                        if (typeof multipleOf === \"number\")\n                            json.multipleOf = multipleOf;\n                        break;\n                    }\n                    case \"boolean\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"bigint\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"BigInt cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"symbol\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Symbols cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"undefined\": {\n                        const json = _json;\n                        json.type = \"null\";\n                        break;\n                    }\n                    case \"null\": {\n                        _json.type = \"null\";\n                        break;\n                    }\n                    case \"any\": {\n                        break;\n                    }\n                    case \"unknown\": {\n                        break;\n                    }\n                    case \"never\": {\n                        _json.not = {};\n                        break;\n                    }\n                    case \"void\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Void cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"date\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Date cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"array\": {\n                        const json = _json;\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        json.type = \"array\";\n                        json.items = this.process(def.element, { ...params, path: [...params.path, \"items\"] });\n                        break;\n                    }\n                    case \"object\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        json.properties = {};\n                        const shape = def.shape; // params.shapeCache.get(schema)!;\n                        for (const key in shape) {\n                            json.properties[key] = this.process(shape[key], {\n                                ...params,\n                                path: [...params.path, \"properties\", key],\n                            });\n                        }\n                        // required keys\n                        const allKeys = new Set(Object.keys(shape));\n                        // const optionalKeys = new Set(def.optional);\n                        const requiredKeys = new Set([...allKeys].filter((key) => {\n                            const v = def.shape[key]._zod;\n                            if (this.io === \"input\") {\n                                return v.optin === undefined;\n                            }\n                            else {\n                                return v.optout === undefined;\n                            }\n                        }));\n                        if (requiredKeys.size > 0) {\n                            json.required = Array.from(requiredKeys);\n                        }\n                        // catchall\n                        if (def.catchall?._zod.def.type === \"never\") {\n                            // strict\n                            json.additionalProperties = false;\n                        }\n                        else if (!def.catchall) {\n                            // regular\n                            if (this.io === \"output\")\n                                json.additionalProperties = false;\n                        }\n                        else if (def.catchall) {\n                            json.additionalProperties = this.process(def.catchall, {\n                                ...params,\n                                path: [...params.path, \"additionalProperties\"],\n                            });\n                        }\n                        break;\n                    }\n                    case \"union\": {\n                        const json = _json;\n                        json.anyOf = def.options.map((x, i) => this.process(x, {\n                            ...params,\n                            path: [...params.path, \"anyOf\", i],\n                        }));\n                        break;\n                    }\n                    case \"intersection\": {\n                        const json = _json;\n                        const a = this.process(def.left, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 0],\n                        });\n                        const b = this.process(def.right, {\n                            ...params,\n                            path: [...params.path, \"allOf\", 1],\n                        });\n                        const isSimpleIntersection = (val) => \"allOf\" in val && Object.keys(val).length === 1;\n                        const allOf = [\n                            ...(isSimpleIntersection(a) ? a.allOf : [a]),\n                            ...(isSimpleIntersection(b) ? b.allOf : [b]),\n                        ];\n                        json.allOf = allOf;\n                        break;\n                    }\n                    case \"tuple\": {\n                        const json = _json;\n                        json.type = \"array\";\n                        const prefixItems = def.items.map((x, i) => this.process(x, { ...params, path: [...params.path, \"prefixItems\", i] }));\n                        if (this.target === \"draft-2020-12\") {\n                            json.prefixItems = prefixItems;\n                        }\n                        else {\n                            json.items = prefixItems;\n                        }\n                        if (def.rest) {\n                            const rest = this.process(def.rest, {\n                                ...params,\n                                path: [...params.path, \"items\"],\n                            });\n                            if (this.target === \"draft-2020-12\") {\n                                json.items = rest;\n                            }\n                            else {\n                                json.additionalItems = rest;\n                            }\n                        }\n                        // additionalItems\n                        if (def.rest) {\n                            json.items = this.process(def.rest, {\n                                ...params,\n                                path: [...params.path, \"items\"],\n                            });\n                        }\n                        // length\n                        const { minimum, maximum } = schema._zod.bag;\n                        if (typeof minimum === \"number\")\n                            json.minItems = minimum;\n                        if (typeof maximum === \"number\")\n                            json.maxItems = maximum;\n                        break;\n                    }\n                    case \"record\": {\n                        const json = _json;\n                        json.type = \"object\";\n                        json.propertyNames = this.process(def.keyType, { ...params, path: [...params.path, \"propertyNames\"] });\n                        json.additionalProperties = this.process(def.valueType, {\n                            ...params,\n                            path: [...params.path, \"additionalProperties\"],\n                        });\n                        break;\n                    }\n                    case \"map\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Map cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"set\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Set cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"enum\": {\n                        const json = _json;\n                        const values = getEnumValues(def.entries);\n                        // Number enums can have both string and number values\n                        if (values.every((v) => typeof v === \"number\"))\n                            json.type = \"number\";\n                        if (values.every((v) => typeof v === \"string\"))\n                            json.type = \"string\";\n                        json.enum = values;\n                        break;\n                    }\n                    case \"literal\": {\n                        const json = _json;\n                        const vals = [];\n                        for (const val of def.values) {\n                            if (val === undefined) {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"Literal `undefined` cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    // do not add to vals\n                                }\n                            }\n                            else if (typeof val === \"bigint\") {\n                                if (this.unrepresentable === \"throw\") {\n                                    throw new Error(\"BigInt literals cannot be represented in JSON Schema\");\n                                }\n                                else {\n                                    vals.push(Number(val));\n                                }\n                            }\n                            else {\n                                vals.push(val);\n                            }\n                        }\n                        if (vals.length === 0) {\n                            // do nothing (an undefined literal was stripped)\n                        }\n                        else if (vals.length === 1) {\n                            const val = vals[0];\n                            json.type = val === null ? \"null\" : typeof val;\n                            json.const = val;\n                        }\n                        else {\n                            if (vals.every((v) => typeof v === \"number\"))\n                                json.type = \"number\";\n                            if (vals.every((v) => typeof v === \"string\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => typeof v === \"boolean\"))\n                                json.type = \"string\";\n                            if (vals.every((v) => v === null))\n                                json.type = \"null\";\n                            json.enum = vals;\n                        }\n                        break;\n                    }\n                    case \"file\": {\n                        const json = _json;\n                        const file = {\n                            type: \"string\",\n                            format: \"binary\",\n                            contentEncoding: \"binary\",\n                        };\n                        const { minimum, maximum, mime } = schema._zod.bag;\n                        if (minimum !== undefined)\n                            file.minLength = minimum;\n                        if (maximum !== undefined)\n                            file.maxLength = maximum;\n                        if (mime) {\n                            if (mime.length === 1) {\n                                file.contentMediaType = mime[0];\n                                Object.assign(json, file);\n                            }\n                            else {\n                                json.anyOf = mime.map((m) => {\n                                    const mFile = { ...file, contentMediaType: m };\n                                    return mFile;\n                                });\n                            }\n                        }\n                        else {\n                            Object.assign(json, file);\n                        }\n                        // if (this.unrepresentable === \"throw\") {\n                        //   throw new Error(\"File cannot be represented in JSON Schema\");\n                        // }\n                        break;\n                    }\n                    case \"transform\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Transforms cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"nullable\": {\n                        const inner = this.process(def.innerType, params);\n                        _json.anyOf = [inner, { type: \"null\" }];\n                        break;\n                    }\n                    case \"nonoptional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"success\": {\n                        const json = _json;\n                        json.type = \"boolean\";\n                        break;\n                    }\n                    case \"default\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.default = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"prefault\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        if (this.io === \"input\")\n                            _json._prefault = JSON.parse(JSON.stringify(def.defaultValue));\n                        break;\n                    }\n                    case \"catch\": {\n                        // use conditionals\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        let catchValue;\n                        try {\n                            catchValue = def.catchValue(undefined);\n                        }\n                        catch {\n                            throw new Error(\"Dynamic catch values are not supported in JSON Schema\");\n                        }\n                        _json.default = catchValue;\n                        break;\n                    }\n                    case \"nan\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"NaN cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    case \"template_literal\": {\n                        const json = _json;\n                        const pattern = schema._zod.pattern;\n                        if (!pattern)\n                            throw new Error(\"Pattern not found in template literal\");\n                        json.type = \"string\";\n                        json.pattern = pattern.source;\n                        break;\n                    }\n                    case \"pipe\": {\n                        const innerType = this.io === \"input\" ? (def.in._zod.def.type === \"transform\" ? def.out : def.in) : def.out;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"readonly\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        _json.readOnly = true;\n                        break;\n                    }\n                    // passthrough types\n                    case \"promise\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"optional\": {\n                        this.process(def.innerType, params);\n                        result.ref = def.innerType;\n                        break;\n                    }\n                    case \"lazy\": {\n                        const innerType = schema._zod.innerType;\n                        this.process(innerType, params);\n                        result.ref = innerType;\n                        break;\n                    }\n                    case \"custom\": {\n                        if (this.unrepresentable === \"throw\") {\n                            throw new Error(\"Custom types cannot be represented in JSON Schema\");\n                        }\n                        break;\n                    }\n                    default: {\n                        def;\n                    }\n                }\n            }\n        }\n        // metadata\n        const meta = this.metadataRegistry.get(schema);\n        if (meta)\n            Object.assign(result.schema, meta);\n        if (this.io === \"input\" && isTransforming(schema)) {\n            // examples/defaults only apply to output type of pipe\n            delete result.schema.examples;\n            delete result.schema.default;\n        }\n        // set prefault as default\n        if (this.io === \"input\" && result.schema._prefault)\n            (_a = result.schema).default ?? (_a.default = result.schema._prefault);\n        delete result.schema._prefault;\n        // pulling fresh from this.seen in case it was overwritten\n        const _result = this.seen.get(schema);\n        return _result.schema;\n    }\n    emit(schema, _params) {\n        const params = {\n            cycles: _params?.cycles ?? \"ref\",\n            reused: _params?.reused ?? \"inline\",\n            // unrepresentable: _params?.unrepresentable ?? \"throw\",\n            // uri: _params?.uri ?? ((id) => `${id}`),\n            external: _params?.external ?? undefined,\n        };\n        // iterate over seen map;\n        const root = this.seen.get(schema);\n        if (!root)\n            throw new Error(\"Unprocessed schema. This is a bug in Zod.\");\n        // initialize result with root schema fields\n        // Object.assign(result, seen.cached);\n        const makeURI = (entry) => {\n            // comparing the seen objects because sometimes\n            // multiple schemas map to the same seen object.\n            // e.g. lazy\n            // external is configured\n            const defsSegment = this.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            if (params.external) {\n                const externalId = params.external.registry.get(entry[0])?.id; // ?? \"__shared\";// `__schema${this.counter++}`;\n                // check if schema is in the external registry\n                if (externalId)\n                    return { ref: params.external.uri(externalId) };\n                // otherwise, add to __shared\n                const id = entry[1].defId ?? entry[1].schema.id ?? `schema${this.counter++}`;\n                entry[1].defId = id;\n                return { defId: id, ref: `${params.external.uri(\"__shared\")}#/${defsSegment}/${id}` };\n            }\n            if (entry[1] === root) {\n                return { ref: \"#\" };\n            }\n            // self-contained schema\n            const uriPrefix = `#`;\n            const defUriPrefix = `${uriPrefix}/${defsSegment}/`;\n            const defId = entry[1].schema.id ?? `__schema${this.counter++}`;\n            return { defId, ref: defUriPrefix + defId };\n        };\n        // stored cached version in `def` property\n        // remove all properties, set $ref\n        const extractToDef = (entry) => {\n            if (entry[1].schema.$ref) {\n                return;\n            }\n            const seen = entry[1];\n            const { ref, defId } = makeURI(entry);\n            seen.def = { ...seen.schema };\n            // defId won't be set if the schema is a reference to an external schema\n            if (defId)\n                seen.defId = defId;\n            // wipe away all properties except $ref\n            const schema = seen.schema;\n            for (const key in schema) {\n                delete schema[key];\n            }\n            schema.$ref = ref;\n        };\n        // extract schemas into $defs\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            // convert root schema to # $ref\n            // also prevents root schema from being extracted\n            if (schema === entry[0]) {\n                // do not copy to defs...this is the root schema\n                extractToDef(entry);\n                continue;\n            }\n            // extract schemas that are in the external registry\n            if (params.external) {\n                const ext = params.external.registry.get(entry[0])?.id;\n                if (schema !== entry[0] && ext) {\n                    extractToDef(entry);\n                    continue;\n                }\n            }\n            // extract schemas with `id` meta\n            const id = this.metadataRegistry.get(entry[0])?.id;\n            if (id) {\n                extractToDef(entry);\n                continue;\n            }\n            // break cycles\n            if (seen.cycle) {\n                if (params.cycles === \"throw\") {\n                    throw new Error(\"Cycle detected: \" +\n                        `#/${seen.cycle?.join(\"/\")}/<root>` +\n                        '\\n\\nSet the `cycles` parameter to `\"ref\"` to resolve cyclical schemas with defs.');\n                }\n                else if (params.cycles === \"ref\") {\n                    extractToDef(entry);\n                }\n                continue;\n            }\n            // extract reused schemas\n            if (seen.count > 1) {\n                if (params.reused === \"ref\") {\n                    extractToDef(entry);\n                    // biome-ignore lint:\n                    continue;\n                }\n            }\n        }\n        // flatten _refs\n        const flattenRef = (zodSchema, params) => {\n            const seen = this.seen.get(zodSchema);\n            const schema = seen.def ?? seen.schema;\n            const _cached = { ...schema };\n            // already seen\n            if (seen.ref === null) {\n                return;\n            }\n            // flatten ref if defined\n            const ref = seen.ref;\n            seen.ref = null; // prevent recursion\n            if (ref) {\n                flattenRef(ref, params);\n                // merge referenced schema into current\n                const refSchema = this.seen.get(ref).schema;\n                if (refSchema.$ref && params.target === \"draft-7\") {\n                    schema.allOf = schema.allOf ?? [];\n                    schema.allOf.push(refSchema);\n                }\n                else {\n                    Object.assign(schema, refSchema);\n                    Object.assign(schema, _cached); // prevent overwriting any fields in the original schema\n                }\n            }\n            // execute overrides\n            if (!seen.isParent)\n                this.override({\n                    zodSchema: zodSchema,\n                    jsonSchema: schema,\n                });\n        };\n        for (const entry of [...this.seen.entries()].reverse()) {\n            flattenRef(entry[0], { target: this.target });\n        }\n        const result = {};\n        if (this.target === \"draft-2020-12\") {\n            result.$schema = \"https://json-schema.org/draft/2020-12/schema\";\n        }\n        else if (this.target === \"draft-7\") {\n            result.$schema = \"http://json-schema.org/draft-07/schema#\";\n        }\n        else {\n            console.warn(`Invalid target: ${this.target}`);\n        }\n        Object.assign(result, root.def);\n        // build defs object\n        const defs = params.external?.defs ?? {};\n        for (const entry of this.seen.entries()) {\n            const seen = entry[1];\n            if (seen.def && seen.defId) {\n                defs[seen.defId] = seen.def;\n            }\n        }\n        // set definitions in result\n        if (!params.external && Object.keys(defs).length > 0) {\n            if (this.target === \"draft-2020-12\") {\n                result.$defs = defs;\n            }\n            else {\n                result.definitions = defs;\n            }\n        }\n        try {\n            // this \"finalizes\" this schema and ensures all cycles are removed\n            // each call to .emit() is functionally independent\n            // though the seen map is shared\n            return JSON.parse(JSON.stringify(result));\n        }\n        catch (_err) {\n            throw new Error(\"Error converting schema to JSON.\");\n        }\n    }\n}\nexport function toJSONSchema(input, _params) {\n    if (input instanceof $ZodRegistry) {\n        const gen = new JSONSchemaGenerator(_params);\n        const defs = {};\n        for (const entry of input._idmap.entries()) {\n            const [_, schema] = entry;\n            gen.process(schema);\n        }\n        const schemas = {};\n        const external = {\n            registry: input,\n            uri: _params?.uri || ((id) => id),\n            defs,\n        };\n        for (const entry of input._idmap.entries()) {\n            const [key, schema] = entry;\n            schemas[key] = gen.emit(schema, {\n                ..._params,\n                external,\n            });\n        }\n        if (Object.keys(defs).length > 0) {\n            const defsSegment = gen.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\n            schemas.__shared = {\n                [defsSegment]: defs,\n            };\n        }\n        return { schemas };\n    }\n    const gen = new JSONSchemaGenerator(_params);\n    gen.process(input);\n    return gen.emit(input, _params);\n}\nfunction isTransforming(_schema, _ctx) {\n    const ctx = _ctx ?? { seen: new Set() };\n    if (ctx.seen.has(_schema))\n        return false;\n    ctx.seen.add(_schema);\n    const schema = _schema;\n    const def = schema._zod.def;\n    switch (def.type) {\n        case \"string\":\n        case \"number\":\n        case \"bigint\":\n        case \"boolean\":\n        case \"date\":\n        case \"symbol\":\n        case \"undefined\":\n        case \"null\":\n        case \"any\":\n        case \"unknown\":\n        case \"never\":\n        case \"void\":\n        case \"literal\":\n        case \"enum\":\n        case \"nan\":\n        case \"file\":\n        case \"template_literal\":\n            return false;\n        case \"array\": {\n            return isTransforming(def.element, ctx);\n        }\n        case \"object\": {\n            for (const key in def.shape) {\n                if (isTransforming(def.shape[key], ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"union\": {\n            for (const option of def.options) {\n                if (isTransforming(option, ctx))\n                    return true;\n            }\n            return false;\n        }\n        case \"intersection\": {\n            return isTransforming(def.left, ctx) || isTransforming(def.right, ctx);\n        }\n        case \"tuple\": {\n            for (const item of def.items) {\n                if (isTransforming(item, ctx))\n                    return true;\n            }\n            if (def.rest && isTransforming(def.rest, ctx))\n                return true;\n            return false;\n        }\n        case \"record\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"map\": {\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\n        }\n        case \"set\": {\n            return isTransforming(def.valueType, ctx);\n        }\n        // inner types\n        case \"promise\":\n        case \"optional\":\n        case \"nonoptional\":\n        case \"nullable\":\n        case \"readonly\":\n            return isTransforming(def.innerType, ctx);\n        case \"lazy\":\n            return isTransforming(def.getter(), ctx);\n        case \"default\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"prefault\": {\n            return isTransforming(def.innerType, ctx);\n        }\n        case \"custom\": {\n            return false;\n        }\n        case \"transform\": {\n            return true;\n        }\n        case \"pipe\": {\n            return isTransforming(def.in, ctx) || isTransforming(def.out, ctx);\n        }\n        case \"success\": {\n            return false;\n        }\n        case \"catch\": {\n            return false;\n        }\n        default:\n            def;\n    }\n    throw new Error(`Unknown schema type: ${def.type}`);\n}\n", "export {};\n", "import * as core from \"zod/v4/core\";\nimport * as schemas from \"./schemas.js\";\nexport const ZodISODateTime = /*@__PURE__*/ core.$constructor(\"ZodISODateTime\", (inst, def) => {\n    core.$ZodISODateTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function datetime(params) {\n    return core._isoDateTime(ZodISODateTime, params);\n}\nexport const ZodISODate = /*@__PURE__*/ core.$constructor(\"ZodISODate\", (inst, def) => {\n    core.$ZodISODate.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function date(params) {\n    return core._isoDate(ZodISODate, params);\n}\nexport const ZodISOTime = /*@__PURE__*/ core.$constructor(\"ZodISOTime\", (inst, def) => {\n    core.$ZodISOTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function time(params) {\n    return core._isoTime(ZodISOTime, params);\n}\nexport const ZodISODuration = /*@__PURE__*/ core.$constructor(\"ZodISODuration\", (inst, def) => {\n    core.$ZodISODuration.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function duration(params) {\n    return core._isoDuration(ZodISODuration, params);\n}\n", "import * as core from \"zod/v4/core\";\nimport { $ZodError } from \"zod/v4/core\";\nconst initializer = (inst, issues) => {\n    $ZodError.init(inst, issues);\n    inst.name = \"ZodError\";\n    Object.defineProperties(inst, {\n        format: {\n            value: (mapper) => core.formatError(inst, mapper),\n            // enumerable: false,\n        },\n        flatten: {\n            value: (mapper) => core.flattenError(inst, mapper),\n            // enumerable: false,\n        },\n        addIssue: {\n            value: (issue) => inst.issues.push(issue),\n            // enumerable: false,\n        },\n        addIssues: {\n            value: (issues) => inst.issues.push(...issues),\n            // enumerable: false,\n        },\n        isEmpty: {\n            get() {\n                return inst.issues.length === 0;\n            },\n            // enumerable: false,\n        },\n    });\n    // Object.defineProperty(inst, \"isEmpty\", {\n    //   get() {\n    //     return inst.issues.length === 0;\n    //   },\n    // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n    Parent: Error,\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\n", "import * as core from \"zod/v4/core\";\nimport { ZodRealError } from \"./errors.js\";\nexport const parse = /* @__PURE__ */ core._parse(ZodRealError);\nexport const parseAsync = /* @__PURE__ */ core._parseAsync(ZodRealError);\nexport const safeParse = /* @__PURE__ */ core._safeParse(ZodRealError);\nexport const safeParseAsync = /* @__PURE__ */ core._safeParseAsync(ZodRealError);\n", "import * as core from \"zod/v4/core\";\nimport { util } from \"zod/v4/core\";\nimport * as checks from \"./checks.js\";\nimport * as iso from \"./iso.js\";\nimport * as parse from \"./parse.js\";\nexport const ZodType = /*@__PURE__*/ core.$constructor(\"ZodType\", (inst, def) => {\n    core.$ZodType.init(inst, def);\n    inst.def = def;\n    Object.defineProperty(inst, \"_def\", { value: def });\n    // base methods\n    inst.check = (...checks) => {\n        return inst.clone({\n            ...def,\n            checks: [\n                ...(def.checks ?? []),\n                ...checks.map((ch) => typeof ch === \"function\" ? { _zod: { check: ch, def: { check: \"custom\" }, onattach: [] } } : ch),\n            ],\n        }\n        // { parent: true }\n        );\n    };\n    inst.clone = (def, params) => core.clone(inst, def, params);\n    inst.brand = () => inst;\n    inst.register = ((reg, meta) => {\n        reg.add(inst, meta);\n        return inst;\n    });\n    // parsing\n    inst.parse = (data, params) => parse.parse(inst, data, params, { callee: inst.parse });\n    inst.safeParse = (data, params) => parse.safeParse(inst, data, params);\n    inst.parseAsync = async (data, params) => parse.parseAsync(inst, data, params, { callee: inst.parseAsync });\n    inst.safeParseAsync = async (data, params) => parse.safeParseAsync(inst, data, params);\n    inst.spa = inst.safeParseAsync;\n    // refinements\n    inst.refine = (check, params) => inst.check(refine(check, params));\n    inst.superRefine = (refinement) => inst.check(superRefine(refinement));\n    inst.overwrite = (fn) => inst.check(checks.overwrite(fn));\n    // wrappers\n    inst.optional = () => optional(inst);\n    inst.nullable = () => nullable(inst);\n    inst.nullish = () => optional(nullable(inst));\n    inst.nonoptional = (params) => nonoptional(inst, params);\n    inst.array = () => array(inst);\n    inst.or = (arg) => union([inst, arg]);\n    inst.and = (arg) => intersection(inst, arg);\n    inst.transform = (tx) => pipe(inst, transform(tx));\n    inst.default = (def) => _default(inst, def);\n    inst.prefault = (def) => prefault(inst, def);\n    // inst.coalesce = (def, params) => coalesce(inst, def, params);\n    inst.catch = (params) => _catch(inst, params);\n    inst.pipe = (target) => pipe(inst, target);\n    inst.readonly = () => readonly(inst);\n    // meta\n    inst.describe = (description) => {\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, { description });\n        return cl;\n    };\n    Object.defineProperty(inst, \"description\", {\n        get() {\n            return core.globalRegistry.get(inst)?.description;\n        },\n        configurable: true,\n    });\n    inst.meta = (...args) => {\n        if (args.length === 0) {\n            return core.globalRegistry.get(inst);\n        }\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, args[0]);\n        return cl;\n    };\n    // helpers\n    inst.isOptional = () => inst.safeParse(undefined).success;\n    inst.isNullable = () => inst.safeParse(null).success;\n    return inst;\n});\n/** @internal */\nexport const _ZodString = /*@__PURE__*/ core.$constructor(\"_ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    ZodType.init(inst, def);\n    const bag = inst._zod.bag;\n    inst.format = bag.format ?? null;\n    inst.minLength = bag.minimum ?? null;\n    inst.maxLength = bag.maximum ?? null;\n    // validations\n    inst.regex = (...args) => inst.check(checks.regex(...args));\n    inst.includes = (...args) => inst.check(checks.includes(...args));\n    inst.startsWith = (...args) => inst.check(checks.startsWith(...args));\n    inst.endsWith = (...args) => inst.check(checks.endsWith(...args));\n    inst.min = (...args) => inst.check(checks.minLength(...args));\n    inst.max = (...args) => inst.check(checks.maxLength(...args));\n    inst.length = (...args) => inst.check(checks.length(...args));\n    inst.nonempty = (...args) => inst.check(checks.minLength(1, ...args));\n    inst.lowercase = (params) => inst.check(checks.lowercase(params));\n    inst.uppercase = (params) => inst.check(checks.uppercase(params));\n    // transforms\n    inst.trim = () => inst.check(checks.trim());\n    inst.normalize = (...args) => inst.check(checks.normalize(...args));\n    inst.toLowerCase = () => inst.check(checks.toLowerCase());\n    inst.toUpperCase = () => inst.check(checks.toUpperCase());\n});\nexport const ZodString = /*@__PURE__*/ core.$constructor(\"ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    _ZodString.init(inst, def);\n    inst.email = (params) => inst.check(core._email(ZodEmail, params));\n    inst.url = (params) => inst.check(core._url(ZodURL, params));\n    inst.jwt = (params) => inst.check(core._jwt(ZodJWT, params));\n    inst.emoji = (params) => inst.check(core._emoji(ZodEmoji, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.uuid = (params) => inst.check(core._uuid(ZodUUID, params));\n    inst.uuidv4 = (params) => inst.check(core._uuidv4(ZodUUID, params));\n    inst.uuidv6 = (params) => inst.check(core._uuidv6(ZodUUID, params));\n    inst.uuidv7 = (params) => inst.check(core._uuidv7(ZodUUID, params));\n    inst.nanoid = (params) => inst.check(core._nanoid(ZodNanoID, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.cuid = (params) => inst.check(core._cuid(ZodCUID, params));\n    inst.cuid2 = (params) => inst.check(core._cuid2(ZodCUID2, params));\n    inst.ulid = (params) => inst.check(core._ulid(ZodULID, params));\n    inst.base64 = (params) => inst.check(core._base64(ZodBase64, params));\n    inst.base64url = (params) => inst.check(core._base64url(ZodBase64URL, params));\n    inst.xid = (params) => inst.check(core._xid(ZodXID, params));\n    inst.ksuid = (params) => inst.check(core._ksuid(ZodKSUID, params));\n    inst.ipv4 = (params) => inst.check(core._ipv4(ZodIPv4, params));\n    inst.ipv6 = (params) => inst.check(core._ipv6(ZodIPv6, params));\n    inst.cidrv4 = (params) => inst.check(core._cidrv4(ZodCIDRv4, params));\n    inst.cidrv6 = (params) => inst.check(core._cidrv6(ZodCIDRv6, params));\n    inst.e164 = (params) => inst.check(core._e164(ZodE164, params));\n    // iso\n    inst.datetime = (params) => inst.check(iso.datetime(params));\n    inst.date = (params) => inst.check(iso.date(params));\n    inst.time = (params) => inst.check(iso.time(params));\n    inst.duration = (params) => inst.check(iso.duration(params));\n});\nexport function string(params) {\n    return core._string(ZodString, params);\n}\nexport const ZodStringFormat = /*@__PURE__*/ core.$constructor(\"ZodStringFormat\", (inst, def) => {\n    core.$ZodStringFormat.init(inst, def);\n    _ZodString.init(inst, def);\n});\nexport const ZodEmail = /*@__PURE__*/ core.$constructor(\"ZodEmail\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmail.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function email(params) {\n    return core._email(ZodEmail, params);\n}\nexport const ZodGUID = /*@__PURE__*/ core.$constructor(\"ZodGUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodGUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function guid(params) {\n    return core._guid(ZodGUID, params);\n}\nexport const ZodUUID = /*@__PURE__*/ core.$constructor(\"ZodUUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodUUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function uuid(params) {\n    return core._uuid(ZodUUID, params);\n}\nexport function uuidv4(params) {\n    return core._uuidv4(ZodUUID, params);\n}\n// ZodUUIDv6\nexport function uuidv6(params) {\n    return core._uuidv6(ZodUUID, params);\n}\n// ZodUUIDv7\nexport function uuidv7(params) {\n    return core._uuidv7(ZodUUID, params);\n}\nexport const ZodURL = /*@__PURE__*/ core.$constructor(\"ZodURL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodURL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function url(params) {\n    return core._url(ZodURL, params);\n}\nexport const ZodEmoji = /*@__PURE__*/ core.$constructor(\"ZodEmoji\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmoji.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function emoji(params) {\n    return core._emoji(ZodEmoji, params);\n}\nexport const ZodNanoID = /*@__PURE__*/ core.$constructor(\"ZodNanoID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodNanoID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function nanoid(params) {\n    return core._nanoid(ZodNanoID, params);\n}\nexport const ZodCUID = /*@__PURE__*/ core.$constructor(\"ZodCUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid(params) {\n    return core._cuid(ZodCUID, params);\n}\nexport const ZodCUID2 = /*@__PURE__*/ core.$constructor(\"ZodCUID2\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID2.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid2(params) {\n    return core._cuid2(ZodCUID2, params);\n}\nexport const ZodULID = /*@__PURE__*/ core.$constructor(\"ZodULID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodULID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ulid(params) {\n    return core._ulid(ZodULID, params);\n}\nexport const ZodXID = /*@__PURE__*/ core.$constructor(\"ZodXID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodXID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function xid(params) {\n    return core._xid(ZodXID, params);\n}\nexport const ZodKSUID = /*@__PURE__*/ core.$constructor(\"ZodKSUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodKSUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ksuid(params) {\n    return core._ksuid(ZodKSUID, params);\n}\nexport const ZodIPv4 = /*@__PURE__*/ core.$constructor(\"ZodIPv4\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv4(params) {\n    return core._ipv4(ZodIPv4, params);\n}\nexport const ZodIPv6 = /*@__PURE__*/ core.$constructor(\"ZodIPv6\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv6(params) {\n    return core._ipv6(ZodIPv6, params);\n}\nexport const ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv4\", (inst, def) => {\n    core.$ZodCIDRv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv4(params) {\n    return core._cidrv4(ZodCIDRv4, params);\n}\nexport const ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv6\", (inst, def) => {\n    core.$ZodCIDRv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv6(params) {\n    return core._cidrv6(ZodCIDRv6, params);\n}\nexport const ZodBase64 = /*@__PURE__*/ core.$constructor(\"ZodBase64\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64(params) {\n    return core._base64(ZodBase64, params);\n}\nexport const ZodBase64URL = /*@__PURE__*/ core.$constructor(\"ZodBase64URL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64URL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64url(params) {\n    return core._base64url(ZodBase64URL, params);\n}\nexport const ZodE164 = /*@__PURE__*/ core.$constructor(\"ZodE164\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodE164.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function e164(params) {\n    return core._e164(ZodE164, params);\n}\nexport const ZodJWT = /*@__PURE__*/ core.$constructor(\"ZodJWT\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodJWT.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function jwt(params) {\n    return core._jwt(ZodJWT, params);\n}\nexport const ZodNumber = /*@__PURE__*/ core.$constructor(\"ZodNumber\", (inst, def) => {\n    core.$ZodNumber.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.int = (params) => inst.check(int(params));\n    inst.safe = (params) => inst.check(int(params));\n    inst.positive = (params) => inst.check(checks.gt(0, params));\n    inst.nonnegative = (params) => inst.check(checks.gte(0, params));\n    inst.negative = (params) => inst.check(checks.lt(0, params));\n    inst.nonpositive = (params) => inst.check(checks.lte(0, params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    inst.step = (value, params) => inst.check(checks.multipleOf(value, params));\n    // inst.finite = (params) => inst.check(core.finite(params));\n    inst.finite = () => inst;\n    const bag = inst._zod.bag;\n    inst.minValue =\n        Math.max(bag.minimum ?? Number.NEGATIVE_INFINITY, bag.exclusiveMinimum ?? Number.NEGATIVE_INFINITY) ?? null;\n    inst.maxValue =\n        Math.min(bag.maximum ?? Number.POSITIVE_INFINITY, bag.exclusiveMaximum ?? Number.POSITIVE_INFINITY) ?? null;\n    inst.isInt = (bag.format ?? \"\").includes(\"int\") || Number.isSafeInteger(bag.multipleOf ?? 0.5);\n    inst.isFinite = true;\n    inst.format = bag.format ?? null;\n});\nexport function number(params) {\n    return core._number(ZodNumber, params);\n}\nexport const ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"ZodNumberFormat\", (inst, def) => {\n    core.$ZodNumberFormat.init(inst, def);\n    ZodNumber.init(inst, def);\n});\nexport function int(params) {\n    return core._int(ZodNumberFormat, params);\n}\nexport function float32(params) {\n    return core._float32(ZodNumberFormat, params);\n}\nexport function float64(params) {\n    return core._float64(ZodNumberFormat, params);\n}\nexport function int32(params) {\n    return core._int32(ZodNumberFormat, params);\n}\nexport function uint32(params) {\n    return core._uint32(ZodNumberFormat, params);\n}\nexport const ZodBoolean = /*@__PURE__*/ core.$constructor(\"ZodBoolean\", (inst, def) => {\n    core.$ZodBoolean.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function boolean(params) {\n    return core._boolean(ZodBoolean, params);\n}\nexport const ZodBigInt = /*@__PURE__*/ core.$constructor(\"ZodBigInt\", (inst, def) => {\n    core.$ZodBigInt.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.positive = (params) => inst.check(checks.gt(BigInt(0), params));\n    inst.negative = (params) => inst.check(checks.lt(BigInt(0), params));\n    inst.nonpositive = (params) => inst.check(checks.lte(BigInt(0), params));\n    inst.nonnegative = (params) => inst.check(checks.gte(BigInt(0), params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    const bag = inst._zod.bag;\n    inst.minValue = bag.minimum ?? null;\n    inst.maxValue = bag.maximum ?? null;\n    inst.format = bag.format ?? null;\n});\nexport function bigint(params) {\n    return core._bigint(ZodBigInt, params);\n}\nexport const ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"ZodBigIntFormat\", (inst, def) => {\n    core.$ZodBigIntFormat.init(inst, def);\n    ZodBigInt.init(inst, def);\n});\n// int64\nexport function int64(params) {\n    return core._int64(ZodBigIntFormat, params);\n}\n// uint64\nexport function uint64(params) {\n    return core._uint64(ZodBigIntFormat, params);\n}\nexport const ZodSymbol = /*@__PURE__*/ core.$constructor(\"ZodSymbol\", (inst, def) => {\n    core.$ZodSymbol.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function symbol(params) {\n    return core._symbol(ZodSymbol, params);\n}\nexport const ZodUndefined = /*@__PURE__*/ core.$constructor(\"ZodUndefined\", (inst, def) => {\n    core.$ZodUndefined.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _undefined(params) {\n    return core._undefined(ZodUndefined, params);\n}\nexport { _undefined as undefined };\nexport const ZodNull = /*@__PURE__*/ core.$constructor(\"ZodNull\", (inst, def) => {\n    core.$ZodNull.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _null(params) {\n    return core._null(ZodNull, params);\n}\nexport { _null as null };\nexport const ZodAny = /*@__PURE__*/ core.$constructor(\"ZodAny\", (inst, def) => {\n    core.$ZodAny.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function any() {\n    return core._any(ZodAny);\n}\nexport const ZodUnknown = /*@__PURE__*/ core.$constructor(\"ZodUnknown\", (inst, def) => {\n    core.$ZodUnknown.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function unknown() {\n    return core._unknown(ZodUnknown);\n}\nexport const ZodNever = /*@__PURE__*/ core.$constructor(\"ZodNever\", (inst, def) => {\n    core.$ZodNever.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function never(params) {\n    return core._never(ZodNever, params);\n}\nexport const ZodVoid = /*@__PURE__*/ core.$constructor(\"ZodVoid\", (inst, def) => {\n    core.$ZodVoid.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _void(params) {\n    return core._void(ZodVoid, params);\n}\nexport { _void as void };\nexport const ZodDate = /*@__PURE__*/ core.$constructor(\"ZodDate\", (inst, def) => {\n    core.$ZodDate.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    const c = inst._zod.bag;\n    inst.minDate = c.minimum ? new Date(c.minimum) : null;\n    inst.maxDate = c.maximum ? new Date(c.maximum) : null;\n});\nexport function date(params) {\n    return core._date(ZodDate, params);\n}\nexport const ZodArray = /*@__PURE__*/ core.$constructor(\"ZodArray\", (inst, def) => {\n    core.$ZodArray.init(inst, def);\n    ZodType.init(inst, def);\n    inst.element = def.element;\n    inst.min = (minLength, params) => inst.check(checks.minLength(minLength, params));\n    inst.nonempty = (params) => inst.check(checks.minLength(1, params));\n    inst.max = (maxLength, params) => inst.check(checks.maxLength(maxLength, params));\n    inst.length = (len, params) => inst.check(checks.length(len, params));\n    inst.unwrap = () => inst.element;\n});\nexport function array(element, params) {\n    return core._array(ZodArray, element, params);\n}\n// .keyof\nexport function keyof(schema) {\n    const shape = schema._zod.def.shape;\n    return literal(Object.keys(shape));\n}\nexport const ZodObject = /*@__PURE__*/ core.$constructor(\"ZodObject\", (inst, def) => {\n    core.$ZodObject.init(inst, def);\n    ZodType.init(inst, def);\n    util.defineLazy(inst, \"shape\", () => def.shape);\n    inst.keyof = () => _enum(Object.keys(inst._zod.def.shape));\n    inst.catchall = (catchall) => inst.clone({ ...inst._zod.def, catchall: catchall });\n    inst.passthrough = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    // inst.nonstrict = () => inst.clone({ ...inst._zod.def, catchall: api.unknown() });\n    inst.loose = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.strict = () => inst.clone({ ...inst._zod.def, catchall: never() });\n    inst.strip = () => inst.clone({ ...inst._zod.def, catchall: undefined });\n    inst.extend = (incoming) => {\n        return util.extend(inst, incoming);\n    };\n    inst.merge = (other) => util.merge(inst, other);\n    inst.pick = (mask) => util.pick(inst, mask);\n    inst.omit = (mask) => util.omit(inst, mask);\n    inst.partial = (...args) => util.partial(ZodOptional, inst, args[0]);\n    inst.required = (...args) => util.required(ZodNonOptional, inst, args[0]);\n});\nexport function object(shape, params) {\n    const def = {\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        ...util.normalizeParams(params),\n    };\n    return new ZodObject(def);\n}\n// strictObject\nexport function strictObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        catchall: never(),\n        ...util.normalizeParams(params),\n    });\n}\n// looseObject\nexport function looseObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", { ...shape });\n            return this.shape;\n        },\n        catchall: unknown(),\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodUnion = /*@__PURE__*/ core.$constructor(\"ZodUnion\", (inst, def) => {\n    core.$ZodUnion.init(inst, def);\n    ZodType.init(inst, def);\n    inst.options = def.options;\n});\nexport function union(options, params) {\n    return new ZodUnion({\n        type: \"union\",\n        options: options,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodDiscriminatedUnion = /*@__PURE__*/ core.$constructor(\"ZodDiscriminatedUnion\", (inst, def) => {\n    ZodUnion.init(inst, def);\n    core.$ZodDiscriminatedUnion.init(inst, def);\n});\nexport function discriminatedUnion(discriminator, options, params) {\n    // const [options, params] = args;\n    return new ZodDiscriminatedUnion({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodIntersection = /*@__PURE__*/ core.$constructor(\"ZodIntersection\", (inst, def) => {\n    core.$ZodIntersection.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function intersection(left, right) {\n    return new ZodIntersection({\n        type: \"intersection\",\n        left: left,\n        right: right,\n    });\n}\nexport const ZodTuple = /*@__PURE__*/ core.$constructor(\"ZodTuple\", (inst, def) => {\n    core.$ZodTuple.init(inst, def);\n    ZodType.init(inst, def);\n    inst.rest = (rest) => inst.clone({\n        ...inst._zod.def,\n        rest: rest,\n    });\n});\nexport function tuple(items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof core.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new ZodTuple({\n        type: \"tuple\",\n        items: items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodRecord = /*@__PURE__*/ core.$constructor(\"ZodRecord\", (inst, def) => {\n    core.$ZodRecord.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function record(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\n// type alksjf = core.output<core.$ZodRecordKey>;\nexport function partialRecord(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType: union([keyType, never()]),\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodMap = /*@__PURE__*/ core.$constructor(\"ZodMap\", (inst, def) => {\n    core.$ZodMap.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function map(keyType, valueType, params) {\n    return new ZodMap({\n        type: \"map\",\n        keyType: keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSet = /*@__PURE__*/ core.$constructor(\"ZodSet\", (inst, def) => {\n    core.$ZodSet.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (...args) => inst.check(core._minSize(...args));\n    inst.nonempty = (params) => inst.check(core._minSize(1, params));\n    inst.max = (...args) => inst.check(core._maxSize(...args));\n    inst.size = (...args) => inst.check(core._size(...args));\n});\nexport function set(valueType, params) {\n    return new ZodSet({\n        type: \"set\",\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEnum = /*@__PURE__*/ core.$constructor(\"ZodEnum\", (inst, def) => {\n    core.$ZodEnum.init(inst, def);\n    ZodType.init(inst, def);\n    inst.enum = def.entries;\n    inst.options = Object.values(def.entries);\n    const keys = new Set(Object.keys(def.entries));\n    inst.extract = (values, params) => {\n        const newEntries = {};\n        for (const value of values) {\n            if (keys.has(value)) {\n                newEntries[value] = def.entries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n    inst.exclude = (values, params) => {\n        const newEntries = { ...def.entries };\n        for (const value of values) {\n            if (keys.has(value)) {\n                delete newEntries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n});\nfunction _enum(values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport { _enum as enum };\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function nativeEnum(entries, params) {\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLiteral = /*@__PURE__*/ core.$constructor(\"ZodLiteral\", (inst, def) => {\n    core.$ZodLiteral.init(inst, def);\n    ZodType.init(inst, def);\n    inst.values = new Set(def.values);\n    Object.defineProperty(inst, \"value\", {\n        get() {\n            if (def.values.length > 1) {\n                throw new Error(\"This schema contains multiple valid literal values. Use `.values` instead.\");\n            }\n            return def.values[0];\n        },\n    });\n});\nexport function literal(value, params) {\n    return new ZodLiteral({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodFile = /*@__PURE__*/ core.$constructor(\"ZodFile\", (inst, def) => {\n    core.$ZodFile.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (size, params) => inst.check(core._minSize(size, params));\n    inst.max = (size, params) => inst.check(core._maxSize(size, params));\n    inst.mime = (types, params) => inst.check(core._mime(Array.isArray(types) ? types : [types], params));\n});\nexport function file(params) {\n    return core._file(ZodFile, params);\n}\nexport const ZodTransform = /*@__PURE__*/ core.$constructor(\"ZodTransform\", (inst, def) => {\n    core.$ZodTransform.init(inst, def);\n    ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = inst);\n                _issue.continue ?? (_issue.continue = true);\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        const output = def.transform(payload.value, payload);\n        if (output instanceof Promise) {\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        payload.value = output;\n        return payload;\n    };\n});\nexport function transform(fn) {\n    return new ZodTransform({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport const ZodOptional = /*@__PURE__*/ core.$constructor(\"ZodOptional\", (inst, def) => {\n    core.$ZodOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function optional(innerType) {\n    return new ZodOptional({\n        type: \"optional\",\n        innerType: innerType,\n    });\n}\nexport const ZodNullable = /*@__PURE__*/ core.$constructor(\"ZodNullable\", (inst, def) => {\n    core.$ZodNullable.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nullable(innerType) {\n    return new ZodNullable({\n        type: \"nullable\",\n        innerType: innerType,\n    });\n}\n// nullish\nexport function nullish(innerType) {\n    return optional(nullable(innerType));\n}\nexport const ZodDefault = /*@__PURE__*/ core.$constructor(\"ZodDefault\", (inst, def) => {\n    core.$ZodDefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeDefault = inst.unwrap;\n});\nexport function _default(innerType, defaultValue) {\n    return new ZodDefault({\n        type: \"default\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport const ZodPrefault = /*@__PURE__*/ core.$constructor(\"ZodPrefault\", (inst, def) => {\n    core.$ZodPrefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function prefault(innerType, defaultValue) {\n    return new ZodPrefault({\n        type: \"prefault\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n        },\n    });\n}\nexport const ZodNonOptional = /*@__PURE__*/ core.$constructor(\"ZodNonOptional\", (inst, def) => {\n    core.$ZodNonOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nonoptional(innerType, params) {\n    return new ZodNonOptional({\n        type: \"nonoptional\",\n        innerType: innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSuccess = /*@__PURE__*/ core.$constructor(\"ZodSuccess\", (inst, def) => {\n    core.$ZodSuccess.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function success(innerType) {\n    return new ZodSuccess({\n        type: \"success\",\n        innerType: innerType,\n    });\n}\nexport const ZodCatch = /*@__PURE__*/ core.$constructor(\"ZodCatch\", (inst, def) => {\n    core.$ZodCatch.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeCatch = inst.unwrap;\n});\nfunction _catch(innerType, catchValue) {\n    return new ZodCatch({\n        type: \"catch\",\n        innerType: innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport { _catch as catch };\nexport const ZodNaN = /*@__PURE__*/ core.$constructor(\"ZodNaN\", (inst, def) => {\n    core.$ZodNaN.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function nan(params) {\n    return core._nan(ZodNaN, params);\n}\nexport const ZodPipe = /*@__PURE__*/ core.$constructor(\"ZodPipe\", (inst, def) => {\n    core.$ZodPipe.init(inst, def);\n    ZodType.init(inst, def);\n    inst.in = def.in;\n    inst.out = def.out;\n});\nexport function pipe(in_, out) {\n    return new ZodPipe({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        // ...util.normalizeParams(params),\n    });\n}\nexport const ZodReadonly = /*@__PURE__*/ core.$constructor(\"ZodReadonly\", (inst, def) => {\n    core.$ZodReadonly.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function readonly(innerType) {\n    return new ZodReadonly({\n        type: \"readonly\",\n        innerType: innerType,\n    });\n}\nexport const ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"ZodTemplateLiteral\", (inst, def) => {\n    core.$ZodTemplateLiteral.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function templateLiteral(parts, params) {\n    return new ZodTemplateLiteral({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLazy = /*@__PURE__*/ core.$constructor(\"ZodLazy\", (inst, def) => {\n    core.$ZodLazy.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.getter();\n});\nexport function lazy(getter) {\n    return new ZodLazy({\n        type: \"lazy\",\n        getter: getter,\n    });\n}\nexport const ZodPromise = /*@__PURE__*/ core.$constructor(\"ZodPromise\", (inst, def) => {\n    core.$ZodPromise.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function promise(innerType) {\n    return new ZodPromise({\n        type: \"promise\",\n        innerType: innerType,\n    });\n}\nexport const ZodCustom = /*@__PURE__*/ core.$constructor(\"ZodCustom\", (inst, def) => {\n    core.$ZodCustom.init(inst, def);\n    ZodType.init(inst, def);\n});\n// custom checks\nexport function check(fn, params) {\n    const ch = new core.$ZodCheck({\n        check: \"custom\",\n        ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function custom(fn, _params) {\n    return core._custom(ZodCustom, fn ?? (() => true), _params);\n}\nexport function refine(fn, _params = {}) {\n    return core._refine(ZodCustom, fn, _params);\n}\n// superRefine\nexport function superRefine(fn, params) {\n    const ch = check((payload) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, ch._zod.def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = ch);\n                _issue.continue ?? (_issue.continue = !ch._zod.def.abort);\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        return fn(payload.value, payload);\n    }, params);\n    return ch;\n}\nfunction _instanceof(cls, params = {\n    error: `Input not instance of ${cls.name}`,\n}) {\n    const inst = new ZodCustom({\n        type: \"custom\",\n        check: \"custom\",\n        fn: (data) => data instanceof cls,\n        abort: true,\n        ...util.normalizeParams(params),\n    });\n    inst._zod.bag.Class = cls;\n    return inst;\n}\nexport { _instanceof as instanceof };\n// stringbool\nexport const stringbool = (...args) => core._stringbool({\n    Pipe: ZodPipe,\n    Boolean: ZodBoolean,\n    String: ZodString,\n    Transform: ZodTransform,\n}, ...args);\nexport function json(params) {\n    const jsonSchema = lazy(() => {\n        return union([string(params), number(), boolean(), _null(), array(jsonSchema), record(string(), jsonSchema)]);\n    });\n    return jsonSchema;\n}\n// preprocess\n// /** @deprecated Use `z.pipe()` and `z.transform()` instead. */\nexport function preprocess(fn, schema) {\n    return pipe(transform(fn), schema);\n}\n", "// Zod 3 compat layer\nimport * as core from \"zod/v4/core\";\n/** @deprecated Use the raw string literal codes instead, e.g. \"invalid_type\". */\nexport const ZodIssueCode = {\n    invalid_type: \"invalid_type\",\n    too_big: \"too_big\",\n    too_small: \"too_small\",\n    invalid_format: \"invalid_format\",\n    not_multiple_of: \"not_multiple_of\",\n    unrecognized_keys: \"unrecognized_keys\",\n    invalid_union: \"invalid_union\",\n    invalid_key: \"invalid_key\",\n    invalid_element: \"invalid_element\",\n    invalid_value: \"invalid_value\",\n    custom: \"custom\",\n};\n/** @deprecated Not necessary in Zod 4. */\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\n/** A special constant with type `never` */\nexport const NEVER = INVALID;\nexport { $brand, config } from \"zod/v4/core\";\n/** @deprecated Use `z.config(params)` instead. */\nexport function setErrorMap(map) {\n    core.config({\n        customError: map,\n    });\n}\n/** @deprecated Use `z.config()` instead. */\nexport function getErrorMap() {\n    return core.config().customError;\n}\n", "import * as core from \"zod/v4/core\";\nimport * as schemas from \"./schemas.js\";\nexport function string(params) {\n    return core._coercedString(schemas.ZodString, params);\n}\nexport function number(params) {\n    return core._coercedNumber(schemas.ZodNumber, params);\n}\nexport function boolean(params) {\n    return core._coercedBoolean(schemas.ZodBoolean, params);\n}\nexport function bigint(params) {\n    return core._coercedBigint(schemas.ZodBigInt, params);\n}\nexport function date(params) {\n    return core._coercedDate(schemas.ZodDate, params);\n}\n", "export function combineHeaders(\n  ...headers: Array<Record<string, string | undefined> | undefined>\n): Record<string, string | undefined> {\n  return headers.reduce(\n    (combinedHeaders, currentHeaders) => ({\n      ...combinedHeaders,\n      ...(currentHeaders ?? {}),\n    }),\n    {},\n  ) as Record<string, string | undefined>;\n}\n", "/**\n * Converts an AsyncIterator to a ReadableStream.\n *\n * @template T - The type of elements produced by the AsyncIterator.\n * @param { <T>} iterator - The AsyncIterator to convert.\n * @returns {ReadableStream<T>} - A ReadableStream that provides the same data as the AsyncIterator.\n */\nexport function convertAsyncIteratorToReadableStream<T>(\n  iterator: AsyncIterator<T>,\n): ReadableStream<T> {\n  return new ReadableStream<T>({\n    /**\n     * Called when the consumer wants to pull more data from the stream.\n     *\n     * @param {ReadableStreamDefaultController<T>} controller - The controller to enqueue data into the stream.\n     * @returns {Promise<void>}\n     */\n    async pull(controller) {\n      try {\n        const { value, done } = await iterator.next();\n        if (done) {\n          controller.close();\n        } else {\n          controller.enqueue(value);\n        }\n      } catch (error) {\n        controller.error(error);\n      }\n    },\n    /**\n     * Called when the consumer cancels the stream.\n     */\n    cancel() {},\n  });\n}\n", "/**\n * Creates a Promise that resolves after a specified delay\n * @param delayInMs - The delay duration in milliseconds. If null or undefined, resolves immediately.\n * @param signal - Optional AbortSignal to cancel the delay\n * @returns A Promise that resolves after the specified delay\n * @throws {DOMException} When the signal is aborted\n */\nexport async function delay(\n  delayInMs?: number | null,\n  options?: {\n    abortSignal?: AbortSignal;\n  },\n): Promise<void> {\n  if (delayInMs == null) {\n    return Promise.resolve();\n  }\n\n  const signal = options?.abortSignal;\n\n  return new Promise<void>((resolve, reject) => {\n    if (signal?.aborted) {\n      reject(createAbortError());\n      return;\n    }\n\n    const timeoutId = setTimeout(() => {\n      cleanup();\n      resolve();\n    }, delayInMs);\n\n    const cleanup = () => {\n      clearTimeout(timeoutId);\n      signal?.removeEventListener('abort', onAbort);\n    };\n\n    const onAbort = () => {\n      cleanup();\n      reject(createAbortError());\n    };\n\n    signal?.addEventListener('abort', onAbort);\n  });\n}\n\nfunction createAbortError(): DOMException {\n  return new DOMException('Delay was aborted', 'AbortError');\n}\n", "/**\nExtracts the headers from a response object and returns them as a key-value object.\n\n@param response - The response object to extract headers from.\n@returns The headers as a key-value object.\n*/\nexport function extractResponseHeaders(response: Response) {\n  return Object.fromEntries<string>([...response.headers]);\n}\n", "import { InvalidArgumentError } from '@ai-sdk/provider';\n\n/**\nCreates an ID generator.\nThe total length of the ID is the sum of the prefix, separator, and random part length.\nNot cryptographically secure.\n\n@param alphabet - The alphabet to use for the ID. Default: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.\n@param prefix - The prefix of the ID to generate. Optional.\n@param separator - The separator between the prefix and the random part of the ID. Default: '-'.\n@param size - The size of the random part of the ID to generate. Default: 16.\n */\nexport const createIdGenerator = ({\n  prefix,\n  size = 16,\n  alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n  separator = '-',\n}: {\n  prefix?: string;\n  separator?: string;\n  size?: number;\n  alphabet?: string;\n} = {}): IdGenerator => {\n  const generator = () => {\n    const alphabetLength = alphabet.length;\n    const chars = new Array(size);\n    for (let i = 0; i < size; i++) {\n      chars[i] = alphabet[(Math.random() * alphabetLength) | 0];\n    }\n    return chars.join('');\n  };\n\n  if (prefix == null) {\n    return generator;\n  }\n\n  // check that the prefix is not part of the alphabet (otherwise prefix checking can fail randomly)\n  if (alphabet.includes(separator)) {\n    throw new InvalidArgumentError({\n      argument: 'separator',\n      message: `The separator \"${separator}\" must not be part of the alphabet \"${alphabet}\".`,\n    });\n  }\n\n  return () => `${prefix}${separator}${generator()}`;\n};\n\n/**\nA function that generates an ID.\n */\nexport type IdGenerator = () => string;\n\n/**\nGenerates a 16-character random string to use for IDs.\nNot cryptographically secure.\n */\nexport const generateId = createIdGenerator();\n", "export function getErrorMessage(error: unknown | undefined) {\n  if (error == null) {\n    return 'unknown error';\n  }\n\n  if (typeof error === 'string') {\n    return error;\n  }\n\n  if (error instanceof Error) {\n    return error.message;\n  }\n\n  return JSON.stringify(error);\n}\n", "import { APICallError } from '@ai-sdk/provider';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { FetchFunction } from './fetch-function';\nimport { handleFetchError } from './handle-fetch-error';\nimport { isAbortError } from './is-abort-error';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const getFromApi = async <T>({\n  url,\n  headers = {},\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: removeUndefinedEntries(headers),\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: {},\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: {},\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: {},\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: {},\n      });\n    }\n  } catch (error) {\n    throw handleFetchError({ error, url, requestBodyValues: {} });\n  }\n};\n", "import { APICallError } from '@ai-sdk/provider';\nimport { isAbortError } from './is-abort-error';\n\nconst FETCH_FAILED_ERROR_MESSAGES = ['fetch failed', 'failed to fetch'];\n\nexport function handleFetchError({\n  error,\n  url,\n  requestBodyValues,\n}: {\n  error: unknown;\n  url: string;\n  requestBodyValues: unknown;\n}) {\n  if (isAbortError(error)) {\n    return error;\n  }\n\n  // unwrap original error when fetch failed (for easier debugging):\n  if (\n    error instanceof TypeError &&\n    FETCH_FAILED_ERROR_MESSAGES.includes(error.message.toLowerCase())\n  ) {\n    const cause = (error as any).cause;\n\n    if (cause != null) {\n      // Failed to connect to server:\n      return new APICallError({\n        message: `Cannot connect to API: ${cause.message}`,\n        cause,\n        url,\n        requestBodyValues,\n        isRetryable: true, // retry when network error\n      });\n    }\n  }\n\n  return error;\n}\n", "export function isAbortError(error: unknown): error is Error {\n  return (\n    (error instanceof Error || error instanceof DOMException) &&\n    (error.name === 'AbortError' ||\n      error.name === 'ResponseAborted' || // Next.js\n      error.name === 'TimeoutError')\n  );\n}\n", "/**\n * Removes entries from a record where the value is null or undefined.\n * @param record - The input object whose entries may be null or undefined.\n * @returns A new object containing only entries with non-null and non-undefined values.\n */\nexport function removeUndefinedEntries<T>(\n  record: Record<string, T | undefined>,\n): Record<string, T> {\n  return Object.fromEntries(\n    Object.entries(record).filter(([_key, value]) => value != null),\n  ) as Record<string, T>;\n}\n", "import {\n  JSONSchema7,\n  LanguageModelV2Message,\n  LanguageModelV2Prompt,\n} from '@ai-sdk/provider';\n\nconst DEFAULT_SCHEMA_PREFIX = 'JSON schema:';\nconst DEFAULT_SCHEMA_SUFFIX =\n  'You MUST answer with a JSON object that matches the JSON schema above.';\nconst DEFAULT_GENERIC_SUFFIX = 'You MUST answer with JSON.';\n\nexport function injectJsonInstruction({\n  prompt,\n  schema,\n  schemaPrefix = schema != null ? DEFAULT_SCHEMA_PREFIX : undefined,\n  schemaSuffix = schema != null\n    ? DEFAULT_SCHEMA_SUFFIX\n    : DEFAULT_GENERIC_SUFFIX,\n}: {\n  prompt?: string;\n  schema?: JSONSchema7;\n  schemaPrefix?: string;\n  schemaSuffix?: string;\n}): string {\n  return [\n    prompt != null && prompt.length > 0 ? prompt : undefined,\n    prompt != null && prompt.length > 0 ? '' : undefined, // add a newline if prompt is not null\n    schemaPrefix,\n    schema != null ? JSON.stringify(schema) : undefined,\n    schemaSuffix,\n  ]\n    .filter(line => line != null)\n    .join('\\n');\n}\n\nexport function injectJsonInstructionIntoMessages({\n  messages,\n  schema,\n  schemaPrefix,\n  schemaSuffix,\n}: {\n  messages: LanguageModelV2Prompt;\n  schema?: JSONSchema7;\n  schemaPrefix?: string;\n  schemaSuffix?: string;\n}): LanguageModelV2Prompt {\n  const systemMessage: LanguageModelV2Message =\n    messages[0]?.role === 'system'\n      ? { ...messages[0] }\n      : { role: 'system', content: '' };\n\n  systemMessage.content = injectJsonInstruction({\n    prompt: systemMessage.content,\n    schema,\n    schemaPrefix,\n    schemaSuffix,\n  });\n\n  return [\n    systemMessage,\n    ...(messages[0]?.role === 'system' ? messages.slice(1) : messages),\n  ];\n}\n", "/**\n * Checks if the given URL is supported natively by the model.\n *\n * @param mediaType - The media type of the URL. Case-sensitive.\n * @param url - The URL to check.\n * @param supportedUrls - A record where keys are case-sensitive media types (or '*')\n *                        and values are arrays of RegExp patterns for URLs.\n *\n * @returns `true` if the URL matches a pattern under the specific media type\n *          or the wildcard '*', `false` otherwise.\n */\nexport function isUrlSupported({\n  mediaType,\n  url,\n  supportedUrls,\n}: {\n  mediaType: string;\n  url: string;\n  supportedUrls: Record<string, RegExp[]>;\n}): boolean {\n  // standardize media type and url to lower case\n  url = url.toLowerCase();\n  mediaType = mediaType.toLowerCase();\n\n  return (\n    Object.entries(supportedUrls)\n      // standardize supported url map into lowercase prefixes:\n      .map(([key, value]) => {\n        const mediaType = key.toLowerCase();\n        return mediaType === '*' || mediaType === '*/*'\n          ? { mediaTypePrefix: '', regexes: value }\n          : { mediaTypePrefix: mediaType.replace(/\\*/, ''), regexes: value };\n      })\n      // gather all regexp pattern from matched media type prefixes:\n      .filter(({ mediaTypePrefix }) => mediaType.startsWith(mediaTypePrefix))\n      .flatMap(({ regexes }) => regexes)\n      // check if any pattern matches the url:\n      .some(pattern => pattern.test(url))\n  );\n}\n", "import { LoadAPIKeyError } from '@ai-sdk/provider';\n\nexport function loadApiKey({\n  apiKey,\n  environmentVariableName,\n  apiKeyParameterName = 'apiKey',\n  description,\n}: {\n  apiKey: string | undefined;\n  environmentVariableName: string;\n  apiKeyParameterName?: string;\n  description: string;\n}): string {\n  if (typeof apiKey === 'string') {\n    return apiKey;\n  }\n\n  if (apiKey != null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter. Environment variables is not supported in this environment.`,\n    });\n  }\n\n  apiKey = process.env[environmentVariableName];\n\n  if (apiKey == null) {\n    throw new LoadAPIKeyError({\n      message: `${description} API key is missing. Pass it using the '${apiKeyParameterName}' parameter or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof apiKey !== 'string') {\n    throw new LoadAPIKeyError({\n      message: `${description} API key must be a string. The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return apiKey;\n}\n", "/**\n * Loads an optional `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @returns The setting value.\n */\nexport function loadOptionalSetting({\n  settingValue,\n  environmentVariableName,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n}): string | undefined {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null || typeof process === 'undefined') {\n    return undefined;\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null || typeof settingValue !== 'string') {\n    return undefined;\n  }\n\n  return settingValue;\n}\n", "import { LoadSettingError } from '@ai-sdk/provider';\n\n/**\n * Loads a `string` setting from the environment or a parameter.\n *\n * @param settingValue - The setting value.\n * @param environmentVariableName - The environment variable name.\n * @param settingName - The setting name.\n * @param description - The description of the setting.\n * @returns The setting value.\n */\nexport function loadSetting({\n  settingValue,\n  environmentVariableName,\n  settingName,\n  description,\n}: {\n  settingValue: string | undefined;\n  environmentVariableName: string;\n  settingName: string;\n  description: string;\n}): string {\n  if (typeof settingValue === 'string') {\n    return settingValue;\n  }\n\n  if (settingValue != null) {\n    throw new LoadSettingError({\n      message: `${description} setting must be a string.`,\n    });\n  }\n\n  if (typeof process === 'undefined') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter. ` +\n        `Environment variables is not supported in this environment.`,\n    });\n  }\n\n  settingValue = process.env[environmentVariableName];\n\n  if (settingValue == null) {\n    throw new LoadSettingError({\n      message:\n        `${description} setting is missing. ` +\n        `Pass it using the '${settingName}' parameter ` +\n        `or the ${environmentVariableName} environment variable.`,\n    });\n  }\n\n  if (typeof settingValue !== 'string') {\n    throw new LoadSettingError({\n      message:\n        `${description} setting must be a string. ` +\n        `The value of the ${environmentVariableName} environment variable is not a string.`,\n    });\n  }\n\n  return settingValue;\n}\n", "/**\n * Maps a media type to its corresponding file extension.\n * It was originally introduced to set a filename for audio file uploads\n * in https://github.com/vercel/ai/pull/8159.\n *\n * @param mediaType The media type to map.\n * @returns The corresponding file extension\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/MIME_types/Common_types\n */\nexport function mediaTypeToExtension(mediaType: string) {\n  const [_type, subtype = ''] = mediaType.toLowerCase().split('/');\n\n  return (\n    {\n      mpeg: 'mp3',\n      'x-wav': 'wav',\n      opus: 'ogg',\n      mp4: 'm4a',\n      'x-m4a': 'm4a',\n    }[subtype] ?? subtype\n  );\n}\n", "import {\n  JSONParseError,\n  JSONValue,\n  TypeValidationError,\n} from '@ai-sdk/provider';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport { secureJsonParse } from './secure-json-parse';\nimport { safeValidateTypes, validateTypes } from './validate-types';\nimport { Validator } from './validator';\n\n/**\n * Parses a JSON string into an unknown object.\n *\n * @param text - The JSON string to parse.\n * @returns {JSONValue} - The parsed JSON object.\n */\nexport async function parseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): Promise<JSONValue>;\n/**\n * Parses a JSON string into a strongly-typed object using the provided schema.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns {Promise<T>} - The parsed object.\n */\nexport async function parseJSON<T>(options: {\n  text: string;\n  schema: z4.core.$ZodType<T> | z3.Schema<T> | Validator<T>;\n}): Promise<T>;\nexport async function parseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: z4.core.$ZodType<T> | z3.Schema<T> | Validator<T>;\n}): Promise<T> {\n  try {\n    const value = secureJsonParse(text);\n\n    if (schema == null) {\n      return value;\n    }\n\n    return validateTypes<T>({ value, schema });\n  } catch (error) {\n    if (\n      JSONParseError.isInstance(error) ||\n      TypeValidationError.isInstance(error)\n    ) {\n      throw error;\n    }\n\n    throw new JSONParseError({ text, cause: error });\n  }\n}\n\nexport type ParseResult<T> =\n  | { success: true; value: T; rawValue: unknown }\n  | {\n      success: false;\n      error: JSONParseError | TypeValidationError;\n      rawValue: unknown;\n    };\n\n/**\n * Safely parses a JSON string and returns the result as an object of type `unknown`.\n *\n * @param text - The JSON string to parse.\n * @returns {Promise<object>} Either an object with `success: true` and the parsed data, or an object with `success: false` and the error that occurred.\n */\nexport async function safeParseJSON(options: {\n  text: string;\n  schema?: undefined;\n}): Promise<ParseResult<JSONValue>>;\n/**\n * Safely parses a JSON string into a strongly-typed object, using a provided schema to validate the object.\n *\n * @template T - The type of the object to parse the JSON into.\n * @param {string} text - The JSON string to parse.\n * @param {Validator<T>} schema - The schema to use for parsing the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport async function safeParseJSON<T>(options: {\n  text: string;\n  schema: z4.core.$ZodType<T> | z3.Schema<T> | Validator<T>;\n}): Promise<ParseResult<T>>;\nexport async function safeParseJSON<T>({\n  text,\n  schema,\n}: {\n  text: string;\n  schema?: z4.core.$ZodType<T> | z3.Schema<T> | Validator<T>;\n}): Promise<ParseResult<T>> {\n  try {\n    const value = secureJsonParse(text);\n\n    if (schema == null) {\n      return { success: true, value: value as T, rawValue: value };\n    }\n\n    return await safeValidateTypes<T>({ value, schema });\n  } catch (error) {\n    return {\n      success: false,\n      error: JSONParseError.isInstance(error)\n        ? error\n        : new JSONParseError({ text, cause: error }),\n      rawValue: undefined,\n    };\n  }\n}\n\nexport function isParsableJson(input: string): boolean {\n  try {\n    secureJsonParse(input);\n    return true;\n  } catch {\n    return false;\n  }\n}\n", "// Licensed under BSD-3-Clause (this file only)\n// Code adapted from https://github.com/fastify/secure-json-parse/blob/783fcb1b5434709466759847cec974381939673a/index.js\n//\n// Copyright (c) Vercel, Inc. (https://vercel.com)\n// Copyright (c) 2019 The Fastify Team\n// Copyright (c) 2019, Sideway Inc, and project contributors\n// All rights reserved.\n//\n// The complete list of contributors can be found at:\n// - https://github.com/hapijs/bourne/graphs/contributors\n// - https://github.com/fastify/secure-json-parse/graphs/contributors\n// - https://github.com/vercel/ai/commits/main/packages/provider-utils/src/secure-parse-json.ts\n//\n// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n//\n// 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nconst suspectProtoRx = /\"__proto__\"\\s*:/;\nconst suspectConstructorRx = /\"constructor\"\\s*:/;\n\nfunction _parse(text: string) {\n  // Parse normally\n  const obj = JSON.parse(text);\n\n  // Ignore null and non-objects\n  if (obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (\n    suspectProtoRx.test(text) === false &&\n    suspectConstructorRx.test(text) === false\n  ) {\n    return obj;\n  }\n\n  // Scan result for proto keys\n  return filter(obj);\n}\n\nfunction filter(obj: any) {\n  let next = [obj];\n\n  while (next.length) {\n    const nodes = next;\n    next = [];\n\n    for (const node of nodes) {\n      if (Object.prototype.hasOwnProperty.call(node, '__proto__')) {\n        throw new SyntaxError('Object contains forbidden prototype property');\n      }\n\n      if (\n        Object.prototype.hasOwnProperty.call(node, 'constructor') &&\n        Object.prototype.hasOwnProperty.call(node.constructor, 'prototype')\n      ) {\n        throw new SyntaxError('Object contains forbidden prototype property');\n      }\n\n      for (const key in node) {\n        const value = node[key];\n        if (value && typeof value === 'object') {\n          next.push(value);\n        }\n      }\n    }\n  }\n  return obj;\n}\n\nexport function secureJsonParse(text: string) {\n  // Performance optimization, see https://github.com/fastify/secure-json-parse/pull/90\n  const { stackTraceLimit } = Error;\n  Error.stackTraceLimit = 0;\n  try {\n    return _parse(text);\n  } finally {\n    Error.stackTraceLimit = stackTraceLimit;\n  }\n}\n", "import { TypeValidationError } from '@ai-sdk/provider';\nimport type { StandardSchemaV1 } from '@standard-schema/spec';\nimport { Validator, asValidator } from './validator';\n\n/**\n * Validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns {Promise<T>} - The typed object.\n */\nexport async function validateTypes<OBJECT>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: StandardSchemaV1<unknown, OBJECT> | Validator<OBJECT>;\n}): Promise<OBJECT> {\n  const result = await safeValidateTypes({ value, schema });\n\n  if (!result.success) {\n    throw TypeValidationError.wrap({ value, cause: result.error });\n  }\n\n  return result.value;\n}\n\n/**\n * Safely validates the types of an unknown object using a schema and\n * return a strongly-typed object.\n *\n * @template T - The type of the object to validate.\n * @param {string} options.value - The JSON object to validate.\n * @param {Validator<T>} options.schema - The schema to use for validating the JSON.\n * @returns An object with either a `success` flag and the parsed and typed data, or a `success` flag and an error object.\n */\nexport async function safeValidateTypes<OBJECT>({\n  value,\n  schema,\n}: {\n  value: unknown;\n  schema: StandardSchemaV1<unknown, OBJECT> | Validator<OBJECT>;\n}): Promise<\n  | {\n      success: true;\n      value: OBJECT;\n      rawValue: unknown;\n    }\n  | {\n      success: false;\n      error: TypeValidationError;\n      rawValue: unknown;\n    }\n> {\n  const validator = asValidator(schema);\n\n  try {\n    if (validator.validate == null) {\n      return { success: true, value: value as OBJECT, rawValue: value };\n    }\n\n    const result = await validator.validate(value);\n\n    if (result.success) {\n      return { success: true, value: result.value, rawValue: value };\n    }\n\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: result.error }),\n      rawValue: value,\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: TypeValidationError.wrap({ value, cause: error }),\n      rawValue: value,\n    };\n  }\n}\n", "import { TypeValidationError } from '@ai-sdk/provider';\nimport { StandardSchemaV1 } from '@standard-schema/spec';\n\n/**\n * Used to mark validator functions so we can support both Zod and custom schemas.\n */\nexport const validatorSymbol = Symbol.for('vercel.ai.validator');\n\nexport type ValidationResult<OBJECT> =\n  | { success: true; value: OBJECT }\n  | { success: false; error: Error };\n\nexport type Validator<OBJECT = unknown> = {\n  /**\n   * Used to mark validator functions so we can support both Zod and custom schemas.\n   */\n  [validatorSymbol]: true;\n\n  /**\n   * Optional. Validates that the structure of a value matches this schema,\n   * and returns a typed version of the value if it does.\n   */\n  readonly validate?: (\n    value: unknown,\n  ) => ValidationResult<OBJECT> | PromiseLike<ValidationResult<OBJECT>>;\n};\n\n/**\n * Create a validator.\n *\n * @param validate A validation function for the schema.\n */\nexport function validator<OBJECT>(\n  validate?:\n    | undefined\n    | ((\n        value: unknown,\n      ) => ValidationResult<OBJECT> | PromiseLike<ValidationResult<OBJECT>>),\n): Validator<OBJECT> {\n  return { [validatorSymbol]: true, validate };\n}\n\nexport function isValidator(value: unknown): value is Validator {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    validatorSymbol in value &&\n    value[validatorSymbol] === true &&\n    'validate' in value\n  );\n}\n\nexport function asValidator<OBJECT>(\n  value: Validator<OBJECT> | StandardSchemaV1<unknown, OBJECT>,\n): Validator<OBJECT> {\n  return isValidator(value) ? value : standardSchemaValidator(value);\n}\n\nexport function standardSchemaValidator<OBJECT>(\n  standardSchema: StandardSchemaV1<unknown, OBJECT>,\n): Validator<OBJECT> {\n  return validator(async value => {\n    const result = await standardSchema['~standard'].validate(value);\n\n    return result.issues == null\n      ? { success: true, value: result.value }\n      : {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: result.issues,\n          }),\n        };\n  });\n}\n", "import {\n  EventSourceMessage,\n  EventSourceParserStream,\n} from 'eventsource-parser/stream';\nimport { ZodType } from 'zod/v4';\nimport { ParseResult, safeParseJSON } from './parse-json';\n\n/**\n * Parses a JSON event stream into a stream of parsed JSON objects.\n */\nexport function parseJsonEventStream<T>({\n  stream,\n  schema,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  schema: ZodType<T>;\n}): ReadableStream<ParseResult<T>> {\n  return stream\n    .pipeThrough(new TextDecoderStream())\n    .pipeThrough(new EventSourceParserStream())\n    .pipeThrough(\n      new TransformStream<EventSourceMessage, ParseResult<T>>({\n        async transform({ data }, controller) {\n          // ignore the 'DONE' event that e.g. OpenAI sends:\n          if (data === '[DONE]') {\n            return;\n          }\n\n          controller.enqueue(await safeParseJSON({ text: data, schema }));\n        },\n      }),\n    );\n}\n", "import { InvalidArgumentError } from '@ai-sdk/provider';\nimport { safeValidateTypes } from './validate-types';\nimport { z } from 'zod/v4';\n\nexport async function parseProviderOptions<T>({\n  provider,\n  providerOptions,\n  schema,\n}: {\n  provider: string;\n  providerOptions: Record<string, unknown> | undefined;\n  schema: z.core.$ZodType<T, any>;\n}): Promise<T | undefined> {\n  if (providerOptions?.[provider] == null) {\n    return undefined;\n  }\n\n  const parsedProviderOptions = await safeValidateTypes<T | undefined>({\n    value: providerOptions[provider],\n    schema,\n  });\n\n  if (!parsedProviderOptions.success) {\n    throw new InvalidArgumentError({\n      argument: 'providerOptions',\n      message: `invalid ${provider} provider options`,\n      cause: parsedProviderOptions.error,\n    });\n  }\n\n  return parsedProviderOptions.value;\n}\n", "import { APICallError } from '@ai-sdk/provider';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { FetchFunction } from './fetch-function';\nimport { handleFetchError } from './handle-fetch-error';\nimport { isAbortError } from './is-abort-error';\nimport { removeUndefinedEntries } from './remove-undefined-entries';\nimport { ResponseHandler } from './response-handler';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => globalThis.fetch;\n\nexport const postJsonToApi = async <T>({\n  url,\n  headers,\n  body,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch,\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: unknown;\n  failedResponseHandler: ResponseHandler<APICallError>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) =>\n  postToApi({\n    url,\n    headers: {\n      'Content-Type': 'application/json',\n      ...headers,\n    },\n    body: {\n      content: JSON.stringify(body),\n      values: body,\n    },\n    failedResponseHandler,\n    successfulResponseHandler,\n    abortSignal,\n    fetch,\n  });\n\nexport const postFormDataToApi = async <T>({\n  url,\n  headers,\n  formData,\n  failedResponseHandler,\n  successfulResponseHandler,\n  abortSignal,\n  fetch,\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  formData: FormData;\n  failedResponseHandler: ResponseHandler<APICallError>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) =>\n  postToApi({\n    url,\n    headers,\n    body: {\n      content: formData,\n      values: Object.fromEntries((formData as any).entries()),\n    },\n    failedResponseHandler,\n    successfulResponseHandler,\n    abortSignal,\n    fetch,\n  });\n\nexport const postToApi = async <T>({\n  url,\n  headers = {},\n  body,\n  successfulResponseHandler,\n  failedResponseHandler,\n  abortSignal,\n  fetch = getOriginalFetch(),\n}: {\n  url: string;\n  headers?: Record<string, string | undefined>;\n  body: {\n    content: string | FormData | Uint8Array;\n    values: unknown;\n  };\n  failedResponseHandler: ResponseHandler<Error>;\n  successfulResponseHandler: ResponseHandler<T>;\n  abortSignal?: AbortSignal;\n  fetch?: FetchFunction;\n}) => {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: removeUndefinedEntries(headers),\n      body: body.content,\n      signal: abortSignal,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.ok) {\n      let errorInformation: {\n        value: Error;\n        responseHeaders?: Record<string, string> | undefined;\n      };\n\n      try {\n        errorInformation = await failedResponseHandler({\n          response,\n          url,\n          requestBodyValues: body.values,\n        });\n      } catch (error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n\n        throw new APICallError({\n          message: 'Failed to process error response',\n          cause: error,\n          statusCode: response.status,\n          url,\n          responseHeaders,\n          requestBodyValues: body.values,\n        });\n      }\n\n      throw errorInformation.value;\n    }\n\n    try {\n      return await successfulResponseHandler({\n        response,\n        url,\n        requestBodyValues: body.values,\n      });\n    } catch (error) {\n      if (error instanceof Error) {\n        if (isAbortError(error) || APICallError.isInstance(error)) {\n          throw error;\n        }\n      }\n\n      throw new APICallError({\n        message: 'Failed to process successful response',\n        cause: error,\n        statusCode: response.status,\n        url,\n        responseHeaders,\n        requestBodyValues: body.values,\n      });\n    }\n  } catch (error) {\n    throw handleFetchError({ error, url, requestBodyValues: body.values });\n  }\n};\n", "import { JSONValue, LanguageModelV2ToolResultPart } from '@ai-sdk/provider';\nimport { FlexibleSchema } from '../schema';\nimport { ModelMessage } from './model-message';\nimport { ProviderOptions } from './provider-options';\n\n/**\n * Additional options that are sent into each tool call.\n */\n// TODO AI SDK 6: rename to ToolExecutionOptions\nexport interface ToolCallOptions {\n  /**\n   * The ID of the tool call. You can use it e.g. when sending tool-call related information with stream data.\n   */\n  toolCallId: string;\n\n  /**\n   * Messages that were sent to the language model to initiate the response that contained the tool call.\n   * The messages **do not** include the system prompt nor the assistant response that contained the tool call.\n   */\n  messages: ModelMessage[];\n\n  /**\n   * An optional abort signal that indicates that the overall operation should be aborted.\n   */\n  abortSignal?: AbortSignal;\n\n  /**\n   * Additional context.\n   *\n   * Experimental (can break in patch releases).\n   */\n  experimental_context?: unknown;\n}\n\nexport type ToolExecuteFunction<INPUT, OUTPUT> = (\n  input: INPUT,\n  options: ToolCallOptions,\n) => AsyncIterable<OUTPUT> | PromiseLike<OUTPUT> | OUTPUT;\n\n// 0 extends 1 & N checks for any\n// [N] extends [never] checks for never\ntype NeverOptional<N, T> = 0 extends 1 & N\n  ? Partial<T>\n  : [N] extends [never]\n    ? Partial<Record<keyof T, undefined>>\n    : T;\n\n/**\nA tool contains the description and the schema of the input that the tool expects.\nThis enables the language model to generate the input.\n\nThe tool can also contain an optional execute function for the actual execution function of the tool.\n */\nexport type Tool<\n  INPUT extends JSONValue | unknown | never = any,\n  OUTPUT extends JSONValue | unknown | never = any,\n> = {\n  /**\nAn optional description of what the tool does.\nWill be used by the language model to decide whether to use the tool.\nNot used for provider-defined tools.\n   */\n  description?: string;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n   */\n  providerOptions?: ProviderOptions;\n\n  /**\nThe schema of the input that the tool expects. The language model will use this to generate the input.\nIt is also used to validate the output of the language model.\nUse descriptions to make the input understandable for the language model.\n   */\n  inputSchema: FlexibleSchema<INPUT>;\n\n  /**\n   * Optional function that is called when the argument streaming starts.\n   * Only called when the tool is used in a streaming context.\n   */\n  onInputStart?: (options: ToolCallOptions) => void | PromiseLike<void>;\n\n  /**\n   * Optional function that is called when an argument streaming delta is available.\n   * Only called when the tool is used in a streaming context.\n   */\n  onInputDelta?: (\n    options: { inputTextDelta: string } & ToolCallOptions,\n  ) => void | PromiseLike<void>;\n\n  /**\n   * Optional function that is called when a tool call can be started,\n   * even if the execute function is not provided.\n   */\n  onInputAvailable?: (\n    options: {\n      input: [INPUT] extends [never] ? undefined : INPUT;\n    } & ToolCallOptions,\n  ) => void | PromiseLike<void>;\n} & NeverOptional<\n  OUTPUT,\n  {\n    /**\nOptional conversion function that maps the tool result to an output that can be used by the language model.\n\nIf not provided, the tool result will be sent as a JSON object.\n      */\n    toModelOutput?: (output: OUTPUT) => LanguageModelV2ToolResultPart['output'];\n  } & (\n    | {\n        /**\nAn async function that is called with the arguments from the tool call and produces a result.\nIf not provided, the tool will not be executed automatically.\n\n@args is the input of the tool call.\n@options.abortSignal is a signal that can be used to abort the tool call.\n      */\n        execute: ToolExecuteFunction<INPUT, OUTPUT>;\n\n        outputSchema?: FlexibleSchema<OUTPUT>;\n      }\n    | {\n        outputSchema: FlexibleSchema<OUTPUT>;\n\n        execute?: never;\n      }\n  )\n> &\n  (\n    | {\n        /**\nTool with user-defined input and output schemas.\n     */\n        type?: undefined | 'function';\n      }\n    | {\n        /**\nTool that is defined at runtime (e.g. an MCP tool).\nThe types of input and output are not known at development time.\n       */\n        type: 'dynamic';\n      }\n    | {\n        /**\nTool with provider-defined input and output schemas.\n     */\n        type: 'provider-defined';\n\n        /**\nThe ID of the tool. Should follow the format `<provider-name>.<unique-tool-name>`.\n   */\n        id: `${string}.${string}`;\n\n        /**\nThe name of the tool that the user must use in the tool set.\n */\n        name: string;\n\n        /**\nThe arguments for configuring the tool. Must match the expected arguments defined by the provider for this tool.\n     */\n        args: Record<string, unknown>;\n      }\n  );\n\n/**\n * Infer the input type of a tool.\n */\nexport type InferToolInput<TOOL extends Tool> =\n  TOOL extends Tool<infer INPUT, any> ? INPUT : never;\n\n/**\n * Infer the output type of a tool.\n */\nexport type InferToolOutput<TOOL extends Tool> =\n  TOOL extends Tool<any, infer OUTPUT> ? OUTPUT : never;\n\n/**\nHelper function for inferring the execute args of a tool.\n */\n// Note: overload order is important for auto-completion\nexport function tool<INPUT, OUTPUT>(\n  tool: Tool<INPUT, OUTPUT>,\n): Tool<INPUT, OUTPUT>;\nexport function tool<INPUT>(tool: Tool<INPUT, never>): Tool<INPUT, never>;\nexport function tool<OUTPUT>(tool: Tool<never, OUTPUT>): Tool<never, OUTPUT>;\nexport function tool(tool: Tool<never, never>): Tool<never, never>;\nexport function tool(tool: any): any {\n  return tool;\n}\n\n/**\nHelper function for defining a dynamic tool.\n */\nexport function dynamicTool(tool: {\n  description?: string;\n  providerOptions?: ProviderOptions;\n  inputSchema: FlexibleSchema<unknown>;\n  execute: ToolExecuteFunction<unknown, unknown>;\n  toModelOutput?: (output: unknown) => LanguageModelV2ToolResultPart['output'];\n}): Tool<unknown, unknown> & {\n  type: 'dynamic';\n} {\n  return { ...tool, type: 'dynamic' };\n}\n", "import { tool, Tool, ToolExecuteFunction } from './types/tool';\nimport { FlexibleSchema } from './schema';\n\nexport type ProviderDefinedToolFactory<INPUT, ARGS extends object> = <OUTPUT>(\n  options: ARGS & {\n    execute?: ToolExecuteFunction<INPUT, OUTPUT>;\n    toModelOutput?: Tool<INPUT, OUTPUT>['toModelOutput'];\n    onInputStart?: Tool<INPUT, OUTPUT>['onInputStart'];\n    onInputDelta?: Tool<INPUT, OUTPUT>['onInputDelta'];\n    onInputAvailable?: Tool<INPUT, OUTPUT>['onInputAvailable'];\n  },\n) => Tool<INPUT, OUTPUT>;\n\nexport function createProviderDefinedToolFactory<INPUT, ARGS extends object>({\n  id,\n  name,\n  inputSchema,\n}: {\n  id: `${string}.${string}`;\n  name: string;\n  inputSchema: FlexibleSchema<INPUT>;\n}): ProviderDefinedToolFactory<INPUT, ARGS> {\n  return <OUTPUT>({\n    execute,\n    outputSchema,\n    toModelOutput,\n    onInputStart,\n    onInputDelta,\n    onInputAvailable,\n    ...args\n  }: ARGS & {\n    execute?: ToolExecuteFunction<INPUT, OUTPUT>;\n    outputSchema?: FlexibleSchema<OUTPUT>;\n    toModelOutput?: Tool<INPUT, OUTPUT>['toModelOutput'];\n    onInputStart?: Tool<INPUT, OUTPUT>['onInputStart'];\n    onInputDelta?: Tool<INPUT, OUTPUT>['onInputDelta'];\n    onInputAvailable?: Tool<INPUT, OUTPUT>['onInputAvailable'];\n  }): Tool<INPUT, OUTPUT> =>\n    tool({\n      type: 'provider-defined',\n      id,\n      name,\n      args,\n      inputSchema,\n      outputSchema,\n      execute,\n      toModelOutput,\n      onInputStart,\n      onInputDelta,\n      onInputAvailable,\n    });\n}\n\nexport type ProviderDefinedToolFactoryWithOutputSchema<\n  INPUT,\n  OUTPUT,\n  ARGS extends object,\n> = (\n  options: ARGS & {\n    execute?: ToolExecuteFunction<INPUT, OUTPUT>;\n    toModelOutput?: Tool<INPUT, OUTPUT>['toModelOutput'];\n    onInputStart?: Tool<INPUT, OUTPUT>['onInputStart'];\n    onInputDelta?: Tool<INPUT, OUTPUT>['onInputDelta'];\n    onInputAvailable?: Tool<INPUT, OUTPUT>['onInputAvailable'];\n  },\n) => Tool<INPUT, OUTPUT>;\n\nexport function createProviderDefinedToolFactoryWithOutputSchema<\n  INPUT,\n  OUTPUT,\n  ARGS extends object,\n>({\n  id,\n  name,\n  inputSchema,\n  outputSchema,\n}: {\n  id: `${string}.${string}`;\n  name: string;\n  inputSchema: FlexibleSchema<INPUT>;\n  outputSchema: FlexibleSchema<OUTPUT>;\n}): ProviderDefinedToolFactoryWithOutputSchema<INPUT, OUTPUT, ARGS> {\n  return ({\n    execute,\n    toModelOutput,\n    onInputStart,\n    onInputDelta,\n    onInputAvailable,\n    ...args\n  }: ARGS & {\n    execute?: ToolExecuteFunction<INPUT, OUTPUT>;\n    toModelOutput?: Tool<INPUT, OUTPUT>['toModelOutput'];\n    onInputStart?: Tool<INPUT, OUTPUT>['onInputStart'];\n    onInputDelta?: Tool<INPUT, OUTPUT>['onInputDelta'];\n    onInputAvailable?: Tool<INPUT, OUTPUT>['onInputAvailable'];\n  }): Tool<INPUT, OUTPUT> =>\n    tool({\n      type: 'provider-defined',\n      id,\n      name,\n      args,\n      inputSchema,\n      outputSchema,\n      execute,\n      toModelOutput,\n      onInputStart,\n      onInputDelta,\n      onInputAvailable,\n    });\n}\n", "export type Resolvable<T> =\n  | T // Raw value\n  | Promise<T> // Promise of value\n  | (() => T) // Function returning value\n  | (() => Promise<T>); // Function returning promise of value\n\n/**\n * Resolves a value that could be a raw value, a Promise, a function returning a value,\n * or a function returning a Promise.\n */\nexport async function resolve<T>(value: Resolvable<T>): Promise<T> {\n  // If it's a function, call it to get the value/promise\n  if (typeof value === 'function') {\n    value = (value as Function)();\n  }\n\n  // Otherwise just resolve whatever we got (value or promise)\n  return Promise.resolve(value as T);\n}\n", "import { APICallError, EmptyResponseBodyError } from '@ai-sdk/provider';\nimport { ZodType } from 'zod/v4';\nimport { extractResponseHeaders } from './extract-response-headers';\nimport { parseJSON, ParseResult, safeParseJSON } from './parse-json';\nimport { parseJsonEventStream } from './parse-json-event-stream';\n\nexport type ResponseHandler<RETURN_TYPE> = (options: {\n  url: string;\n  requestBodyValues: unknown;\n  response: Response;\n}) => PromiseLike<{\n  value: RETURN_TYPE;\n  rawValue?: unknown;\n  responseHeaders?: Record<string, string>;\n}>;\n\nexport const createJsonErrorResponseHandler =\n  <T>({\n    errorSchema,\n    errorToMessage,\n    isRetryable,\n  }: {\n    errorSchema: ZodType<T>;\n    errorToMessage: (error: T) => string;\n    isRetryable?: (response: Response, error?: T) => boolean;\n  }): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n    const responseHeaders = extractResponseHeaders(response);\n\n    // Some providers return an empty response body for some errors:\n    if (responseBody.trim() === '') {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n\n    // resilient parsing in case the response is not JSON or does not match the schema:\n    try {\n      const parsedError = await parseJSON({\n        text: responseBody,\n        schema: errorSchema,\n      });\n\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: errorToMessage(parsedError),\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          data: parsedError,\n          isRetryable: isRetryable?.(response, parsedError),\n        }),\n      };\n    } catch (parseError) {\n      return {\n        responseHeaders,\n        value: new APICallError({\n          message: response.statusText,\n          url,\n          requestBodyValues,\n          statusCode: response.status,\n          responseHeaders,\n          responseBody,\n          isRetryable: isRetryable?.(response),\n        }),\n      };\n    }\n  };\n\nexport const createEventSourceResponseHandler =\n  <T>(\n    chunkSchema: ZodType<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    return {\n      responseHeaders,\n      value: parseJsonEventStream({\n        stream: response.body,\n        schema: chunkSchema,\n      }),\n    };\n  };\n\nexport const createJsonStreamResponseHandler =\n  <T>(\n    chunkSchema: ZodType<T>,\n  ): ResponseHandler<ReadableStream<ParseResult<T>>> =>\n  async ({ response }: { response: Response }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (response.body == null) {\n      throw new EmptyResponseBodyError({});\n    }\n\n    let buffer = '';\n\n    return {\n      responseHeaders,\n      value: response.body.pipeThrough(new TextDecoderStream()).pipeThrough(\n        new TransformStream<string, ParseResult<T>>({\n          async transform(chunkText, controller) {\n            if (chunkText.endsWith('\\n')) {\n              controller.enqueue(\n                await safeParseJSON({\n                  text: buffer + chunkText,\n                  schema: chunkSchema,\n                }),\n              );\n              buffer = '';\n            } else {\n              buffer += chunkText;\n            }\n          },\n        }),\n      ),\n    };\n  };\n\nexport const createJsonResponseHandler =\n  <T>(responseSchema: ZodType<T>): ResponseHandler<T> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseBody = await response.text();\n\n    const parsedResult = await safeParseJSON({\n      text: responseBody,\n      schema: responseSchema,\n    });\n\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!parsedResult.success) {\n      throw new APICallError({\n        message: 'Invalid JSON response',\n        cause: parsedResult.error,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n        url,\n        requestBodyValues,\n      });\n    }\n\n    return {\n      responseHeaders,\n      value: parsedResult.value,\n      rawValue: parsedResult.rawValue,\n    };\n  };\n\nexport const createBinaryResponseHandler =\n  (): ResponseHandler<Uint8Array> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseHeaders = extractResponseHeaders(response);\n\n    if (!response.body) {\n      throw new APICallError({\n        message: 'Response body is empty',\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody: undefined,\n      });\n    }\n\n    try {\n      const buffer = await response.arrayBuffer();\n      return {\n        responseHeaders,\n        value: new Uint8Array(buffer),\n      };\n    } catch (error) {\n      throw new APICallError({\n        message: 'Failed to read response as array buffer',\n        url,\n        requestBodyValues,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody: undefined,\n        cause: error,\n      });\n    }\n  };\n\nexport const createStatusCodeErrorResponseHandler =\n  (): ResponseHandler<APICallError> =>\n  async ({ response, url, requestBodyValues }) => {\n    const responseHeaders = extractResponseHeaders(response);\n    const responseBody = await response.text();\n\n    return {\n      responseHeaders,\n      value: new APICallError({\n        message: response.statusText,\n        url,\n        requestBodyValues: requestBodyValues as Record<string, unknown>,\n        statusCode: response.status,\n        responseHeaders,\n        responseBody,\n      }),\n    };\n  };\n", "import { JSONSchema7 } from '@ai-sdk/provider';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport zodToJsonSchema from './zod-to-json-schema';\nimport { jsonSchema, Schema } from './schema';\n\nexport function zod3Schema<OBJECT>(\n  zodSchema: z3.Schema<OBJECT, z3.ZodTypeDef, any>,\n  options?: {\n    /**\n     * Enables support for references in the schema.\n     * This is required for recursive schemas, e.g. with `z.lazy`.\n     * However, not all language models and providers support such references.\n     * Defaults to `false`.\n     */\n    useReferences?: boolean;\n  },\n): Schema<OBJECT> {\n  // default to no references (to support openapi conversion for google)\n  const useReferences = options?.useReferences ?? false;\n\n  return jsonSchema(\n    zodToJsonSchema(zodSchema, {\n      $refStrategy: useReferences ? 'root' : 'none',\n    }) as JSONSchema7,\n    {\n      validate: async value => {\n        const result = await zodSchema.safeParseAsync(value);\n        return result.success\n          ? { success: true, value: result.data }\n          : { success: false, error: result.error };\n      },\n    },\n  );\n}\n\nexport function zod4Schema<OBJECT>(\n  zodSchema: z4.core.$ZodType<OBJECT, any>,\n  options?: {\n    /**\n     * Enables support for references in the schema.\n     * This is required for recursive schemas, e.g. with `z.lazy`.\n     * However, not all language models and providers support such references.\n     * Defaults to `false`.\n     */\n    useReferences?: boolean;\n  },\n): Schema<OBJECT> {\n  // default to no references (to support openapi conversion for google)\n  const useReferences = options?.useReferences ?? false;\n\n  const z4JSONSchema = z4.toJSONSchema(zodSchema, {\n    target: 'draft-7',\n    io: 'output',\n    reused: useReferences ? 'ref' : 'inline',\n  }) as JSONSchema7;\n\n  return jsonSchema(z4JSONSchema, {\n    validate: async value => {\n      const result = await z4.safeParseAsync(zodSchema, value);\n      return result.success\n        ? { success: true, value: result.data }\n        : { success: false, error: result.error };\n    },\n  });\n}\n\nexport function isZod4Schema(\n  zodSchema: z4.core.$ZodType<any, any> | z3.Schema<any, z3.ZodTypeDef, any>,\n): zodSchema is z4.core.$ZodType<any, any> {\n  // https://zod.dev/library-authors?id=how-to-support-zod-3-and-zod-4-simultaneously\n  return '_zod' in zodSchema;\n}\n\nexport function zodSchema<OBJECT>(\n  zodSchema:\n    | z4.core.$ZodType<OBJECT, any>\n    | z3.Schema<OBJECT, z3.ZodTypeDef, any>,\n  options?: {\n    /**\n     * Enables support for references in the schema.\n     * This is required for recursive schemas, e.g. with `z.lazy`.\n     * However, not all language models and providers support such references.\n     * Defaults to `false`.\n     */\n    useReferences?: boolean;\n  },\n): Schema<OBJECT> {\n  if (isZod4Schema(zodSchema)) {\n    return zod4Schema(zodSchema, options);\n  } else {\n    return zod3Schema(zodSchema, options);\n  }\n}\n", "export const getRelativePath = (pathA: string[], pathB: string[]) => {\n  let i = 0;\n  for (; i < pathA.length && i < pathB.length; i++) {\n    if (pathA[i] !== pathB[i]) break;\n  }\n  return [(pathA.length - i).toString(), ...pathB.slice(i)].join('/');\n};\n", "import { ZodSchema, ZodTypeDef } from 'zod/v3';\nimport { Refs, Seen } from './refs';\nimport { JsonSchema7Type } from './parse-types';\n\nexport type DateStrategy =\n  | 'format:date-time'\n  | 'format:date'\n  | 'string'\n  | 'integer';\n\nexport const ignoreOverride = Symbol(\n  'Let zodToJsonSchema decide on which parser to use',\n);\n\nexport type OverrideCallback = (\n  def: ZodTypeDef,\n  refs: Refs,\n  seen: Seen | undefined,\n  forceResolution?: boolean,\n) => JsonSchema7Type | undefined | typeof ignoreOverride;\n\nexport type PostProcessCallback = (\n  jsonSchema: JsonSchema7Type | undefined,\n  def: ZodTypeDef,\n  refs: Refs,\n) => JsonSchema7Type | undefined;\n\nexport const jsonDescription: PostProcessCallback = (jsonSchema, def) => {\n  if (def.description) {\n    try {\n      return {\n        ...jsonSchema,\n        ...JSON.parse(def.description),\n      };\n    } catch {}\n  }\n\n  return jsonSchema;\n};\n\nexport type Options = {\n  name: string | undefined;\n  $refStrategy: 'root' | 'relative' | 'none' | 'seen';\n  basePath: string[];\n  effectStrategy: 'input' | 'any';\n  pipeStrategy: 'input' | 'output' | 'all';\n  dateStrategy: DateStrategy | DateStrategy[];\n  mapStrategy: 'entries' | 'record';\n  removeAdditionalStrategy: 'passthrough' | 'strict';\n  allowedAdditionalProperties: true | undefined;\n  rejectedAdditionalProperties: false | undefined;\n  strictUnions: boolean;\n  definitionPath: string;\n  definitions: Record<string, ZodSchema>;\n  errorMessages: boolean;\n  patternStrategy: 'escape' | 'preserve';\n  applyRegexFlags: boolean;\n  emailStrategy: 'format:email' | 'format:idn-email' | 'pattern:zod';\n  base64Strategy: 'format:binary' | 'contentEncoding:base64' | 'pattern:zod';\n  nameStrategy: 'ref' | 'title';\n  override?: OverrideCallback;\n  postProcess?: PostProcessCallback;\n};\n\nexport const defaultOptions: Options = {\n  name: undefined,\n  $refStrategy: 'root',\n  basePath: ['#'],\n  effectStrategy: 'input',\n  pipeStrategy: 'all',\n  dateStrategy: 'format:date-time',\n  mapStrategy: 'entries',\n  removeAdditionalStrategy: 'passthrough',\n  allowedAdditionalProperties: true,\n  rejectedAdditionalProperties: false,\n  definitionPath: 'definitions',\n  strictUnions: false,\n  definitions: {},\n  errorMessages: false,\n  patternStrategy: 'escape',\n  applyRegexFlags: false,\n  emailStrategy: 'format:email',\n  base64Strategy: 'contentEncoding:base64',\n  nameStrategy: 'ref',\n};\n\nexport const getDefaultOptions = (\n  options: Partial<Options> | string | undefined,\n) =>\n  (typeof options === 'string'\n    ? {\n        ...defaultOptions,\n        name: options,\n      }\n    : {\n        ...defaultOptions,\n        ...options,\n      }) as Options;\n", "import { ZodFirstPartyTypeKind } from 'zod/v3';\nimport { parseAnyDef } from './parsers/any';\nimport { parseArrayDef } from './parsers/array';\nimport { parseBigintDef } from './parsers/bigint';\nimport { parseBooleanDef } from './parsers/boolean';\nimport { parseBrandedDef } from './parsers/branded';\nimport { parseCatchDef } from './parsers/catch';\nimport { parseDateDef } from './parsers/date';\nimport { parseDefaultDef } from './parsers/default';\nimport { parseEffectsDef } from './parsers/effects';\nimport { parseEnumDef } from './parsers/enum';\nimport { parseIntersectionDef } from './parsers/intersection';\nimport { parseLiteralDef } from './parsers/literal';\nimport { parseMapDef } from './parsers/map';\nimport { parseNativeEnumDef } from './parsers/native-enum';\nimport { parseNeverDef } from './parsers/never';\nimport { parseNullDef } from './parsers/null';\nimport { parseNullableDef } from './parsers/nullable';\nimport { parseNumberDef } from './parsers/number';\nimport { parseObjectDef } from './parsers/object';\nimport { parseOptionalDef } from './parsers/optional';\nimport { parsePipelineDef } from './parsers/pipeline';\nimport { parsePromiseDef } from './parsers/promise';\nimport { parseRecordDef } from './parsers/record';\nimport { parseSetDef } from './parsers/set';\nimport { parseStringDef } from './parsers/string';\nimport { parseTupleDef } from './parsers/tuple';\nimport { parseUndefinedDef } from './parsers/undefined';\nimport { parseUnionDef } from './parsers/union';\nimport { parseUnknownDef } from './parsers/unknown';\nimport { Refs } from './refs';\nimport { parseReadonlyDef } from './parsers/readonly';\nimport { JsonSchema7Type } from './parse-types';\n\nexport type InnerDefGetter = () => any;\n\nexport const selectParser = (\n  def: any,\n  typeName: ZodFirstPartyTypeKind,\n  refs: Refs,\n): JsonSchema7Type | undefined | InnerDefGetter => {\n  switch (typeName) {\n    case ZodFirstPartyTypeKind.ZodString:\n      return parseStringDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodNumber:\n      return parseNumberDef(def);\n    case ZodFirstPartyTypeKind.ZodObject:\n      return parseObjectDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBigInt:\n      return parseBigintDef(def);\n    case ZodFirstPartyTypeKind.ZodBoolean:\n      return parseBooleanDef();\n    case ZodFirstPartyTypeKind.ZodDate:\n      return parseDateDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodUndefined:\n      return parseUndefinedDef();\n    case ZodFirstPartyTypeKind.ZodNull:\n      return parseNullDef();\n    case ZodFirstPartyTypeKind.ZodArray:\n      return parseArrayDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodUnion:\n    case ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\n      return parseUnionDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodIntersection:\n      return parseIntersectionDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodTuple:\n      return parseTupleDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodRecord:\n      return parseRecordDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodLiteral:\n      return parseLiteralDef(def);\n    case ZodFirstPartyTypeKind.ZodEnum:\n      return parseEnumDef(def);\n    case ZodFirstPartyTypeKind.ZodNativeEnum:\n      return parseNativeEnumDef(def);\n    case ZodFirstPartyTypeKind.ZodNullable:\n      return parseNullableDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodOptional:\n      return parseOptionalDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodMap:\n      return parseMapDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodSet:\n      return parseSetDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodLazy:\n      return () => (def as any).getter()._def;\n    case ZodFirstPartyTypeKind.ZodPromise:\n      return parsePromiseDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodNaN:\n    case ZodFirstPartyTypeKind.ZodNever:\n      return parseNeverDef();\n    case ZodFirstPartyTypeKind.ZodEffects:\n      return parseEffectsDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodAny:\n      return parseAnyDef();\n    case ZodFirstPartyTypeKind.ZodUnknown:\n      return parseUnknownDef();\n    case ZodFirstPartyTypeKind.ZodDefault:\n      return parseDefaultDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodBranded:\n      return parseBrandedDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodReadonly:\n      return parseReadonlyDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodCatch:\n      return parseCatchDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodPipeline:\n      return parsePipelineDef(def, refs);\n    case ZodFirstPartyTypeKind.ZodFunction:\n    case ZodFirstPartyTypeKind.ZodVoid:\n    case ZodFirstPartyTypeKind.ZodSymbol:\n      return undefined;\n    default:\n      /* c8 ignore next */\n      return ((_: never) => undefined)(typeName);\n  }\n};\n", "export type JsonSchema7AnyType = { $ref?: string };\n\nexport function parseAnyDef(): JsonSchema7AnyType {\n  return {};\n}\n", "import { ZodArrayDef, ZodFirstPartyTypeKind } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\n\nexport type JsonSchema7ArrayType = {\n  type: 'array';\n  items?: JsonSchema7Type;\n  minItems?: number;\n  maxItems?: number;\n};\n\nexport function parseArrayDef(def: ZodArrayDef, refs: Refs) {\n  const res: JsonSchema7ArrayType = {\n    type: 'array',\n  };\n  if (\n    def.type?._def &&\n    def.type?._def?.typeName !== ZodFirstPartyTypeKind.ZodAny\n  ) {\n    res.items = parseDef(def.type._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, 'items'],\n    });\n  }\n\n  if (def.minLength) {\n    res.minItems = def.minLength.value;\n  }\n  if (def.maxLength) {\n    res.maxItems = def.maxLength.value;\n  }\n  if (def.exactLength) {\n    res.minItems = def.exactLength.value;\n    res.maxItems = def.exactLength.value;\n  }\n  return res;\n}\n", "import { ZodBigIntDef } from 'zod/v3';\n\nexport type JsonSchema7BigintType = {\n  type: 'integer';\n  format: 'int64';\n  minimum?: BigInt;\n  exclusiveMinimum?: BigInt;\n  maximum?: BigInt;\n  exclusiveMaximum?: BigInt;\n  multipleOf?: BigInt;\n};\n\nexport function parseBigintDef(def: ZodBigIntDef): JsonSchema7BigintType {\n  const res: JsonSchema7BigintType = {\n    type: 'integer',\n    format: 'int64',\n  };\n\n  if (!def.checks) return res;\n\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case 'min':\n        if (check.inclusive) {\n          res.minimum = check.value;\n        } else {\n          res.exclusiveMinimum = check.value;\n        }\n        break;\n      case 'max':\n        if (check.inclusive) {\n          res.maximum = check.value;\n        } else {\n          res.exclusiveMaximum = check.value;\n        }\n\n        break;\n      case 'multipleOf':\n        res.multipleOf = check.value;\n        break;\n    }\n  }\n  return res;\n}\n", "export type JsonSchema7BooleanType = {\n  type: 'boolean';\n};\n\nexport function parseBooleanDef(): JsonSchema7BooleanType {\n  return { type: 'boolean' };\n}\n", "import { ZodBrandedDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { Refs } from '../refs';\n\nexport function parseBrandedDef(_def: ZodBrandedDef<any>, refs: Refs) {\n  return parseDef(_def.type._def, refs);\n}\n", "import { ZodCatchDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { Refs } from '../refs';\n\nexport const parseCatchDef = (def: ZodCatchDef<any>, refs: Refs) => {\n  return parseDef(def.innerType._def, refs);\n};\n", "import { ZodDateDef } from 'zod/v3';\nimport { Refs } from '../refs';\nimport { DateStrategy } from '../options';\n\nexport type JsonSchema7DateType =\n  | {\n      type: 'integer' | 'string';\n      format: 'unix-time' | 'date-time' | 'date';\n      minimum?: number;\n      maximum?: number;\n    }\n  | {\n      anyOf: JsonSchema7DateType[];\n    };\n\nexport function parseDateDef(\n  def: ZodDateDef,\n  refs: Refs,\n  overrideDateStrategy?: DateStrategy,\n): JsonSchema7DateType {\n  const strategy = overrideDateStrategy ?? refs.dateStrategy;\n\n  if (Array.isArray(strategy)) {\n    return {\n      anyOf: strategy.map((item, i) => parseDateDef(def, refs, item)),\n    };\n  }\n\n  switch (strategy) {\n    case 'string':\n    case 'format:date-time':\n      return {\n        type: 'string',\n        format: 'date-time',\n      };\n    case 'format:date':\n      return {\n        type: 'string',\n        format: 'date',\n      };\n    case 'integer':\n      return integerDateParser(def);\n  }\n}\n\nconst integerDateParser = (def: ZodDateDef) => {\n  const res: JsonSchema7DateType = {\n    type: 'integer',\n    format: 'unix-time',\n  };\n\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case 'min':\n        res.minimum = check.value;\n        break;\n      case 'max':\n        res.maximum = check.value;\n        break;\n    }\n  }\n\n  return res;\n};\n", "import { ZodDefaultDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\n\nexport function parseDefaultDef(\n  _def: ZodDefaultDef,\n  refs: Refs,\n): JsonSchema7Type & { default: any } {\n  return {\n    ...parseDef(_def.innerType._def, refs),\n    default: _def.defaultValue(),\n  };\n}\n", "import { ZodEffectsDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\nimport { parseAnyDef } from './any';\n\nexport function parseEffectsDef(\n  _def: ZodEffectsDef,\n  refs: Refs,\n): JsonSchema7Type | undefined {\n  return refs.effectStrategy === 'input'\n    ? parseDef(_def.schema._def, refs)\n    : parseAnyDef();\n}\n", "import { ZodEnumDef } from 'zod/v3';\n\nexport type JsonSchema7EnumType = {\n  type: 'string';\n  enum: string[];\n};\n\nexport function parseEnumDef(def: ZodEnumDef): JsonSchema7EnumType {\n  return {\n    type: 'string',\n    enum: Array.from(def.values),\n  };\n}\n", "import { ZodIntersectionDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\nimport { JsonSchema7StringType } from './string';\n\nexport type JsonSchema7AllOfType = {\n  allOf: JsonSchema7Type[];\n  unevaluatedProperties?: boolean;\n};\n\nconst isJsonSchema7AllOfType = (\n  type: JsonSchema7Type | JsonSchema7StringType,\n): type is JsonSchema7AllOfType => {\n  if ('type' in type && type.type === 'string') return false;\n  return 'allOf' in type;\n};\n\nexport function parseIntersectionDef(\n  def: ZodIntersectionDef,\n  refs: Refs,\n): JsonSchema7AllOfType | JsonSchema7Type | undefined {\n  const allOf = [\n    parseDef(def.left._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, 'allOf', '0'],\n    }),\n    parseDef(def.right._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, 'allOf', '1'],\n    }),\n  ].filter((x): x is JsonSchema7Type => !!x);\n\n  const mergedAllOf: JsonSchema7Type[] = [];\n  // If either of the schemas is an allOf, merge them into a single allOf\n  allOf.forEach(schema => {\n    if (isJsonSchema7AllOfType(schema)) {\n      mergedAllOf.push(...schema.allOf);\n    } else {\n      let nestedSchema: JsonSchema7Type = schema;\n      if (\n        'additionalProperties' in schema &&\n        schema.additionalProperties === false\n      ) {\n        const { additionalProperties, ...rest } = schema;\n        nestedSchema = rest;\n      }\n      mergedAllOf.push(nestedSchema);\n    }\n  });\n  return mergedAllOf.length ? { allOf: mergedAllOf } : undefined;\n}\n", "import { ZodLiteralDef } from 'zod/v3';\n\nexport type JsonSchema7LiteralType =\n  | {\n      type: 'string' | 'number' | 'integer' | 'boolean';\n      const: string | number | boolean;\n    }\n  | {\n      type: 'object' | 'array';\n    };\n\nexport function parseLiteralDef(def: ZodLiteralDef): JsonSchema7LiteralType {\n  const parsedType = typeof def.value;\n  if (\n    parsedType !== 'bigint' &&\n    parsedType !== 'number' &&\n    parsedType !== 'boolean' &&\n    parsedType !== 'string'\n  ) {\n    return {\n      type: Array.isArray(def.value) ? 'array' : 'object',\n    };\n  }\n\n  return {\n    type: parsedType === 'bigint' ? 'integer' : parsedType,\n    const: def.value,\n  };\n}\n", "import {\n  ZodFirstPartyTypeKind,\n  ZodMapDef,\n  ZodRecordDef,\n  ZodTypeAny,\n} from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\nimport { parseBrandedDef } from './branded';\nimport { JsonSchema7EnumType } from './enum';\nimport { JsonSchema7StringType, parseStringDef } from './string';\n\ntype JsonSchema7RecordPropertyNamesType =\n  | Omit<JsonSchema7StringType, 'type'>\n  | Omit<JsonSchema7EnumType, 'type'>;\n\nexport type JsonSchema7RecordType = {\n  type: 'object';\n  additionalProperties?: JsonSchema7Type | true;\n  propertyNames?: JsonSchema7RecordPropertyNamesType;\n};\n\nexport function parseRecordDef(\n  def: ZodRecordDef<ZodTypeAny, ZodTypeAny> | ZodMapDef,\n  refs: Refs,\n): JsonSchema7RecordType {\n  const schema: JsonSchema7RecordType = {\n    type: 'object',\n    additionalProperties:\n      parseDef(def.valueType._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'additionalProperties'],\n      }) ?? refs.allowedAdditionalProperties,\n  };\n\n  if (\n    def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n    def.keyType._def.checks?.length\n  ) {\n    const { type, ...keyType } = parseStringDef(def.keyType._def, refs);\n\n    return {\n      ...schema,\n      propertyNames: keyType,\n    };\n  } else if (def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n    return {\n      ...schema,\n      propertyNames: {\n        enum: def.keyType._def.values,\n      },\n    };\n  } else if (\n    def.keyType?._def.typeName === ZodFirstPartyTypeKind.ZodBranded &&\n    def.keyType._def.type._def.typeName === ZodFirstPartyTypeKind.ZodString &&\n    def.keyType._def.type._def.checks?.length\n  ) {\n    const { type, ...keyType } = parseBrandedDef(\n      def.keyType._def,\n      refs,\n    ) as JsonSchema7StringType;\n\n    return {\n      ...schema,\n      propertyNames: keyType,\n    };\n  }\n\n  return schema;\n}\n", "import { ZodStringDef } from 'zod/v3';\nimport { Refs } from '../refs';\n\nlet emojiRegex: RegExp | undefined = undefined;\n\n/**\n * Generated from the regular expressions found here as of 2024-05-22:\n * https://github.com/colinhacks/zod/blob/master/src/types.ts.\n *\n * Expressions with /i flag have been changed accordingly.\n */\nexport const zodPatterns = {\n  /**\n   * `c` was changed to `[cC]` to replicate /i flag\n   */\n  cuid: /^[cC][^\\s-]{8,}$/,\n  cuid2: /^[0-9a-z]+$/,\n  ulid: /^[0-9A-HJKMNP-TV-Z]{26}$/,\n  /**\n   * `a-z` was added to replicate /i flag\n   */\n  email:\n    /^(?!\\.)(?!.*\\.\\.)([a-zA-Z0-9_'+\\-\\.]*)[a-zA-Z0-9_+-]@([a-zA-Z0-9][a-zA-Z0-9\\-]*\\.)+[a-zA-Z]{2,}$/,\n  /**\n   * Constructed a valid Unicode RegExp\n   *\n   * Lazily instantiate since this type of regex isn't supported\n   * in all envs (e.g. React Native).\n   *\n   * See:\n   * https://github.com/colinhacks/zod/issues/2433\n   * Fix in Zod:\n   * https://github.com/colinhacks/zod/commit/9340fd51e48576a75adc919bff65dbc4a5d4c99b\n   */\n  emoji: () => {\n    if (emojiRegex === undefined) {\n      emojiRegex = RegExp(\n        '^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$',\n        'u',\n      );\n    }\n    return emojiRegex;\n  },\n  /**\n   * Unused\n   */\n  uuid: /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/,\n  /**\n   * Unused\n   */\n  ipv4: /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,\n  ipv4Cidr:\n    /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/,\n  /**\n   * Unused\n   */\n  ipv6: /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,\n  ipv6Cidr:\n    /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,\n  base64: /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,\n  base64url:\n    /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,\n  nanoid: /^[a-zA-Z0-9_-]{21}$/,\n  jwt: /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/,\n} as const;\n\nexport type JsonSchema7StringType = {\n  type: 'string';\n  minLength?: number;\n  maxLength?: number;\n  format?:\n    | 'email'\n    | 'idn-email'\n    | 'uri'\n    | 'uuid'\n    | 'date-time'\n    | 'ipv4'\n    | 'ipv6'\n    | 'date'\n    | 'time'\n    | 'duration';\n  pattern?: string;\n  allOf?: {\n    pattern: string;\n  }[];\n  anyOf?: {\n    format: string;\n  }[];\n  contentEncoding?: string;\n};\n\nexport function parseStringDef(\n  def: ZodStringDef,\n  refs: Refs,\n): JsonSchema7StringType {\n  const res: JsonSchema7StringType = {\n    type: 'string',\n  };\n\n  if (def.checks) {\n    for (const check of def.checks) {\n      switch (check.kind) {\n        case 'min':\n          res.minLength =\n            typeof res.minLength === 'number'\n              ? Math.max(res.minLength, check.value)\n              : check.value;\n          break;\n        case 'max':\n          res.maxLength =\n            typeof res.maxLength === 'number'\n              ? Math.min(res.maxLength, check.value)\n              : check.value;\n\n          break;\n        case 'email':\n          switch (refs.emailStrategy) {\n            case 'format:email':\n              addFormat(res, 'email', check.message, refs);\n              break;\n            case 'format:idn-email':\n              addFormat(res, 'idn-email', check.message, refs);\n              break;\n            case 'pattern:zod':\n              addPattern(res, zodPatterns.email, check.message, refs);\n              break;\n          }\n\n          break;\n        case 'url':\n          addFormat(res, 'uri', check.message, refs);\n          break;\n        case 'uuid':\n          addFormat(res, 'uuid', check.message, refs);\n          break;\n        case 'regex':\n          addPattern(res, check.regex, check.message, refs);\n          break;\n        case 'cuid':\n          addPattern(res, zodPatterns.cuid, check.message, refs);\n          break;\n        case 'cuid2':\n          addPattern(res, zodPatterns.cuid2, check.message, refs);\n          break;\n        case 'startsWith':\n          addPattern(\n            res,\n            RegExp(`^${escapeLiteralCheckValue(check.value, refs)}`),\n            check.message,\n            refs,\n          );\n          break;\n        case 'endsWith':\n          addPattern(\n            res,\n            RegExp(`${escapeLiteralCheckValue(check.value, refs)}$`),\n            check.message,\n            refs,\n          );\n          break;\n        case 'datetime':\n          addFormat(res, 'date-time', check.message, refs);\n          break;\n        case 'date':\n          addFormat(res, 'date', check.message, refs);\n          break;\n        case 'time':\n          addFormat(res, 'time', check.message, refs);\n          break;\n        case 'duration':\n          addFormat(res, 'duration', check.message, refs);\n          break;\n        case 'length':\n          res.minLength =\n            typeof res.minLength === 'number'\n              ? Math.max(res.minLength, check.value)\n              : check.value;\n          res.maxLength =\n            typeof res.maxLength === 'number'\n              ? Math.min(res.maxLength, check.value)\n              : check.value;\n          break;\n        case 'includes': {\n          addPattern(\n            res,\n            RegExp(escapeLiteralCheckValue(check.value, refs)),\n            check.message,\n            refs,\n          );\n          break;\n        }\n        case 'ip': {\n          if (check.version !== 'v6') {\n            addFormat(res, 'ipv4', check.message, refs);\n          }\n          if (check.version !== 'v4') {\n            addFormat(res, 'ipv6', check.message, refs);\n          }\n          break;\n        }\n        case 'base64url':\n          addPattern(res, zodPatterns.base64url, check.message, refs);\n          break;\n        case 'jwt':\n          addPattern(res, zodPatterns.jwt, check.message, refs);\n          break;\n        case 'cidr': {\n          if (check.version !== 'v6') {\n            addPattern(res, zodPatterns.ipv4Cidr, check.message, refs);\n          }\n          if (check.version !== 'v4') {\n            addPattern(res, zodPatterns.ipv6Cidr, check.message, refs);\n          }\n          break;\n        }\n        case 'emoji':\n          addPattern(res, zodPatterns.emoji(), check.message, refs);\n          break;\n        case 'ulid': {\n          addPattern(res, zodPatterns.ulid, check.message, refs);\n          break;\n        }\n        case 'base64': {\n          switch (refs.base64Strategy) {\n            case 'format:binary': {\n              addFormat(res, 'binary' as any, check.message, refs);\n              break;\n            }\n\n            case 'contentEncoding:base64': {\n              res.contentEncoding = 'base64';\n              break;\n            }\n\n            case 'pattern:zod': {\n              addPattern(res, zodPatterns.base64, check.message, refs);\n              break;\n            }\n          }\n          break;\n        }\n        case 'nanoid': {\n          addPattern(res, zodPatterns.nanoid, check.message, refs);\n        }\n        case 'toLowerCase':\n        case 'toUpperCase':\n        case 'trim':\n          break;\n        default:\n          /* c8 ignore next */\n          ((_: never) => {})(check);\n      }\n    }\n  }\n\n  return res;\n}\n\nfunction escapeLiteralCheckValue(literal: string, refs: Refs): string {\n  return refs.patternStrategy === 'escape'\n    ? escapeNonAlphaNumeric(literal)\n    : literal;\n}\n\nconst ALPHA_NUMERIC = new Set(\n  'ABCDEFGHIJKLMNOPQRSTUVXYZabcdefghijklmnopqrstuvxyz0123456789',\n);\n\nfunction escapeNonAlphaNumeric(source: string) {\n  let result = '';\n\n  for (let i = 0; i < source.length; i++) {\n    if (!ALPHA_NUMERIC.has(source[i])) {\n      result += '\\\\';\n    }\n\n    result += source[i];\n  }\n\n  return result;\n}\n\n// Adds a \"format\" keyword to the schema. If a format exists, both formats will be joined in an allOf-node, along with subsequent ones.\nfunction addFormat(\n  schema: JsonSchema7StringType,\n  value: Required<JsonSchema7StringType>['format'],\n  message: string | undefined,\n  refs: Refs,\n) {\n  if (schema.format || schema.anyOf?.some(x => x.format)) {\n    if (!schema.anyOf) {\n      schema.anyOf = [];\n    }\n\n    if (schema.format) {\n      schema.anyOf!.push({\n        format: schema.format,\n      });\n      delete schema.format;\n    }\n\n    schema.anyOf!.push({\n      format: value,\n      ...(message &&\n        refs.errorMessages && { errorMessage: { format: message } }),\n    });\n  } else {\n    schema.format = value;\n  }\n}\n\n// Adds a \"pattern\" keyword to the schema. If a pattern exists, both patterns will be joined in an allOf-node, along with subsequent ones.\nfunction addPattern(\n  schema: JsonSchema7StringType,\n  regex: RegExp,\n  message: string | undefined,\n  refs: Refs,\n) {\n  if (schema.pattern || schema.allOf?.some(x => x.pattern)) {\n    if (!schema.allOf) {\n      schema.allOf = [];\n    }\n\n    if (schema.pattern) {\n      schema.allOf!.push({\n        pattern: schema.pattern,\n      });\n      delete schema.pattern;\n    }\n\n    schema.allOf!.push({\n      pattern: stringifyRegExpWithFlags(regex, refs),\n      ...(message &&\n        refs.errorMessages && { errorMessage: { pattern: message } }),\n    });\n  } else {\n    schema.pattern = stringifyRegExpWithFlags(regex, refs);\n  }\n}\n\n// Mutate z.string.regex() in a best attempt to accommodate for regex flags when applyRegexFlags is true\nfunction stringifyRegExpWithFlags(regex: RegExp, refs: Refs): string {\n  if (!refs.applyRegexFlags || !regex.flags) {\n    return regex.source;\n  }\n\n  // Currently handled flags\n  const flags = {\n    i: regex.flags.includes('i'), // Case-insensitive\n    m: regex.flags.includes('m'), // `^` and `$` matches adjacent to newline characters\n    s: regex.flags.includes('s'), // `.` matches newlines\n  };\n\n  // The general principle here is to step through each character, one at a time, applying mutations as flags require. We keep track when the current character is escaped, and when it's inside a group /like [this]/ or (also) a range like /[a-z]/. The following is fairly brittle imperative code; edit at your peril!\n  const source = flags.i ? regex.source.toLowerCase() : regex.source;\n  let pattern = '';\n  let isEscaped = false;\n  let inCharGroup = false;\n  let inCharRange = false;\n\n  for (let i = 0; i < source.length; i++) {\n    if (isEscaped) {\n      pattern += source[i];\n      isEscaped = false;\n      continue;\n    }\n\n    if (flags.i) {\n      if (inCharGroup) {\n        if (source[i].match(/[a-z]/)) {\n          if (inCharRange) {\n            pattern += source[i];\n            pattern += `${source[i - 2]}-${source[i]}`.toUpperCase();\n            inCharRange = false;\n          } else if (source[i + 1] === '-' && source[i + 2]?.match(/[a-z]/)) {\n            pattern += source[i];\n            inCharRange = true;\n          } else {\n            pattern += `${source[i]}${source[i].toUpperCase()}`;\n          }\n          continue;\n        }\n      } else if (source[i].match(/[a-z]/)) {\n        pattern += `[${source[i]}${source[i].toUpperCase()}]`;\n        continue;\n      }\n    }\n\n    if (flags.m) {\n      if (source[i] === '^') {\n        pattern += `(^|(?<=[\\r\\n]))`;\n        continue;\n      } else if (source[i] === '$') {\n        pattern += `($|(?=[\\r\\n]))`;\n        continue;\n      }\n    }\n\n    if (flags.s && source[i] === '.') {\n      pattern += inCharGroup ? `${source[i]}\\r\\n` : `[${source[i]}\\r\\n]`;\n      continue;\n    }\n\n    pattern += source[i];\n    if (source[i] === '\\\\') {\n      isEscaped = true;\n    } else if (inCharGroup && source[i] === ']') {\n      inCharGroup = false;\n    } else if (!inCharGroup && source[i] === '[') {\n      inCharGroup = true;\n    }\n  }\n\n  try {\n    new RegExp(pattern);\n  } catch {\n    console.warn(\n      `Could not convert regex pattern at ${refs.currentPath.join(\n        '/',\n      )} to a flag-independent form! Falling back to the flag-ignorant source`,\n    );\n    return regex.source;\n  }\n\n  return pattern;\n}\n", "import { ZodMapDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\nimport { parseAnyDef } from './any';\nimport { JsonSchema7RecordType, parseRecordDef } from './record';\n\nexport type JsonSchema7MapType = {\n  type: 'array';\n  maxItems: 125;\n  items: {\n    type: 'array';\n    items: [JsonSchema7Type, JsonSchema7Type];\n    minItems: 2;\n    maxItems: 2;\n  };\n};\n\nexport function parseMapDef(\n  def: ZodMapDef,\n  refs: Refs,\n): JsonSchema7MapType | JsonSchema7RecordType {\n  if (refs.mapStrategy === 'record') {\n    return parseRecordDef(def, refs);\n  }\n\n  const keys =\n    parseDef(def.keyType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, 'items', 'items', '0'],\n    }) || parseAnyDef();\n  const values =\n    parseDef(def.valueType._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, 'items', 'items', '1'],\n    }) || parseAnyDef();\n  return {\n    type: 'array',\n    maxItems: 125,\n    items: {\n      type: 'array',\n      items: [keys, values],\n      minItems: 2,\n      maxItems: 2,\n    },\n  };\n}\n", "import { ZodNativeEnumDef } from 'zod/v3';\n\nexport type JsonSchema7NativeEnumType = {\n  type: 'string' | 'number' | ['string', 'number'];\n  enum: (string | number)[];\n};\n\nexport function parseNativeEnumDef(\n  def: ZodNativeEnumDef,\n): JsonSchema7NativeEnumType {\n  const object = def.values;\n  const actualKeys = Object.keys(def.values).filter((key: string) => {\n    return typeof object[object[key]] !== 'number';\n  });\n\n  const actualValues = actualKeys.map((key: string) => object[key]);\n\n  const parsedTypes = Array.from(\n    new Set(actualValues.map((values: string | number) => typeof values)),\n  );\n\n  return {\n    type:\n      parsedTypes.length === 1\n        ? parsedTypes[0] === 'string'\n          ? 'string'\n          : 'number'\n        : ['string', 'number'],\n    enum: actualValues,\n  };\n}\n", "import { JsonSchema7AnyType, parseAnyDef } from './any';\n\nexport type JsonSchema7NeverType = {\n  not: JsonSchema7AnyType;\n};\n\nexport function parseNeverDef(): JsonSchema7NeverType | undefined {\n  return { not: parseAnyDef() };\n}\n", "export type JsonSchema7NullType = {\n  type: 'null';\n};\n\nexport function parseNullDef(): JsonSchema7NullType {\n  return {\n    type: 'null',\n  };\n}\n", "import {\n  ZodDiscriminatedUnionDef,\n  ZodLiteralDef,\n  ZodTypeAny,\n  ZodUnionDef,\n} from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\n\nexport const primitiveMappings = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBigInt: 'integer',\n  ZodBoolean: 'boolean',\n  ZodNull: 'null',\n} as const;\ntype ZodPrimitive = keyof typeof primitiveMappings;\ntype JsonSchema7Primitive =\n  (typeof primitiveMappings)[keyof typeof primitiveMappings];\n\nexport type JsonSchema7UnionType =\n  | JsonSchema7PrimitiveUnionType\n  | JsonSchema7AnyOfType;\n\ntype JsonSchema7PrimitiveUnionType =\n  | {\n      type: JsonSchema7Primitive | JsonSchema7Primitive[];\n    }\n  | {\n      type: JsonSchema7Primitive | JsonSchema7Primitive[];\n      enum: (string | number | bigint | boolean | null)[];\n    };\n\ntype JsonSchema7AnyOfType = {\n  anyOf: JsonSchema7Type[];\n};\n\nexport function parseUnionDef(\n  def: ZodUnionDef | ZodDiscriminatedUnionDef<any, any>,\n  refs: Refs,\n): JsonSchema7PrimitiveUnionType | JsonSchema7AnyOfType | undefined {\n  const options: readonly ZodTypeAny[] =\n    def.options instanceof Map ? Array.from(def.options.values()) : def.options;\n\n  // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\n  if (\n    options.every(\n      x =>\n        x._def.typeName in primitiveMappings &&\n        (!x._def.checks || !x._def.checks.length),\n    )\n  ) {\n    // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\n\n    const types = options.reduce((types: JsonSchema7Primitive[], x) => {\n      const type = primitiveMappings[x._def.typeName as ZodPrimitive]; //Can be safely casted due to row 43\n      return type && !types.includes(type) ? [...types, type] : types;\n    }, []);\n\n    return {\n      type: types.length > 1 ? types : types[0],\n    };\n  } else if (\n    options.every(x => x._def.typeName === 'ZodLiteral' && !x.description)\n  ) {\n    // all options literals\n\n    const types = options.reduce(\n      (acc: JsonSchema7Primitive[], x: { _def: ZodLiteralDef }) => {\n        const type = typeof x._def.value;\n        switch (type) {\n          case 'string':\n          case 'number':\n          case 'boolean':\n            return [...acc, type];\n          case 'bigint':\n            return [...acc, 'integer' as const];\n          case 'object':\n            if (x._def.value === null) return [...acc, 'null' as const];\n          case 'symbol':\n          case 'undefined':\n          case 'function':\n          default:\n            return acc;\n        }\n      },\n      [],\n    );\n\n    if (types.length === options.length) {\n      // all the literals are primitive, as far as null can be considered primitive\n\n      const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\n      return {\n        type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\n        enum: options.reduce(\n          (acc, x) => {\n            return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\n          },\n          [] as (string | number | bigint | boolean | null)[],\n        ),\n      };\n    }\n  } else if (options.every(x => x._def.typeName === 'ZodEnum')) {\n    return {\n      type: 'string',\n      enum: options.reduce(\n        (acc: string[], x) => [\n          ...acc,\n          ...x._def.values.filter((x: string) => !acc.includes(x)),\n        ],\n        [],\n      ),\n    };\n  }\n\n  return asAnyOf(def, refs);\n}\n\nconst asAnyOf = (\n  def: ZodUnionDef | ZodDiscriminatedUnionDef<any, any>,\n  refs: Refs,\n): JsonSchema7PrimitiveUnionType | JsonSchema7AnyOfType | undefined => {\n  const anyOf = (\n    (def.options instanceof Map\n      ? Array.from(def.options.values())\n      : def.options) as any[]\n  )\n    .map((x, i) =>\n      parseDef(x._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'anyOf', `${i}`],\n      }),\n    )\n    .filter(\n      (x): x is JsonSchema7Type =>\n        !!x &&\n        (!refs.strictUnions ||\n          (typeof x === 'object' && Object.keys(x).length > 0)),\n    );\n\n  return anyOf.length ? { anyOf } : undefined;\n};\n", "import { ZodNullableDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\nimport { JsonSchema7NullType } from './null';\nimport { primitiveMappings } from './union';\n\nexport type JsonSchema7NullableType =\n  | {\n      anyOf: [JsonSchema7Type, JsonSchema7NullType];\n    }\n  | {\n      type: [string, 'null'];\n    };\n\nexport function parseNullableDef(\n  def: ZodNullableDef,\n  refs: Refs,\n): JsonSchema7NullableType | undefined {\n  if (\n    ['ZodString', 'ZodNumber', 'ZodBigInt', 'ZodBoolean', 'ZodNull'].includes(\n      def.innerType._def.typeName,\n    ) &&\n    (!def.innerType._def.checks || !def.innerType._def.checks.length)\n  ) {\n    return {\n      type: [\n        primitiveMappings[\n          def.innerType._def.typeName as keyof typeof primitiveMappings\n        ],\n        'null',\n      ],\n    };\n  }\n\n  const base = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, 'anyOf', '0'],\n  });\n\n  return base && { anyOf: [base, { type: 'null' }] };\n}\n", "import { ZodNumberDef } from 'zod/v3';\n\nexport type JsonSchema7NumberType = {\n  type: 'number' | 'integer';\n  minimum?: number;\n  exclusiveMinimum?: number;\n  maximum?: number;\n  exclusiveMaximum?: number;\n  multipleOf?: number;\n};\n\nexport function parseNumberDef(def: ZodNumberDef): JsonSchema7NumberType {\n  const res: JsonSchema7NumberType = {\n    type: 'number',\n  };\n\n  if (!def.checks) return res;\n\n  for (const check of def.checks) {\n    switch (check.kind) {\n      case 'int':\n        res.type = 'integer';\n        break;\n      case 'min':\n        if (check.inclusive) {\n          res.minimum = check.value;\n        } else {\n          res.exclusiveMinimum = check.value;\n        }\n        break;\n      case 'max':\n        if (check.inclusive) {\n          res.maximum = check.value;\n        } else {\n          res.exclusiveMaximum = check.value;\n        }\n        break;\n      case 'multipleOf':\n        res.multipleOf = check.value;\n        break;\n    }\n  }\n  return res;\n}\n", "import { ZodObjectDef, ZodTypeAny } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\n\nexport type JsonSchema7ObjectType = {\n  type: 'object';\n  properties: Record<string, JsonSchema7Type>;\n  additionalProperties?: boolean | JsonSchema7Type;\n  required?: string[];\n};\n\nexport function parseObjectDef(def: ZodObjectDef, refs: Refs) {\n  const result: JsonSchema7ObjectType = {\n    type: 'object',\n    properties: {},\n  };\n\n  const required: string[] = [];\n\n  const shape = def.shape();\n\n  for (const propName in shape) {\n    let propDef = shape[propName];\n\n    if (propDef === undefined || propDef._def === undefined) {\n      continue;\n    }\n\n    const propOptional = safeIsOptional(propDef);\n\n    const parsedDef = parseDef(propDef._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, 'properties', propName],\n      propertyPath: [...refs.currentPath, 'properties', propName],\n    });\n\n    if (parsedDef === undefined) {\n      continue;\n    }\n\n    result.properties[propName] = parsedDef;\n\n    if (!propOptional) {\n      required.push(propName);\n    }\n  }\n\n  if (required.length) {\n    result.required = required;\n  }\n\n  const additionalProperties = decideAdditionalProperties(def, refs);\n\n  if (additionalProperties !== undefined) {\n    result.additionalProperties = additionalProperties;\n  }\n\n  return result;\n}\n\nfunction decideAdditionalProperties(def: ZodObjectDef, refs: Refs) {\n  if (def.catchall._def.typeName !== 'ZodNever') {\n    return parseDef(def.catchall._def, {\n      ...refs,\n      currentPath: [...refs.currentPath, 'additionalProperties'],\n    });\n  }\n\n  switch (def.unknownKeys) {\n    case 'passthrough':\n      return refs.allowedAdditionalProperties;\n    case 'strict':\n      return refs.rejectedAdditionalProperties;\n    case 'strip':\n      return refs.removeAdditionalStrategy === 'strict'\n        ? refs.allowedAdditionalProperties\n        : refs.rejectedAdditionalProperties;\n  }\n}\n\nfunction safeIsOptional(schema: ZodTypeAny): boolean {\n  try {\n    return schema.isOptional();\n  } catch {\n    return true;\n  }\n}\n", "import { ZodOptionalDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\nimport { parseAnyDef } from './any';\n\nexport const parseOptionalDef = (\n  def: ZodOptionalDef,\n  refs: Refs,\n): JsonSchema7Type | undefined => {\n  if (refs.currentPath.toString() === refs.propertyPath?.toString()) {\n    return parseDef(def.innerType._def, refs);\n  }\n\n  const innerSchema = parseDef(def.innerType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, 'anyOf', '1'],\n  });\n\n  return innerSchema\n    ? { anyOf: [{ not: parseAnyDef() }, innerSchema] }\n    : parseAnyDef();\n};\n", "import { ZodPipelineDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\nimport { JsonSchema7AllOfType } from './intersection';\n\nexport const parsePipelineDef = (\n  def: ZodPipelineDef<any, any>,\n  refs: Refs,\n): JsonSchema7AllOfType | JsonSchema7Type | undefined => {\n  if (refs.pipeStrategy === 'input') {\n    return parseDef(def.in._def, refs);\n  } else if (refs.pipeStrategy === 'output') {\n    return parseDef(def.out._def, refs);\n  }\n\n  const a = parseDef(def.in._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, 'allOf', '0'],\n  });\n  const b = parseDef(def.out._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, 'allOf', a ? '1' : '0'],\n  });\n\n  return {\n    allOf: [a, b].filter((x): x is JsonSchema7Type => x !== undefined),\n  };\n};\n", "import { ZodPromiseDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\n\nexport function parsePromiseDef(\n  def: ZodPromiseDef,\n  refs: Refs,\n): JsonSchema7Type | undefined {\n  return parseDef(def.type._def, refs);\n}\n", "import { ZodSetDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\n\nexport type JsonSchema7SetType = {\n  type: 'array';\n  uniqueItems: true;\n  items?: JsonSchema7Type;\n  minItems?: number;\n  maxItems?: number;\n};\n\nexport function parseSetDef(def: ZodSetDef, refs: Refs): JsonSchema7SetType {\n  const items = parseDef(def.valueType._def, {\n    ...refs,\n    currentPath: [...refs.currentPath, 'items'],\n  });\n\n  const schema: JsonSchema7SetType = {\n    type: 'array',\n    uniqueItems: true,\n    items,\n  };\n\n  if (def.minSize) {\n    schema.minItems = def.minSize.value;\n  }\n\n  if (def.maxSize) {\n    schema.maxItems = def.maxSize.value;\n  }\n\n  return schema;\n}\n", "import { ZodTupleDef, ZodTupleItems, ZodTypeAny } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { JsonSchema7Type } from '../parse-types';\nimport { Refs } from '../refs';\n\nexport type JsonSchema7TupleType = {\n  type: 'array';\n  minItems: number;\n  items: JsonSchema7Type[];\n} & (\n  | {\n      maxItems: number;\n    }\n  | {\n      additionalItems?: JsonSchema7Type;\n    }\n);\n\nexport function parseTupleDef(\n  def: ZodTupleDef<ZodTupleItems | [], ZodTypeAny | null>,\n  refs: Refs,\n): JsonSchema7TupleType {\n  if (def.rest) {\n    return {\n      type: 'array',\n      minItems: def.items.length,\n      items: def.items\n        .map((x, i) =>\n          parseDef(x._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'items', `${i}`],\n          }),\n        )\n        .reduce(\n          (acc: JsonSchema7Type[], x) => (x === undefined ? acc : [...acc, x]),\n          [],\n        ),\n      additionalItems: parseDef(def.rest._def, {\n        ...refs,\n        currentPath: [...refs.currentPath, 'additionalItems'],\n      }),\n    };\n  } else {\n    return {\n      type: 'array',\n      minItems: def.items.length,\n      maxItems: def.items.length,\n      items: def.items\n        .map((x, i) =>\n          parseDef(x._def, {\n            ...refs,\n            currentPath: [...refs.currentPath, 'items', `${i}`],\n          }),\n        )\n        .reduce(\n          (acc: JsonSchema7Type[], x) => (x === undefined ? acc : [...acc, x]),\n          [],\n        ),\n    };\n  }\n}\n", "import { JsonSchema7AnyType, parseAnyDef } from './any';\n\nexport type JsonSchema7UndefinedType = {\n  not: JsonSchema7AnyType;\n};\n\nexport function parseUndefinedDef(): JsonSchema7UndefinedType {\n  return {\n    not: parseAnyDef(),\n  };\n}\n", "import { JsonSchema7AnyType, parseAnyDef } from './any';\n\nexport type JsonSchema7UnknownType = JsonSchema7AnyType;\n\nexport function parseUnknownDef(): JsonSchema7UnknownType {\n  return parseAnyDef();\n}\n", "import { ZodReadonlyDef } from 'zod/v3';\nimport { parseDef } from '../parse-def';\nimport { Refs } from '../refs';\n\nexport const parseReadonlyDef = (def: ZodReadonlyDef<any>, refs: Refs) => {\n  return parseDef(def.innerType._def, refs);\n};\n", "import { ZodTypeDef } from 'zod/v3';\nimport { Refs, Seen } from './refs';\nimport { ignoreOverride } from './options';\nimport { JsonSchema7Type } from './parse-types';\nimport { selectParser } from './select-parser';\nimport { getRelativePath } from './get-relative-path';\nimport { parseAnyDef } from './parsers/any';\n\nexport function parseDef(\n  def: ZodTypeDef,\n  refs: Refs,\n  forceResolution = false, // Forces a new schema to be instantiated even though its def has been seen. Used for improving refs in definitions. See https://github.com/StefanTerdell/zod-to-json-schema/pull/61.\n): JsonSchema7Type | undefined {\n  const seenItem = refs.seen.get(def);\n\n  if (refs.override) {\n    const overrideResult = refs.override?.(\n      def,\n      refs,\n      seenItem,\n      forceResolution,\n    );\n\n    if (overrideResult !== ignoreOverride) {\n      return overrideResult;\n    }\n  }\n\n  if (seenItem && !forceResolution) {\n    const seenSchema = get$ref(seenItem, refs);\n\n    if (seenSchema !== undefined) {\n      return seenSchema;\n    }\n  }\n\n  const newItem: Seen = { def, path: refs.currentPath, jsonSchema: undefined };\n\n  refs.seen.set(def, newItem);\n\n  const jsonSchemaOrGetter = selectParser(def, (def as any).typeName, refs);\n\n  // If the return was a function, then the inner definition needs to be extracted before a call to parseDef (recursive)\n  const jsonSchema =\n    typeof jsonSchemaOrGetter === 'function'\n      ? parseDef(jsonSchemaOrGetter(), refs)\n      : jsonSchemaOrGetter;\n\n  if (jsonSchema) {\n    addMeta(def, refs, jsonSchema);\n  }\n\n  if (refs.postProcess) {\n    const postProcessResult = refs.postProcess(jsonSchema, def, refs);\n\n    newItem.jsonSchema = jsonSchema;\n\n    return postProcessResult;\n  }\n\n  newItem.jsonSchema = jsonSchema;\n\n  return jsonSchema;\n}\n\nconst get$ref = (\n  item: Seen,\n  refs: Refs,\n):\n  | {\n      $ref: string;\n    }\n  | {}\n  | undefined => {\n  switch (refs.$refStrategy) {\n    case 'root':\n      return { $ref: item.path.join('/') };\n    case 'relative':\n      return { $ref: getRelativePath(refs.currentPath, item.path) };\n    case 'none':\n    case 'seen': {\n      if (\n        item.path.length < refs.currentPath.length &&\n        item.path.every((value, index) => refs.currentPath[index] === value)\n      ) {\n        console.warn(\n          `Recursive reference detected at ${refs.currentPath.join(\n            '/',\n          )}! Defaulting to any`,\n        );\n\n        return parseAnyDef();\n      }\n\n      return refs.$refStrategy === 'seen' ? parseAnyDef() : undefined;\n    }\n  }\n};\n\nconst addMeta = (\n  def: ZodTypeDef,\n  refs: Refs,\n  jsonSchema: JsonSchema7Type,\n): JsonSchema7Type => {\n  if (def.description) {\n    jsonSchema.description = def.description;\n  }\n  return jsonSchema;\n};\n", "import { ZodTypeDef } from 'zod/v3';\nimport { getDefaultOptions, Options } from './options';\nimport { JsonSchema7Type } from './parse-types';\n\nexport type Refs = {\n  seen: Map<ZodTypeDef, Seen>;\n  currentPath: string[];\n  propertyPath: string[] | undefined;\n} & Options;\n\nexport type Seen = {\n  def: ZodTypeDef;\n  path: string[];\n  jsonSchema: JsonSchema7Type | undefined;\n};\n\nexport const getRefs = (options?: string | Partial<Options>): Refs => {\n  const _options = getDefaultOptions(options);\n  const currentPath =\n    _options.name !== undefined\n      ? [..._options.basePath, _options.definitionPath, _options.name]\n      : _options.basePath;\n  return {\n    ..._options,\n    currentPath: currentPath,\n    propertyPath: undefined,\n    seen: new Map(\n      Object.entries(_options.definitions).map(([name, def]) => [\n        def._def,\n        {\n          def: def._def,\n          path: [..._options.basePath, _options.definitionPath, name],\n          // Resolution of references will be forced even though seen, so it's ok that the schema is undefined here for now.\n          jsonSchema: undefined,\n        },\n      ]),\n    ),\n  };\n};\n", "import { ZodSchema } from 'zod/v3';\nimport { Options } from './options';\nimport { parseDef } from './parse-def';\nimport { JsonSchema7Type } from './parse-types';\nimport { getRefs } from './refs';\nimport { parseAnyDef } from './parsers/any';\n\nconst zodToJsonSchema = (\n  schema: ZodSchema<any>,\n  options?: Partial<Options> | string,\n): JsonSchema7Type & {\n  $schema?: string;\n  definitions?: {\n    [key: string]: JsonSchema7Type;\n  };\n} => {\n  const refs = getRefs(options);\n\n  let definitions =\n    typeof options === 'object' && options.definitions\n      ? Object.entries(options.definitions).reduce(\n          (acc: { [key: string]: JsonSchema7Type }, [name, schema]) => ({\n            ...acc,\n            [name]:\n              parseDef(\n                schema._def,\n                {\n                  ...refs,\n                  currentPath: [...refs.basePath, refs.definitionPath, name],\n                },\n                true,\n              ) ?? parseAnyDef(),\n          }),\n          {},\n        )\n      : undefined;\n\n  const name =\n    typeof options === 'string'\n      ? options\n      : options?.nameStrategy === 'title'\n        ? undefined\n        : options?.name;\n\n  const main =\n    parseDef(\n      schema._def,\n      name === undefined\n        ? refs\n        : {\n            ...refs,\n            currentPath: [...refs.basePath, refs.definitionPath, name],\n          },\n      false,\n    ) ?? (parseAnyDef() as JsonSchema7Type);\n\n  const title =\n    typeof options === 'object' &&\n    options.name !== undefined &&\n    options.nameStrategy === 'title'\n      ? options.name\n      : undefined;\n\n  if (title !== undefined) {\n    main.title = title;\n  }\n\n  const combined: ReturnType<typeof zodToJsonSchema> =\n    name === undefined\n      ? definitions\n        ? {\n            ...main,\n            [refs.definitionPath]: definitions,\n          }\n        : main\n      : {\n          $ref: [\n            ...(refs.$refStrategy === 'relative' ? [] : refs.basePath),\n            refs.definitionPath,\n            name,\n          ].join('/'),\n          [refs.definitionPath]: {\n            ...definitions,\n            [name]: main,\n          },\n        };\n\n  combined.$schema = 'http://json-schema.org/draft-07/schema#';\n\n  return combined;\n};\n\nexport { zodToJsonSchema };\n", "export * from './get-relative-path';\nexport * from './options';\nexport * from './parse-def';\nexport * from './parse-types';\nexport * from './parsers/any';\nexport * from './parsers/array';\nexport * from './parsers/bigint';\nexport * from './parsers/boolean';\nexport * from './parsers/branded';\nexport * from './parsers/catch';\nexport * from './parsers/date';\nexport * from './parsers/default';\nexport * from './parsers/effects';\nexport * from './parsers/enum';\nexport * from './parsers/intersection';\nexport * from './parsers/literal';\nexport * from './parsers/map';\nexport * from './parsers/native-enum';\nexport * from './parsers/never';\nexport * from './parsers/null';\nexport * from './parsers/nullable';\nexport * from './parsers/number';\nexport * from './parsers/object';\nexport * from './parsers/optional';\nexport * from './parsers/pipeline';\nexport * from './parsers/promise';\nexport * from './parsers/readonly';\nexport * from './parsers/record';\nexport * from './parsers/set';\nexport * from './parsers/string';\nexport * from './parsers/tuple';\nexport * from './parsers/undefined';\nexport * from './parsers/union';\nexport * from './parsers/unknown';\nexport * from './refs';\nexport * from './select-parser';\nexport * from './zod-to-json-schema';\nimport { zodToJsonSchema } from './zod-to-json-schema';\nexport default zodToJsonSchema;\n", "import { Validator, validatorSymbol, type ValidationResult } from './validator';\nimport { JSONSchema7 } from '@ai-sdk/provider';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport { zodSchema } from './zod-schema';\n\n/**\n * Used to mark schemas so we can support both Zod and custom schemas.\n */\nconst schemaSymbol = Symbol.for('vercel.ai.schema');\n\nexport type Schema<OBJECT = unknown> = Validator<OBJECT> & {\n  /**\n   * Used to mark schemas so we can support both Zod and custom schemas.\n   */\n  [schemaSymbol]: true;\n\n  /**\n   * Schema type for inference.\n   */\n  _type: OBJECT;\n\n  /**\n   * The JSON Schema for the schema. It is passed to the providers.\n   */\n  readonly jsonSchema: JSONSchema7;\n};\n\n// Note: Zod types here exactly match the types in zod-schema.ts\n// to prevent type errors when using zod schemas with flexible schemas.\nexport type FlexibleSchema<T> =\n  | z4.core.$ZodType<T, any>\n  | z3.Schema<T, z3.ZodTypeDef, any>\n  | Schema<T>;\n\nexport type InferSchema<SCHEMA> = SCHEMA extends z3.Schema\n  ? z3.infer<SCHEMA>\n  : SCHEMA extends z4.core.$ZodType\n    ? z4.infer<SCHEMA>\n    : SCHEMA extends Schema<infer T>\n      ? T\n      : never;\n\n/**\n * Create a schema using a JSON Schema.\n *\n * @param jsonSchema The JSON Schema for the schema.\n * @param options.validate Optional. A validation function for the schema.\n */\nexport function jsonSchema<OBJECT = unknown>(\n  jsonSchema: JSONSchema7,\n  {\n    validate,\n  }: {\n    validate?: (\n      value: unknown,\n    ) => ValidationResult<OBJECT> | PromiseLike<ValidationResult<OBJECT>>;\n  } = {},\n): Schema<OBJECT> {\n  return {\n    [schemaSymbol]: true,\n    _type: undefined as OBJECT, // should never be used directly\n    [validatorSymbol]: true,\n    jsonSchema,\n    validate,\n  };\n}\n\nfunction isSchema(value: unknown): value is Schema {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    schemaSymbol in value &&\n    value[schemaSymbol] === true &&\n    'jsonSchema' in value &&\n    'validate' in value\n  );\n}\n\nexport function asSchema<OBJECT>(\n  schema:\n    | z4.core.$ZodType<OBJECT, any>\n    | z3.Schema<OBJECT, z3.ZodTypeDef, any>\n    | Schema<OBJECT>\n    | undefined,\n): Schema<OBJECT> {\n  return schema == null\n    ? jsonSchema({\n        properties: {},\n        additionalProperties: false,\n      })\n    : isSchema(schema)\n      ? schema\n      : zodSchema(schema);\n}\n", "// btoa and atob need to be invoked as a function call, not as a method call.\n// Otherwise CloudFlare will throw a\n// \"TypeError: Illegal invocation: function called with incorrect this reference\"\nconst { btoa, atob } = globalThis;\n\nexport function convertBase64ToUint8Array(base64String: string) {\n  const base64Url = base64String.replace(/-/g, '+').replace(/_/g, '/');\n  const latin1string = atob(base64Url);\n  return Uint8Array.from(latin1string, byte => byte.codePointAt(0)!);\n}\n\nexport function convertUint8ArrayToBase64(array: Uint8Array): string {\n  let latin1string = '';\n\n  // Note: regular for loop to support older JavaScript versions that\n  // do not support for..of on Uint8Array\n  for (let i = 0; i < array.length; i++) {\n    latin1string += String.fromCodePoint(array[i]);\n  }\n\n  return btoa(latin1string);\n}\n\nexport function convertToBase64(value: string | Uint8Array): string {\n  return value instanceof Uint8Array ? convertUint8ArrayToBase64(value) : value;\n}\n", "export function withoutTrailingSlash(url: string | undefined) {\n  return url?.replace(/\\/$/, '');\n}\n", "export function isAsyncIterable<T = any>(obj: any): obj is AsyncIterable<T> {\n  return obj != null && typeof obj[Symbol.asyncIterator] === 'function';\n}\n", "import { Tool, ToolCallOptions, ToolExecuteFunction } from './tool';\nimport { isAsyncIterable } from '../is-async-iterable';\n\nexport async function* executeTool<INPUT, OUTPUT>({\n  execute,\n  input,\n  options,\n}: {\n  execute: ToolExecuteFunction<INPUT, OUTPUT>;\n  input: INPUT;\n  options: ToolCallOptions;\n}): AsyncGenerator<\n  { type: 'preliminary'; output: OUTPUT } | { type: 'final'; output: OUTPUT }\n> {\n  const result = execute(input, options);\n\n  if (isAsyncIterable(result)) {\n    let lastOutput: OUTPUT | undefined;\n    for await (const output of result) {\n      lastOutput = output;\n      yield { type: 'preliminary', output };\n    }\n    yield { type: 'final', output: lastOutput! };\n  } else {\n    yield { type: 'final', output: await result };\n  }\n}\n", "export * from './combine-headers';\nexport { convertAsyncIteratorToReadableStream } from './convert-async-iterator-to-readable-stream';\nexport * from './delay';\nexport * from './extract-response-headers';\nexport * from './fetch-function';\nexport { createIdGenerator, generateId, type IdGenerator } from './generate-id';\nexport * from './get-error-message';\nexport * from './get-from-api';\nexport { injectJsonInstructionIntoMessages } from './inject-json-instruction';\nexport * from './is-abort-error';\nexport { isUrlSupported } from './is-url-supported';\nexport * from './load-api-key';\nexport { loadOptionalSetting } from './load-optional-setting';\nexport { loadSetting } from './load-setting';\nexport { mediaTypeToExtension } from './media-type-to-extension';\nexport * from './parse-json';\nexport { parseJsonEventStream } from './parse-json-event-stream';\nexport { parseProviderOptions } from './parse-provider-options';\nexport * from './post-to-api';\nexport {\n  createProviderDefinedToolFactory,\n  createProviderDefinedToolFactoryWithOutputSchema,\n  type ProviderDefinedToolFactory,\n  type ProviderDefinedToolFactoryWithOutputSchema,\n} from './provider-defined-tool-factory';\nexport * from './remove-undefined-entries';\nexport * from './resolve';\nexport * from './response-handler';\nexport {\n  asSchema,\n  jsonSchema,\n  type FlexibleSchema,\n  type InferSchema,\n  type Schema,\n} from './schema';\nexport * from './uint8-utils';\nexport * from './validate-types';\nexport * from './validator';\nexport * from './without-trailing-slash';\nexport { zodSchema } from './zod-schema';\n\n// folder re-exports\nexport * from './types';\n\n// external re-exports\nexport * from '@standard-schema/spec';\nexport {\n  EventSourceParserStream,\n  type EventSourceMessage,\n} from 'eventsource-parser/stream';\n", "import { NoSuchModelError } from '@ai-sdk/provider';\nimport {\n  loadOptionalSetting,\n  withoutTrailingSlash,\n  type FetchFunction,\n} from '@ai-sdk/provider-utils';\nimport { asGatewayError, GatewayAuthenticationError } from './errors';\nimport {\n  GATEWAY_AUTH_METHOD_HEADER,\n  parseAuthMethod,\n} from './errors/parse-auth-method';\nimport {\n  GatewayFetchMetadata,\n  type GatewayFetchMetadataResponse,\n} from './gateway-fetch-metadata';\nimport { GatewayLanguageModel } from './gateway-language-model';\nimport { GatewayEmbeddingModel } from './gateway-embedding-model';\nimport type { GatewayEmbeddingModelId } from './gateway-embedding-model-settings';\nimport { getVercelOidcToken, getVercelRequestId } from './vercel-environment';\nimport type { GatewayModelId } from './gateway-language-model-settings';\nimport type {\n  LanguageModelV2,\n  EmbeddingModelV2,\n  ProviderV2,\n} from '@ai-sdk/provider';\n\nexport interface GatewayProvider extends ProviderV2 {\n  (modelId: GatewayModelId): LanguageModelV2;\n\n  /**\nCreates a model for text generation.\n*/\n  languageModel(modelId: GatewayModelId): LanguageModelV2;\n\n  /**\nReturns available providers and models for use with the remote provider.\n */\n  getAvailableModels(): Promise<GatewayFetchMetadataResponse>;\n\n  /**\nCreates a model for generating text embeddings.\n*/\n  textEmbeddingModel(\n    modelId: GatewayEmbeddingModelId,\n  ): EmbeddingModelV2<string>;\n}\n\nexport interface GatewayProviderSettings {\n  /**\nThe base URL prefix for API calls. Defaults to `https://ai-gateway.vercel.sh/v1/ai`.\n   */\n  baseURL?: string;\n\n  /**\nAPI key that is being sent using the `Authorization` header.\n   */\n  apiKey?: string;\n\n  /**\nCustom headers to include in the requests.\n     */\n  headers?: Record<string, string>;\n\n  /**\nCustom fetch implementation. You can use it as a middleware to intercept requests,\nor to provide a custom fetch implementation for e.g. testing.\n    */\n  fetch?: FetchFunction;\n\n  /**\nHow frequently to refresh the metadata cache in milliseconds.\n   */\n  metadataCacheRefreshMillis?: number;\n\n  /**\n   * @internal For testing purposes only\n   */\n  _internal?: {\n    currentDate?: () => Date;\n  };\n}\n\nconst AI_GATEWAY_PROTOCOL_VERSION = '0.0.1';\n\n/**\nCreate a remote provider instance.\n */\nexport function createGatewayProvider(\n  options: GatewayProviderSettings = {},\n): GatewayProvider {\n  let pendingMetadata: Promise<GatewayFetchMetadataResponse> | null = null;\n  let metadataCache: GatewayFetchMetadataResponse | null = null;\n  const cacheRefreshMillis =\n    options.metadataCacheRefreshMillis ?? 1000 * 60 * 5;\n  let lastFetchTime = 0;\n\n  const baseURL =\n    withoutTrailingSlash(options.baseURL) ??\n    'https://ai-gateway.vercel.sh/v1/ai';\n\n  const getHeaders = async () => {\n    const auth = await getGatewayAuthToken(options);\n    if (auth) {\n      return {\n        Authorization: `Bearer ${auth.token}`,\n        'ai-gateway-protocol-version': AI_GATEWAY_PROTOCOL_VERSION,\n        [GATEWAY_AUTH_METHOD_HEADER]: auth.authMethod,\n        ...options.headers,\n      };\n    }\n\n    throw GatewayAuthenticationError.createContextualError({\n      apiKeyProvided: false,\n      oidcTokenProvided: false,\n      statusCode: 401,\n    });\n  };\n\n  const createO11yHeaders = () => {\n    const deploymentId = loadOptionalSetting({\n      settingValue: undefined,\n      environmentVariableName: 'VERCEL_DEPLOYMENT_ID',\n    });\n    const environment = loadOptionalSetting({\n      settingValue: undefined,\n      environmentVariableName: 'VERCEL_ENV',\n    });\n    const region = loadOptionalSetting({\n      settingValue: undefined,\n      environmentVariableName: 'VERCEL_REGION',\n    });\n\n    return async () => {\n      const requestId = await getVercelRequestId();\n      return {\n        ...(deploymentId && { 'ai-o11y-deployment-id': deploymentId }),\n        ...(environment && { 'ai-o11y-environment': environment }),\n        ...(region && { 'ai-o11y-region': region }),\n        ...(requestId && { 'ai-o11y-request-id': requestId }),\n      };\n    };\n  };\n\n  const createLanguageModel = (modelId: GatewayModelId) => {\n    return new GatewayLanguageModel(modelId, {\n      provider: 'gateway',\n      baseURL,\n      headers: getHeaders,\n      fetch: options.fetch,\n      o11yHeaders: createO11yHeaders(),\n    });\n  };\n\n  const getAvailableModels = async () => {\n    const now = options._internal?.currentDate?.().getTime() ?? Date.now();\n    if (!pendingMetadata || now - lastFetchTime > cacheRefreshMillis) {\n      lastFetchTime = now;\n\n      pendingMetadata = new GatewayFetchMetadata({\n        baseURL,\n        headers: getHeaders,\n        fetch: options.fetch,\n      })\n        .getAvailableModels()\n        .then(metadata => {\n          metadataCache = metadata;\n          return metadata;\n        })\n        .catch(async (error: unknown) => {\n          throw asGatewayError(error, parseAuthMethod(await getHeaders()));\n        });\n    }\n\n    return metadataCache ? Promise.resolve(metadataCache) : pendingMetadata;\n  };\n\n  const provider = function (modelId: GatewayModelId) {\n    if (new.target) {\n      throw new Error(\n        'The Gateway Provider model function cannot be called with the new keyword.',\n      );\n    }\n\n    return createLanguageModel(modelId);\n  };\n\n  provider.getAvailableModels = getAvailableModels;\n  provider.imageModel = (modelId: string) => {\n    throw new NoSuchModelError({ modelId, modelType: 'imageModel' });\n  };\n  provider.languageModel = createLanguageModel;\n  provider.textEmbeddingModel = (modelId: GatewayEmbeddingModelId) => {\n    return new GatewayEmbeddingModel(modelId, {\n      provider: 'gateway',\n      baseURL,\n      headers: getHeaders,\n      fetch: options.fetch,\n      o11yHeaders: createO11yHeaders(),\n    });\n  };\n\n  return provider;\n}\n\nexport const gateway = createGatewayProvider();\n\nexport async function getGatewayAuthToken(\n  options: GatewayProviderSettings,\n): Promise<{\n  token: string;\n  authMethod: 'api-key' | 'oidc';\n} | null> {\n  const apiKey = loadOptionalSetting({\n    settingValue: options.apiKey,\n    environmentVariableName: 'AI_GATEWAY_API_KEY',\n  });\n\n  if (apiKey) {\n    return {\n      token: apiKey,\n      authMethod: 'api-key',\n    };\n  }\n\n  try {\n    const oidcToken = await getVercelOidcToken();\n    return {\n      token: oidcToken,\n      authMethod: 'oidc',\n    };\n  } catch {\n    return null;\n  }\n}\n", "import { APICallError } from '@ai-sdk/provider';\nimport { extractApiCallResponse, GatewayError } from '.';\nimport { createGatewayErrorFromResponse } from './create-gateway-error';\n\nexport function asGatewayError(\n  error: unknown,\n  authMethod?: 'api-key' | 'oidc',\n) {\n  if (GatewayError.isInstance(error)) {\n    return error;\n  }\n\n  if (APICallError.isInstance(error)) {\n    return createGatewayErrorFromResponse({\n      response: extractApiCallResponse(error),\n      statusCode: error.statusCode ?? 500,\n      defaultMessage: 'Gateway request failed',\n      cause: error,\n      authMethod,\n    });\n  }\n\n  return createGatewayErrorFromResponse({\n    response: {},\n    statusCode: 500,\n    defaultMessage:\n      error instanceof Error\n        ? `Gateway request failed: ${error.message}`\n        : 'Unknown Gateway error',\n    cause: error,\n    authMethod,\n  });\n}\n", "import { z } from 'zod/v4';\nimport type { GatewayError } from './gateway-error';\nimport { GatewayAuthenticationError } from './gateway-authentication-error';\nimport { GatewayInvalidRequestError } from './gateway-invalid-request-error';\nimport { GatewayRateLimitError } from './gateway-rate-limit-error';\nimport {\n  GatewayModelNotFoundError,\n  modelNotFoundParamSchema,\n} from './gateway-model-not-found-error';\nimport { GatewayInternalServerError } from './gateway-internal-server-error';\nimport { GatewayResponseError } from './gateway-response-error';\n\nexport function createGatewayErrorFromResponse({\n  response,\n  statusCode,\n  defaultMessage = 'Gateway request failed',\n  cause,\n  authMethod,\n}: {\n  response: unknown;\n  statusCode: number;\n  defaultMessage?: string;\n  cause?: unknown;\n  authMethod?: 'api-key' | 'oidc';\n}): GatewayError {\n  const parseResult = gatewayErrorResponseSchema.safeParse(response);\n  if (!parseResult.success) {\n    return new GatewayResponseError({\n      message: `Invalid error response format: ${defaultMessage}`,\n      statusCode,\n      response,\n      validationError: parseResult.error,\n      cause,\n    });\n  }\n\n  const validatedResponse: GatewayErrorResponse = parseResult.data;\n  const errorType = validatedResponse.error.type;\n  const message = validatedResponse.error.message;\n\n  switch (errorType) {\n    case 'authentication_error':\n      return GatewayAuthenticationError.createContextualError({\n        apiKeyProvided: authMethod === 'api-key',\n        oidcTokenProvided: authMethod === 'oidc',\n        statusCode,\n        cause,\n      });\n    case 'invalid_request_error':\n      return new GatewayInvalidRequestError({ message, statusCode, cause });\n    case 'rate_limit_exceeded':\n      return new GatewayRateLimitError({ message, statusCode, cause });\n    case 'model_not_found': {\n      const modelResult = modelNotFoundParamSchema.safeParse(\n        validatedResponse.error.param,\n      );\n      return new GatewayModelNotFoundError({\n        message,\n        statusCode,\n        modelId: modelResult.success ? modelResult.data.modelId : undefined,\n        cause,\n      });\n    }\n    case 'internal_server_error':\n      return new GatewayInternalServerError({ message, statusCode, cause });\n    default:\n      return new GatewayInternalServerError({ message, statusCode, cause });\n  }\n}\n\nconst gatewayErrorResponseSchema = z.object({\n  error: z.object({\n    message: z.string(),\n    type: z.string().nullish(),\n    param: z.unknown().nullish(),\n    code: z.union([z.string(), z.number()]).nullish(),\n  }),\n});\n\nexport type GatewayErrorResponse = z.infer<typeof gatewayErrorResponseSchema>;\n", "const marker = 'vercel.ai.gateway.error';\nconst symbol = Symbol.for(marker);\n\nexport abstract class GatewayError extends Error {\n  private readonly [symbol] = true; // used in isInstance\n\n  abstract readonly name: string;\n  abstract readonly type: string;\n  readonly statusCode: number;\n  readonly cause?: unknown;\n\n  constructor({\n    message,\n    statusCode = 500,\n    cause,\n  }: {\n    message: string;\n    statusCode?: number;\n    cause?: unknown;\n  }) {\n    super(message);\n    this.statusCode = statusCode;\n    this.cause = cause;\n  }\n\n  /**\n   * Checks if the given error is a Gateway Error.\n   * @param {unknown} error - The error to check.\n   * @returns {boolean} True if the error is a Gateway Error, false otherwise.\n   */\n  static isInstance(error: unknown): error is GatewayError {\n    return GatewayError.hasMarker(error);\n  }\n\n  static hasMarker(error: unknown): error is GatewayError {\n    return (\n      typeof error === 'object' &&\n      error !== null &&\n      symbol in error &&\n      (error as any)[symbol] === true\n    );\n  }\n}\n", "import { GatewayError } from './gateway-error';\n\nconst name = 'GatewayAuthenticationError';\nconst marker = `vercel.ai.gateway.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Authentication failed - invalid API key or OIDC token\n */\nexport class GatewayAuthenticationError extends GatewayError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly name = name;\n  readonly type = 'authentication_error';\n\n  constructor({\n    message = 'Authentication failed',\n    statusCode = 401,\n    cause,\n  }: {\n    message?: string;\n    statusCode?: number;\n    cause?: unknown;\n  } = {}) {\n    super({ message, statusCode, cause });\n  }\n\n  static isInstance(error: unknown): error is GatewayAuthenticationError {\n    return GatewayError.hasMarker(error) && symbol in error;\n  }\n\n  /**\n   * Creates a contextual error message when authentication fails\n   */\n  static createContextualError({\n    apiKeyProvided,\n    oidcTokenProvided,\n    message = 'Authentication failed',\n    statusCode = 401,\n    cause,\n  }: {\n    apiKeyProvided: boolean;\n    oidcTokenProvided: boolean;\n    message?: string;\n    statusCode?: number;\n    cause?: unknown;\n  }): GatewayAuthenticationError {\n    let contextualMessage: string;\n\n    if (apiKeyProvided) {\n      contextualMessage = `AI Gateway authentication failed: Invalid API key provided.\n\nThe token is expected to be provided via the 'apiKey' option or 'AI_GATEWAY_API_KEY' environment variable.`;\n    } else if (oidcTokenProvided) {\n      contextualMessage = `AI Gateway authentication failed: Invalid OIDC token provided.\n\nThe token is expected to be provided via the 'VERCEL_OIDC_TOKEN' environment variable. It expires every 12 hours.\n- make sure your Vercel project settings have OIDC enabled\n- if running locally with 'vercel dev', the token is automatically obtained and refreshed\n- if running locally with your own dev server, run 'vercel env pull' to fetch the token\n- in production/preview, the token is automatically obtained and refreshed\n\nAlternative: Provide an API key via 'apiKey' option or 'AI_GATEWAY_API_KEY' environment variable.`;\n    } else {\n      contextualMessage = `AI Gateway authentication failed: No authentication provided.\n\nProvide either an API key or OIDC token.\n\nAPI key instructions:\n\nThe token is expected to be provided via the 'apiKey' option or 'AI_GATEWAY_API_KEY' environment variable.\n\nOIDC token instructions:\n\nThe token is expected to be provided via the 'VERCEL_OIDC_TOKEN' environment variable. It expires every 12 hours.\n- make sure your Vercel project settings have OIDC enabled\n- if running locally with 'vercel dev', the token is automatically obtained and refreshed\n- if running locally with your own dev server, run 'vercel env pull' to fetch the token\n- in production/preview, the token is automatically obtained and refreshed`;\n    }\n\n    return new GatewayAuthenticationError({\n      message: contextualMessage,\n      statusCode,\n      cause,\n    });\n  }\n}\n", "import { GatewayError } from './gateway-error';\n\nconst name = 'GatewayInvalidRequestError';\nconst marker = `vercel.ai.gateway.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Invalid request - missing headers, malformed data, etc.\n */\nexport class GatewayInvalidRequestError extends GatewayError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly name = name;\n  readonly type = 'invalid_request_error';\n\n  constructor({\n    message = 'Invalid request',\n    statusCode = 400,\n    cause,\n  }: {\n    message?: string;\n    statusCode?: number;\n    cause?: unknown;\n  } = {}) {\n    super({ message, statusCode, cause });\n  }\n\n  static isInstance(error: unknown): error is GatewayInvalidRequestError {\n    return GatewayError.hasMarker(error) && symbol in error;\n  }\n}\n", "import { GatewayError } from './gateway-error';\n\nconst name = 'GatewayRateLimitError';\nconst marker = `vercel.ai.gateway.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Rate limit exceeded.\n */\nexport class GatewayRateLimitError extends GatewayError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly name = name;\n  readonly type = 'rate_limit_exceeded';\n\n  constructor({\n    message = 'Rate limit exceeded',\n    statusCode = 429,\n    cause,\n  }: {\n    message?: string;\n    statusCode?: number;\n    cause?: unknown;\n  } = {}) {\n    super({ message, statusCode, cause });\n  }\n\n  static isInstance(error: unknown): error is GatewayRateLimitError {\n    return GatewayError.hasMarker(error) && symbol in error;\n  }\n}\n", "import { z } from 'zod/v4';\nimport { GatewayError } from './gateway-error';\n\nconst name = 'GatewayModelNotFoundError';\nconst marker = `vercel.ai.gateway.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport const modelNotFoundParamSchema = z.object({\n  modelId: z.string(),\n});\n\n/**\n * Model not found or not available\n */\nexport class GatewayModelNotFoundError extends GatewayError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly name = name;\n  readonly type = 'model_not_found';\n  readonly modelId?: string;\n\n  constructor({\n    message = 'Model not found',\n    statusCode = 404,\n    modelId,\n    cause,\n  }: {\n    message?: string;\n    statusCode?: number;\n    modelId?: string;\n    cause?: unknown;\n  } = {}) {\n    super({ message, statusCode, cause });\n    this.modelId = modelId;\n  }\n\n  static isInstance(error: unknown): error is GatewayModelNotFoundError {\n    return GatewayError.hasMarker(error) && symbol in error;\n  }\n}\n", "import { GatewayError } from './gateway-error';\n\nconst name = 'GatewayInternalServerError';\nconst marker = `vercel.ai.gateway.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Internal server error from the Gateway\n */\nexport class GatewayInternalServerError extends GatewayError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly name = name;\n  readonly type = 'internal_server_error';\n\n  constructor({\n    message = 'Internal server error',\n    statusCode = 500,\n    cause,\n  }: {\n    message?: string;\n    statusCode?: number;\n    cause?: unknown;\n  } = {}) {\n    super({ message, statusCode, cause });\n  }\n\n  static isInstance(error: unknown): error is GatewayInternalServerError {\n    return GatewayError.hasMarker(error) && symbol in error;\n  }\n}\n", "import { GatewayError } from './gateway-error';\nimport type { ZodError } from 'zod/v4';\n\nconst name = 'GatewayResponseError';\nconst marker = `vercel.ai.gateway.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * Gateway response parsing error\n */\nexport class GatewayResponseError extends GatewayError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly name = name;\n  readonly type = 'response_error';\n  readonly response?: unknown;\n  readonly validationError?: ZodError;\n\n  constructor({\n    message = 'Invalid response from Gateway',\n    statusCode = 502,\n    response,\n    validationError,\n    cause,\n  }: {\n    message?: string;\n    statusCode?: number;\n    response?: unknown;\n    validationError?: ZodError;\n    cause?: unknown;\n  } = {}) {\n    super({ message, statusCode, cause });\n    this.response = response;\n    this.validationError = validationError;\n  }\n\n  static isInstance(error: unknown): error is GatewayResponseError {\n    return GatewayError.hasMarker(error) && symbol in error;\n  }\n}\n", "import type { APICallError } from '@ai-sdk/provider';\n\nexport function extractApiCallResponse(error: APICallError): unknown {\n  if (error.data !== undefined) {\n    return error.data;\n  }\n  if (error.responseBody != null) {\n    try {\n      return JSON.parse(error.responseBody);\n    } catch {\n      return error.responseBody;\n    }\n  }\n  return {};\n}\n", "import { z } from 'zod/v4';\n\nexport const GATEWAY_AUTH_METHOD_HEADER = 'ai-gateway-auth-method' as const;\n\nexport function parseAuthMethod(headers: Record<string, string | undefined>) {\n  const result = gatewayAuthMethodSchema.safeParse(\n    headers[GATEWAY_AUTH_METHOD_HEADER],\n  );\n  return result.success ? result.data : undefined;\n}\n\nconst gatewayAuthMethodSchema = z.union([\n  z.literal('api-key'),\n  z.literal('oidc'),\n]);\n", "import {\n  createJsonErrorResponseHandler,\n  createJsonResponseHandler,\n  getFromApi,\n  resolve,\n} from '@ai-sdk/provider-utils';\nimport { asGatewayError } from './errors';\nimport type { GatewayConfig } from './gateway-config';\nimport type { GatewayLanguageModelEntry } from './gateway-model-entry';\nimport { z } from 'zod/v4';\n\ntype GatewayFetchMetadataConfig = GatewayConfig;\n\nexport interface GatewayFetchMetadataResponse {\n  models: GatewayLanguageModelEntry[];\n}\n\nexport class GatewayFetchMetadata {\n  constructor(private readonly config: GatewayFetchMetadataConfig) {}\n\n  async getAvailableModels(): Promise<GatewayFetchMetadataResponse> {\n    try {\n      const { value } = await getFromApi({\n        url: `${this.config.baseURL}/config`,\n        headers: await resolve(this.config.headers()),\n        successfulResponseHandler: createJsonResponseHandler(\n          gatewayFetchMetadataSchema,\n        ),\n        failedResponseHandler: createJsonErrorResponseHandler({\n          errorSchema: z.any(),\n          errorToMessage: data => data,\n        }),\n        fetch: this.config.fetch,\n      });\n\n      return value;\n    } catch (error) {\n      throw asGatewayError(error);\n    }\n  }\n}\n\nconst gatewayLanguageModelSpecificationSchema = z.object({\n  specificationVersion: z.literal('v2'),\n  provider: z.string(),\n  modelId: z.string(),\n});\n\nconst gatewayLanguageModelPricingSchema = z\n  .object({\n    input: z.string(),\n    output: z.string(),\n    input_cache_read: z.string().nullish(),\n    input_cache_write: z.string().nullish(),\n  })\n  .transform(({ input, output, input_cache_read, input_cache_write }) => ({\n    input,\n    output,\n    ...(input_cache_read ? { cachedInputTokens: input_cache_read } : {}),\n    ...(input_cache_write\n      ? { cacheCreationInputTokens: input_cache_write }\n      : {}),\n  }));\n\nconst gatewayLanguageModelEntrySchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().nullish(),\n  pricing: gatewayLanguageModelPricingSchema.nullish(),\n  specification: gatewayLanguageModelSpecificationSchema,\n  modelType: z.enum(['language', 'embedding', 'image']).nullish(),\n});\n\nconst gatewayFetchMetadataSchema = z.object({\n  models: z.array(gatewayLanguageModelEntrySchema),\n});\n", "import type {\n  LanguageModelV2,\n  LanguageModelV2CallOptions,\n  LanguageModelV2CallWarning,\n  LanguageModelV2FilePart,\n  LanguageModelV2StreamPart,\n} from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createEventSourceResponseHandler,\n  createJsonErrorResponseHandler,\n  createJsonResponseHandler,\n  postJsonToApi,\n  resolve,\n  type ParseResult,\n  type Resolvable,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod/v4';\nimport type { GatewayConfig } from './gateway-config';\nimport type { GatewayModelId } from './gateway-language-model-settings';\nimport { asGatewayError } from './errors';\nimport { parseAuthMethod } from './errors/parse-auth-method';\n\ntype GatewayChatConfig = GatewayConfig & {\n  provider: string;\n  o11yHeaders: Resolvable<Record<string, string>>;\n};\n\nexport class GatewayLanguageModel implements LanguageModelV2 {\n  readonly specificationVersion = 'v2';\n  readonly supportedUrls = { '*/*': [/.*/] };\n\n  constructor(\n    readonly modelId: GatewayModelId,\n    private readonly config: GatewayChatConfig,\n  ) {}\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  private async getArgs(options: Parameters<LanguageModelV2['doGenerate']>[0]) {\n    const { abortSignal: _abortSignal, ...optionsWithoutSignal } = options;\n\n    return {\n      args: this.maybeEncodeFileParts(optionsWithoutSignal),\n      warnings: [],\n    };\n  }\n\n  async doGenerate(\n    options: Parameters<LanguageModelV2['doGenerate']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV2['doGenerate']>>> {\n    const { args, warnings } = await this.getArgs(options);\n    const { abortSignal } = options;\n\n    const resolvedHeaders = await resolve(this.config.headers());\n\n    try {\n      const {\n        responseHeaders,\n        value: responseBody,\n        rawValue: rawResponse,\n      } = await postJsonToApi({\n        url: this.getUrl(),\n        headers: combineHeaders(\n          resolvedHeaders,\n          options.headers,\n          this.getModelConfigHeaders(this.modelId, false),\n          await resolve(this.config.o11yHeaders),\n        ),\n        body: args,\n        successfulResponseHandler: createJsonResponseHandler(z.any()),\n        failedResponseHandler: createJsonErrorResponseHandler({\n          errorSchema: z.any(),\n          errorToMessage: data => data,\n        }),\n        ...(abortSignal && { abortSignal }),\n        fetch: this.config.fetch,\n      });\n\n      return {\n        ...responseBody,\n        request: { body: args },\n        response: { headers: responseHeaders, body: rawResponse },\n        warnings,\n      };\n    } catch (error) {\n      throw asGatewayError(error, parseAuthMethod(resolvedHeaders));\n    }\n  }\n\n  async doStream(\n    options: Parameters<LanguageModelV2['doStream']>[0],\n  ): Promise<Awaited<ReturnType<LanguageModelV2['doStream']>>> {\n    const { args, warnings } = await this.getArgs(options);\n    const { abortSignal } = options;\n\n    const resolvedHeaders = await resolve(this.config.headers());\n\n    try {\n      const { value: response, responseHeaders } = await postJsonToApi({\n        url: this.getUrl(),\n        headers: combineHeaders(\n          resolvedHeaders,\n          options.headers,\n          this.getModelConfigHeaders(this.modelId, true),\n          await resolve(this.config.o11yHeaders),\n        ),\n        body: args,\n        successfulResponseHandler: createEventSourceResponseHandler(z.any()),\n        failedResponseHandler: createJsonErrorResponseHandler({\n          errorSchema: z.any(),\n          errorToMessage: data => data,\n        }),\n        ...(abortSignal && { abortSignal }),\n        fetch: this.config.fetch,\n      });\n\n      return {\n        stream: response.pipeThrough(\n          new TransformStream<\n            ParseResult<LanguageModelV2StreamPart>,\n            LanguageModelV2StreamPart\n          >({\n            start(controller) {\n              if (warnings.length > 0) {\n                controller.enqueue({ type: 'stream-start', warnings });\n              }\n            },\n            transform(chunk, controller) {\n              if (chunk.success) {\n                const streamPart = chunk.value;\n\n                // Handle raw chunks: if this is a raw chunk from the gateway API,\n                // only emit it if includeRawChunks is true\n                if (streamPart.type === 'raw' && !options.includeRawChunks) {\n                  return; // Skip raw chunks if not requested\n                }\n\n                if (\n                  streamPart.type === 'response-metadata' &&\n                  streamPart.timestamp &&\n                  typeof streamPart.timestamp === 'string'\n                ) {\n                  streamPart.timestamp = new Date(streamPart.timestamp);\n                }\n\n                controller.enqueue(streamPart);\n              } else {\n                controller.error(\n                  (chunk as { success: false; error: unknown }).error,\n                );\n              }\n            },\n          }),\n        ),\n        request: { body: args },\n        response: { headers: responseHeaders },\n      };\n    } catch (error) {\n      throw asGatewayError(error, parseAuthMethod(resolvedHeaders));\n    }\n  }\n\n  private isFilePart(part: unknown) {\n    return (\n      part && typeof part === 'object' && 'type' in part && part.type === 'file'\n    );\n  }\n\n  /**\n   * Encodes file parts in the prompt to base64. Mutates the passed options\n   * instance directly to avoid copying the file data.\n   * @param options - The options to encode.\n   * @returns The options with the file parts encoded.\n   */\n  private maybeEncodeFileParts(options: LanguageModelV2CallOptions) {\n    for (const message of options.prompt) {\n      for (const part of message.content) {\n        if (this.isFilePart(part)) {\n          const filePart = part as LanguageModelV2FilePart;\n          // If the file part is a URL it will get cleanly converted to a string.\n          // If it's a binary file attachment we convert it to a data url.\n          // In either case, server-side we should only ever see URLs as strings.\n          if (filePart.data instanceof Uint8Array) {\n            const buffer = Uint8Array.from(filePart.data);\n            const base64Data = Buffer.from(buffer).toString('base64');\n            filePart.data = new URL(\n              `data:${filePart.mediaType || 'application/octet-stream'};base64,${base64Data}`,\n            );\n          }\n        }\n      }\n    }\n    return options;\n  }\n\n  private getUrl() {\n    return `${this.config.baseURL}/language-model`;\n  }\n\n  private getModelConfigHeaders(modelId: string, streaming: boolean) {\n    return {\n      'ai-language-model-specification-version': '2',\n      'ai-language-model-id': modelId,\n      'ai-language-model-streaming': String(streaming),\n    };\n  }\n}\n", "import type { EmbeddingModelV2 } from '@ai-sdk/provider';\nimport {\n  combineHeaders,\n  createJsonResponseHandler,\n  createJsonErrorResponseHandler,\n  postJsonToApi,\n  resolve,\n  type Resolvable,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod/v4';\nimport type { GatewayConfig } from './gateway-config';\nimport { asGatewayError } from './errors';\nimport { parseAuthMethod } from './errors/parse-auth-method';\nimport type { SharedV2ProviderMetadata } from '@ai-sdk/provider';\n\nexport class GatewayEmbeddingModel implements EmbeddingModelV2<string> {\n  readonly specificationVersion = 'v2';\n  readonly maxEmbeddingsPerCall = 2048;\n  readonly supportsParallelCalls = true;\n\n  constructor(\n    readonly modelId: string,\n    private readonly config: GatewayConfig & {\n      provider: string;\n      o11yHeaders: Resolvable<Record<string, string>>;\n    },\n  ) {}\n\n  get provider(): string {\n    return this.config.provider;\n  }\n\n  async doEmbed({\n    values,\n    headers,\n    abortSignal,\n    providerOptions,\n  }: Parameters<EmbeddingModelV2<string>['doEmbed']>[0]): Promise<\n    Awaited<ReturnType<EmbeddingModelV2<string>['doEmbed']>>\n  > {\n    const resolvedHeaders = await resolve(this.config.headers());\n    try {\n      const {\n        responseHeaders,\n        value: responseBody,\n        rawValue,\n      } = await postJsonToApi({\n        url: this.getUrl(),\n        headers: combineHeaders(\n          resolvedHeaders,\n          headers ?? {},\n          this.getModelConfigHeaders(),\n          await resolve(this.config.o11yHeaders),\n        ),\n        body: {\n          input: values.length === 1 ? values[0] : values,\n          ...(providerOptions ?? {}),\n        },\n        successfulResponseHandler: createJsonResponseHandler(\n          gatewayEmbeddingResponseSchema,\n        ),\n        failedResponseHandler: createJsonErrorResponseHandler({\n          errorSchema: z.any(),\n          errorToMessage: data => data,\n        }),\n        ...(abortSignal && { abortSignal }),\n        fetch: this.config.fetch,\n      });\n\n      return {\n        embeddings: responseBody.embeddings,\n        usage: responseBody.usage ?? undefined,\n        providerMetadata:\n          responseBody.providerMetadata as unknown as SharedV2ProviderMetadata,\n        response: { headers: responseHeaders, body: rawValue },\n      };\n    } catch (error) {\n      throw asGatewayError(error, parseAuthMethod(resolvedHeaders));\n    }\n  }\n\n  private getUrl() {\n    return `${this.config.baseURL}/embedding-model`;\n  }\n\n  private getModelConfigHeaders() {\n    return {\n      'ai-embedding-model-specification-version': '2',\n      'ai-model-id': this.modelId,\n    };\n  }\n}\n\nconst gatewayEmbeddingResponseSchema = z.object({\n  embeddings: z.array(z.array(z.number())),\n  usage: z.object({ tokens: z.number() }).nullish(),\n  providerMetadata: z\n    .record(z.string(), z.record(z.string(), z.unknown()))\n    .optional(),\n});\n", "import { GatewayAuthenticationError } from './errors';\n\nexport async function getVercelOidcToken(): Promise<string> {\n  const token =\n    getContext().headers?.['x-vercel-oidc-token'] ??\n    process.env.VERCEL_OIDC_TOKEN;\n\n  if (!token) {\n    throw new GatewayAuthenticationError({\n      message: 'OIDC token not available',\n      statusCode: 401,\n    });\n  }\n\n  return token;\n}\n\nexport async function getVercelRequestId(): Promise<string | undefined> {\n  return getContext().headers?.['x-vercel-id'];\n}\n\ntype Context = {\n  headers?: Record<string, string>;\n};\n\nconst SYMBOL_FOR_REQ_CONTEXT = Symbol.for('@vercel/request-context');\n\nfunction getContext(): Context {\n  const fromSymbol: typeof globalThis & {\n    [SYMBOL_FOR_REQ_CONTEXT]?: { get?: () => Context };\n  } = globalThis;\n  return fromSymbol[SYMBOL_FOR_REQ_CONTEXT]?.get?.() ?? {};\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.9.0';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag/types';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      `@opentelemetry/api: Registration of version v${api.version} for ${type} does not match previously registered API v${VERSION}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  metrics?: MeterProvider;\n  propagation?: TextMapPropagator;\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface DiagLoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param options - A {@link DiagLoggerOptions} object. If not provided, default values will be set.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, options?: DiagLoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLoggerApi,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger, DiagLoggerApi {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    const setLogger: DiagLoggerApi['setLogger'] = (\n      logger,\n      optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel,\n        };\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(\n        optionsOrLogLevel.logLevel ?? DiagLogLevel.INFO,\n        logger\n      );\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.setLogger = setLogger;\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  public setLogger!: DiagLoggerApi['setLogger'];\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Baggage, BaggageEntry } from '../types';\n\nexport class BaggageImpl implements Baggage {\n  private _entries: Map<string, BaggageEntry>;\n\n  constructor(entries?: Map<string, BaggageEntry>) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n\n  getEntry(key: string): BaggageEntry | undefined {\n    const entry = this._entries.get(key);\n    if (!entry) {\n      return undefined;\n    }\n\n    return Object.assign({}, entry);\n  }\n\n  getAllEntries(): [string, BaggageEntry][] {\n    return Array.from(this._entries.entries()).map(([k, v]) => [k, v]);\n  }\n\n  setEntry(key: string, entry: BaggageEntry): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.set(key, entry);\n    return newBaggage;\n  }\n\n  removeEntry(key: string): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.delete(key);\n    return newBaggage;\n  }\n\n  removeEntries(...keys: string[]): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    for (const key of keys) {\n      newBaggage._entries.delete(key);\n    }\n    return newBaggage;\n  }\n\n  clear(): BaggageImpl {\n    return new BaggageImpl();\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport const baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nimport { Baggage, BaggageEntry, BaggageEntryMetadata } from './types';\n\nconst diag = DiagAPI.instance();\n\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(\n  entries: Record<string, BaggageEntry> = {}\n): Baggage {\n  return new BaggageImpl(new Map(Object.entries(entries)));\n}\n\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(\n  str: string\n): BaggageEntryMetadata {\n  if (typeof str !== 'string') {\n    diag.error(\n      `Cannot create baggage metadata from unknown type: ${typeof str}`\n    );\n    str = '';\n  }\n\n  return {\n    __TYPE__: baggageEntryMetadataSymbol,\n    toString() {\n      return str;\n    },\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter } from './Meter';\nimport {\n  BatchObservableCallback,\n  Counter,\n  Gauge,\n  Histogram,\n  MetricAttributes,\n  MetricOptions,\n  Observable,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n} from './Metric';\n\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nexport class NoopMeter implements Meter {\n  constructor() {}\n\n  /**\n   * @see {@link Meter.createGauge}\n   */\n  createGauge(_name: string, _options?: MetricOptions): Gauge {\n    return NOOP_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createHistogram}\n   */\n  createHistogram(_name: string, _options?: MetricOptions): Histogram {\n    return NOOP_HISTOGRAM_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createCounter}\n   */\n  createCounter(_name: string, _options?: MetricOptions): Counter {\n    return NOOP_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createUpDownCounter}\n   */\n  createUpDownCounter(_name: string, _options?: MetricOptions): UpDownCounter {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableGauge}\n   */\n  createObservableGauge(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableGauge {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableCounter}\n   */\n  createObservableCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableCounter {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableUpDownCounter}\n   */\n  createObservableUpDownCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableUpDownCounter {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(\n    _callback: BatchObservableCallback,\n    _observables: Observable[]\n  ): void {}\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(_callback: BatchObservableCallback): void {}\n}\n\nexport class NoopMetric {}\n\nexport class NoopCounterMetric extends NoopMetric implements Counter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopUpDownCounterMetric\n  extends NoopMetric\n  implements UpDownCounter\n{\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopGaugeMetric extends NoopMetric implements Gauge {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopHistogramMetric extends NoopMetric implements Histogram {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopObservableMetric {\n  addCallback(_callback: ObservableCallback) {}\n\n  removeCallback(_callback: ObservableCallback) {}\n}\n\nexport class NoopObservableCounterMetric\n  extends NoopObservableMetric\n  implements ObservableCounter {}\n\nexport class NoopObservableGaugeMetric\n  extends NoopObservableMetric\n  implements ObservableGauge {}\n\nexport class NoopObservableUpDownCounterMetric\n  extends NoopObservableMetric\n  implements ObservableUpDownCounter {}\n\nexport const NOOP_METER = new NoopMeter();\n\n// Synchronous instruments\nexport const NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport const NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport const NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport const NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n\n// Asynchronous instruments\nexport const NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport const NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport const NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC =\n  new NoopObservableUpDownCounterMetric();\n\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter(): Meter {\n  return NOOP_METER;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Attributes, AttributeValue } from '../common/Attributes';\nimport { Context } from '../context/types';\nimport { BatchObservableResult, ObservableResult } from './ObservableResult';\n\n/**\n * Advisory options influencing aggregation configuration parameters.\n * @experimental\n */\nexport interface MetricAdvice {\n  /**\n   * Hint the explicit bucket boundaries for SDK if the metric is been\n   * aggregated with a HistogramAggregator.\n   */\n  explicitBucketBoundaries?: number[];\n}\n\n/**\n * Options needed for metric creation\n */\nexport interface MetricOptions {\n  /**\n   * The description of the Metric.\n   * @default ''\n   */\n  description?: string;\n\n  /**\n   * The unit of the Metric values.\n   * @default ''\n   */\n  unit?: string;\n\n  /**\n   * Indicates the type of the recorded value.\n   * @default {@link ValueType.DOUBLE}\n   */\n  valueType?: ValueType;\n\n  /**\n   * The advice influencing aggregation configuration parameters.\n   * @experimental\n   */\n  advice?: MetricAdvice;\n}\n\n/** The Type of value. It describes how the data is reported. */\nexport enum ValueType {\n  INT,\n  DOUBLE,\n}\n\n/**\n * Counter is the most common synchronous instrument. This instrument supports\n * an `Add(increment)` function for reporting a sum, and is restricted to\n * non-negative increments. The default aggregation is Sum, as for any additive\n * instrument.\n *\n * Example uses for Counter:\n * <ol>\n *   <li> count the number of bytes received. </li>\n *   <li> count the number of requests completed. </li>\n *   <li> count the number of accounts created. </li>\n *   <li> count the number of checkpoints run. </li>\n *   <li> count the number of 5xx errors. </li>\n * <ol>\n */\nexport interface Counter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Increment value of counter by the input. Inputs must not be negative.\n   */\n  add(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface UpDownCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Increment value of counter by the input. Inputs may be negative.\n   */\n  add(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface Gauge<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Records a measurement.\n   */\n  record(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\nexport interface Histogram<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Records a measurement. Value of the measurement must not be negative.\n   */\n  record(value: number, attributes?: AttributesTypes, context?: Context): void;\n}\n\n/**\n * @deprecated please use {@link Attributes}\n */\nexport type MetricAttributes = Attributes;\n\n/**\n * @deprecated please use {@link AttributeValue}\n */\nexport type MetricAttributeValue = AttributeValue;\n\n/**\n * The observable callback for Observable instruments.\n */\nexport type ObservableCallback<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = (\n  observableResult: ObservableResult<AttributesTypes>\n) => void | Promise<void>;\n\n/**\n * The observable callback for a batch of Observable instruments.\n */\nexport type BatchObservableCallback<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = (\n  observableResult: BatchObservableResult<AttributesTypes>\n) => void | Promise<void>;\n\nexport interface Observable<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> {\n  /**\n   * Sets up a function that will be called whenever a metric collection is initiated.\n   *\n   * If the function is already in the list of callbacks for this Observable, the function is not added a second time.\n   */\n  addCallback(callback: ObservableCallback<AttributesTypes>): void;\n\n  /**\n   * Removes a callback previously registered with {@link Observable.addCallback}.\n   */\n  removeCallback(callback: ObservableCallback<AttributesTypes>): void;\n}\n\nexport type ObservableCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\nexport type ObservableUpDownCounter<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\nexport type ObservableGauge<\n  AttributesTypes extends MetricAttributes = MetricAttributes,\n> = Observable<AttributesTypes>;\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\n\n/**\n * Injects `Context` into and extracts it from carriers that travel\n * in-band across process boundaries. Encoding is expected to conform to the\n * HTTP Header Field semantics. Values are often encoded as RPC/HTTP request\n * headers.\n *\n * The carrier of propagated data on both the client (injector) and server\n * (extractor) side is usually an object such as http headers. Propagation is\n * usually implemented via library-specific request interceptors, where the\n * client-side injects values and the server-side extracts them.\n */\nexport interface TextMapPropagator<Carrier = any> {\n  /**\n   * Injects values from a given `Context` into a carrier.\n   *\n   * OpenTelemetry defines a common set of format values (TextMapPropagator),\n   * and each has an expected `carrier` type.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param setter an optional {@link TextMapSetter}. If undefined, values will be\n   *     set by direct object assignment.\n   */\n  inject(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier>\n  ): void;\n\n  /**\n   * Given a `Context` and a carrier, extract context values from a\n   * carrier and return a new context, created from the old context, with the\n   * extracted values.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param getter an optional {@link TextMapGetter}. If undefined, keys will be all\n   *     own properties, and keys will be accessed by direct object access.\n   */\n  extract(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier>\n  ): Context;\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  fields(): string[];\n}\n\n/**\n * A setter is specified by the caller to define a specific method\n * to set key/value pairs on the carrier within a propagator.\n */\nexport interface TextMapSetter<Carrier = any> {\n  /**\n   * Callback used to set a key/value pair on an object.\n   *\n   * Should be called by the propagator each time a key/value pair\n   * should be set, and should set that key/value pair on the propagator.\n   *\n   * @param carrier object or class which carries key/value pairs\n   * @param key string key to modify\n   * @param value value to be set to the key on the carrier\n   */\n  set(carrier: Carrier, key: string, value: string): void;\n}\n\n/**\n * A getter is specified by the caller to define a specific method\n * to get the value of a key from a carrier.\n */\nexport interface TextMapGetter<Carrier = any> {\n  /**\n   * Get a list of all keys available on the carrier.\n   *\n   * @param carrier\n   */\n  keys(carrier: Carrier): string[];\n\n  /**\n   * Get the value of a specific key from the carrier.\n   *\n   * @param carrier\n   * @param key\n   */\n  get(carrier: Carrier, key: string): undefined | string | string[];\n}\n\nexport const defaultTextMapGetter: TextMapGetter = {\n  get(carrier, key) {\n    if (carrier == null) {\n      return undefined;\n    }\n    return carrier[key];\n  },\n\n  keys(carrier) {\n    if (carrier == null) {\n      return [];\n    }\n    return Object.keys(carrier);\n  },\n};\n\nexport const defaultTextMapSetter: TextMapSetter = {\n  set(carrier, key, value) {\n    if (carrier == null) {\n      return;\n    }\n\n    carrier[key] = value;\n  },\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum TraceFlags {\n  /** Represents no flag set. */\n  NONE = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1 << 0,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanContext } from './span_context';\nimport { TraceFlags } from './trace_flags';\n\nexport const INVALID_SPANID = '0000000000000000';\nexport const INVALID_TRACEID = '00000000000000000000000000000000';\nexport const INVALID_SPAN_CONTEXT: SpanContext = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE,\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\nimport { Link } from './link';\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nexport class NonRecordingSpan implements Span {\n  constructor(\n    private readonly _spanContext: SpanContext = INVALID_SPAN_CONTEXT\n  ) {}\n\n  // Returns a SpanContext.\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  // By default does nothing\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  // By default does nothing\n  setAttributes(_attributes: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  addEvent(_name: string, _attributes?: SpanAttributes): this {\n    return this;\n  }\n\n  addLink(_link: Link): this {\n    return this;\n  }\n\n  addLinks(_links: Link[]): this {\n    return this;\n  }\n\n  // By default does nothing\n  setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  // By default does nothing\n  updateName(_name: string): this {\n    return this;\n  }\n\n  // By default does nothing\n  end(_endTime?: TimeInput): void {}\n\n  // isRecording always returns false for NonRecordingSpan.\n  isRecording(): boolean {\n    return false;\n  }\n\n  // By default does nothing\n  recordException(_exception: Exception, _time?: TimeInput): void {}\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n\n/**\n * span key\n */\nconst SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return (context.getValue(SPAN_KEY) as Span) || undefined;\n}\n\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan(): Span | undefined {\n  return getSpan(ContextAPI.getInstance().active());\n}\n\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return context.setValue(SPAN_KEY, span);\n}\n\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context: Context): Context {\n  return context.deleteValue(SPAN_KEY);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(\n  context: Context,\n  spanContext: SpanContext\n): Context {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return getSpan(context)?.spanContext();\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\n\nconst VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nconst VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\n\nexport function isValidTraceId(traceId: string): boolean {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\n\nexport function isValidSpanId(spanId: string): boolean {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext: SpanContext): boolean {\n  return (\n    isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId)\n  );\n}\n\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext: SpanContext): Span {\n  return new NonRecordingSpan(spanContext);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { Context } from '../context/types';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { isSpanContextValid } from './spancontext-utils';\nimport { SpanOptions } from './SpanOptions';\nimport { SpanContext } from './span_context';\nimport { Tracer } from './tracer';\n\nconst contextApi = ContextAPI.getInstance();\n\n/**\n * No-op implementations of {@link Tracer}.\n */\nexport class NoopTracer implements Tracer {\n  // startSpan starts a noop span.\n  startSpan(\n    name: string,\n    options?: SpanOptions,\n    context = contextApi.active()\n  ): Span {\n    const root = Boolean(options?.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n\n    const parentFromContext = context && getSpanContext(context);\n\n    if (\n      isSpanContext(parentFromContext) &&\n      isSpanContextValid(parentFromContext)\n    ) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  }\n\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    ctx: Context | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | SpanOptions,\n    arg3?: F | Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: SpanOptions | undefined;\n    let ctx: Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as SpanOptions | undefined;\n      ctx = arg3 as Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? contextApi.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = setSpan(parentContext, span);\n\n    return contextApi.with(contextWithSpanSet, fn, undefined, span);\n  }\n}\n\nfunction isSpanContext(spanContext: any): spanContext is SpanContext {\n  return (\n    typeof spanContext === 'object' &&\n    typeof spanContext['spanId'] === 'string' &&\n    typeof spanContext['traceId'] === 'string' &&\n    typeof spanContext['traceFlags'] === 'number'\n  );\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { NoopTracer } from './NoopTracer';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER = new NoopTracer();\n\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nexport class ProxyTracer implements Tracer {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Tracer;\n\n  constructor(\n    private _provider: TracerDelegator,\n    public readonly name: string,\n    public readonly version?: string,\n    public readonly options?: TracerOptions\n  ) {}\n\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    return this._getTracer().startSpan(name, options, context);\n  }\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    _name: string,\n    _options: F | SpanOptions,\n    _context?: F | Context,\n    _fn?: F\n  ): ReturnType<F> {\n    const tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  }\n\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  private _getTracer() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n\n    const tracer = this._provider.getDelegateTracer(\n      this.name,\n      this.version,\n      this.options\n    );\n\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n\n    this._delegate = tracer;\n    return this._delegate;\n  }\n}\n\nexport interface TracerDelegator {\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopTracer } from './NoopTracer';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\nimport { TracerProvider } from './tracer_provider';\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nexport class NoopTracerProvider implements TracerProvider {\n  getTracer(\n    _name?: string,\n    _version?: string,\n    _options?: TracerOptions\n  ): Tracer {\n    return new NoopTracer();\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerProvider } from './tracer_provider';\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nexport class ProxyTracerProvider implements TracerProvider {\n  private _delegate?: TracerProvider;\n\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer {\n    return (\n      this.getDelegateTracer(name, version, options) ??\n      new ProxyTracer(this, name, version, options)\n    );\n  }\n\n  getDelegate(): TracerProvider {\n    return this._delegate ?? NOOP_TRACER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate tracer provider\n   */\n  setDelegate(delegate: TracerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined {\n    return this._delegate?.getTracer(name, version, options);\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from './attributes';\nimport { TraceState } from './trace_state';\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport interface SpanStatus {\n  /** The status code of this message. */\n  code: SpanStatusCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * An enumeration of status codes.\n */\nexport enum SpanStatusCode {\n  /**\n   * The default status.\n   */\n  UNSET = 0,\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  OK = 1,\n  /**\n   * The operation contains an error.\n   */\n  ERROR = 2,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TraceState } from '../trace_state';\nimport { validateKey, validateValue } from './tracestate-validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceStateImpl implements TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceStateImpl {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceStateImpl {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceStateImpl {\n    const traceState = new TraceStateImpl();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './Meter';\nimport { MeterProvider } from './MeterProvider';\nimport { NOOP_METER } from './NoopMeter';\n\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nexport class NoopMeterProvider implements MeterProvider {\n  getMeter(_name: string, _version?: string, _options?: MeterOptions): Meter {\n    return NOOP_METER;\n  }\n}\n\nexport const NOOP_METER_PROVIDER = new NoopMeterProvider();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from '../metrics/Meter';\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'metrics';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nexport class MetricsAPI {\n  private static _instance?: MetricsAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Metrics API */\n  public static getInstance(): MetricsAPI {\n    if (!this._instance) {\n      this._instance = new MetricsAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global meter provider.\n   * Returns true if the meter provider was successfully registered, else false.\n   */\n  public setGlobalMeterProvider(provider: MeterProvider): boolean {\n    return registerGlobal(API_NAME, provider, DiagAPI.instance());\n  }\n\n  /**\n   * Returns the global meter provider.\n   */\n  public getMeterProvider(): MeterProvider {\n    return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n  }\n\n  /**\n   * Returns a meter from the global meter provider.\n   */\n  public getMeter(\n    name: string,\n    version?: string,\n    options?: MeterOptions\n  ): Meter {\n    return this.getMeterProvider().getMeter(name, version, options);\n  }\n\n  /** Remove the global meter provider */\n  public disable(): void {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport const metrics = MetricsAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { TextMapPropagator } from './TextMapPropagator';\n\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nexport class NoopTextMapPropagator implements TextMapPropagator {\n  /** Noop inject function does nothing */\n  inject(_context: Context, _carrier: unknown): void {}\n  /** Noop extract function does nothing and returns the input context */\n  extract(context: Context, _carrier: unknown): Context {\n    return context;\n  }\n  fields(): string[] {\n    return [];\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Baggage } from './types';\n\n/**\n * Baggage key\n */\nconst BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context: Context): Baggage | undefined {\n  return (context.getValue(BAGGAGE_KEY) as Baggage) || undefined;\n}\n\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage(): Baggage | undefined {\n  return getBaggage(ContextAPI.getInstance().active());\n}\n\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context: Context, baggage: Baggage): Context {\n  return context.setValue(BAGGAGE_KEY, baggage);\n}\n\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context: Context): Context {\n  return context.deleteValue(BAGGAGE_KEY);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport {\n  defaultTextMapGetter,\n  defaultTextMapSetter,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '../propagation/TextMapPropagator';\nimport {\n  getBaggage,\n  getActiveBaggage,\n  setBaggage,\n  deleteBaggage,\n} from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'propagation';\nconst NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nexport class PropagationAPI {\n  private static _instance?: PropagationAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Propagator API */\n  public static getInstance(): PropagationAPI {\n    if (!this._instance) {\n      this._instance = new PropagationAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current propagator.\n   *\n   * @returns true if the propagator was successfully registered, else false\n   */\n  public setGlobalPropagator(propagator: TextMapPropagator): boolean {\n    return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n  }\n\n  /**\n   * Inject context into a carrier to be propagated inter-process\n   *\n   * @param context Context carrying tracing data to inject\n   * @param carrier carrier to inject context into\n   * @param setter Function used to set values on the carrier\n   */\n  public inject<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier> = defaultTextMapSetter\n  ): void {\n    return this._getGlobalPropagator().inject(context, carrier, setter);\n  }\n\n  /**\n   * Extract context from a carrier\n   *\n   * @param context Context which the newly created context will inherit from\n   * @param carrier Carrier to extract context from\n   * @param getter Function used to extract keys from a carrier\n   */\n  public extract<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier> = defaultTextMapGetter\n  ): Context {\n    return this._getGlobalPropagator().extract(context, carrier, getter);\n  }\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  public fields(): string[] {\n    return this._getGlobalPropagator().fields();\n  }\n\n  /** Remove the global propagator */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n\n  public createBaggage = createBaggage;\n\n  public getBaggage = getBaggage;\n\n  public getActiveBaggage = getActiveBaggage;\n\n  public setBaggage = setBaggage;\n\n  public deleteBaggage = deleteBaggage;\n\n  private _getGlobalPropagator(): TextMapPropagator {\n    return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport const propagation = PropagationAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport {\n  isSpanContextValid,\n  wrapSpanContext,\n} from '../trace/spancontext-utils';\nimport { Tracer } from '../trace/tracer';\nimport { TracerProvider } from '../trace/tracer_provider';\nimport {\n  deleteSpan,\n  getActiveSpan,\n  getSpan,\n  getSpanContext,\n  setSpan,\n  setSpanContext,\n} from '../trace/context-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'trace';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nexport class TraceAPI {\n  private static _instance?: TraceAPI;\n\n  private _proxyTracerProvider = new ProxyTracerProvider();\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Trace API */\n  public static getInstance(): TraceAPI {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  public setGlobalTracerProvider(provider: TracerProvider): boolean {\n    const success = registerGlobal(\n      API_NAME,\n      this._proxyTracerProvider,\n      DiagAPI.instance()\n    );\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  }\n\n  /**\n   * Returns the global tracer provider.\n   */\n  public getTracerProvider(): TracerProvider {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  }\n\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  public getTracer(name: string, version?: string): Tracer {\n    return this.getTracerProvider().getTracer(name, version);\n  }\n\n  /** Remove the global tracer provider */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  }\n\n  public wrapSpanContext = wrapSpanContext;\n\n  public isSpanContextValid = isSpanContextValid;\n\n  public deleteSpan = deleteSpan;\n\n  public getSpan = getSpan;\n\n  public getActiveSpan = getActiveSpan;\n\n  public getSpanContext = getSpanContext;\n\n  public setSpan = setSpan;\n\n  public setSpanContext = setSpanContext;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport const trace = TraceAPI.getInstance();\n", "// re-exports:\nexport {\n  asSchema,\n  createIdGenerator,\n  dynamicTool,\n  generateId,\n  jsonSchema,\n  tool,\n  zodSchema,\n  type IdGenerator,\n  type InferToolInput,\n  type InferToolOutput,\n  type Schema,\n  type Tool,\n  type ToolCallOptions,\n  type ToolExecuteFunction,\n} from '@ai-sdk/provider-utils';\n\n// directory exports\nexport * from './agent';\nexport * from './embed';\nexport * from './error';\nexport * from './generate-image';\nexport * from './generate-object';\nexport * from './generate-speech';\nexport * from './generate-text';\nexport * from './middleware';\nexport * from './prompt';\nexport * from './registry';\nexport * from './text-stream';\nexport * from './tool';\nexport * from './transcribe';\nexport * from './types';\nexport * from './ui';\nexport * from './ui-message-stream';\nexport * from './util';\n\n// telemetry types:\nexport type { TelemetrySettings } from './telemetry/telemetry-settings';\n\n// import globals\nimport './global';\n", "import {\n  LanguageModelV2,\n  LanguageModelV2Content,\n  LanguageModelV2ToolCall,\n} from '@ai-sdk/provider';\nimport {\n  createIdGenerator,\n  executeTool,\n  getErrorMessage,\n  IdGenerator,\n  ProviderOptions,\n} from '@ai-sdk/provider-utils';\nimport { Tracer } from '@opentelemetry/api';\nimport { NoOutputSpecifiedError } from '../error/no-output-specified-error';\nimport { resolveLanguageModel } from '../model/resolve-model';\nimport { ModelMessage } from '../prompt';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareToolsAndToolChoice } from '../prompt/prepare-tools-and-tool-choice';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { wrapGatewayError } from '../prompt/wrap-gateway-error';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordErrorOnSpan, recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { stringifyForTelemetry } from '../telemetry/stringify-for-telemetry';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { LanguageModel, ToolChoice } from '../types';\nimport { addLanguageModelUsage, LanguageModelUsage } from '../types/usage';\nimport { asArray } from '../util/as-array';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { ContentPart } from './content-part';\nimport { extractTextContent } from './extract-text-content';\nimport { GenerateTextResult } from './generate-text-result';\nimport { DefaultGeneratedFile } from './generated-file';\nimport { Output } from './output';\nimport { parseToolCall } from './parse-tool-call';\nimport { PrepareStepFunction } from './prepare-step';\nimport { ResponseMessage } from './response-message';\nimport { DefaultStepResult, StepResult } from './step-result';\nimport {\n  isStopConditionMet,\n  stepCountIs,\n  StopCondition,\n} from './stop-condition';\nimport { toResponseMessages } from './to-response-messages';\nimport { TypedToolCall } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair-function';\nimport { TypedToolError } from './tool-error';\nimport { ToolOutput } from './tool-output';\nimport { TypedToolResult } from './tool-result';\nimport { ToolSet } from './tool-set';\n\nconst originalGenerateId = createIdGenerator({\n  prefix: 'aitxt',\n  size: 24,\n});\n\n/**\nCallback that is set using the `onStepFinish` option.\n\n@param stepResult - The result of the step.\n */\nexport type GenerateTextOnStepFinishCallback<TOOLS extends ToolSet> = (\n  stepResult: StepResult<TOOLS>,\n) => Promise<void> | void;\n\n/**\nGenerate a text and call tools for a given prompt using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamText` instead.\n\n@param model - The language model to use.\n\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n@param toolChoice - The tool choice strategy. Default: 'auto'.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxOutputTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param experimental_generateMessageId - Generate a unique ID for each message.\n\n@param onStepFinish - Callback that is called when each step (LLM call) is finished, including intermediate steps.\n\n@returns\nA result object that contains the generated text, the results of the tool calls, and additional information.\n */\nexport async function generateText<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  OUTPUT_PARTIAL = never,\n>({\n  model: modelArg,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  stopWhen = stepCountIs(1),\n  experimental_output: output,\n  experimental_telemetry: telemetry,\n  providerOptions,\n  experimental_activeTools,\n  activeTools = experimental_activeTools,\n  experimental_prepareStep,\n  prepareStep = experimental_prepareStep,\n  experimental_repairToolCall: repairToolCall,\n  experimental_context,\n  _internal: {\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  onStepFinish,\n  ...settings\n}: CallSettings &\n  Prompt & {\n    /**\nThe language model to use.\n     */\n    model: LanguageModel;\n\n    /**\nThe tools that the model can call. The model needs to support calling tools.\n*/\n    tools?: TOOLS;\n\n    /**\nThe tool choice strategy. Default: 'auto'.\n     */\n    toolChoice?: ToolChoice<NoInfer<TOOLS>>;\n\n    /**\nCondition for stopping the generation when there are tool results in the last step.\nWhen the condition is an array, any of the conditions can be met to stop the generation.\n\n@default stepCountIs(1)\n     */\n    stopWhen?:\n      | StopCondition<NoInfer<TOOLS>>\n      | Array<StopCondition<NoInfer<TOOLS>>>;\n\n    /**\nOptional telemetry configuration (experimental).\n     */\n    experimental_telemetry?: TelemetrySettings;\n\n    /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n    providerOptions?: ProviderOptions;\n\n    /**\n     * @deprecated Use `activeTools` instead.\n     */\n    experimental_activeTools?: Array<keyof NoInfer<TOOLS>>;\n\n    /**\nLimits the tools that are available for the model to call without\nchanging the tool call and result types in the result.\n     */\n    activeTools?: Array<keyof NoInfer<TOOLS>>;\n\n    /**\nOptional specification for parsing structured outputs from the LLM response.\n     */\n    experimental_output?: Output<OUTPUT, OUTPUT_PARTIAL>;\n\n    /**\n     * @deprecated Use `prepareStep` instead.\n     */\n    experimental_prepareStep?: PrepareStepFunction<NoInfer<TOOLS>>;\n\n    /**\nOptional function that you can use to provide different settings for a step.\n    */\n    prepareStep?: PrepareStepFunction<NoInfer<TOOLS>>;\n\n    /**\nA function that attempts to repair a tool call that failed to parse.\n     */\n    experimental_repairToolCall?: ToolCallRepairFunction<NoInfer<TOOLS>>;\n\n    /**\n    Callback that is called when each step (LLM call) is finished, including intermediate steps.\n    */\n    onStepFinish?: GenerateTextOnStepFinishCallback<NoInfer<TOOLS>>;\n\n    /**\n     * Context that is passed into tool execution.\n     *\n     * Experimental (can break in patch releases).\n     *\n     * @default undefined\n     */\n    experimental_context?: unknown;\n\n    /**\n     * Internal. For test use only. May change without notice.\n     */\n    _internal?: {\n      generateId?: IdGenerator;\n      currentDate?: () => Date;\n    };\n  }): Promise<GenerateTextResult<TOOLS, OUTPUT>> {\n  const model = resolveLanguageModel(modelArg);\n  const stopConditions = asArray(stopWhen);\n  const { maxRetries, retry } = prepareRetries({\n    maxRetries: maxRetriesArg,\n    abortSignal,\n  });\n\n  const callSettings = prepareCallSettings(settings);\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...callSettings, maxRetries },\n  });\n\n  const initialPrompt = await standardizePrompt({\n    system,\n    prompt,\n    messages,\n  } as Prompt);\n\n  const tracer = getTracer(telemetry);\n\n  try {\n    return await recordSpan({\n      name: 'ai.generateText',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({\n            operationId: 'ai.generateText',\n            telemetry,\n          }),\n          ...baseTelemetryAttributes,\n          // model:\n          'ai.model.provider': model.provider,\n          'ai.model.id': model.modelId,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n        },\n      }),\n      tracer,\n      fn: async span => {\n        const callSettings = prepareCallSettings(settings);\n\n        let currentModelResponse: Awaited<\n          ReturnType<LanguageModelV2['doGenerate']>\n        > & { response: { id: string; timestamp: Date; modelId: string } };\n        let clientToolCalls: Array<TypedToolCall<TOOLS>> = [];\n        let clientToolOutputs: Array<ToolOutput<TOOLS>> = [];\n        const responseMessages: Array<ResponseMessage> = [];\n        const steps: GenerateTextResult<TOOLS, OUTPUT>['steps'] = [];\n\n        do {\n          const stepInputMessages = [\n            ...initialPrompt.messages,\n            ...responseMessages,\n          ];\n\n          const prepareStepResult = await prepareStep?.({\n            model,\n            steps,\n            stepNumber: steps.length,\n            messages: stepInputMessages,\n          });\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: {\n              system: prepareStepResult?.system ?? initialPrompt.system,\n              messages: prepareStepResult?.messages ?? stepInputMessages,\n            },\n            supportedUrls: await model.supportedUrls,\n          });\n\n          const stepModel = resolveLanguageModel(\n            prepareStepResult?.model ?? model,\n          );\n\n          const { toolChoice: stepToolChoice, tools: stepTools } =\n            prepareToolsAndToolChoice({\n              tools,\n              toolChoice: prepareStepResult?.toolChoice ?? toolChoice,\n              activeTools: prepareStepResult?.activeTools ?? activeTools,\n            });\n\n          currentModelResponse = await retry(() =>\n            recordSpan({\n              name: 'ai.generateText.doGenerate',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.generateText.doGenerate',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  // model:\n                  'ai.model.provider': stepModel.provider,\n                  'ai.model.id': stepModel.modelId,\n                  // prompt:\n                  'ai.prompt.messages': {\n                    input: () => stringifyForTelemetry(promptMessages),\n                  },\n                  'ai.prompt.tools': {\n                    // convert the language model level tools:\n                    input: () => stepTools?.map(tool => JSON.stringify(tool)),\n                  },\n                  'ai.prompt.toolChoice': {\n                    input: () =>\n                      stepToolChoice != null\n                        ? JSON.stringify(stepToolChoice)\n                        : undefined,\n                  },\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': stepModel.provider,\n                  'gen_ai.request.model': stepModel.modelId,\n                  'gen_ai.request.frequency_penalty': settings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': settings.maxOutputTokens,\n                  'gen_ai.request.presence_penalty': settings.presencePenalty,\n                  'gen_ai.request.stop_sequences': settings.stopSequences,\n                  'gen_ai.request.temperature':\n                    settings.temperature ?? undefined,\n                  'gen_ai.request.top_k': settings.topK,\n                  'gen_ai.request.top_p': settings.topP,\n                },\n              }),\n              tracer,\n              fn: async span => {\n                const result = await stepModel.doGenerate({\n                  ...callSettings,\n                  tools: stepTools,\n                  toolChoice: stepToolChoice,\n                  responseFormat: output?.responseFormat,\n                  prompt: promptMessages,\n                  providerOptions,\n                  abortSignal,\n                  headers,\n                });\n\n                // Fill in default values:\n                const responseData = {\n                  id: result.response?.id ?? generateId(),\n                  timestamp: result.response?.timestamp ?? currentDate(),\n                  modelId: result.response?.modelId ?? stepModel.modelId,\n                  headers: result.response?.headers,\n                  body: result.response?.body,\n                };\n\n                // Add response information to the span:\n                span.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      'ai.response.finishReason': result.finishReason,\n                      'ai.response.text': {\n                        output: () => extractTextContent(result.content),\n                      },\n                      'ai.response.toolCalls': {\n                        output: () => {\n                          const toolCalls = asToolCalls(result.content);\n                          return toolCalls == null\n                            ? undefined\n                            : JSON.stringify(toolCalls);\n                        },\n                      },\n                      'ai.response.id': responseData.id,\n                      'ai.response.model': responseData.modelId,\n                      'ai.response.timestamp':\n                        responseData.timestamp.toISOString(),\n                      'ai.response.providerMetadata': JSON.stringify(\n                        result.providerMetadata,\n                      ),\n\n                      // TODO rename telemetry attributes to inputTokens and outputTokens\n                      'ai.usage.promptTokens': result.usage.inputTokens,\n                      'ai.usage.completionTokens': result.usage.outputTokens,\n\n                      // standardized gen-ai llm span attributes:\n                      'gen_ai.response.finish_reasons': [result.finishReason],\n                      'gen_ai.response.id': responseData.id,\n                      'gen_ai.response.model': responseData.modelId,\n                      'gen_ai.usage.input_tokens': result.usage.inputTokens,\n                      'gen_ai.usage.output_tokens': result.usage.outputTokens,\n                    },\n                  }),\n                );\n\n                return { ...result, response: responseData };\n              },\n            }),\n          );\n\n          // parse tool calls:\n          const stepToolCalls: TypedToolCall<TOOLS>[] = await Promise.all(\n            currentModelResponse.content\n              .filter(\n                (part): part is LanguageModelV2ToolCall =>\n                  part.type === 'tool-call',\n              )\n              .map(toolCall =>\n                parseToolCall({\n                  toolCall,\n                  tools,\n                  repairToolCall,\n                  system,\n                  messages: stepInputMessages,\n                }),\n              ),\n          );\n\n          // notify the tools that the tool calls are available:\n          for (const toolCall of stepToolCalls) {\n            if (toolCall.invalid) {\n              continue; // ignore invalid tool calls\n            }\n\n            const tool = tools![toolCall.toolName];\n            if (tool?.onInputAvailable != null) {\n              await tool.onInputAvailable({\n                input: toolCall.input,\n                toolCallId: toolCall.toolCallId,\n                messages: stepInputMessages,\n                abortSignal,\n                experimental_context,\n              });\n            }\n          }\n\n          // insert error tool outputs for invalid tool calls:\n          // TODO AI SDK 6: invalid inputs should not require output parts\n          const invalidToolCalls = stepToolCalls.filter(\n            toolCall => toolCall.invalid && toolCall.dynamic,\n          );\n\n          clientToolOutputs = [];\n\n          for (const toolCall of invalidToolCalls) {\n            clientToolOutputs.push({\n              type: 'tool-error',\n              toolCallId: toolCall.toolCallId,\n              toolName: toolCall.toolName,\n              input: toolCall.input,\n              error: getErrorMessage(toolCall.error!),\n              dynamic: true,\n            });\n          }\n\n          // execute client tool calls:\n          clientToolCalls = stepToolCalls.filter(\n            toolCall => !toolCall.providerExecuted,\n          );\n\n          if (tools != null) {\n            clientToolOutputs.push(\n              ...(await executeTools({\n                toolCalls: clientToolCalls.filter(\n                  toolCall => !toolCall.invalid,\n                ),\n                tools,\n                tracer,\n                telemetry,\n                messages: stepInputMessages,\n                abortSignal,\n                experimental_context,\n              })),\n            );\n          }\n\n          // content:\n          const stepContent = asContent({\n            content: currentModelResponse.content,\n            toolCalls: stepToolCalls,\n            toolOutputs: clientToolOutputs,\n          });\n\n          // append to messages for potential next step:\n          responseMessages.push(\n            ...toResponseMessages({\n              content: stepContent,\n              tools,\n            }),\n          );\n\n          // Add step information (after response messages are updated):\n          const currentStepResult: StepResult<TOOLS> = new DefaultStepResult({\n            content: stepContent,\n            finishReason: currentModelResponse.finishReason,\n            usage: currentModelResponse.usage,\n            warnings: currentModelResponse.warnings,\n            providerMetadata: currentModelResponse.providerMetadata,\n            request: currentModelResponse.request ?? {},\n            response: {\n              ...currentModelResponse.response,\n              // deep clone msgs to avoid mutating past messages in multi-step:\n              messages: structuredClone(responseMessages),\n            },\n          });\n\n          steps.push(currentStepResult);\n          await onStepFinish?.(currentStepResult);\n        } while (\n          // there are tool calls:\n          clientToolCalls.length > 0 &&\n          // all current tool calls have outputs (incl. execution errors):\n          clientToolOutputs.length === clientToolCalls.length &&\n          // continue until a stop condition is met:\n          !(await isStopConditionMet({ stopConditions, steps }))\n        );\n\n        // Add response information to the span:\n        span.setAttributes(\n          selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              'ai.response.finishReason': currentModelResponse.finishReason,\n              'ai.response.text': {\n                output: () => extractTextContent(currentModelResponse.content),\n              },\n              'ai.response.toolCalls': {\n                output: () => {\n                  const toolCalls = asToolCalls(currentModelResponse.content);\n                  return toolCalls == null\n                    ? undefined\n                    : JSON.stringify(toolCalls);\n                },\n              },\n              'ai.response.providerMetadata': JSON.stringify(\n                currentModelResponse.providerMetadata,\n              ),\n\n              // TODO rename telemetry attributes to inputTokens and outputTokens\n              'ai.usage.promptTokens': currentModelResponse.usage.inputTokens,\n              'ai.usage.completionTokens':\n                currentModelResponse.usage.outputTokens,\n            },\n          }),\n        );\n\n        const lastStep = steps[steps.length - 1];\n\n        return new DefaultGenerateTextResult({\n          steps,\n          resolvedOutput: await output?.parseOutput(\n            { text: lastStep.text },\n            {\n              response: lastStep.response,\n              usage: lastStep.usage,\n              finishReason: lastStep.finishReason,\n            },\n          ),\n        });\n      },\n    });\n  } catch (error) {\n    throw wrapGatewayError(error);\n  }\n}\n\nasync function executeTools<TOOLS extends ToolSet>({\n  toolCalls,\n  tools,\n  tracer,\n  telemetry,\n  messages,\n  abortSignal,\n  experimental_context,\n}: {\n  toolCalls: Array<TypedToolCall<TOOLS>>;\n  tools: TOOLS;\n  tracer: Tracer;\n  telemetry: TelemetrySettings | undefined;\n  messages: ModelMessage[];\n  abortSignal: AbortSignal | undefined;\n  experimental_context: unknown;\n}): Promise<Array<ToolOutput<TOOLS>>> {\n  const toolOutputs = await Promise.all(\n    toolCalls.map(async ({ toolCallId, toolName, input }) => {\n      const tool = tools[toolName];\n\n      if (tool?.execute == null) {\n        return undefined;\n      }\n\n      return recordSpan({\n        name: 'ai.toolCall',\n        attributes: selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            ...assembleOperationName({\n              operationId: 'ai.toolCall',\n              telemetry,\n            }),\n            'ai.toolCall.name': toolName,\n            'ai.toolCall.id': toolCallId,\n            'ai.toolCall.args': {\n              output: () => JSON.stringify(input),\n            },\n          },\n        }),\n        tracer,\n        fn: async span => {\n          try {\n            const stream = executeTool({\n              execute: tool.execute!.bind(tool),\n              input,\n              options: {\n                toolCallId,\n                messages,\n                abortSignal,\n                experimental_context,\n              },\n            });\n\n            let output: unknown;\n            for await (const part of stream) {\n              if (part.type === 'final') {\n                output = part.output;\n              }\n            }\n            try {\n              span.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.toolCall.result': {\n                      output: () => JSON.stringify(output),\n                    },\n                  },\n                }),\n              );\n            } catch (ignored) {\n              // JSON stringify might fail if the result is not serializable,\n              // in which case we just ignore it. In the future we might want to\n              // add an optional serialize method to the tool interface and warn\n              // if the result is not serializable.\n            }\n\n            return {\n              type: 'tool-result',\n              toolCallId,\n              toolName,\n              input,\n              output,\n              dynamic: tool.type === 'dynamic',\n            } as TypedToolResult<TOOLS>;\n          } catch (error) {\n            recordErrorOnSpan(span, error);\n            return {\n              type: 'tool-error',\n              toolCallId,\n              toolName,\n              input,\n              error,\n              dynamic: tool.type === 'dynamic',\n            } as TypedToolError<TOOLS>;\n          }\n        },\n      });\n    }),\n  );\n\n  return toolOutputs.filter(\n    (output): output is NonNullable<typeof output> => output != null,\n  );\n}\n\nclass DefaultGenerateTextResult<TOOLS extends ToolSet, OUTPUT>\n  implements GenerateTextResult<TOOLS, OUTPUT>\n{\n  readonly steps: GenerateTextResult<TOOLS, OUTPUT>['steps'];\n\n  private readonly resolvedOutput: OUTPUT;\n\n  constructor(options: {\n    steps: GenerateTextResult<TOOLS, OUTPUT>['steps'];\n    resolvedOutput: OUTPUT;\n  }) {\n    this.steps = options.steps;\n    this.resolvedOutput = options.resolvedOutput;\n  }\n\n  private get finalStep() {\n    return this.steps[this.steps.length - 1];\n  }\n\n  get content() {\n    return this.finalStep.content;\n  }\n\n  get text() {\n    return this.finalStep.text;\n  }\n\n  get files() {\n    return this.finalStep.files;\n  }\n\n  get reasoningText() {\n    return this.finalStep.reasoningText;\n  }\n\n  get reasoning() {\n    return this.finalStep.reasoning;\n  }\n\n  get toolCalls() {\n    return this.finalStep.toolCalls;\n  }\n\n  get staticToolCalls() {\n    return this.finalStep.staticToolCalls;\n  }\n\n  get dynamicToolCalls() {\n    return this.finalStep.dynamicToolCalls;\n  }\n\n  get toolResults() {\n    return this.finalStep.toolResults;\n  }\n\n  get staticToolResults() {\n    return this.finalStep.staticToolResults;\n  }\n\n  get dynamicToolResults() {\n    return this.finalStep.dynamicToolResults;\n  }\n\n  get sources() {\n    return this.finalStep.sources;\n  }\n\n  get finishReason() {\n    return this.finalStep.finishReason;\n  }\n\n  get warnings() {\n    return this.finalStep.warnings;\n  }\n\n  get providerMetadata() {\n    return this.finalStep.providerMetadata;\n  }\n\n  get response() {\n    return this.finalStep.response;\n  }\n\n  get request() {\n    return this.finalStep.request;\n  }\n\n  get usage() {\n    return this.finalStep.usage;\n  }\n\n  get totalUsage() {\n    return this.steps.reduce(\n      (totalUsage, step) => {\n        return addLanguageModelUsage(totalUsage, step.usage);\n      },\n      {\n        inputTokens: undefined,\n        outputTokens: undefined,\n        totalTokens: undefined,\n        reasoningTokens: undefined,\n        cachedInputTokens: undefined,\n      } as LanguageModelUsage,\n    );\n  }\n\n  get experimental_output() {\n    if (this.resolvedOutput == null) {\n      throw new NoOutputSpecifiedError();\n    }\n\n    return this.resolvedOutput;\n  }\n}\n\nfunction asToolCalls(content: Array<LanguageModelV2Content>) {\n  const parts = content.filter(\n    (part): part is LanguageModelV2ToolCall => part.type === 'tool-call',\n  );\n\n  if (parts.length === 0) {\n    return undefined;\n  }\n\n  return parts.map(toolCall => ({\n    toolCallId: toolCall.toolCallId,\n    toolName: toolCall.toolName,\n    input: toolCall.input,\n  }));\n}\n\nfunction asContent<TOOLS extends ToolSet>({\n  content,\n  toolCalls,\n  toolOutputs,\n}: {\n  content: Array<LanguageModelV2Content>;\n  toolCalls: Array<TypedToolCall<TOOLS>>;\n  toolOutputs: Array<ToolOutput<TOOLS>>;\n}): Array<ContentPart<TOOLS>> {\n  return [\n    ...content.map(part => {\n      switch (part.type) {\n        case 'text':\n        case 'reasoning':\n        case 'source':\n          return part;\n\n        case 'file': {\n          return {\n            type: 'file' as const,\n            file: new DefaultGeneratedFile(part),\n          };\n        }\n\n        case 'tool-call': {\n          return toolCalls.find(\n            toolCall => toolCall.toolCallId === part.toolCallId,\n          )!;\n        }\n\n        case 'tool-result': {\n          const toolCall = toolCalls.find(\n            toolCall => toolCall.toolCallId === part.toolCallId,\n          )!;\n\n          if (toolCall == null) {\n            throw new Error(`Tool call ${part.toolCallId} not found.`);\n          }\n\n          if (part.isError) {\n            return {\n              type: 'tool-error' as const,\n              toolCallId: part.toolCallId,\n              toolName: part.toolName as keyof TOOLS & string,\n              input: toolCall.input,\n              error: part.result,\n              providerExecuted: true,\n              dynamic: toolCall.dynamic,\n            } as TypedToolError<TOOLS>;\n          }\n\n          return {\n            type: 'tool-result' as const,\n            toolCallId: part.toolCallId,\n            toolName: part.toolName as keyof TOOLS & string,\n            input: toolCall.input,\n            output: part.result,\n            providerExecuted: true,\n            dynamic: toolCall.dynamic,\n          } as TypedToolResult<TOOLS>;\n        }\n      }\n    }),\n    ...toolOutputs,\n  ];\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoOutputSpecifiedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no output type is specified and output-related methods are called.\n */\nexport class NoOutputSpecifiedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({ message = 'No output specified.' }: { message?: string } = {}) {\n    super({ name, message });\n  }\n\n  static isInstance(error: unknown): error is NoOutputSpecifiedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { gateway } from '@ai-sdk/gateway';\nimport {\n  EmbeddingModelV2,\n  LanguageModelV2,\n  ProviderV2,\n} from '@ai-sdk/provider';\nimport { UnsupportedModelVersionError } from '../error';\nimport { EmbeddingModel } from '../types/embedding-model';\nimport { LanguageModel } from '../types/language-model';\n\nexport function resolveLanguageModel(model: LanguageModel): LanguageModelV2 {\n  if (typeof model !== 'string') {\n    if (model.specificationVersion !== 'v2') {\n      throw new UnsupportedModelVersionError({\n        version: model.specificationVersion,\n        provider: model.provider,\n        modelId: model.modelId,\n      });\n    }\n\n    return model;\n  }\n\n  return getGlobalProvider().languageModel(model);\n}\n\nexport function resolveEmbeddingModel<VALUE = string>(\n  model: EmbeddingModel<VALUE>,\n): EmbeddingModelV2<VALUE> {\n  if (typeof model !== 'string') {\n    if (model.specificationVersion !== 'v2') {\n      throw new UnsupportedModelVersionError({\n        version: model.specificationVersion,\n        provider: model.provider,\n        modelId: model.modelId,\n      });\n    }\n\n    return model;\n  }\n\n  // TODO AI SDK 6: figure out how to cleanly support different generic types\n  return getGlobalProvider().textEmbeddingModel(\n    model,\n  ) as EmbeddingModelV2<VALUE>;\n}\n\nfunction getGlobalProvider(): ProviderV2 {\n  return globalThis.AI_SDK_DEFAULT_PROVIDER ?? gateway;\n}\n", "export {\n  AISDKError,\n  APICallError,\n  EmptyResponseBodyError,\n  InvalidPromptError,\n  InvalidResponseDataError,\n  JSONParseError,\n  LoadAPIKeyError,\n  NoContentGeneratedError,\n  NoSuchModelError,\n  TypeValidationError,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\n\nexport { InvalidArgumentError } from './invalid-argument-error';\nexport { InvalidStreamPartError } from './invalid-stream-part-error';\nexport { InvalidToolInputError } from './invalid-tool-input-error';\nexport { MCPClientError } from './mcp-client-error';\nexport { NoImageGeneratedError } from './no-image-generated-error';\nexport { NoObjectGeneratedError } from './no-object-generated-error';\nexport { NoOutputGeneratedError } from './no-output-generated-error';\nexport { NoOutputSpecifiedError } from './no-output-specified-error';\nexport { NoSuchToolError } from './no-such-tool-error';\nexport { ToolCallRepairError } from './tool-call-repair-error';\nexport { UnsupportedModelVersionError } from './unsupported-model-version-error';\n\nexport { InvalidDataContentError } from '../prompt/invalid-data-content-error';\nexport { InvalidMessageRoleError } from '../prompt/invalid-message-role-error';\nexport { MessageConversionError } from '../prompt/message-conversion-error';\nexport { DownloadError } from '../util/download-error';\nexport { RetryError } from '../util/retry-error';\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidArgumentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidArgumentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly parameter: string;\n  readonly value: unknown;\n\n  constructor({\n    parameter,\n    value,\n    message,\n  }: {\n    parameter: string;\n    value: unknown;\n    message: string;\n  }) {\n    super({\n      name,\n      message: `Invalid argument for parameter ${parameter}: ${message}`,\n    });\n\n    this.parameter = parameter;\n    this.value = value;\n  }\n\n  static isInstance(error: unknown): error is InvalidArgumentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { SingleRequestTextStreamPart } from '../generate-text/run-tools-transformation';\n\nconst name = 'AI_InvalidStreamPartError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidStreamPartError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly chunk: SingleRequestTextStreamPart<any>;\n\n  constructor({\n    chunk,\n    message,\n  }: {\n    chunk: SingleRequestTextStreamPart<any>;\n    message: string;\n  }) {\n    super({ name, message });\n\n    this.chunk = chunk;\n  }\n\n  static isInstance(error: unknown): error is InvalidStreamPartError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError, getErrorMessage } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidToolInputError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidToolInputError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly toolInput: string;\n\n  constructor({\n    toolInput,\n    toolName,\n    cause,\n    message = `Invalid input for tool ${toolName}: ${getErrorMessage(cause)}`,\n  }: {\n    message?: string;\n    toolInput: string;\n    toolName: string;\n    cause: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.toolInput = toolInput;\n    this.toolName = toolName;\n  }\n\n  static isInstance(error: unknown): error is InvalidToolInputError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_MCPClientError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\n * An error occurred with the MCP client.\n */\nexport class MCPClientError extends AISDKError {\n  private readonly [symbol] = true;\n\n  constructor({\n    name = 'MCPClientError',\n    message,\n    cause,\n  }: {\n    name?: string;\n    message: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n  }\n\n  static isInstance(error: unknown): error is MCPClientError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { ImageModelResponseMetadata } from '../types/image-model-response-metadata';\n\nconst name = 'AI_NoImageGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no image could be generated. This can have multiple causes:\n\n- The model failed to generate a response.\n- The model generated a response that could not be parsed.\n */\nexport class NoImageGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\nThe response metadata for each call.\n   */\n  readonly responses: Array<ImageModelResponseMetadata> | undefined;\n\n  constructor({\n    message = 'No image generated.',\n    cause,\n    responses,\n  }: {\n    message?: string;\n    cause?: Error;\n    responses?: Array<ImageModelResponseMetadata>;\n  }) {\n    super({ name, message, cause });\n\n    this.responses = responses;\n  }\n\n  static isInstance(error: unknown): error is NoImageGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { FinishReason } from '../types/language-model';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { LanguageModelUsage } from '../types/usage';\n\nconst name = 'AI_NoObjectGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no object could be generated. This can have several causes:\n\n- The model failed to generate a response.\n- The model generated a response that could not be parsed.\n- The model generated a response that could not be validated against the schema.\n\nThe error contains the following properties:\n\n- `text`: The text that was generated by the model. This can be the raw text or the tool call text, depending on the model.\n */\nexport class NoObjectGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  /**\n  The text that was generated by the model. This can be the raw text or the tool call text, depending on the model.\n   */\n  readonly text: string | undefined;\n\n  /**\n  The response metadata.\n   */\n  readonly response: LanguageModelResponseMetadata | undefined;\n\n  /**\n  The usage of the model.\n   */\n  readonly usage: LanguageModelUsage | undefined;\n\n  /**\n  Reason why the model finished generating a response.\n   */\n  readonly finishReason: FinishReason | undefined;\n\n  constructor({\n    message = 'No object generated.',\n    cause,\n    text,\n    response,\n    usage,\n    finishReason,\n  }: {\n    message?: string;\n    cause?: Error;\n    text?: string;\n    response: LanguageModelResponseMetadata;\n    usage: LanguageModelUsage;\n    finishReason: FinishReason;\n  }) {\n    super({ name, message, cause });\n\n    this.text = text;\n    this.response = response;\n    this.usage = usage;\n    this.finishReason = finishReason;\n  }\n\n  static isInstance(error: unknown): error is NoObjectGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoOutputGeneratedError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\n/**\nThrown when no LLM output was generated, e.g. because of errors.\n */\nexport class NoOutputGeneratedError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  constructor({\n    message = 'No output generated.',\n    cause,\n  }: {\n    message?: string;\n    cause?: Error;\n  } = {}) {\n    super({ name, message, cause });\n  }\n\n  static isInstance(error: unknown): error is NoOutputGeneratedError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoSuchToolError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchToolError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly toolName: string;\n  readonly availableTools: string[] | undefined;\n\n  constructor({\n    toolName,\n    availableTools = undefined,\n    message = `Model tried to call unavailable tool '${toolName}'. ${\n      availableTools === undefined\n        ? 'No tools are available.'\n        : `Available tools: ${availableTools.join(', ')}.`\n    }`,\n  }: {\n    toolName: string;\n    availableTools?: string[] | undefined;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.toolName = toolName;\n    this.availableTools = availableTools;\n  }\n\n  static isInstance(error: unknown): error is NoSuchToolError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError, getErrorMessage } from '@ai-sdk/provider';\nimport { InvalidToolInputError } from './invalid-tool-input-error';\nimport { NoSuchToolError } from './no-such-tool-error';\n\nconst name = 'AI_ToolCallRepairError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class ToolCallRepairError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly originalError: NoSuchToolError | InvalidToolInputError;\n\n  constructor({\n    cause,\n    originalError,\n    message = `Error repairing tool call: ${getErrorMessage(cause)}`,\n  }: {\n    message?: string;\n    cause: unknown;\n    originalError: NoSuchToolError | InvalidToolInputError;\n  }) {\n    super({ name, message, cause });\n    this.originalError = originalError;\n  }\n\n  static isInstance(error: unknown): error is ToolCallRepairError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\n/**\nError that is thrown when a model with an unsupported version is used.\n */\nexport class UnsupportedModelVersionError extends AISDKError {\n  readonly version: string;\n  readonly provider: string;\n  readonly modelId: string;\n\n  constructor(options: { version: string; provider: string; modelId: string }) {\n    super({\n      name: 'AI_UnsupportedModelVersionError',\n      message:\n        `Unsupported model version ${options.version} for provider \"${options.provider}\" and model \"${options.modelId}\". ` +\n        `AI SDK 5 only supports models that implement specification version \"v2\".`,\n    });\n\n    this.version = options.version;\n    this.provider = options.provider;\n    this.modelId = options.modelId;\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidDataContentError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidDataContentError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly content: unknown;\n\n  constructor({\n    content,\n    cause,\n    message = `Invalid data content. Expected a base64 string, Uint8Array, ArrayBuffer, or Buffer, but got ${typeof content}.`,\n  }: {\n    content: unknown;\n    cause?: unknown;\n    message?: string;\n  }) {\n    super({ name, message, cause });\n\n    this.content = content;\n  }\n\n  static isInstance(error: unknown): error is InvalidDataContentError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_InvalidMessageRoleError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class InvalidMessageRoleError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly role: string;\n\n  constructor({\n    role,\n    message = `Invalid message role: '${role}'. Must be one of: \"system\", \"user\", \"assistant\", \"tool\".`,\n  }: {\n    role: string;\n    message?: string;\n  }) {\n    super({ name, message });\n\n    this.role = role;\n  }\n\n  static isInstance(error: unknown): error is InvalidMessageRoleError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { UIMessage } from '../ui/ui-messages';\n\nconst name = 'AI_MessageConversionError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class MessageConversionError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly originalMessage: Omit<UIMessage, 'id'>;\n\n  constructor({\n    originalMessage,\n    message,\n  }: {\n    originalMessage: Omit<UIMessage, 'id'>;\n    message: string;\n  }) {\n    super({ name, message });\n\n    this.originalMessage = originalMessage;\n  }\n\n  static isInstance(error: unknown): error is MessageConversionError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_DownloadError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class DownloadError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly url: string;\n  readonly statusCode?: number;\n  readonly statusText?: string;\n\n  constructor({\n    url,\n    statusCode,\n    statusText,\n    cause,\n    message = cause == null\n      ? `Failed to download ${url}: ${statusCode} ${statusText}`\n      : `Failed to download ${url}: ${cause}`,\n  }: {\n    url: string;\n    statusCode?: number;\n    statusText?: string;\n    message?: string;\n    cause?: unknown;\n  }) {\n    super({ name, message, cause });\n\n    this.url = url;\n    this.statusCode = statusCode;\n    this.statusText = statusText;\n  }\n\n  static isInstance(error: unknown): error is DownloadError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import { AISDKError } from '@ai-sdk/provider';\n\nconst name = 'AI_RetryError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport type RetryErrorReason =\n  | 'maxRetriesExceeded'\n  | 'errorNotRetryable'\n  | 'abort';\n\nexport class RetryError extends AISDKError {\n  private readonly [symbol] = true; // used in isInstance\n\n  // note: property order determines debugging output\n  readonly reason: RetryErrorReason;\n  readonly lastError: unknown;\n  readonly errors: Array<unknown>;\n\n  constructor({\n    message,\n    reason,\n    errors,\n  }: {\n    message: string;\n    reason: RetryErrorReason;\n    errors: Array<unknown>;\n  }) {\n    super({ name, message });\n\n    this.reason = reason;\n    this.errors = errors;\n\n    // separate our last error to make debugging via log easier:\n    this.lastError = errors[errors.length - 1];\n  }\n\n  static isInstance(error: unknown): error is RetryError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import {\n  LanguageModelV2FilePart,\n  LanguageModelV2Message,\n  LanguageModelV2Prompt,\n  LanguageModelV2TextPart,\n} from '@ai-sdk/provider';\nimport {\n  DataContent,\n  FilePart,\n  ImagePart,\n  isUrlSupported,\n  ModelMessage,\n  TextPart,\n} from '@ai-sdk/provider-utils';\nimport {\n  detectMediaType,\n  imageMediaTypeSignatures,\n} from '../util/detect-media-type';\nimport { download } from '../util/download';\nimport { convertToLanguageModelV2DataContent } from './data-content';\nimport { InvalidMessageRoleError } from './invalid-message-role-error';\nimport { StandardizedPrompt } from './standardize-prompt';\n\nexport async function convertToLanguageModelPrompt({\n  prompt,\n  supportedUrls,\n  downloadImplementation = download,\n}: {\n  prompt: StandardizedPrompt;\n  supportedUrls: Record<string, RegExp[]>;\n  downloadImplementation?: typeof download;\n}): Promise<LanguageModelV2Prompt> {\n  const downloadedAssets = await downloadAssets(\n    prompt.messages,\n    downloadImplementation,\n    supportedUrls,\n  );\n\n  return [\n    ...(prompt.system != null\n      ? [{ role: 'system' as const, content: prompt.system }]\n      : []),\n    ...prompt.messages.map(message =>\n      convertToLanguageModelMessage({ message, downloadedAssets }),\n    ),\n  ];\n}\n\n/**\n * Convert a ModelMessage to a LanguageModelV2Message.\n *\n * @param message The ModelMessage to convert.\n * @param downloadedAssets A map of URLs to their downloaded data. Only\n *   available if the model does not support URLs, null otherwise.\n */\nexport function convertToLanguageModelMessage({\n  message,\n  downloadedAssets,\n}: {\n  message: ModelMessage;\n  downloadedAssets: Record<\n    string,\n    { mediaType: string | undefined; data: Uint8Array }\n  >;\n}): LanguageModelV2Message {\n  const role = message.role;\n  switch (role) {\n    case 'system': {\n      return {\n        role: 'system',\n        content: message.content,\n        providerOptions: message.providerOptions,\n      };\n    }\n\n    case 'user': {\n      if (typeof message.content === 'string') {\n        return {\n          role: 'user',\n          content: [{ type: 'text', text: message.content }],\n          providerOptions: message.providerOptions,\n        };\n      }\n\n      return {\n        role: 'user',\n        content: message.content\n          .map(part => convertPartToLanguageModelPart(part, downloadedAssets))\n          // remove empty text parts:\n          .filter(part => part.type !== 'text' || part.text !== ''),\n        providerOptions: message.providerOptions,\n      };\n    }\n\n    case 'assistant': {\n      if (typeof message.content === 'string') {\n        return {\n          role: 'assistant',\n          content: [{ type: 'text', text: message.content }],\n          providerOptions: message.providerOptions,\n        };\n      }\n\n      return {\n        role: 'assistant',\n        content: message.content\n          .filter(\n            // remove empty text parts:\n            part => part.type !== 'text' || part.text !== '',\n          )\n          .map(part => {\n            const providerOptions = part.providerOptions;\n\n            switch (part.type) {\n              case 'file': {\n                const { data, mediaType } = convertToLanguageModelV2DataContent(\n                  part.data,\n                );\n                return {\n                  type: 'file',\n                  data,\n                  filename: part.filename,\n                  mediaType: mediaType ?? part.mediaType,\n                  providerOptions,\n                };\n              }\n              case 'reasoning': {\n                return {\n                  type: 'reasoning',\n                  text: part.text,\n                  providerOptions,\n                };\n              }\n              case 'text': {\n                return {\n                  type: 'text' as const,\n                  text: part.text,\n                  providerOptions,\n                };\n              }\n              case 'tool-call': {\n                return {\n                  type: 'tool-call' as const,\n                  toolCallId: part.toolCallId,\n                  toolName: part.toolName,\n                  input: part.input,\n                  providerExecuted: part.providerExecuted,\n                  providerOptions,\n                };\n              }\n              case 'tool-result': {\n                return {\n                  type: 'tool-result' as const,\n                  toolCallId: part.toolCallId,\n                  toolName: part.toolName,\n                  output: part.output,\n                  providerOptions,\n                };\n              }\n            }\n          }),\n        providerOptions: message.providerOptions,\n      };\n    }\n\n    case 'tool': {\n      return {\n        role: 'tool',\n        content: message.content.map(part => ({\n          type: 'tool-result' as const,\n          toolCallId: part.toolCallId,\n          toolName: part.toolName,\n          output: part.output,\n          providerOptions: part.providerOptions,\n        })),\n        providerOptions: message.providerOptions,\n      };\n    }\n\n    default: {\n      const _exhaustiveCheck: never = role;\n      throw new InvalidMessageRoleError({ role: _exhaustiveCheck });\n    }\n  }\n}\n\n/**\n * Downloads images and files from URLs in the messages.\n */\nasync function downloadAssets(\n  messages: ModelMessage[],\n  downloadImplementation: typeof download,\n  supportedUrls: Record<string, RegExp[]>,\n): Promise<\n  Record<string, { mediaType: string | undefined; data: Uint8Array }>\n> {\n  const urls = messages\n    .filter(message => message.role === 'user')\n    .map(message => message.content)\n    .filter((content): content is Array<TextPart | ImagePart | FilePart> =>\n      Array.isArray(content),\n    )\n    .flat()\n    .filter(\n      (part): part is ImagePart | FilePart =>\n        part.type === 'image' || part.type === 'file',\n    )\n    .map(part => {\n      const mediaType =\n        part.mediaType ?? (part.type === 'image' ? 'image/*' : undefined);\n\n      let data = part.type === 'image' ? part.image : part.data;\n      if (typeof data === 'string') {\n        try {\n          data = new URL(data);\n        } catch (ignored) {}\n      }\n\n      return { mediaType, data };\n    })\n    /**\n     * Filter out URLs that the model supports natively, so we don't download them.\n     */\n    .filter(\n      (part): part is { mediaType: string; data: URL } =>\n        part.data instanceof URL &&\n        part.mediaType != null &&\n        !isUrlSupported({\n          url: part.data.toString(),\n          mediaType: part.mediaType,\n          supportedUrls,\n        }),\n    )\n    .map(part => part.data);\n\n  // download in parallel:\n  const downloadedImages = await Promise.all(\n    urls.map(async url => ({\n      url,\n      data: await downloadImplementation({ url }),\n    })),\n  );\n\n  return Object.fromEntries(\n    downloadedImages.map(({ url, data }) => [url.toString(), data]),\n  );\n}\n\n/**\n * Convert part of a message to a LanguageModelV2Part.\n * @param part The part to convert.\n * @param downloadedAssets A map of URLs to their downloaded data. Only\n *  available if the model does not support URLs, null otherwise.\n *\n * @returns The converted part.\n */\nfunction convertPartToLanguageModelPart(\n  part: TextPart | ImagePart | FilePart,\n  downloadedAssets: Record<\n    string,\n    { mediaType: string | undefined; data: Uint8Array }\n  >,\n): LanguageModelV2TextPart | LanguageModelV2FilePart {\n  if (part.type === 'text') {\n    return {\n      type: 'text',\n      text: part.text,\n      providerOptions: part.providerOptions,\n    };\n  }\n\n  let originalData: DataContent | URL;\n  const type = part.type;\n  switch (type) {\n    case 'image':\n      originalData = part.image;\n      break;\n    case 'file':\n      originalData = part.data;\n\n      break;\n    default:\n      throw new Error(`Unsupported part type: ${type}`);\n  }\n\n  const { data: convertedData, mediaType: convertedMediaType } =\n    convertToLanguageModelV2DataContent(originalData);\n\n  let mediaType: string | undefined = convertedMediaType ?? part.mediaType;\n  let data: Uint8Array | string | URL = convertedData; // binary | base64 | url\n\n  // If the content is a URL, we check if it was downloaded:\n  if (data instanceof URL) {\n    const downloadedFile = downloadedAssets[data.toString()];\n    if (downloadedFile) {\n      data = downloadedFile.data;\n      mediaType ??= downloadedFile.mediaType;\n    }\n  }\n\n  // Now that we have the normalized data either as a URL or a Uint8Array,\n  // we can create the LanguageModelV2Part.\n  switch (type) {\n    case 'image': {\n      // When possible, try to detect the media type automatically\n      // to deal with incorrect media type inputs.\n      // When detection fails, use provided media type.\n      if (data instanceof Uint8Array || typeof data === 'string') {\n        mediaType =\n          detectMediaType({ data, signatures: imageMediaTypeSignatures }) ??\n          mediaType;\n      }\n\n      return {\n        type: 'file',\n        mediaType: mediaType ?? 'image/*', // any image\n        filename: undefined,\n        data,\n        providerOptions: part.providerOptions,\n      };\n    }\n\n    case 'file': {\n      // We must have a mediaType for files, if not, throw an error.\n      if (mediaType == null) {\n        throw new Error(`Media type is missing for file part`);\n      }\n\n      return {\n        type: 'file',\n        mediaType,\n        filename: part.filename,\n        data,\n        providerOptions: part.providerOptions,\n      };\n    }\n  }\n}\n", "import { convertBase64ToUint8Array } from '@ai-sdk/provider-utils';\n\nexport const imageMediaTypeSignatures = [\n  {\n    mediaType: 'image/gif' as const,\n    bytesPrefix: [0x47, 0x49, 0x46],\n    base64Prefix: 'R0lG',\n  },\n  {\n    mediaType: 'image/png' as const,\n    bytesPrefix: [0x89, 0x50, 0x4e, 0x47],\n    base64Prefix: 'iVBORw',\n  },\n  {\n    mediaType: 'image/jpeg' as const,\n    bytesPrefix: [0xff, 0xd8],\n    base64Prefix: '/9j/',\n  },\n  {\n    mediaType: 'image/webp' as const,\n    bytesPrefix: [0x52, 0x49, 0x46, 0x46],\n    base64Prefix: 'UklGRg',\n  },\n  {\n    mediaType: 'image/bmp' as const,\n    bytesPrefix: [0x42, 0x4d],\n    base64Prefix: 'Qk',\n  },\n  {\n    mediaType: 'image/tiff' as const,\n    bytesPrefix: [0x49, 0x49, 0x2a, 0x00],\n    base64Prefix: 'SUkqAA',\n  },\n  {\n    mediaType: 'image/tiff' as const,\n    bytesPrefix: [0x4d, 0x4d, 0x00, 0x2a],\n    base64Prefix: 'TU0AKg',\n  },\n  {\n    mediaType: 'image/avif' as const,\n    bytesPrefix: [\n      0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70, 0x61, 0x76, 0x69, 0x66,\n    ],\n    base64Prefix: 'AAAAIGZ0eXBhdmlm',\n  },\n  {\n    mediaType: 'image/heic' as const,\n    bytesPrefix: [\n      0x00, 0x00, 0x00, 0x20, 0x66, 0x74, 0x79, 0x70, 0x68, 0x65, 0x69, 0x63,\n    ],\n    base64Prefix: 'AAAAIGZ0eXBoZWlj',\n  },\n] as const;\n\nexport const audioMediaTypeSignatures = [\n  {\n    mediaType: 'audio/mpeg' as const,\n    bytesPrefix: [0xff, 0xfb],\n    base64Prefix: '//s=',\n  },\n  {\n    mediaType: 'audio/mpeg' as const,\n    bytesPrefix: [0xff, 0xfa],\n    base64Prefix: '//o=',\n  },\n  {\n    mediaType: 'audio/mpeg' as const,\n    bytesPrefix: [0xff, 0xf3],\n    base64Prefix: '//M=',\n  },\n  {\n    mediaType: 'audio/mpeg' as const,\n    bytesPrefix: [0xff, 0xf2],\n    base64Prefix: '//I=',\n  },\n  {\n    mediaType: 'audio/mpeg' as const,\n    bytesPrefix: [0xff, 0xe3],\n    base64Prefix: '/+M=',\n  },\n  {\n    mediaType: 'audio/mpeg' as const,\n    bytesPrefix: [0xff, 0xe2],\n    base64Prefix: '/+I=',\n  },\n  {\n    mediaType: 'audio/wav' as const,\n    bytesPrefix: [0x52, 0x49, 0x46, 0x46],\n    base64Prefix: 'UklGR',\n  },\n  {\n    mediaType: 'audio/ogg' as const,\n    bytesPrefix: [0x4f, 0x67, 0x67, 0x53],\n    base64Prefix: 'T2dnUw',\n  },\n  {\n    mediaType: 'audio/flac' as const,\n    bytesPrefix: [0x66, 0x4c, 0x61, 0x43],\n    base64Prefix: 'ZkxhQw',\n  },\n  {\n    mediaType: 'audio/aac' as const,\n    bytesPrefix: [0x40, 0x15, 0x00, 0x00],\n    base64Prefix: 'QBUA',\n  },\n  {\n    mediaType: 'audio/mp4' as const,\n    bytesPrefix: [0x66, 0x74, 0x79, 0x70],\n    base64Prefix: 'ZnR5cA',\n  },\n  {\n    mediaType: 'audio/webm',\n    bytesPrefix: [0x1a, 0x45, 0xdf, 0xa3],\n    base64Prefix: 'GkXf',\n  },\n] as const;\n\nconst stripID3 = (data: Uint8Array | string) => {\n  const bytes =\n    typeof data === 'string' ? convertBase64ToUint8Array(data) : data;\n  const id3Size =\n    ((bytes[6] & 0x7f) << 21) |\n    ((bytes[7] & 0x7f) << 14) |\n    ((bytes[8] & 0x7f) << 7) |\n    (bytes[9] & 0x7f);\n\n  // The raw MP3 starts here\n  return bytes.slice(id3Size + 10);\n};\n\nfunction stripID3TagsIfPresent(data: Uint8Array | string): Uint8Array | string {\n  const hasId3 =\n    (typeof data === 'string' && data.startsWith('SUQz')) ||\n    (typeof data !== 'string' &&\n      data.length > 10 &&\n      data[0] === 0x49 && // 'I'\n      data[1] === 0x44 && // 'D'\n      data[2] === 0x33); // '3'\n\n  return hasId3 ? stripID3(data) : data;\n}\n\n/**\n * Detect the media IANA media type of a file using a list of signatures.\n *\n * @param data - The file data.\n * @param signatures - The signatures to use for detection.\n * @returns The media type of the file.\n */\nexport function detectMediaType({\n  data,\n  signatures,\n}: {\n  data: Uint8Array | string;\n  signatures: typeof audioMediaTypeSignatures | typeof imageMediaTypeSignatures;\n}): (typeof signatures)[number]['mediaType'] | undefined {\n  const processedData = stripID3TagsIfPresent(data);\n\n  for (const signature of signatures) {\n    if (\n      typeof processedData === 'string'\n        ? processedData.startsWith(signature.base64Prefix)\n        : processedData.length >= signature.bytesPrefix.length &&\n          signature.bytesPrefix.every(\n            (byte, index) => processedData[index] === byte,\n          )\n    ) {\n      return signature.mediaType;\n    }\n  }\n\n  return undefined;\n}\n", "import { DownloadError } from './download-error';\n\nexport async function download({ url }: { url: URL }): Promise<{\n  data: Uint8Array;\n  mediaType: string | undefined;\n}> {\n  const urlText = url.toString();\n  try {\n    const response = await fetch(urlText);\n\n    if (!response.ok) {\n      throw new DownloadError({\n        url: urlText,\n        statusCode: response.status,\n        statusText: response.statusText,\n      });\n    }\n\n    return {\n      data: new Uint8Array(await response.arrayBuffer()),\n      mediaType: response.headers.get('content-type') ?? undefined,\n    };\n  } catch (error) {\n    if (DownloadError.isInstance(error)) {\n      throw error;\n    }\n\n    throw new DownloadError({ url: urlText, cause: error });\n  }\n}\n", "import { AISDKError, LanguageModelV2DataContent } from '@ai-sdk/provider';\nimport {\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64,\n  DataContent,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod/v4';\nimport { InvalidDataContentError } from './invalid-data-content-error';\nimport { splitDataUrl } from './split-data-url';\n\n/**\n@internal\n */\nexport const dataContentSchema: z.ZodType<DataContent> = z.union([\n  z.string(),\n  z.instanceof(Uint8Array),\n  z.instanceof(ArrayBuffer),\n  z.custom<Buffer>(\n    // Buffer might not be available in some environments such as CloudFlare:\n    (value: unknown): value is Buffer =>\n      globalThis.Buffer?.isBuffer(value) ?? false,\n    { message: 'Must be a Buffer' },\n  ),\n]);\n\nexport function convertToLanguageModelV2DataContent(\n  content: DataContent | URL,\n): {\n  data: LanguageModelV2DataContent;\n  mediaType: string | undefined;\n} {\n  // Buffer & Uint8Array:\n  if (content instanceof Uint8Array) {\n    return { data: content, mediaType: undefined };\n  }\n\n  // ArrayBuffer needs conversion to Uint8Array (lightweight):\n  if (content instanceof ArrayBuffer) {\n    return { data: new Uint8Array(content), mediaType: undefined };\n  }\n\n  // Attempt to create a URL from the data. If it fails, we can assume the data\n  // is not a URL and likely some other sort of data.\n  if (typeof content === 'string') {\n    try {\n      content = new URL(content);\n    } catch (error) {\n      // ignored\n    }\n  }\n\n  // Extract data from data URL:\n  if (content instanceof URL && content.protocol === 'data:') {\n    const { mediaType: dataUrlMediaType, base64Content } = splitDataUrl(\n      content.toString(),\n    );\n\n    if (dataUrlMediaType == null || base64Content == null) {\n      throw new AISDKError({\n        name: 'InvalidDataContentError',\n        message: `Invalid data URL format in content ${content.toString()}`,\n      });\n    }\n\n    return { data: base64Content, mediaType: dataUrlMediaType };\n  }\n\n  return { data: content, mediaType: undefined };\n}\n\n/**\nConverts data content to a base64-encoded string.\n\n@param content - Data content to convert.\n@returns Base64-encoded string.\n*/\nexport function convertDataContentToBase64String(content: DataContent): string {\n  if (typeof content === 'string') {\n    return content;\n  }\n\n  if (content instanceof ArrayBuffer) {\n    return convertUint8ArrayToBase64(new Uint8Array(content));\n  }\n\n  return convertUint8ArrayToBase64(content);\n}\n\n/**\nConverts data content to a Uint8Array.\n\n@param content - Data content to convert.\n@returns Uint8Array.\n */\nexport function convertDataContentToUint8Array(\n  content: DataContent,\n): Uint8Array {\n  if (content instanceof Uint8Array) {\n    return content;\n  }\n\n  if (typeof content === 'string') {\n    try {\n      return convertBase64ToUint8Array(content);\n    } catch (error) {\n      throw new InvalidDataContentError({\n        message:\n          'Invalid data content. Content string is not a base64-encoded media.',\n        content,\n        cause: error,\n      });\n    }\n  }\n\n  if (content instanceof ArrayBuffer) {\n    return new Uint8Array(content);\n  }\n\n  throw new InvalidDataContentError({ content });\n}\n\n/**\n * Converts a Uint8Array to a string of text.\n *\n * @param uint8Array - The Uint8Array to convert.\n * @returns The converted string.\n */\nexport function convertUint8ArrayToText(uint8Array: Uint8Array): string {\n  try {\n    return new TextDecoder().decode(uint8Array);\n  } catch (error) {\n    throw new Error('Error decoding Uint8Array to text');\n  }\n}\n", "export function splitDataUrl(dataUrl: string): {\n  mediaType: string | undefined;\n  base64Content: string | undefined;\n} {\n  try {\n    const [header, base64Content] = dataUrl.split(',');\n    return {\n      mediaType: header.split(';')[0].split(':')[1],\n      base64Content,\n    };\n  } catch (error) {\n    return {\n      mediaType: undefined,\n      base64Content: undefined,\n    };\n  }\n}\n", "import { InvalidArgumentError } from '../error/invalid-argument-error';\nimport { CallSettings } from './call-settings';\n\n/**\n * Validates call settings and returns a new object with limited values.\n */\nexport function prepareCallSettings({\n  maxOutputTokens,\n  temperature,\n  topP,\n  topK,\n  presencePenalty,\n  frequencyPenalty,\n  seed,\n  stopSequences,\n}: Omit<CallSettings, 'abortSignal' | 'headers' | 'maxRetries'>): Omit<\n  CallSettings,\n  'abortSignal' | 'headers' | 'maxRetries'\n> {\n  if (maxOutputTokens != null) {\n    if (!Number.isInteger(maxOutputTokens)) {\n      throw new InvalidArgumentError({\n        parameter: 'maxOutputTokens',\n        value: maxOutputTokens,\n        message: 'maxOutputTokens must be an integer',\n      });\n    }\n\n    if (maxOutputTokens < 1) {\n      throw new InvalidArgumentError({\n        parameter: 'maxOutputTokens',\n        value: maxOutputTokens,\n        message: 'maxOutputTokens must be >= 1',\n      });\n    }\n  }\n\n  if (temperature != null) {\n    if (typeof temperature !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'temperature',\n        value: temperature,\n        message: 'temperature must be a number',\n      });\n    }\n  }\n\n  if (topP != null) {\n    if (typeof topP !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'topP',\n        value: topP,\n        message: 'topP must be a number',\n      });\n    }\n  }\n\n  if (topK != null) {\n    if (typeof topK !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'topK',\n        value: topK,\n        message: 'topK must be a number',\n      });\n    }\n  }\n\n  if (presencePenalty != null) {\n    if (typeof presencePenalty !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'presencePenalty',\n        value: presencePenalty,\n        message: 'presencePenalty must be a number',\n      });\n    }\n  }\n\n  if (frequencyPenalty != null) {\n    if (typeof frequencyPenalty !== 'number') {\n      throw new InvalidArgumentError({\n        parameter: 'frequencyPenalty',\n        value: frequencyPenalty,\n        message: 'frequencyPenalty must be a number',\n      });\n    }\n  }\n\n  if (seed != null) {\n    if (!Number.isInteger(seed)) {\n      throw new InvalidArgumentError({\n        parameter: 'seed',\n        value: seed,\n        message: 'seed must be an integer',\n      });\n    }\n  }\n\n  return {\n    maxOutputTokens,\n    temperature,\n    topP,\n    topK,\n    presencePenalty,\n    frequencyPenalty,\n    stopSequences,\n    seed,\n  };\n}\n", "import {\n  LanguageModelV2FunctionTool,\n  LanguageModelV2ProviderDefinedTool,\n  LanguageModelV2ToolChoice,\n} from '@ai-sdk/provider';\nimport { asSchema } from '@ai-sdk/provider-utils';\nimport { isNonEmptyObject } from '../util/is-non-empty-object';\nimport { ToolSet } from '../generate-text';\nimport { ToolChoice } from '../types/language-model';\n\nexport function prepareToolsAndToolChoice<TOOLS extends ToolSet>({\n  tools,\n  toolChoice,\n  activeTools,\n}: {\n  tools: TOOLS | undefined;\n  toolChoice: ToolChoice<TOOLS> | undefined;\n  activeTools: Array<keyof TOOLS> | undefined;\n}): {\n  tools:\n    | Array<LanguageModelV2FunctionTool | LanguageModelV2ProviderDefinedTool>\n    | undefined;\n  toolChoice: LanguageModelV2ToolChoice | undefined;\n} {\n  if (!isNonEmptyObject(tools)) {\n    return {\n      tools: undefined,\n      toolChoice: undefined,\n    };\n  }\n\n  // when activeTools is provided, we only include the tools that are in the list:\n  const filteredTools =\n    activeTools != null\n      ? Object.entries(tools).filter(([name]) =>\n          activeTools.includes(name as keyof TOOLS),\n        )\n      : Object.entries(tools);\n\n  return {\n    tools: filteredTools.map(([name, tool]) => {\n      const toolType = tool.type;\n      switch (toolType) {\n        case undefined:\n        case 'dynamic':\n        case 'function':\n          return {\n            type: 'function' as const,\n            name,\n            description: tool.description,\n            inputSchema: asSchema(tool.inputSchema).jsonSchema,\n            providerOptions: tool.providerOptions,\n          };\n        case 'provider-defined':\n          return {\n            type: 'provider-defined' as const,\n            name,\n            id: tool.id,\n            args: tool.args,\n          };\n        default: {\n          const exhaustiveCheck: never = toolType;\n          throw new Error(`Unsupported tool type: ${exhaustiveCheck}`);\n        }\n      }\n    }),\n    toolChoice:\n      toolChoice == null\n        ? { type: 'auto' }\n        : typeof toolChoice === 'string'\n          ? { type: toolChoice }\n          : { type: 'tool' as const, toolName: toolChoice.toolName as string },\n  };\n}\n", "export function isNonEmptyObject(\n  object: Record<string, unknown> | undefined | null,\n): object is Record<string, unknown> {\n  return object != null && Object.keys(object).length > 0;\n}\n", "import { InvalidPromptError } from '@ai-sdk/provider';\nimport { ModelMessage, safeValidateTypes } from '@ai-sdk/provider-utils';\nimport { z } from 'zod/v4';\nimport { modelMessageSchema } from './message';\nimport { Prompt } from './prompt';\n\nexport type StandardizedPrompt = {\n  /**\n   * System message.\n   */\n  system?: string;\n\n  /**\n   * Messages.\n   */\n  messages: ModelMessage[];\n};\n\nexport async function standardizePrompt(\n  prompt: Prompt,\n): Promise<StandardizedPrompt> {\n  if (prompt.prompt == null && prompt.messages == null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'prompt or messages must be defined',\n    });\n  }\n\n  if (prompt.prompt != null && prompt.messages != null) {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'prompt and messages cannot be defined at the same time',\n    });\n  }\n\n  // validate that system is a string\n  if (prompt.system != null && typeof prompt.system !== 'string') {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'system must be a string',\n    });\n  }\n\n  let messages: ModelMessage[];\n\n  if (prompt.prompt != null && typeof prompt.prompt === 'string') {\n    messages = [{ role: 'user', content: prompt.prompt }];\n  } else if (prompt.prompt != null && Array.isArray(prompt.prompt)) {\n    messages = prompt.prompt;\n  } else if (prompt.messages != null) {\n    messages = prompt.messages;\n  } else {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'prompt or messages must be defined',\n    });\n  }\n\n  if (messages.length === 0) {\n    throw new InvalidPromptError({\n      prompt,\n      message: 'messages must not be empty',\n    });\n  }\n\n  const validationResult = await safeValidateTypes({\n    value: messages,\n    schema: z.array(modelMessageSchema),\n  });\n\n  if (!validationResult.success) {\n    throw new InvalidPromptError({\n      prompt,\n      message:\n        'The messages must be a ModelMessage[]. ' +\n        'If you have passed a UIMessage[], you can use convertToModelMessages to convert them.',\n      cause: validationResult.error,\n    });\n  }\n\n  return {\n    messages,\n    system: prompt.system,\n  };\n}\n", "import {\n  AssistantModelMessage,\n  ModelMessage,\n  SystemModelMessage,\n  ToolModelMessage,\n  UserModelMessage,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod/v4';\nimport { providerMetadataSchema } from '../types/provider-metadata';\nimport {\n  filePartSchema,\n  imagePartSchema,\n  reasoningPartSchema,\n  textPartSchema,\n  toolCallPartSchema,\n  toolResultPartSchema,\n} from './content-part';\n\n/**\n@deprecated Use `SystemModelMessage` instead.\n */\n// TODO remove in AI SDK 6\nexport type CoreSystemMessage = SystemModelMessage;\n\nexport const systemModelMessageSchema: z.ZodType<SystemModelMessage> = z.object(\n  {\n    role: z.literal('system'),\n    content: z.string(),\n    providerOptions: providerMetadataSchema.optional(),\n  },\n);\n\n/**\n@deprecated Use `systemModelMessageSchema` instead.\n */\n// TODO remove in AI SDK 6\nexport const coreSystemMessageSchema = systemModelMessageSchema;\n\n/**\n@deprecated Use `UserModelMessage` instead.\n */\n// TODO remove in AI SDK 6\nexport type CoreUserMessage = UserModelMessage;\n\nexport const userModelMessageSchema: z.ZodType<UserModelMessage> = z.object({\n  role: z.literal('user'),\n  content: z.union([\n    z.string(),\n    z.array(z.union([textPartSchema, imagePartSchema, filePartSchema])),\n  ]),\n  providerOptions: providerMetadataSchema.optional(),\n});\n\n/**\n@deprecated Use `userModelMessageSchema` instead.\n */\n// TODO remove in AI SDK 6\nexport const coreUserMessageSchema = userModelMessageSchema;\n\n/**\n@deprecated Use `AssistantModelMessage` instead.\n */\n// TODO remove in AI SDK 6\nexport type CoreAssistantMessage = AssistantModelMessage;\n\nexport const assistantModelMessageSchema: z.ZodType<AssistantModelMessage> =\n  z.object({\n    role: z.literal('assistant'),\n    content: z.union([\n      z.string(),\n      z.array(\n        z.union([\n          textPartSchema,\n          filePartSchema,\n          reasoningPartSchema,\n          toolCallPartSchema,\n          toolResultPartSchema,\n        ]),\n      ),\n    ]),\n    providerOptions: providerMetadataSchema.optional(),\n  });\n\n/**\n@deprecated Use `assistantModelMessageSchema` instead.\n */\n// TODO remove in AI SDK 6\nexport const coreAssistantMessageSchema = assistantModelMessageSchema;\n\n/**\n@deprecated Use `ToolModelMessage` instead.\n */\n// TODO remove in AI SDK 6\nexport type CoreToolMessage = ToolModelMessage;\n\nexport const toolModelMessageSchema: z.ZodType<ToolModelMessage> = z.object({\n  role: z.literal('tool'),\n  content: z.array(toolResultPartSchema),\n  providerOptions: providerMetadataSchema.optional(),\n});\n\n/**\n@deprecated Use `toolModelMessageSchema` instead.\n */\n// TODO remove in AI SDK 6\nexport const coreToolMessageSchema = toolModelMessageSchema;\n\n/**\n@deprecated Use `ModelMessage` instead.\n   */\n// TODO remove in AI SDK 6\nexport type CoreMessage = ModelMessage;\n\nexport const modelMessageSchema: z.ZodType<ModelMessage> = z.union([\n  systemModelMessageSchema,\n  userModelMessageSchema,\n  assistantModelMessageSchema,\n  toolModelMessageSchema,\n]);\n\n/**\n@deprecated Use `modelMessageSchema` instead.\n */\n// TODO remove in AI SDK 6\nexport const coreMessageSchema: z.ZodType<CoreMessage> = modelMessageSchema;\n", "import { SharedV2ProviderMetadata } from '@ai-sdk/provider';\nimport { z } from 'zod/v4';\nimport { jsonValueSchema } from './json-value';\n\n/**\nAdditional provider-specific metadata that is returned from the provider.\n\nThis is needed to enable provider-specific functionality that can be\nfully encapsulated in the provider.\n */\nexport type ProviderMetadata = SharedV2ProviderMetadata;\n\nexport const providerMetadataSchema: z.ZodType<ProviderMetadata> = z.record(\n  z.string(),\n  z.record(z.string(), jsonValueSchema),\n);\n", "import { JSONValue as OriginalJSONValue } from '@ai-sdk/provider';\nimport { z } from 'zod/v4';\n\nexport const jsonValueSchema: z.ZodType<JSONValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.string(),\n    z.number(),\n    z.boolean(),\n    z.record(z.string(), jsonValueSchema),\n    z.array(jsonValueSchema),\n  ]),\n);\n\nexport type JSONValue = OriginalJSONValue;\n", "import { LanguageModelV2ToolResultOutput } from '@ai-sdk/provider';\nimport {\n  FilePart,\n  ImagePart,\n  ProviderOptions,\n  ReasoningPart,\n  TextPart,\n  ToolResultPart,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod/v4';\nimport { jsonValueSchema } from '../types/json-value';\nimport { providerMetadataSchema } from '../types/provider-metadata';\nimport { dataContentSchema } from './data-content';\n\n/**\n@internal\n */\nexport const textPartSchema: z.ZodType<TextPart> = z.object({\n  type: z.literal('text'),\n  text: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n});\n\n/**\n@internal\n */\nexport const imagePartSchema: z.ZodType<ImagePart> = z.object({\n  type: z.literal('image'),\n  image: z.union([dataContentSchema, z.instanceof(URL)]),\n  mediaType: z.string().optional(),\n  providerOptions: providerMetadataSchema.optional(),\n});\n\n/**\n@internal\n */\nexport const filePartSchema: z.ZodType<FilePart> = z.object({\n  type: z.literal('file'),\n  data: z.union([dataContentSchema, z.instanceof(URL)]),\n  filename: z.string().optional(),\n  mediaType: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n});\n\n/**\n@internal\n */\nexport const reasoningPartSchema: z.ZodType<ReasoningPart> = z.object({\n  type: z.literal('reasoning'),\n  text: z.string(),\n  providerOptions: providerMetadataSchema.optional(),\n});\n\n/**\nTool call content part of a prompt. It contains a tool call (usually generated by the AI model).\n */\nexport interface ToolCallPart {\n  type: 'tool-call';\n\n  /**\nID of the tool call. This ID is used to match the tool call with the tool result.\n */\n  toolCallId: string;\n\n  /**\nName of the tool that is being called.\n */\n  toolName: string;\n\n  /**\nArguments of the tool call. This is a JSON-serializable object that matches the tool's input schema.\n   */\n  input: unknown;\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n  providerOptions?: ProviderOptions;\n}\n\n/**\n@internal\n */\nexport const toolCallPartSchema: z.ZodType<ToolCallPart> = z.object({\n  type: z.literal('tool-call'),\n  toolCallId: z.string(),\n  toolName: z.string(),\n  input: z.unknown(),\n  providerOptions: providerMetadataSchema.optional(),\n  providerExecuted: z.boolean().optional(),\n}) as z.ZodType<ToolCallPart>; // necessary bc input is optional on Zod type\n\n/**\n@internal\n */\nexport const outputSchema: z.ZodType<LanguageModelV2ToolResultOutput> =\n  z.discriminatedUnion('type', [\n    z.object({\n      type: z.literal('text'),\n      value: z.string(),\n    }),\n    z.object({\n      type: z.literal('json'),\n      value: jsonValueSchema,\n    }),\n    z.object({\n      type: z.literal('error-text'),\n      value: z.string(),\n    }),\n    z.object({\n      type: z.literal('error-json'),\n      value: jsonValueSchema,\n    }),\n    z.object({\n      type: z.literal('content'),\n      value: z.array(\n        z.union([\n          z.object({\n            type: z.literal('text'),\n            text: z.string(),\n          }),\n          z.object({\n            type: z.literal('media'),\n            data: z.string(),\n            mediaType: z.string(),\n          }),\n        ]),\n      ),\n    }),\n  ]);\n\n/**\n@internal\n */\nexport const toolResultPartSchema: z.ZodType<ToolResultPart> = z.object({\n  type: z.literal('tool-result'),\n  toolCallId: z.string(),\n  toolName: z.string(),\n  output: outputSchema,\n  providerOptions: providerMetadataSchema.optional(),\n}) as z.ZodType<ToolResultPart>; // necessary bc result is optional on Zod type\n", "import {\n  GatewayAuthenticationError,\n  GatewayModelNotFoundError,\n} from '@ai-sdk/gateway';\nimport { AISDKError } from '@ai-sdk/provider';\n\nexport function wrapGatewayError(error: unknown): unknown {\n  if (\n    GatewayAuthenticationError.isInstance(error) ||\n    GatewayModelNotFoundError.isInstance(error)\n  ) {\n    return new AISDKError({\n      name: 'GatewayError',\n      message:\n        'Vercel AI Gateway access failed. ' +\n        'If you want to use AI SDK providers directly, use the providers, e.g. @ai-sdk/openai, ' +\n        'or register a different global default provider.',\n      cause: error,\n    });\n  }\n\n  return error;\n}\n", "import { TelemetrySettings } from './telemetry-settings';\n\nexport function assembleOperationName({\n  operationId,\n  telemetry,\n}: {\n  operationId: string;\n  telemetry?: TelemetrySettings;\n}) {\n  return {\n    // standardized operation and resource name:\n    'operation.name': `${operationId}${\n      telemetry?.functionId != null ? ` ${telemetry.functionId}` : ''\n    }`,\n    'resource.name': telemetry?.functionId,\n\n    // detailed, AI SDK specific data:\n    'ai.operationId': operationId,\n    'ai.telemetry.functionId': telemetry?.functionId,\n  };\n}\n", "import { Attributes } from '@opentelemetry/api';\nimport { CallSettings } from '../prompt/call-settings';\nimport { TelemetrySettings } from './telemetry-settings';\n\nexport function getBaseTelemetryAttributes({\n  model,\n  settings,\n  telemetry,\n  headers,\n}: {\n  model: { modelId: string; provider: string };\n  settings: Omit<CallSettings, 'abortSignal' | 'headers' | 'temperature'>;\n  telemetry: TelemetrySettings | undefined;\n  headers: Record<string, string | undefined> | undefined;\n}): Attributes {\n  return {\n    'ai.model.provider': model.provider,\n    'ai.model.id': model.modelId,\n\n    // settings:\n    ...Object.entries(settings).reduce((attributes, [key, value]) => {\n      attributes[`ai.settings.${key}`] = value;\n      return attributes;\n    }, {} as Attributes),\n\n    // add metadata as attributes:\n    ...Object.entries(telemetry?.metadata ?? {}).reduce(\n      (attributes, [key, value]) => {\n        attributes[`ai.telemetry.metadata.${key}`] = value;\n        return attributes;\n      },\n      {} as Attributes,\n    ),\n\n    // request headers\n    ...Object.entries(headers ?? {}).reduce((attributes, [key, value]) => {\n      if (value !== undefined) {\n        attributes[`ai.request.headers.${key}`] = value;\n      }\n      return attributes;\n    }, {} as Attributes),\n  };\n}\n", "import { Tracer, trace } from '@opentelemetry/api';\nimport { noopTracer } from './noop-tracer';\n\nexport function getTracer({\n  isEnabled = false,\n  tracer,\n}: {\n  isEnabled?: boolean;\n  tracer?: Tracer;\n} = {}): Tracer {\n  if (!isEnabled) {\n    return noopTracer;\n  }\n\n  if (tracer) {\n    return tracer;\n  }\n\n  return trace.getTracer('ai');\n}\n", "import { Span, SpanContext, Tracer } from '@opentelemetry/api';\n\n/**\n * Tracer implementation that does nothing (null object).\n */\nexport const noopTracer: Tracer = {\n  startSpan(): Span {\n    return noopSpan;\n  },\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    name: unknown,\n    arg1: unknown,\n    arg2?: unknown,\n    arg3?: F,\n  ): ReturnType<any> {\n    if (typeof arg1 === 'function') {\n      return arg1(noopSpan);\n    }\n    if (typeof arg2 === 'function') {\n      return arg2(noopSpan);\n    }\n    if (typeof arg3 === 'function') {\n      return arg3(noopSpan);\n    }\n  },\n};\n\nconst noopSpan: Span = {\n  spanContext() {\n    return noopSpanContext;\n  },\n  setAttribute() {\n    return this;\n  },\n  setAttributes() {\n    return this;\n  },\n  addEvent() {\n    return this;\n  },\n  addLink() {\n    return this;\n  },\n  addLinks() {\n    return this;\n  },\n  setStatus() {\n    return this;\n  },\n  updateName() {\n    return this;\n  },\n  end() {\n    return this;\n  },\n  isRecording() {\n    return false;\n  },\n  recordException() {\n    return this;\n  },\n};\n\nconst noopSpanContext: SpanContext = {\n  traceId: '',\n  spanId: '',\n  traceFlags: 0,\n};\n", "import { Attributes, Span, Tracer, SpanStatusCode } from '@opentelemetry/api';\n\nexport function recordSpan<T>({\n  name,\n  tracer,\n  attributes,\n  fn,\n  endWhenDone = true,\n}: {\n  name: string;\n  tracer: Tracer;\n  attributes: Attributes;\n  fn: (span: Span) => Promise<T>;\n  endWhenDone?: boolean;\n}) {\n  return tracer.startActiveSpan(name, { attributes }, async span => {\n    try {\n      const result = await fn(span);\n\n      if (endWhenDone) {\n        span.end();\n      }\n\n      return result;\n    } catch (error) {\n      try {\n        recordErrorOnSpan(span, error);\n      } finally {\n        // always stop the span when there is an error:\n        span.end();\n      }\n\n      throw error;\n    }\n  });\n}\n\n/**\n * Record an error on a span. If the error is an instance of Error, an exception event will be recorded on the span, otherwise\n * the span will be set to an error status.\n *\n * @param span - The span to record the error on.\n * @param error - The error to record on the span.\n */\nexport function recordErrorOnSpan(span: Span, error: unknown) {\n  if (error instanceof Error) {\n    span.recordException({\n      name: error.name,\n      message: error.message,\n      stack: error.stack,\n    });\n    span.setStatus({\n      code: SpanStatusCode.ERROR,\n      message: error.message,\n    });\n  } else {\n    span.setStatus({ code: SpanStatusCode.ERROR });\n  }\n}\n", "import type { Attributes, AttributeValue } from '@opentelemetry/api';\nimport type { TelemetrySettings } from './telemetry-settings';\n\nexport function selectTelemetryAttributes({\n  telemetry,\n  attributes,\n}: {\n  telemetry?: TelemetrySettings;\n  attributes: {\n    [attributeKey: string]:\n      | AttributeValue\n      | { input: () => AttributeValue | undefined }\n      | { output: () => AttributeValue | undefined }\n      | undefined;\n  };\n}): Attributes {\n  // when telemetry is disabled, return an empty object to avoid serialization overhead:\n  if (telemetry?.isEnabled !== true) {\n    return {};\n  }\n\n  return Object.entries(attributes).reduce((attributes, [key, value]) => {\n    if (value == null) {\n      return attributes;\n    }\n\n    // input value, check if it should be recorded:\n    if (\n      typeof value === 'object' &&\n      'input' in value &&\n      typeof value.input === 'function'\n    ) {\n      // default to true:\n      if (telemetry?.recordInputs === false) {\n        return attributes;\n      }\n\n      const result = value.input();\n\n      return result == null ? attributes : { ...attributes, [key]: result };\n    }\n\n    // output value, check if it should be recorded:\n    if (\n      typeof value === 'object' &&\n      'output' in value &&\n      typeof value.output === 'function'\n    ) {\n      // default to true:\n      if (telemetry?.recordOutputs === false) {\n        return attributes;\n      }\n\n      const result = value.output();\n\n      return result == null ? attributes : { ...attributes, [key]: result };\n    }\n\n    // value is an attribute value already:\n    return { ...attributes, [key]: value };\n  }, {});\n}\n", "import {\n  LanguageModelV2Message,\n  LanguageModelV2Prompt,\n} from '@ai-sdk/provider';\nimport { convertDataContentToBase64String } from '../prompt/data-content';\n\n/**\n * Helper utility to serialize prompt content for OpenTelemetry tracing.\n * It is initially created because normalized LanguageModelV1Prompt carries\n * images as Uint8Arrays, on which JSON.stringify acts weirdly, converting\n * them to objects with stringified indices as keys, e.g. {\"0\": 42, \"1\": 69 }.\n */\nexport function stringifyForTelemetry(prompt: LanguageModelV2Prompt): string {\n  return JSON.stringify(\n    prompt.map((message: LanguageModelV2Message) => ({\n      ...message,\n      content:\n        typeof message.content === 'string'\n          ? message.content\n          : message.content.map(part =>\n              part.type === 'file'\n                ? {\n                    ...part,\n                    data:\n                      part.data instanceof Uint8Array\n                        ? convertDataContentToBase64String(part.data)\n                        : part.data,\n                  }\n                : part,\n            ),\n    })),\n  );\n}\n", "import { LanguageModelV2Usage } from '@ai-sdk/provider';\n\n/**\nRepresents the number of tokens used in a prompt and completion.\n */\nexport type LanguageModelUsage = LanguageModelV2Usage;\n\n/**\nRepresents the number of tokens used in an embedding.\n */\n// TODO replace with EmbeddingModelV2Usage\nexport type EmbeddingModelUsage = {\n  /**\nThe number of tokens used in the embedding.\n   */\n  tokens: number;\n};\n\nexport function addLanguageModelUsage(\n  usage1: LanguageModelUsage,\n  usage2: LanguageModelUsage,\n): LanguageModelUsage {\n  return {\n    inputTokens: addTokenCounts(usage1.inputTokens, usage2.inputTokens),\n    outputTokens: addTokenCounts(usage1.outputTokens, usage2.outputTokens),\n    totalTokens: addTokenCounts(usage1.totalTokens, usage2.totalTokens),\n    reasoningTokens: addTokenCounts(\n      usage1.reasoningTokens,\n      usage2.reasoningTokens,\n    ),\n    cachedInputTokens: addTokenCounts(\n      usage1.cachedInputTokens,\n      usage2.cachedInputTokens,\n    ),\n  };\n}\n\nfunction addTokenCounts(\n  tokenCount1: number | undefined,\n  tokenCount2: number | undefined,\n): number | undefined {\n  return tokenCount1 == null && tokenCount2 == null\n    ? undefined\n    : (tokenCount1 ?? 0) + (tokenCount2 ?? 0);\n}\n", "export function asArray<T>(value: T | T[] | undefined): T[] {\n  return value === undefined ? [] : Array.isArray(value) ? value : [value];\n}\n", "import { APICallError } from '@ai-sdk/provider';\nimport { delay, getErrorMessage, isAbortError } from '@ai-sdk/provider-utils';\nimport { RetryError } from './retry-error';\n\nexport type RetryFunction = <OUTPUT>(\n  fn: () => PromiseLike<OUTPUT>,\n) => PromiseLike<OUTPUT>;\n\nfunction getRetryDelayInMs({\n  error,\n  exponentialBackoffDelay,\n}: {\n  error: APICallError;\n  exponentialBackoffDelay: number;\n}): number {\n  const headers = error.responseHeaders;\n\n  if (!headers) return exponentialBackoffDelay;\n\n  let ms: number | undefined;\n\n  // retry-ms is more precise than retry-after and used by e.g. OpenAI\n  const retryAfterMs = headers['retry-after-ms'];\n  if (retryAfterMs) {\n    const timeoutMs = parseFloat(retryAfterMs);\n    if (!Number.isNaN(timeoutMs)) {\n      ms = timeoutMs;\n    }\n  }\n\n  // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n  const retryAfter = headers['retry-after'];\n  if (retryAfter && ms === undefined) {\n    const timeoutSeconds = parseFloat(retryAfter);\n    if (!Number.isNaN(timeoutSeconds)) {\n      ms = timeoutSeconds * 1000;\n    } else {\n      ms = Date.parse(retryAfter) - Date.now();\n    }\n  }\n\n  // check that the delay is reasonable:\n  if (\n    ms != null &&\n    !Number.isNaN(ms) &&\n    0 <= ms &&\n    (ms < 60 * 1000 || ms < exponentialBackoffDelay)\n  ) {\n    return ms;\n  }\n\n  return exponentialBackoffDelay;\n}\n\n/**\nThe `retryWithExponentialBackoffRespectingRetryHeaders` strategy retries a failed API call with an exponential backoff,\nwhile respecting rate limit headers (retry-after-ms and retry-after) if they are provided and reasonable (0-60 seconds).\nYou can configure the maximum number of retries, the initial delay, and the backoff factor.\n */\nexport const retryWithExponentialBackoffRespectingRetryHeaders =\n  ({\n    maxRetries = 2,\n    initialDelayInMs = 2000,\n    backoffFactor = 2,\n    abortSignal,\n  }: {\n    maxRetries?: number;\n    initialDelayInMs?: number;\n    backoffFactor?: number;\n    abortSignal?: AbortSignal;\n  } = {}): RetryFunction =>\n  async <OUTPUT>(f: () => PromiseLike<OUTPUT>) =>\n    _retryWithExponentialBackoff(f, {\n      maxRetries,\n      delayInMs: initialDelayInMs,\n      backoffFactor,\n      abortSignal,\n    });\n\nasync function _retryWithExponentialBackoff<OUTPUT>(\n  f: () => PromiseLike<OUTPUT>,\n  {\n    maxRetries,\n    delayInMs,\n    backoffFactor,\n    abortSignal,\n  }: {\n    maxRetries: number;\n    delayInMs: number;\n    backoffFactor: number;\n    abortSignal: AbortSignal | undefined;\n  },\n  errors: unknown[] = [],\n): Promise<OUTPUT> {\n  try {\n    return await f();\n  } catch (error) {\n    if (isAbortError(error)) {\n      throw error; // don't retry when the request was aborted\n    }\n\n    if (maxRetries === 0) {\n      throw error; // don't wrap the error when retries are disabled\n    }\n\n    const errorMessage = getErrorMessage(error);\n    const newErrors = [...errors, error];\n    const tryNumber = newErrors.length;\n\n    if (tryNumber > maxRetries) {\n      throw new RetryError({\n        message: `Failed after ${tryNumber} attempts. Last error: ${errorMessage}`,\n        reason: 'maxRetriesExceeded',\n        errors: newErrors,\n      });\n    }\n\n    if (\n      error instanceof Error &&\n      APICallError.isInstance(error) &&\n      error.isRetryable === true &&\n      tryNumber <= maxRetries\n    ) {\n      await delay(\n        getRetryDelayInMs({\n          error,\n          exponentialBackoffDelay: delayInMs,\n        }),\n        { abortSignal },\n      );\n\n      return _retryWithExponentialBackoff(\n        f,\n        {\n          maxRetries,\n          delayInMs: backoffFactor * delayInMs,\n          backoffFactor,\n          abortSignal,\n        },\n        newErrors,\n      );\n    }\n\n    if (tryNumber === 1) {\n      throw error; // don't wrap the error when a non-retryable error occurs on the first try\n    }\n\n    throw new RetryError({\n      message: `Failed after ${tryNumber} attempts with non-retryable error: '${errorMessage}'`,\n      reason: 'errorNotRetryable',\n      errors: newErrors,\n    });\n  }\n}\n", "import { InvalidArgumentError } from '../error/invalid-argument-error';\nimport {\n  RetryFunction,\n  retryWithExponentialBackoffRespectingRetryHeaders,\n} from '../util/retry-with-exponential-backoff';\n\n/**\n * Validate and prepare retries.\n */\nexport function prepareRetries({\n  maxRetries,\n  abortSignal,\n}: {\n  maxRetries: number | undefined;\n  abortSignal: AbortSignal | undefined;\n}): {\n  maxRetries: number;\n  retry: RetryFunction;\n} {\n  if (maxRetries != null) {\n    if (!Number.isInteger(maxRetries)) {\n      throw new InvalidArgumentError({\n        parameter: 'maxRetries',\n        value: maxRetries,\n        message: 'maxRetries must be an integer',\n      });\n    }\n\n    if (maxRetries < 0) {\n      throw new InvalidArgumentError({\n        parameter: 'maxRetries',\n        value: maxRetries,\n        message: 'maxRetries must be >= 0',\n      });\n    }\n  }\n\n  const maxRetriesResult = maxRetries ?? 2;\n\n  return {\n    maxRetries: maxRetriesResult,\n    retry: retryWithExponentialBackoffRespectingRetryHeaders({\n      maxRetries: maxRetriesResult,\n      abortSignal,\n    }),\n  };\n}\n", "import { LanguageModelV2Content, LanguageModelV2Text } from '@ai-sdk/provider';\n\nexport function extractTextContent(\n  content: LanguageModelV2Content[],\n): string | undefined {\n  const parts = content.filter(\n    (content): content is LanguageModelV2Text => content.type === 'text',\n  );\n\n  if (parts.length === 0) {\n    return undefined;\n  }\n\n  return parts.map(content => content.text).join('');\n}\n", "import {\n  convertBase64ToUint8Array,\n  convertUint8ArrayToBase64,\n} from '@ai-sdk/provider-utils';\n\n/**\n * A generated file.\n */\nexport interface GeneratedFile {\n  /**\nFile as a base64 encoded string.\n     */\n  readonly base64: string;\n\n  /**\nFile as a Uint8Array.\n     */\n  readonly uint8Array: Uint8Array;\n\n  /**\nThe IANA media type of the file.\n\n@see https://www.iana.org/assignments/media-types/media-types.xhtml\n   */\n  readonly mediaType: string;\n}\n\nexport class DefaultGeneratedFile implements GeneratedFile {\n  private base64Data: string | undefined;\n  private uint8ArrayData: Uint8Array | undefined;\n\n  readonly mediaType: string;\n\n  constructor({\n    data,\n    mediaType,\n  }: {\n    data: string | Uint8Array;\n    mediaType: string;\n  }) {\n    const isUint8Array = data instanceof Uint8Array;\n    this.base64Data = isUint8Array ? undefined : data;\n    this.uint8ArrayData = isUint8Array ? data : undefined;\n    this.mediaType = mediaType;\n  }\n\n  // lazy conversion with caching to avoid unnecessary conversion overhead:\n  get base64() {\n    if (this.base64Data == null) {\n      this.base64Data = convertUint8ArrayToBase64(this.uint8ArrayData!);\n    }\n    return this.base64Data;\n  }\n\n  // lazy conversion with caching to avoid unnecessary conversion overhead:\n  get uint8Array() {\n    if (this.uint8ArrayData == null) {\n      this.uint8ArrayData = convertBase64ToUint8Array(this.base64Data!);\n    }\n    return this.uint8ArrayData;\n  }\n}\n\nexport class DefaultGeneratedFileWithType extends DefaultGeneratedFile {\n  readonly type = 'file';\n\n  constructor(options: { data: string | Uint8Array; mediaType: string }) {\n    super(options);\n  }\n}\n", "import { LanguageModelV2ToolCall } from '@ai-sdk/provider';\nimport {\n  asSchema,\n  ModelMessage,\n  safeParseJSON,\n  safeValidateTypes,\n} from '@ai-sdk/provider-utils';\nimport { InvalidToolInputError } from '../error/invalid-tool-input-error';\nimport { NoSuchToolError } from '../error/no-such-tool-error';\nimport { ToolCallRepairError } from '../error/tool-call-repair-error';\nimport { TypedToolCall } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair-function';\nimport { ToolSet } from './tool-set';\n\nexport async function parseToolCall<TOOLS extends ToolSet>({\n  toolCall,\n  tools,\n  repairToolCall,\n  system,\n  messages,\n}: {\n  toolCall: LanguageModelV2ToolCall;\n  tools: TOOLS | undefined;\n  repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n  system: string | undefined;\n  messages: ModelMessage[];\n}): Promise<TypedToolCall<TOOLS>> {\n  try {\n    if (tools == null) {\n      throw new NoSuchToolError({ toolName: toolCall.toolName });\n    }\n\n    try {\n      return await doParseToolCall({ toolCall, tools });\n    } catch (error) {\n      if (\n        repairToolCall == null ||\n        !(\n          NoSuchToolError.isInstance(error) ||\n          InvalidToolInputError.isInstance(error)\n        )\n      ) {\n        throw error;\n      }\n\n      let repairedToolCall: LanguageModelV2ToolCall | null = null;\n\n      try {\n        repairedToolCall = await repairToolCall({\n          toolCall,\n          tools,\n          inputSchema: ({ toolName }) => {\n            const { inputSchema } = tools[toolName];\n            return asSchema(inputSchema).jsonSchema;\n          },\n          system,\n          messages,\n          error,\n        });\n      } catch (repairError) {\n        throw new ToolCallRepairError({\n          cause: repairError,\n          originalError: error,\n        });\n      }\n\n      // no repaired tool call returned\n      if (repairedToolCall == null) {\n        throw error;\n      }\n\n      return await doParseToolCall({ toolCall: repairedToolCall, tools });\n    }\n  } catch (error) {\n    // use parsed input when possible\n    const parsedInput = await safeParseJSON({ text: toolCall.input });\n    const input = parsedInput.success ? parsedInput.value : toolCall.input;\n\n    // TODO AI SDK 6: special invalid tool call parts\n    return {\n      type: 'tool-call',\n      toolCallId: toolCall.toolCallId,\n      toolName: toolCall.toolName,\n      input,\n      dynamic: true,\n      invalid: true,\n      error,\n    };\n  }\n}\n\nasync function doParseToolCall<TOOLS extends ToolSet>({\n  toolCall,\n  tools,\n}: {\n  toolCall: LanguageModelV2ToolCall;\n  tools: TOOLS;\n}): Promise<TypedToolCall<TOOLS>> {\n  const toolName = toolCall.toolName as keyof TOOLS & string;\n\n  const tool = tools[toolName];\n\n  if (tool == null) {\n    throw new NoSuchToolError({\n      toolName: toolCall.toolName,\n      availableTools: Object.keys(tools),\n    });\n  }\n\n  const schema = asSchema(tool.inputSchema);\n\n  // when the tool call has no arguments, we try passing an empty object to the schema\n  // (many LLMs generate empty strings for tool calls with no arguments)\n  const parseResult =\n    toolCall.input.trim() === ''\n      ? await safeValidateTypes({ value: {}, schema })\n      : await safeParseJSON({ text: toolCall.input, schema });\n\n  if (parseResult.success === false) {\n    throw new InvalidToolInputError({\n      toolName,\n      toolInput: toolCall.input,\n      cause: parseResult.error,\n    });\n  }\n\n  return tool.type === 'dynamic'\n    ? {\n        type: 'tool-call',\n        toolCallId: toolCall.toolCallId,\n        toolName: toolCall.toolName,\n        input: parseResult.value,\n        providerExecuted: toolCall.providerExecuted,\n        providerMetadata: toolCall.providerMetadata,\n        dynamic: true,\n      }\n    : {\n        type: 'tool-call',\n        toolCallId: toolCall.toolCallId,\n        toolName,\n        input: parseResult.value,\n        providerExecuted: toolCall.providerExecuted,\n        providerMetadata: toolCall.providerMetadata,\n      };\n}\n", "import { ReasoningPart } from '@ai-sdk/provider-utils';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModelRequestMetadata,\n  LanguageModelResponseMetadata,\n  ProviderMetadata,\n} from '../types';\nimport { Source } from '../types/language-model';\nimport { LanguageModelUsage } from '../types/usage';\nimport { ContentPart } from './content-part';\nimport { GeneratedFile } from './generated-file';\nimport { ResponseMessage } from './response-message';\nimport { DynamicToolCall, StaticToolCall, TypedToolCall } from './tool-call';\nimport {\n  DynamicToolResult,\n  StaticToolResult,\n  TypedToolResult,\n} from './tool-result';\nimport { ToolSet } from './tool-set';\n\n/**\n * The result of a single step in the generation process.\n */\nexport type StepResult<TOOLS extends ToolSet> = {\n  /**\nThe content that was generated in the last step.\n   */\n  readonly content: Array<ContentPart<TOOLS>>;\n\n  /**\nThe generated text.\n*/\n  readonly text: string;\n\n  /**\nThe reasoning that was generated during the generation.\n*/\n  readonly reasoning: Array<ReasoningPart>;\n\n  /**\nThe reasoning text that was generated during the generation.\n*/\n  readonly reasoningText: string | undefined;\n\n  /**\nThe files that were generated during the generation.\n*/\n  readonly files: Array<GeneratedFile>;\n\n  /**\nThe sources that were used to generate the text.\n*/\n  readonly sources: Array<Source>;\n\n  /**\nThe tool calls that were made during the generation.\n*/\n  readonly toolCalls: Array<TypedToolCall<TOOLS>>;\n\n  /**\nThe static tool calls that were made in the last step.\n*/\n  readonly staticToolCalls: Array<StaticToolCall<TOOLS>>;\n\n  /**\nThe dynamic tool calls that were made in the last step.\n*/\n  readonly dynamicToolCalls: Array<DynamicToolCall>;\n\n  /**\nThe results of the tool calls.\n*/\n  readonly toolResults: Array<TypedToolResult<TOOLS>>;\n\n  /**\nThe static tool results that were made in the last step.\n*/\n  readonly staticToolResults: Array<StaticToolResult<TOOLS>>;\n\n  /**\nThe dynamic tool results that were made in the last step.\n*/\n  readonly dynamicToolResults: Array<DynamicToolResult>;\n\n  /**\nThe reason why the generation finished.\n*/\n  readonly finishReason: FinishReason;\n\n  /**\nThe token usage of the generated text.\n*/\n  readonly usage: LanguageModelUsage;\n\n  /**\nWarnings from the model provider (e.g. unsupported settings).\n*/\n  readonly warnings: CallWarning[] | undefined;\n\n  /**\nAdditional request information.\n   */\n  readonly request: LanguageModelRequestMetadata;\n\n  /**\nAdditional response information.\n*/\n  readonly response: LanguageModelResponseMetadata & {\n    /**\nThe response messages that were generated during the call.\nResponse messages can be either assistant messages or tool messages.\nThey contain a generated id.\n*/\n    readonly messages: Array<ResponseMessage>;\n\n    /**\nResponse body (available only for providers that use HTTP requests).\n     */\n    body?: unknown;\n  };\n\n  /**\nAdditional provider-specific metadata. They are passed through\nfrom the provider to the AI SDK and enable provider-specific\nresults that can be fully encapsulated in the provider.\n   */\n  readonly providerMetadata: ProviderMetadata | undefined;\n};\n\nexport class DefaultStepResult<TOOLS extends ToolSet>\n  implements StepResult<TOOLS>\n{\n  readonly content: StepResult<TOOLS>['content'];\n  readonly finishReason: StepResult<TOOLS>['finishReason'];\n  readonly usage: StepResult<TOOLS>['usage'];\n  readonly warnings: StepResult<TOOLS>['warnings'];\n  readonly request: StepResult<TOOLS>['request'];\n  readonly response: StepResult<TOOLS>['response'];\n  readonly providerMetadata: StepResult<TOOLS>['providerMetadata'];\n\n  constructor({\n    content,\n    finishReason,\n    usage,\n    warnings,\n    request,\n    response,\n    providerMetadata,\n  }: {\n    content: StepResult<TOOLS>['content'];\n    finishReason: StepResult<TOOLS>['finishReason'];\n    usage: StepResult<TOOLS>['usage'];\n    warnings: StepResult<TOOLS>['warnings'];\n    request: StepResult<TOOLS>['request'];\n    response: StepResult<TOOLS>['response'];\n    providerMetadata: StepResult<TOOLS>['providerMetadata'];\n  }) {\n    this.content = content;\n    this.finishReason = finishReason;\n    this.usage = usage;\n    this.warnings = warnings;\n    this.request = request;\n    this.response = response;\n    this.providerMetadata = providerMetadata;\n  }\n\n  get text() {\n    return this.content\n      .filter(part => part.type === 'text')\n      .map(part => part.text)\n      .join('');\n  }\n\n  get reasoning() {\n    return this.content.filter(part => part.type === 'reasoning');\n  }\n\n  get reasoningText() {\n    return this.reasoning.length === 0\n      ? undefined\n      : this.reasoning.map(part => part.text).join('');\n  }\n\n  get files() {\n    return this.content\n      .filter(part => part.type === 'file')\n      .map(part => part.file);\n  }\n\n  get sources() {\n    return this.content.filter(part => part.type === 'source');\n  }\n\n  get toolCalls() {\n    return this.content.filter(part => part.type === 'tool-call');\n  }\n\n  get staticToolCalls() {\n    return this.toolCalls.filter(\n      (toolCall): toolCall is StaticToolCall<TOOLS> =>\n        toolCall.dynamic === false,\n    );\n  }\n\n  get dynamicToolCalls() {\n    return this.toolCalls.filter(\n      (toolCall): toolCall is DynamicToolCall => toolCall.dynamic === true,\n    );\n  }\n\n  get toolResults() {\n    return this.content.filter(part => part.type === 'tool-result');\n  }\n\n  get staticToolResults() {\n    return this.toolResults.filter(\n      (toolResult): toolResult is StaticToolResult<TOOLS> =>\n        toolResult.dynamic === false,\n    );\n  }\n\n  get dynamicToolResults() {\n    return this.toolResults.filter(\n      (toolResult): toolResult is DynamicToolResult =>\n        toolResult.dynamic === true,\n    );\n  }\n}\n", "import { StepResult } from './step-result';\nimport { ToolSet } from './tool-set';\n\nexport type StopCondition<TOOLS extends ToolSet> = (options: {\n  steps: Array<StepResult<TOOLS>>;\n}) => PromiseLike<boolean> | boolean;\n\nexport function stepCountIs(stepCount: number): StopCondition<any> {\n  return ({ steps }) => steps.length === stepCount;\n}\n\nexport function hasToolCall(toolName: string): StopCondition<any> {\n  return ({ steps }) =>\n    steps[steps.length - 1]?.toolCalls?.some(\n      toolCall => toolCall.toolName === toolName,\n    ) ?? false;\n}\n\nexport async function isStopConditionMet<TOOLS extends ToolSet>({\n  stopConditions,\n  steps,\n}: {\n  stopConditions: Array<StopCondition<TOOLS>>;\n  steps: Array<StepResult<TOOLS>>;\n}): Promise<boolean> {\n  return (\n    await Promise.all(stopConditions.map(condition => condition({ steps })))\n  ).some(result => result);\n}\n", "import {\n  getErrorMessage,\n  JSONValue,\n  LanguageModelV2ToolResultOutput,\n} from '@ai-sdk/provider';\nimport { Tool } from '@ai-sdk/provider-utils';\n\nexport function createToolModelOutput({\n  output,\n  tool,\n  errorMode,\n}: {\n  output: unknown;\n  tool: Tool | undefined;\n  errorMode: 'none' | 'text' | 'json';\n}): LanguageModelV2ToolResultOutput {\n  if (errorMode === 'text') {\n    return { type: 'error-text', value: getErrorMessage(output) };\n  } else if (errorMode === 'json') {\n    return { type: 'error-json', value: toJSONValue(output) };\n  }\n\n  if (tool?.toModelOutput) {\n    return tool.toModelOutput(output);\n  }\n\n  return typeof output === 'string'\n    ? { type: 'text', value: output }\n    : { type: 'json', value: toJSONValue(output) };\n}\n\nfunction toJSONValue(value: unknown): JSONValue {\n  return value === undefined ? null : (value as JSONValue);\n}\n", "import {\n  AssistantContent,\n  AssistantModelMessage,\n  ToolContent,\n  ToolModelMessage,\n} from '../prompt';\nimport { createToolModelOutput } from '../prompt/create-tool-model-output';\nimport { ContentPart } from './content-part';\nimport { ToolSet } from './tool-set';\n\n/**\nConverts the result of a `generateText` or `streamText` call to a list of response messages.\n */\nexport function toResponseMessages<TOOLS extends ToolSet>({\n  content: inputContent,\n  tools,\n}: {\n  content: Array<ContentPart<TOOLS>>;\n  tools: TOOLS | undefined;\n}): Array<AssistantModelMessage | ToolModelMessage> {\n  const responseMessages: Array<AssistantModelMessage | ToolModelMessage> = [];\n\n  const content: AssistantContent = inputContent\n    .filter(part => part.type !== 'source')\n    .filter(\n      part =>\n        (part.type !== 'tool-result' || part.providerExecuted) &&\n        (part.type !== 'tool-error' || part.providerExecuted),\n    )\n    .filter(part => part.type !== 'text' || part.text.length > 0)\n    .map(part => {\n      switch (part.type) {\n        case 'text':\n          return {\n            type: 'text',\n            text: part.text,\n            providerOptions: part.providerMetadata,\n          };\n        case 'reasoning':\n          return {\n            type: 'reasoning',\n            text: part.text,\n            providerOptions: part.providerMetadata,\n          };\n        case 'file':\n          return {\n            type: 'file',\n            data: part.file.base64,\n            mediaType: part.file.mediaType,\n            providerOptions: part.providerMetadata,\n          };\n        case 'tool-call':\n          return {\n            type: 'tool-call',\n            toolCallId: part.toolCallId,\n            toolName: part.toolName,\n            input: part.input,\n            providerExecuted: part.providerExecuted,\n            providerOptions: part.providerMetadata,\n          };\n        case 'tool-result':\n          return {\n            type: 'tool-result',\n            toolCallId: part.toolCallId,\n            toolName: part.toolName,\n            output: createToolModelOutput({\n              tool: tools?.[part.toolName],\n              output: part.output,\n              errorMode: 'none',\n            }),\n            providerExecuted: true,\n            providerOptions: part.providerMetadata,\n          };\n        case 'tool-error':\n          return {\n            type: 'tool-result',\n            toolCallId: part.toolCallId,\n            toolName: part.toolName,\n            output: createToolModelOutput({\n              tool: tools?.[part.toolName],\n              output: part.error,\n              errorMode: 'json',\n            }),\n            providerOptions: part.providerMetadata,\n          };\n      }\n    });\n\n  if (content.length > 0) {\n    responseMessages.push({\n      role: 'assistant',\n      content,\n    });\n  }\n\n  const toolResultContent: ToolContent = inputContent\n    .filter(part => part.type === 'tool-result' || part.type === 'tool-error')\n    .filter(part => !part.providerExecuted)\n    .map(toolResult => ({\n      type: 'tool-result',\n      toolCallId: toolResult.toolCallId,\n      toolName: toolResult.toolName,\n      output: createToolModelOutput({\n        tool: tools?.[toolResult.toolName],\n        output:\n          toolResult.type === 'tool-result'\n            ? toolResult.output\n            : toolResult.error,\n        errorMode: toolResult.type === 'tool-error' ? 'text' : 'none',\n      }),\n    }));\n\n  if (toolResultContent.length > 0) {\n    responseMessages.push({\n      role: 'tool',\n      content: toolResultContent,\n    });\n  }\n\n  return responseMessages;\n}\n", "import {\n  getErrorMessage,\n  LanguageModelV2,\n  LanguageModelV2CallWarning,\n} from '@ai-sdk/provider';\nimport {\n  createIdGenerator,\n  IdGenerator,\n  isAbortError,\n  ProviderOptions,\n} from '@ai-sdk/provider-utils';\nimport { Span } from '@opentelemetry/api';\nimport { ServerResponse } from 'node:http';\nimport { NoOutputGeneratedError } from '../error';\nimport { NoOutputSpecifiedError } from '../error/no-output-specified-error';\nimport { resolveLanguageModel } from '../model/resolve-model';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { prepareToolsAndToolChoice } from '../prompt/prepare-tools-and-tool-choice';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { wrapGatewayError } from '../prompt/wrap-gateway-error';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { stringifyForTelemetry } from '../telemetry/stringify-for-telemetry';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { createTextStreamResponse } from '../text-stream/create-text-stream-response';\nimport { pipeTextStreamToResponse } from '../text-stream/pipe-text-stream-to-response';\nimport { LanguageModelRequestMetadata } from '../types';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModel,\n  ToolChoice,\n} from '../types/language-model';\nimport { ProviderMetadata } from '../types/provider-metadata';\nimport { addLanguageModelUsage, LanguageModelUsage } from '../types/usage';\nimport { UIMessage } from '../ui';\nimport { createUIMessageStreamResponse } from '../ui-message-stream/create-ui-message-stream-response';\nimport { getResponseUIMessageId } from '../ui-message-stream/get-response-ui-message-id';\nimport { handleUIMessageStreamFinish } from '../ui-message-stream/handle-ui-message-stream-finish';\nimport { pipeUIMessageStreamToResponse } from '../ui-message-stream/pipe-ui-message-stream-to-response';\nimport {\n  InferUIMessageChunk,\n  UIMessageChunk,\n} from '../ui-message-stream/ui-message-chunks';\nimport { UIMessageStreamResponseInit } from '../ui-message-stream/ui-message-stream-response-init';\nimport { InferUIMessageData, InferUIMessageMetadata } from '../ui/ui-messages';\nimport { asArray } from '../util/as-array';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { consumeStream } from '../util/consume-stream';\nimport { createStitchableStream } from '../util/create-stitchable-stream';\nimport { DelayedPromise } from '../util/delayed-promise';\nimport { now as originalNow } from '../util/now';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { ContentPart } from './content-part';\nimport { Output } from './output';\nimport { PrepareStepFunction } from './prepare-step';\nimport { ResponseMessage } from './response-message';\nimport {\n  runToolsTransformation,\n  SingleRequestTextStreamPart,\n} from './run-tools-transformation';\nimport { DefaultStepResult, StepResult } from './step-result';\nimport {\n  isStopConditionMet,\n  stepCountIs,\n  StopCondition,\n} from './stop-condition';\nimport {\n  ConsumeStreamOptions,\n  StreamTextResult,\n  TextStreamPart,\n  UIMessageStreamOptions,\n} from './stream-text-result';\nimport { toResponseMessages } from './to-response-messages';\nimport { TypedToolCall } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair-function';\nimport { ToolOutput } from './tool-output';\nimport { ToolSet } from './tool-set';\n\nconst originalGenerateId = createIdGenerator({\n  prefix: 'aitxt',\n  size: 24,\n});\n\n/**\nA transformation that is applied to the stream.\n\n@param stopStream - A function that stops the source stream.\n@param tools - The tools that are accessible to and can be called by the model. The model needs to support calling tools.\n */\nexport type StreamTextTransform<TOOLS extends ToolSet> = (options: {\n  tools: TOOLS; // for type inference\n  stopStream: () => void;\n}) => TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>>;\n\n/**\nCallback that is set using the `onError` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnErrorCallback = (event: {\n  error: unknown;\n}) => PromiseLike<void> | void;\n\n/**\nCallback that is set using the `onStepFinish` option.\n\n@param stepResult - The result of the step.\n */\nexport type StreamTextOnStepFinishCallback<TOOLS extends ToolSet> = (\n  stepResult: StepResult<TOOLS>,\n) => PromiseLike<void> | void;\n\n/**\nCallback that is set using the `onChunk` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnChunkCallback<TOOLS extends ToolSet> = (event: {\n  chunk: Extract<\n    TextStreamPart<TOOLS>,\n    {\n      type:\n        | 'text-delta'\n        | 'reasoning-delta'\n        | 'source'\n        | 'tool-call'\n        | 'tool-input-start'\n        | 'tool-input-delta'\n        | 'tool-result'\n        | 'raw';\n    }\n  >;\n}) => PromiseLike<void> | void;\n\n/**\nCallback that is set using the `onFinish` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnFinishCallback<TOOLS extends ToolSet> = (\n  event: StepResult<TOOLS> & {\n    /**\nDetails for all steps.\n   */\n    readonly steps: StepResult<TOOLS>[];\n\n    /**\nTotal usage for all steps. This is the sum of the usage of all steps.\n     */\n    readonly totalUsage: LanguageModelUsage;\n  },\n) => PromiseLike<void> | void;\n\n/**\nCallback that is set using the `onAbort` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamTextOnAbortCallback<TOOLS extends ToolSet> = (event: {\n  /**\nDetails for all previously finished steps.\n   */\n  readonly steps: StepResult<TOOLS>[];\n}) => PromiseLike<void> | void;\n\n/**\nGenerate a text and call tools for a given prompt using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateText` instead.\n\n@param model - The language model to use.\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxOutputTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param maxSteps - Maximum number of sequential LLM calls (steps), e.g. when you use tool calls.\n\n@param onChunk - Callback that is called for each chunk of the stream. The stream processing will pause until the callback promise is resolved.\n@param onError - Callback that is called when an error occurs during streaming. You can use it to log errors.\n@param onStepFinish - Callback that is called when each step (LLM call) is finished, including intermediate steps.\n@param onFinish - Callback that is called when the LLM response and all request tool executions\n(for tools that have an `execute` function) are finished.\n\n@return\nA result object for accessing different stream types and additional information.\n */\nexport function streamText<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  PARTIAL_OUTPUT = never,\n>({\n  model,\n  tools,\n  toolChoice,\n  system,\n  prompt,\n  messages,\n  maxRetries,\n  abortSignal,\n  headers,\n  stopWhen = stepCountIs(1),\n  experimental_output: output,\n  experimental_telemetry: telemetry,\n  prepareStep,\n  providerOptions,\n  experimental_activeTools,\n  activeTools = experimental_activeTools,\n  experimental_repairToolCall: repairToolCall,\n  experimental_transform: transform,\n  includeRawChunks = false,\n  onChunk,\n  onError = ({ error }) => {\n    console.error(error);\n  },\n  onFinish,\n  onAbort,\n  onStepFinish,\n  experimental_context,\n  _internal: {\n    now = originalNow,\n    generateId = originalGenerateId,\n    currentDate = () => new Date(),\n  } = {},\n  ...settings\n}: CallSettings &\n  Prompt & {\n    /**\nThe language model to use.\n     */\n    model: LanguageModel;\n\n    /**\nThe tools that the model can call. The model needs to support calling tools.\n    */\n    tools?: TOOLS;\n\n    /**\nThe tool choice strategy. Default: 'auto'.\n     */\n    toolChoice?: ToolChoice<TOOLS>;\n\n    /**\nCondition for stopping the generation when there are tool results in the last step.\nWhen the condition is an array, any of the conditions can be met to stop the generation.\n\n@default stepCountIs(1)\n     */\n    stopWhen?:\n      | StopCondition<NoInfer<TOOLS>>\n      | Array<StopCondition<NoInfer<TOOLS>>>;\n\n    /**\nOptional telemetry configuration (experimental).\n     */\n    experimental_telemetry?: TelemetrySettings;\n\n    /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n    providerOptions?: ProviderOptions;\n\n    /**\n     * @deprecated Use `activeTools` instead.\n     */\n    experimental_activeTools?: Array<keyof NoInfer<TOOLS>>;\n\n    /**\n   Limits the tools that are available for the model to call without\n   changing the tool call and result types in the result.\n        */\n    activeTools?: Array<keyof NoInfer<TOOLS>>;\n\n    /**\nOptional specification for parsing structured outputs from the LLM response.\n     */\n    experimental_output?: Output<OUTPUT, PARTIAL_OUTPUT>;\n\n    /**\nOptional function that you can use to provide different settings for a step.\n\n@param options - The options for the step.\n@param options.steps - The steps that have been executed so far.\n@param options.stepNumber - The number of the step that is being executed.\n@param options.model - The model that is being used.\n\n@returns An object that contains the settings for the step.\nIf you return undefined (or for undefined settings), the settings from the outer level will be used.\n    */\n    prepareStep?: PrepareStepFunction<NoInfer<TOOLS>>;\n\n    /**\nA function that attempts to repair a tool call that failed to parse.\n     */\n    experimental_repairToolCall?: ToolCallRepairFunction<TOOLS>;\n\n    /**\nOptional stream transformations.\nThey are applied in the order they are provided.\nThe stream transformations must maintain the stream structure for streamText to work correctly.\n     */\n    experimental_transform?:\n      | StreamTextTransform<TOOLS>\n      | Array<StreamTextTransform<TOOLS>>;\n\n    /**\nWhether to include raw chunks from the provider in the stream.\nWhen enabled, you will receive raw chunks with type 'raw' that contain the unprocessed data from the provider.\nThis allows access to cutting-edge provider features not yet wrapped by the AI SDK.\nDefaults to false.\n     */\n    includeRawChunks?: boolean;\n\n    /**\nCallback that is called for each chunk of the stream.\nThe stream processing will pause until the callback promise is resolved.\n     */\n    onChunk?: StreamTextOnChunkCallback<TOOLS>;\n\n    /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n    onError?: StreamTextOnErrorCallback;\n\n    /**\nCallback that is called when the LLM response and all request tool executions\n(for tools that have an `execute` function) are finished.\n\nThe usage is the combined usage of all steps.\n     */\n    onFinish?: StreamTextOnFinishCallback<TOOLS>;\n\n    onAbort?: StreamTextOnAbortCallback<TOOLS>;\n\n    /**\nCallback that is called when each step (LLM call) is finished, including intermediate steps.\n    */\n    onStepFinish?: StreamTextOnStepFinishCallback<TOOLS>;\n\n    /**\n     * Context that is passed into tool execution.\n     *\n     * Experimental (can break in patch releases).\n     *\n     * @default undefined\n     */\n    experimental_context?: unknown;\n\n    /**\nInternal. For test use only. May change without notice.\n     */\n    _internal?: {\n      now?: () => number;\n      generateId?: IdGenerator;\n      currentDate?: () => Date;\n    };\n  }): StreamTextResult<TOOLS, PARTIAL_OUTPUT> {\n  return new DefaultStreamTextResult<TOOLS, OUTPUT, PARTIAL_OUTPUT>({\n    model: resolveLanguageModel(model),\n    telemetry,\n    headers,\n    settings,\n    maxRetries,\n    abortSignal,\n    system,\n    prompt,\n    messages,\n    tools,\n    toolChoice,\n    transforms: asArray(transform),\n    activeTools,\n    repairToolCall,\n    stopConditions: asArray(stopWhen),\n    output,\n    providerOptions,\n    prepareStep,\n    includeRawChunks,\n    onChunk,\n    onError,\n    onFinish,\n    onAbort,\n    onStepFinish,\n    now,\n    currentDate,\n    generateId,\n    experimental_context,\n  });\n}\n\ntype EnrichedStreamPart<TOOLS extends ToolSet, PARTIAL_OUTPUT> = {\n  part: TextStreamPart<TOOLS>;\n  partialOutput: PARTIAL_OUTPUT | undefined;\n};\n\nfunction createOutputTransformStream<\n  TOOLS extends ToolSet,\n  OUTPUT,\n  PARTIAL_OUTPUT,\n>(\n  output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined,\n): TransformStream<\n  TextStreamPart<TOOLS>,\n  EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n> {\n  if (!output) {\n    return new TransformStream<\n      TextStreamPart<TOOLS>,\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >({\n      transform(chunk, controller) {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n      },\n    });\n  }\n\n  let firstTextChunkId: string | undefined = undefined;\n  let text = '';\n  let textChunk = '';\n  let lastPublishedJson = '';\n\n  function publishTextChunk({\n    controller,\n    partialOutput = undefined,\n  }: {\n    controller: TransformStreamDefaultController<\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >;\n    partialOutput?: PARTIAL_OUTPUT;\n  }) {\n    controller.enqueue({\n      part: {\n        type: 'text-delta',\n        id: firstTextChunkId!,\n        text: textChunk,\n      },\n      partialOutput,\n    });\n    textChunk = '';\n  }\n\n  return new TransformStream<\n    TextStreamPart<TOOLS>,\n    EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n  >({\n    async transform(chunk, controller) {\n      // ensure that we publish the last text chunk before the step finish:\n      if (chunk.type === 'finish-step' && textChunk.length > 0) {\n        publishTextChunk({ controller });\n      }\n\n      if (\n        chunk.type !== 'text-delta' &&\n        chunk.type !== 'text-start' &&\n        chunk.type !== 'text-end'\n      ) {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n        return;\n      }\n\n      // we have to pick a text chunk which contains the json text\n      // since we are streaming, we have to pick the first text chunk\n      if (firstTextChunkId == null) {\n        firstTextChunkId = chunk.id;\n      } else if (chunk.id !== firstTextChunkId) {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n        return;\n      }\n\n      if (chunk.type === 'text-start') {\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n        return;\n      }\n\n      if (chunk.type === 'text-end') {\n        if (textChunk.length > 0) {\n          publishTextChunk({ controller });\n        }\n        controller.enqueue({ part: chunk, partialOutput: undefined });\n        return;\n      }\n\n      text += chunk.text;\n      textChunk += chunk.text;\n\n      // only publish if partial json can be parsed:\n      const result = await output.parsePartial({ text });\n      if (result != null) {\n        // only send new json if it has changed:\n        const currentJson = JSON.stringify(result.partial);\n        if (currentJson !== lastPublishedJson) {\n          publishTextChunk({ controller, partialOutput: result.partial });\n          lastPublishedJson = currentJson;\n        }\n      }\n    },\n  });\n}\n\nclass DefaultStreamTextResult<TOOLS extends ToolSet, OUTPUT, PARTIAL_OUTPUT>\n  implements StreamTextResult<TOOLS, PARTIAL_OUTPUT>\n{\n  private readonly _totalUsage = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['usage']>\n  >();\n  private readonly _finishReason = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['finishReason']>\n  >();\n  private readonly _steps = new DelayedPromise<\n    Awaited<StreamTextResult<TOOLS, PARTIAL_OUTPUT>['steps']>\n  >();\n\n  private readonly addStream: (\n    stream: ReadableStream<TextStreamPart<TOOLS>>,\n  ) => void;\n\n  private readonly closeStream: () => void;\n\n  private baseStream: ReadableStream<EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>>;\n\n  private output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined;\n\n  private includeRawChunks: boolean;\n\n  private tools: TOOLS | undefined;\n\n  constructor({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries: maxRetriesArg,\n    abortSignal,\n    system,\n    prompt,\n    messages,\n    tools,\n    toolChoice,\n    transforms,\n    activeTools,\n    repairToolCall,\n    stopConditions,\n    output,\n    providerOptions,\n    prepareStep,\n    includeRawChunks,\n    now,\n    currentDate,\n    generateId,\n    onChunk,\n    onError,\n    onFinish,\n    onAbort,\n    onStepFinish,\n    experimental_context,\n  }: {\n    model: LanguageModelV2;\n    telemetry: TelemetrySettings | undefined;\n    headers: Record<string, string | undefined> | undefined;\n    settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n    maxRetries: number | undefined;\n    abortSignal: AbortSignal | undefined;\n    system: Prompt['system'];\n    prompt: Prompt['prompt'];\n    messages: Prompt['messages'];\n    tools: TOOLS | undefined;\n    toolChoice: ToolChoice<TOOLS> | undefined;\n    transforms: Array<StreamTextTransform<TOOLS>>;\n    activeTools: Array<keyof TOOLS> | undefined;\n    repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n    stopConditions: Array<StopCondition<NoInfer<TOOLS>>>;\n    output: Output<OUTPUT, PARTIAL_OUTPUT> | undefined;\n    providerOptions: ProviderOptions | undefined;\n    prepareStep: PrepareStepFunction<NoInfer<TOOLS>> | undefined;\n    includeRawChunks: boolean;\n    now: () => number;\n    currentDate: () => Date;\n    generateId: () => string;\n    experimental_context: unknown;\n\n    // callbacks:\n    onChunk: undefined | StreamTextOnChunkCallback<TOOLS>;\n    onError: StreamTextOnErrorCallback;\n    onFinish: undefined | StreamTextOnFinishCallback<TOOLS>;\n    onAbort: undefined | StreamTextOnAbortCallback<TOOLS>;\n    onStepFinish: undefined | StreamTextOnStepFinishCallback<TOOLS>;\n  }) {\n    this.output = output;\n    this.includeRawChunks = includeRawChunks;\n    this.tools = tools;\n\n    // promise to ensure that the step has been fully processed by the event processor\n    // before a new step is started. This is required because the continuation condition\n    // needs the updated steps to determine if another step is needed.\n    let stepFinish!: DelayedPromise<void>;\n\n    let recordedContent: Array<ContentPart<TOOLS>> = [];\n    const recordedResponseMessages: Array<ResponseMessage> = [];\n    let recordedFinishReason: FinishReason | undefined = undefined;\n    let recordedTotalUsage: LanguageModelUsage | undefined = undefined;\n    let recordedRequest: LanguageModelRequestMetadata = {};\n    let recordedWarnings: Array<CallWarning> = [];\n    const recordedSteps: StepResult<TOOLS>[] = [];\n\n    let rootSpan!: Span;\n\n    let activeTextContent: Record<\n      string,\n      {\n        type: 'text';\n        text: string;\n        providerMetadata: ProviderMetadata | undefined;\n      }\n    > = {};\n\n    let activeReasoningContent: Record<\n      string,\n      {\n        type: 'reasoning';\n        text: string;\n        providerMetadata: ProviderMetadata | undefined;\n      }\n    > = {};\n\n    const eventProcessor = new TransformStream<\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n      EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>\n    >({\n      async transform(chunk, controller) {\n        controller.enqueue(chunk); // forward the chunk to the next stream\n\n        const { part } = chunk;\n\n        if (\n          part.type === 'text-delta' ||\n          part.type === 'reasoning-delta' ||\n          part.type === 'source' ||\n          part.type === 'tool-call' ||\n          part.type === 'tool-result' ||\n          part.type === 'tool-input-start' ||\n          part.type === 'tool-input-delta' ||\n          part.type === 'raw'\n        ) {\n          await onChunk?.({ chunk: part });\n        }\n\n        if (part.type === 'error') {\n          await onError({ error: wrapGatewayError(part.error) });\n        }\n\n        if (part.type === 'text-start') {\n          activeTextContent[part.id] = {\n            type: 'text',\n            text: '',\n            providerMetadata: part.providerMetadata,\n          };\n\n          recordedContent.push(activeTextContent[part.id]);\n        }\n\n        if (part.type === 'text-delta') {\n          const activeText = activeTextContent[part.id];\n\n          if (activeText == null) {\n            controller.enqueue({\n              part: {\n                type: 'error',\n                error: `text part ${part.id} not found`,\n              },\n              partialOutput: undefined,\n            });\n            return;\n          }\n\n          activeText.text += part.text;\n          activeText.providerMetadata =\n            part.providerMetadata ?? activeText.providerMetadata;\n        }\n\n        if (part.type === 'text-end') {\n          delete activeTextContent[part.id];\n        }\n\n        if (part.type === 'reasoning-start') {\n          activeReasoningContent[part.id] = {\n            type: 'reasoning',\n            text: '',\n            providerMetadata: part.providerMetadata,\n          };\n\n          recordedContent.push(activeReasoningContent[part.id]);\n        }\n\n        if (part.type === 'reasoning-delta') {\n          const activeReasoning = activeReasoningContent[part.id];\n\n          if (activeReasoning == null) {\n            controller.enqueue({\n              part: {\n                type: 'error',\n                error: `reasoning part ${part.id} not found`,\n              },\n              partialOutput: undefined,\n            });\n            return;\n          }\n\n          activeReasoning.text += part.text;\n          activeReasoning.providerMetadata =\n            part.providerMetadata ?? activeReasoning.providerMetadata;\n        }\n\n        if (part.type === 'reasoning-end') {\n          const activeReasoning = activeReasoningContent[part.id];\n\n          if (activeReasoning == null) {\n            controller.enqueue({\n              part: {\n                type: 'error',\n                error: `reasoning part ${part.id} not found`,\n              },\n              partialOutput: undefined,\n            });\n            return;\n          }\n\n          activeReasoning.providerMetadata =\n            part.providerMetadata ?? activeReasoning.providerMetadata;\n\n          delete activeReasoningContent[part.id];\n        }\n\n        if (part.type === 'file') {\n          recordedContent.push({ type: 'file', file: part.file });\n        }\n\n        if (part.type === 'source') {\n          recordedContent.push(part);\n        }\n\n        if (part.type === 'tool-call') {\n          recordedContent.push(part);\n        }\n\n        if (part.type === 'tool-result' && !part.preliminary) {\n          recordedContent.push(part);\n        }\n\n        if (part.type === 'tool-error') {\n          recordedContent.push(part);\n        }\n\n        if (part.type === 'start-step') {\n          recordedRequest = part.request;\n          recordedWarnings = part.warnings;\n        }\n\n        if (part.type === 'finish-step') {\n          const stepMessages = toResponseMessages({\n            content: recordedContent,\n            tools,\n          });\n\n          // Add step information (after response messages are updated):\n          const currentStepResult: StepResult<TOOLS> = new DefaultStepResult({\n            content: recordedContent,\n            finishReason: part.finishReason,\n            usage: part.usage,\n            warnings: recordedWarnings,\n            request: recordedRequest,\n            response: {\n              ...part.response,\n              messages: [...recordedResponseMessages, ...stepMessages],\n            },\n            providerMetadata: part.providerMetadata,\n          });\n\n          await onStepFinish?.(currentStepResult);\n\n          recordedSteps.push(currentStepResult);\n\n          recordedContent = [];\n          activeReasoningContent = {};\n          activeTextContent = {};\n\n          recordedResponseMessages.push(...stepMessages);\n\n          // resolve the promise to signal that the step has been fully processed\n          // by the event processor:\n          stepFinish.resolve();\n        }\n\n        if (part.type === 'finish') {\n          recordedTotalUsage = part.totalUsage;\n          recordedFinishReason = part.finishReason;\n        }\n      },\n\n      async flush(controller) {\n        try {\n          if (recordedSteps.length === 0) {\n            const error = new NoOutputGeneratedError({\n              message: 'No output generated. Check the stream for errors.',\n            });\n\n            self._finishReason.reject(error);\n            self._totalUsage.reject(error);\n            self._steps.reject(error);\n\n            return; // no steps recorded (e.g. in error scenario)\n          }\n\n          // derived:\n          const finishReason = recordedFinishReason ?? 'unknown';\n          const totalUsage = recordedTotalUsage ?? {\n            inputTokens: undefined,\n            outputTokens: undefined,\n            totalTokens: undefined,\n          };\n\n          // from finish:\n          self._finishReason.resolve(finishReason);\n          self._totalUsage.resolve(totalUsage);\n\n          // aggregate results:\n          self._steps.resolve(recordedSteps);\n\n          // call onFinish callback:\n          const finalStep = recordedSteps[recordedSteps.length - 1];\n          await onFinish?.({\n            finishReason,\n            totalUsage,\n            usage: finalStep.usage,\n            content: finalStep.content,\n            text: finalStep.text,\n            reasoningText: finalStep.reasoningText,\n            reasoning: finalStep.reasoning,\n            files: finalStep.files,\n            sources: finalStep.sources,\n            toolCalls: finalStep.toolCalls,\n            staticToolCalls: finalStep.staticToolCalls,\n            dynamicToolCalls: finalStep.dynamicToolCalls,\n            toolResults: finalStep.toolResults,\n            staticToolResults: finalStep.staticToolResults,\n            dynamicToolResults: finalStep.dynamicToolResults,\n            request: finalStep.request,\n            response: finalStep.response,\n            warnings: finalStep.warnings,\n            providerMetadata: finalStep.providerMetadata,\n            steps: recordedSteps,\n          });\n\n          // Add response information to the root span:\n          rootSpan.setAttributes(\n            selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                'ai.response.finishReason': finishReason,\n                'ai.response.text': { output: () => finalStep.text },\n                'ai.response.toolCalls': {\n                  output: () =>\n                    finalStep.toolCalls?.length\n                      ? JSON.stringify(finalStep.toolCalls)\n                      : undefined,\n                },\n                'ai.response.providerMetadata': JSON.stringify(\n                  finalStep.providerMetadata,\n                ),\n\n                'ai.usage.inputTokens': totalUsage.inputTokens,\n                'ai.usage.outputTokens': totalUsage.outputTokens,\n                'ai.usage.totalTokens': totalUsage.totalTokens,\n                'ai.usage.reasoningTokens': totalUsage.reasoningTokens,\n                'ai.usage.cachedInputTokens': totalUsage.cachedInputTokens,\n              },\n            }),\n          );\n        } catch (error) {\n          controller.error(error);\n        } finally {\n          rootSpan.end();\n        }\n      },\n    });\n\n    // initialize the stitchable stream and the transformed stream:\n    const stitchableStream = createStitchableStream<TextStreamPart<TOOLS>>();\n    this.addStream = stitchableStream.addStream;\n    this.closeStream = stitchableStream.close;\n\n    // resilient stream that handles abort signals and errors:\n    const reader = stitchableStream.stream.getReader();\n    let stream = new ReadableStream<TextStreamPart<TOOLS>>({\n      async start(controller) {\n        // send start event:\n        controller.enqueue({ type: 'start' });\n      },\n\n      async pull(controller) {\n        // abort handling:\n        function abort() {\n          onAbort?.({ steps: recordedSteps });\n          controller.enqueue({ type: 'abort' });\n          controller.close();\n        }\n\n        try {\n          const { done, value } = await reader.read();\n\n          if (done) {\n            controller.close();\n            return;\n          }\n\n          if (abortSignal?.aborted) {\n            abort();\n            return;\n          }\n\n          controller.enqueue(value);\n        } catch (error) {\n          if (isAbortError(error) && abortSignal?.aborted) {\n            abort();\n          } else {\n            controller.error(error);\n          }\n        }\n      },\n\n      cancel(reason) {\n        return stitchableStream.stream.cancel(reason);\n      },\n    });\n\n    // transform the stream before output parsing\n    // to enable replacement of stream segments:\n    for (const transform of transforms) {\n      stream = stream.pipeThrough(\n        transform({\n          tools: tools as TOOLS,\n          stopStream() {\n            stitchableStream.terminate();\n          },\n        }),\n      );\n    }\n\n    this.baseStream = stream\n      .pipeThrough(createOutputTransformStream(output))\n      .pipeThrough(eventProcessor);\n\n    const { maxRetries, retry } = prepareRetries({\n      maxRetries: maxRetriesArg,\n      abortSignal,\n    });\n\n    const tracer = getTracer(telemetry);\n\n    const callSettings = prepareCallSettings(settings);\n\n    const baseTelemetryAttributes = getBaseTelemetryAttributes({\n      model,\n      telemetry,\n      headers,\n      settings: { ...callSettings, maxRetries },\n    });\n\n    const self = this;\n\n    recordSpan({\n      name: 'ai.streamText',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({ operationId: 'ai.streamText', telemetry }),\n          ...baseTelemetryAttributes,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n        },\n      }),\n      tracer,\n      endWhenDone: false,\n      fn: async rootSpanArg => {\n        rootSpan = rootSpanArg;\n\n        async function streamStep({\n          currentStep,\n          responseMessages,\n          usage,\n        }: {\n          currentStep: number;\n          responseMessages: Array<ResponseMessage>;\n          usage: LanguageModelUsage;\n        }) {\n          const includeRawChunks = self.includeRawChunks;\n\n          stepFinish = new DelayedPromise<void>();\n\n          const initialPrompt = await standardizePrompt({\n            system,\n            prompt,\n            messages,\n          } as Prompt);\n\n          const stepInputMessages = [\n            ...initialPrompt.messages,\n            ...responseMessages,\n          ];\n\n          const prepareStepResult = await prepareStep?.({\n            model,\n            steps: recordedSteps,\n            stepNumber: recordedSteps.length,\n            messages: stepInputMessages,\n          });\n\n          const promptMessages = await convertToLanguageModelPrompt({\n            prompt: {\n              system: prepareStepResult?.system ?? initialPrompt.system,\n              messages: prepareStepResult?.messages ?? stepInputMessages,\n            },\n            supportedUrls: await model.supportedUrls,\n          });\n\n          const stepModel = resolveLanguageModel(\n            prepareStepResult?.model ?? model,\n          );\n\n          const { toolChoice: stepToolChoice, tools: stepTools } =\n            prepareToolsAndToolChoice({\n              tools,\n              toolChoice: prepareStepResult?.toolChoice ?? toolChoice,\n              activeTools: prepareStepResult?.activeTools ?? activeTools,\n            });\n\n          const {\n            result: { stream, response, request },\n            doStreamSpan,\n            startTimestampMs,\n          } = await retry(() =>\n            recordSpan({\n              name: 'ai.streamText.doStream',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.streamText.doStream',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  // model:\n                  'ai.model.provider': stepModel.provider,\n                  'ai.model.id': stepModel.modelId,\n                  // prompt:\n                  'ai.prompt.messages': {\n                    input: () => stringifyForTelemetry(promptMessages),\n                  },\n                  'ai.prompt.tools': {\n                    // convert the language model level tools:\n                    input: () => stepTools?.map(tool => JSON.stringify(tool)),\n                  },\n                  'ai.prompt.toolChoice': {\n                    input: () =>\n                      stepToolChoice != null\n                        ? JSON.stringify(stepToolChoice)\n                        : undefined,\n                  },\n\n                  // standardized gen-ai llm span attributes:\n                  'gen_ai.system': stepModel.provider,\n                  'gen_ai.request.model': stepModel.modelId,\n                  'gen_ai.request.frequency_penalty':\n                    callSettings.frequencyPenalty,\n                  'gen_ai.request.max_tokens': callSettings.maxOutputTokens,\n                  'gen_ai.request.presence_penalty':\n                    callSettings.presencePenalty,\n                  'gen_ai.request.stop_sequences': callSettings.stopSequences,\n                  'gen_ai.request.temperature': callSettings.temperature,\n                  'gen_ai.request.top_k': callSettings.topK,\n                  'gen_ai.request.top_p': callSettings.topP,\n                },\n              }),\n              tracer,\n              endWhenDone: false,\n              fn: async doStreamSpan => {\n                return {\n                  startTimestampMs: now(), // get before the call\n                  doStreamSpan,\n                  result: await stepModel.doStream({\n                    ...callSettings,\n                    tools: stepTools,\n                    toolChoice: stepToolChoice,\n                    responseFormat: output?.responseFormat,\n                    prompt: promptMessages,\n                    providerOptions,\n                    abortSignal,\n                    headers,\n                    includeRawChunks,\n                  }),\n                };\n              },\n            }),\n          );\n\n          const streamWithToolResults = runToolsTransformation({\n            tools,\n            generatorStream: stream,\n            tracer,\n            telemetry,\n            system,\n            messages: stepInputMessages,\n            repairToolCall,\n            abortSignal,\n            experimental_context,\n          });\n\n          const stepRequest = request ?? {};\n          const stepToolCalls: TypedToolCall<TOOLS>[] = [];\n          const stepToolOutputs: ToolOutput<TOOLS>[] = [];\n          let warnings: LanguageModelV2CallWarning[] | undefined;\n\n          const activeToolCallToolNames: Record<string, string> = {};\n\n          let stepFinishReason: FinishReason = 'unknown';\n          let stepUsage: LanguageModelUsage = {\n            inputTokens: undefined,\n            outputTokens: undefined,\n            totalTokens: undefined,\n          };\n          let stepProviderMetadata: ProviderMetadata | undefined;\n          let stepFirstChunk = true;\n          let stepResponse: { id: string; timestamp: Date; modelId: string } = {\n            id: generateId(),\n            timestamp: currentDate(),\n            modelId: model.modelId,\n          };\n\n          // raw text as it comes from the provider. recorded for telemetry.\n          let activeText = '';\n\n          self.addStream(\n            streamWithToolResults.pipeThrough(\n              new TransformStream<\n                SingleRequestTextStreamPart<TOOLS>,\n                TextStreamPart<TOOLS>\n              >({\n                async transform(chunk, controller): Promise<void> {\n                  if (chunk.type === 'stream-start') {\n                    warnings = chunk.warnings;\n                    return; // stream start chunks are sent immediately and do not count as first chunk\n                  }\n\n                  if (stepFirstChunk) {\n                    // Telemetry for first chunk:\n                    const msToFirstChunk = now() - startTimestampMs;\n\n                    stepFirstChunk = false;\n\n                    doStreamSpan.addEvent('ai.stream.firstChunk', {\n                      'ai.response.msToFirstChunk': msToFirstChunk,\n                    });\n\n                    doStreamSpan.setAttributes({\n                      'ai.response.msToFirstChunk': msToFirstChunk,\n                    });\n\n                    // Step start:\n                    controller.enqueue({\n                      type: 'start-step',\n                      request: stepRequest,\n                      warnings: warnings ?? [],\n                    });\n                  }\n\n                  const chunkType = chunk.type;\n                  switch (chunkType) {\n                    case 'text-start':\n                    case 'text-end': {\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'text-delta': {\n                      if (chunk.delta.length > 0) {\n                        controller.enqueue({\n                          type: 'text-delta',\n                          id: chunk.id,\n                          text: chunk.delta,\n                          providerMetadata: chunk.providerMetadata,\n                        });\n                        activeText += chunk.delta;\n                      }\n                      break;\n                    }\n\n                    case 'reasoning-start':\n                    case 'reasoning-end': {\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'reasoning-delta': {\n                      controller.enqueue({\n                        type: 'reasoning-delta',\n                        id: chunk.id,\n                        text: chunk.delta,\n                        providerMetadata: chunk.providerMetadata,\n                      });\n                      break;\n                    }\n\n                    case 'tool-call': {\n                      controller.enqueue(chunk);\n                      // store tool calls for onFinish callback and toolCalls promise:\n                      stepToolCalls.push(chunk);\n                      break;\n                    }\n\n                    case 'tool-result': {\n                      controller.enqueue(chunk);\n\n                      if (!chunk.preliminary) {\n                        stepToolOutputs.push(chunk);\n                      }\n\n                      break;\n                    }\n\n                    case 'tool-error': {\n                      controller.enqueue(chunk);\n                      stepToolOutputs.push(chunk);\n                      break;\n                    }\n\n                    case 'response-metadata': {\n                      stepResponse = {\n                        id: chunk.id ?? stepResponse.id,\n                        timestamp: chunk.timestamp ?? stepResponse.timestamp,\n                        modelId: chunk.modelId ?? stepResponse.modelId,\n                      };\n                      break;\n                    }\n\n                    case 'finish': {\n                      // Note: tool executions might not be finished yet when the finish event is emitted.\n                      // store usage and finish reason for promises and onFinish callback:\n                      stepUsage = chunk.usage;\n                      stepFinishReason = chunk.finishReason;\n                      stepProviderMetadata = chunk.providerMetadata;\n\n                      // Telemetry for finish event timing\n                      // (since tool executions can take longer and distort calculations)\n                      const msToFinish = now() - startTimestampMs;\n                      doStreamSpan.addEvent('ai.stream.finish');\n                      doStreamSpan.setAttributes({\n                        'ai.response.msToFinish': msToFinish,\n                        'ai.response.avgOutputTokensPerSecond':\n                          (1000 * (stepUsage.outputTokens ?? 0)) / msToFinish,\n                      });\n\n                      break;\n                    }\n\n                    case 'file': {\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'source': {\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'tool-input-start': {\n                      activeToolCallToolNames[chunk.id] = chunk.toolName;\n\n                      const tool = tools?.[chunk.toolName];\n                      if (tool?.onInputStart != null) {\n                        await tool.onInputStart({\n                          toolCallId: chunk.id,\n                          messages: stepInputMessages,\n                          abortSignal,\n                          experimental_context,\n                        });\n                      }\n\n                      controller.enqueue({\n                        ...chunk,\n                        dynamic: tool?.type === 'dynamic',\n                      });\n                      break;\n                    }\n\n                    case 'tool-input-end': {\n                      delete activeToolCallToolNames[chunk.id];\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'tool-input-delta': {\n                      const toolName = activeToolCallToolNames[chunk.id];\n                      const tool = tools?.[toolName];\n\n                      if (tool?.onInputDelta != null) {\n                        await tool.onInputDelta({\n                          inputTextDelta: chunk.delta,\n                          toolCallId: chunk.id,\n                          messages: stepInputMessages,\n                          abortSignal,\n                          experimental_context,\n                        });\n                      }\n\n                      controller.enqueue(chunk);\n                      break;\n                    }\n\n                    case 'error': {\n                      controller.enqueue(chunk);\n                      stepFinishReason = 'error';\n                      break;\n                    }\n\n                    case 'raw': {\n                      if (includeRawChunks) {\n                        controller.enqueue(chunk);\n                      }\n                      break;\n                    }\n\n                    default: {\n                      const exhaustiveCheck: never = chunkType;\n                      throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n                    }\n                  }\n                },\n\n                // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n                async flush(controller) {\n                  const stepToolCallsJson =\n                    stepToolCalls.length > 0\n                      ? JSON.stringify(stepToolCalls)\n                      : undefined;\n\n                  // record telemetry information first to ensure best effort timing\n                  try {\n                    doStreamSpan.setAttributes(\n                      selectTelemetryAttributes({\n                        telemetry,\n                        attributes: {\n                          'ai.response.finishReason': stepFinishReason,\n                          'ai.response.text': {\n                            output: () => activeText,\n                          },\n                          'ai.response.toolCalls': {\n                            output: () => stepToolCallsJson,\n                          },\n                          'ai.response.id': stepResponse.id,\n                          'ai.response.model': stepResponse.modelId,\n                          'ai.response.timestamp':\n                            stepResponse.timestamp.toISOString(),\n                          'ai.response.providerMetadata':\n                            JSON.stringify(stepProviderMetadata),\n\n                          'ai.usage.inputTokens': stepUsage.inputTokens,\n                          'ai.usage.outputTokens': stepUsage.outputTokens,\n                          'ai.usage.totalTokens': stepUsage.totalTokens,\n                          'ai.usage.reasoningTokens': stepUsage.reasoningTokens,\n                          'ai.usage.cachedInputTokens':\n                            stepUsage.cachedInputTokens,\n\n                          // standardized gen-ai llm span attributes:\n                          'gen_ai.response.finish_reasons': [stepFinishReason],\n                          'gen_ai.response.id': stepResponse.id,\n                          'gen_ai.response.model': stepResponse.modelId,\n                          'gen_ai.usage.input_tokens': stepUsage.inputTokens,\n                          'gen_ai.usage.output_tokens': stepUsage.outputTokens,\n                        },\n                      }),\n                    );\n                  } catch (error) {\n                    // ignore error setting telemetry attributes\n                  } finally {\n                    // finish doStreamSpan before other operations for correct timing:\n                    doStreamSpan.end();\n                  }\n\n                  controller.enqueue({\n                    type: 'finish-step',\n                    finishReason: stepFinishReason,\n                    usage: stepUsage,\n                    providerMetadata: stepProviderMetadata,\n                    response: {\n                      ...stepResponse,\n                      headers: response?.headers,\n                    },\n                  });\n\n                  const combinedUsage = addLanguageModelUsage(usage, stepUsage);\n\n                  // wait for the step to be fully processed by the event processor\n                  // to ensure that the recorded steps are complete:\n                  await stepFinish.promise;\n\n                  const clientToolCalls = stepToolCalls.filter(\n                    toolCall => toolCall.providerExecuted !== true,\n                  );\n                  const clientToolOutputs = stepToolOutputs.filter(\n                    toolOutput => toolOutput.providerExecuted !== true,\n                  );\n\n                  if (\n                    clientToolCalls.length > 0 &&\n                    // all current tool calls have outputs (incl. execution errors):\n                    clientToolOutputs.length === clientToolCalls.length &&\n                    // continue until a stop condition is met:\n                    !(await isStopConditionMet({\n                      stopConditions,\n                      steps: recordedSteps,\n                    }))\n                  ) {\n                    // append to messages for the next step:\n                    responseMessages.push(\n                      ...toResponseMessages({\n                        content:\n                          // use transformed content to create the messages for the next step:\n                          recordedSteps[recordedSteps.length - 1].content,\n                        tools,\n                      }),\n                    );\n\n                    try {\n                      await streamStep({\n                        currentStep: currentStep + 1,\n                        responseMessages,\n                        usage: combinedUsage,\n                      });\n                    } catch (error) {\n                      controller.enqueue({\n                        type: 'error',\n                        error,\n                      });\n\n                      self.closeStream();\n                    }\n                  } else {\n                    controller.enqueue({\n                      type: 'finish',\n                      finishReason: stepFinishReason,\n                      totalUsage: combinedUsage,\n                    });\n\n                    self.closeStream(); // close the stitchable stream\n                  }\n                },\n              }),\n            ),\n          );\n        }\n\n        // add the initial stream to the stitchable stream\n        await streamStep({\n          currentStep: 0,\n          responseMessages: [],\n          usage: {\n            inputTokens: undefined,\n            outputTokens: undefined,\n            totalTokens: undefined,\n          },\n        });\n      },\n    }).catch(error => {\n      // add an error stream part and close the streams:\n      self.addStream(\n        new ReadableStream({\n          start(controller) {\n            controller.enqueue({ type: 'error', error });\n            controller.close();\n          },\n        }),\n      );\n      self.closeStream();\n    });\n  }\n\n  get steps() {\n    // when any of the promises are accessed, the stream is consumed\n    // so it resolves without needing to consume the stream separately\n    this.consumeStream();\n\n    return this._steps.promise;\n  }\n\n  private get finalStep() {\n    return this.steps.then(steps => steps[steps.length - 1]);\n  }\n\n  get content() {\n    return this.finalStep.then(step => step.content);\n  }\n\n  get warnings() {\n    return this.finalStep.then(step => step.warnings);\n  }\n\n  get providerMetadata() {\n    return this.finalStep.then(step => step.providerMetadata);\n  }\n\n  get text() {\n    return this.finalStep.then(step => step.text);\n  }\n\n  get reasoningText() {\n    return this.finalStep.then(step => step.reasoningText);\n  }\n\n  get reasoning() {\n    return this.finalStep.then(step => step.reasoning);\n  }\n\n  get sources() {\n    return this.finalStep.then(step => step.sources);\n  }\n\n  get files() {\n    return this.finalStep.then(step => step.files);\n  }\n\n  get toolCalls() {\n    return this.finalStep.then(step => step.toolCalls);\n  }\n\n  get staticToolCalls() {\n    return this.finalStep.then(step => step.staticToolCalls);\n  }\n\n  get dynamicToolCalls() {\n    return this.finalStep.then(step => step.dynamicToolCalls);\n  }\n\n  get toolResults() {\n    return this.finalStep.then(step => step.toolResults);\n  }\n\n  get staticToolResults() {\n    return this.finalStep.then(step => step.staticToolResults);\n  }\n\n  get dynamicToolResults() {\n    return this.finalStep.then(step => step.dynamicToolResults);\n  }\n\n  get usage() {\n    return this.finalStep.then(step => step.usage);\n  }\n\n  get request() {\n    return this.finalStep.then(step => step.request);\n  }\n\n  get response() {\n    return this.finalStep.then(step => step.response);\n  }\n\n  get totalUsage() {\n    // when any of the promises are accessed, the stream is consumed\n    // so it resolves without needing to consume the stream separately\n    this.consumeStream();\n\n    return this._totalUsage.promise;\n  }\n\n  get finishReason() {\n    // when any of the promises are accessed, the stream is consumed\n    // so it resolves without needing to consume the stream separately\n    this.consumeStream();\n\n    return this._finishReason.promise;\n  }\n\n  /**\nSplit out a new stream from the original stream.\nThe original stream is replaced to allow for further splitting,\nsince we do not know how many times the stream will be split.\n\nNote: this leads to buffering the stream content on the server.\nHowever, the LLM results are expected to be small enough to not cause issues.\n   */\n  private teeStream() {\n    const [stream1, stream2] = this.baseStream.tee();\n    this.baseStream = stream2;\n    return stream1;\n  }\n\n  get textStream(): AsyncIterableStream<string> {\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>, string>({\n          transform({ part }, controller) {\n            if (part.type === 'text-delta') {\n              controller.enqueue(part.text);\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get fullStream(): AsyncIterableStream<TextStreamPart<TOOLS>> {\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<\n          EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n          TextStreamPart<TOOLS>\n        >({\n          transform({ part }, controller) {\n            controller.enqueue(part);\n          },\n        }),\n      ),\n    );\n  }\n\n  async consumeStream(options?: ConsumeStreamOptions): Promise<void> {\n    try {\n      await consumeStream({\n        stream: this.fullStream,\n        onError: options?.onError,\n      });\n    } catch (error) {\n      options?.onError?.(error);\n    }\n  }\n\n  get experimental_partialOutputStream(): AsyncIterableStream<PARTIAL_OUTPUT> {\n    if (this.output == null) {\n      throw new NoOutputSpecifiedError();\n    }\n\n    return createAsyncIterableStream(\n      this.teeStream().pipeThrough(\n        new TransformStream<\n          EnrichedStreamPart<TOOLS, PARTIAL_OUTPUT>,\n          PARTIAL_OUTPUT\n        >({\n          transform({ partialOutput }, controller) {\n            if (partialOutput != null) {\n              controller.enqueue(partialOutput);\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  toUIMessageStream<UI_MESSAGE extends UIMessage>({\n    originalMessages,\n    generateMessageId,\n    onFinish,\n    messageMetadata,\n    sendReasoning = true,\n    sendSources = false,\n    sendStart = true,\n    sendFinish = true,\n    onError = getErrorMessage,\n  }: UIMessageStreamOptions<UI_MESSAGE> = {}): AsyncIterableStream<\n    InferUIMessageChunk<UI_MESSAGE>\n  > {\n    const responseMessageId =\n      generateMessageId != null\n        ? getResponseUIMessageId({\n            originalMessages,\n            responseMessageId: generateMessageId,\n          })\n        : undefined;\n\n    const toolNamesByCallId: Record<string, string> = {};\n\n    const isDynamic = (toolCallId: string) => {\n      const toolName = toolNamesByCallId[toolCallId];\n      const dynamic = this.tools?.[toolName]?.type === 'dynamic';\n      return dynamic ? true : undefined; // only send when dynamic to reduce data transfer\n    };\n\n    const baseStream = this.fullStream.pipeThrough(\n      new TransformStream<\n        TextStreamPart<TOOLS>,\n        UIMessageChunk<\n          InferUIMessageMetadata<UI_MESSAGE>,\n          InferUIMessageData<UI_MESSAGE>\n        >\n      >({\n        transform: async (part, controller) => {\n          const messageMetadataValue = messageMetadata?.({ part });\n\n          const partType = part.type;\n          switch (partType) {\n            case 'text-start': {\n              controller.enqueue({\n                type: 'text-start',\n                id: part.id,\n                ...(part.providerMetadata != null\n                  ? { providerMetadata: part.providerMetadata }\n                  : {}),\n              });\n              break;\n            }\n\n            case 'text-delta': {\n              controller.enqueue({\n                type: 'text-delta',\n                id: part.id,\n                delta: part.text,\n                ...(part.providerMetadata != null\n                  ? { providerMetadata: part.providerMetadata }\n                  : {}),\n              });\n              break;\n            }\n\n            case 'text-end': {\n              controller.enqueue({\n                type: 'text-end',\n                id: part.id,\n                ...(part.providerMetadata != null\n                  ? { providerMetadata: part.providerMetadata }\n                  : {}),\n              });\n              break;\n            }\n\n            case 'reasoning-start': {\n              controller.enqueue({\n                type: 'reasoning-start',\n                id: part.id,\n                ...(part.providerMetadata != null\n                  ? { providerMetadata: part.providerMetadata }\n                  : {}),\n              });\n              break;\n            }\n\n            case 'reasoning-delta': {\n              if (sendReasoning) {\n                controller.enqueue({\n                  type: 'reasoning-delta',\n                  id: part.id,\n                  delta: part.text,\n                  ...(part.providerMetadata != null\n                    ? { providerMetadata: part.providerMetadata }\n                    : {}),\n                });\n              }\n              break;\n            }\n\n            case 'reasoning-end': {\n              controller.enqueue({\n                type: 'reasoning-end',\n                id: part.id,\n                ...(part.providerMetadata != null\n                  ? { providerMetadata: part.providerMetadata }\n                  : {}),\n              });\n              break;\n            }\n\n            case 'file': {\n              controller.enqueue({\n                type: 'file',\n                mediaType: part.file.mediaType,\n                url: `data:${part.file.mediaType};base64,${part.file.base64}`,\n              });\n              break;\n            }\n\n            case 'source': {\n              if (sendSources && part.sourceType === 'url') {\n                controller.enqueue({\n                  type: 'source-url',\n                  sourceId: part.id,\n                  url: part.url,\n                  title: part.title,\n                  ...(part.providerMetadata != null\n                    ? { providerMetadata: part.providerMetadata }\n                    : {}),\n                });\n              }\n\n              if (sendSources && part.sourceType === 'document') {\n                controller.enqueue({\n                  type: 'source-document',\n                  sourceId: part.id,\n                  mediaType: part.mediaType,\n                  title: part.title,\n                  filename: part.filename,\n                  ...(part.providerMetadata != null\n                    ? { providerMetadata: part.providerMetadata }\n                    : {}),\n                });\n              }\n              break;\n            }\n\n            case 'tool-input-start': {\n              toolNamesByCallId[part.id] = part.toolName;\n              const dynamic = isDynamic(part.id);\n\n              controller.enqueue({\n                type: 'tool-input-start',\n                toolCallId: part.id,\n                toolName: part.toolName,\n                ...(part.providerExecuted != null\n                  ? { providerExecuted: part.providerExecuted }\n                  : {}),\n                ...(dynamic != null ? { dynamic } : {}),\n              });\n              break;\n            }\n\n            case 'tool-input-delta': {\n              controller.enqueue({\n                type: 'tool-input-delta',\n                toolCallId: part.id,\n                inputTextDelta: part.delta,\n              });\n              break;\n            }\n\n            case 'tool-call': {\n              toolNamesByCallId[part.toolCallId] = part.toolName;\n              const dynamic = isDynamic(part.toolCallId);\n\n              if (part.invalid) {\n                controller.enqueue({\n                  type: 'tool-input-error',\n                  toolCallId: part.toolCallId,\n                  toolName: part.toolName,\n                  input: part.input,\n                  ...(part.providerExecuted != null\n                    ? { providerExecuted: part.providerExecuted }\n                    : {}),\n                  ...(part.providerMetadata != null\n                    ? { providerMetadata: part.providerMetadata }\n                    : {}),\n                  ...(dynamic != null ? { dynamic } : {}),\n                  errorText: onError(part.error),\n                });\n              } else {\n                controller.enqueue({\n                  type: 'tool-input-available',\n                  toolCallId: part.toolCallId,\n                  toolName: part.toolName,\n                  input: part.input,\n                  ...(part.providerExecuted != null\n                    ? { providerExecuted: part.providerExecuted }\n                    : {}),\n                  ...(part.providerMetadata != null\n                    ? { providerMetadata: part.providerMetadata }\n                    : {}),\n                  ...(dynamic != null ? { dynamic } : {}),\n                });\n              }\n\n              break;\n            }\n\n            case 'tool-result': {\n              const dynamic = isDynamic(part.toolCallId);\n\n              controller.enqueue({\n                type: 'tool-output-available',\n                toolCallId: part.toolCallId,\n                output: part.output,\n                ...(part.providerExecuted != null\n                  ? { providerExecuted: part.providerExecuted }\n                  : {}),\n                ...(part.preliminary != null\n                  ? { preliminary: part.preliminary }\n                  : {}),\n                ...(dynamic != null ? { dynamic } : {}),\n              });\n              break;\n            }\n\n            case 'tool-error': {\n              const dynamic = isDynamic(part.toolCallId);\n\n              controller.enqueue({\n                type: 'tool-output-error',\n                toolCallId: part.toolCallId,\n                errorText: onError(part.error),\n                ...(part.providerExecuted != null\n                  ? { providerExecuted: part.providerExecuted }\n                  : {}),\n                ...(dynamic != null ? { dynamic } : {}),\n              });\n              break;\n            }\n\n            case 'error': {\n              controller.enqueue({\n                type: 'error',\n                errorText: onError(part.error),\n              });\n              break;\n            }\n\n            case 'start-step': {\n              controller.enqueue({ type: 'start-step' });\n              break;\n            }\n\n            case 'finish-step': {\n              controller.enqueue({ type: 'finish-step' });\n              break;\n            }\n\n            case 'start': {\n              if (sendStart) {\n                controller.enqueue({\n                  type: 'start',\n                  ...(messageMetadataValue != null\n                    ? { messageMetadata: messageMetadataValue }\n                    : {}),\n                  ...(responseMessageId != null\n                    ? { messageId: responseMessageId }\n                    : {}),\n                });\n              }\n              break;\n            }\n\n            case 'finish': {\n              if (sendFinish) {\n                controller.enqueue({\n                  type: 'finish',\n                  ...(messageMetadataValue != null\n                    ? { messageMetadata: messageMetadataValue }\n                    : {}),\n                });\n              }\n              break;\n            }\n\n            case 'abort': {\n              controller.enqueue(part);\n              break;\n            }\n\n            case 'tool-input-end': {\n              break;\n            }\n\n            case 'raw': {\n              // Raw chunks are not included in UI message streams\n              // as they contain provider-specific data for developer use\n              break;\n            }\n\n            default: {\n              const exhaustiveCheck: never = partType;\n              throw new Error(`Unknown chunk type: ${exhaustiveCheck}`);\n            }\n          }\n\n          // start and finish events already have metadata\n          // so we only need to send metadata for other parts\n          if (\n            messageMetadataValue != null &&\n            partType !== 'start' &&\n            partType !== 'finish'\n          ) {\n            controller.enqueue({\n              type: 'message-metadata',\n              messageMetadata: messageMetadataValue,\n            });\n          }\n        },\n      }),\n    );\n\n    return createAsyncIterableStream(\n      handleUIMessageStreamFinish<UI_MESSAGE>({\n        stream: baseStream,\n        messageId: responseMessageId ?? generateMessageId?.(),\n        originalMessages,\n        onFinish,\n        onError,\n      }),\n    );\n  }\n\n  pipeUIMessageStreamToResponse<UI_MESSAGE extends UIMessage>(\n    response: ServerResponse,\n    {\n      originalMessages,\n      generateMessageId,\n      onFinish,\n      messageMetadata,\n      sendReasoning,\n      sendSources,\n      sendFinish,\n      sendStart,\n      onError,\n      ...init\n    }: UIMessageStreamResponseInit & UIMessageStreamOptions<UI_MESSAGE> = {},\n  ) {\n    pipeUIMessageStreamToResponse({\n      response,\n      stream: this.toUIMessageStream({\n        originalMessages,\n        generateMessageId,\n        onFinish,\n        messageMetadata,\n        sendReasoning,\n        sendSources,\n        sendFinish,\n        sendStart,\n        onError,\n      }),\n      ...init,\n    });\n  }\n\n  pipeTextStreamToResponse(response: ServerResponse, init?: ResponseInit) {\n    pipeTextStreamToResponse({\n      response,\n      textStream: this.textStream,\n      ...init,\n    });\n  }\n\n  toUIMessageStreamResponse<UI_MESSAGE extends UIMessage>({\n    originalMessages,\n    generateMessageId,\n    onFinish,\n    messageMetadata,\n    sendReasoning,\n    sendSources,\n    sendFinish,\n    sendStart,\n    onError,\n    ...init\n  }: UIMessageStreamResponseInit &\n    UIMessageStreamOptions<UI_MESSAGE> = {}): Response {\n    return createUIMessageStreamResponse({\n      stream: this.toUIMessageStream({\n        originalMessages,\n        generateMessageId,\n        onFinish,\n        messageMetadata,\n        sendReasoning,\n        sendSources,\n        sendFinish,\n        sendStart,\n        onError,\n      }),\n      ...init,\n    });\n  }\n\n  toTextStreamResponse(init?: ResponseInit): Response {\n    return createTextStreamResponse({\n      textStream: this.textStream,\n      ...init,\n    });\n  }\n}\n", "export function prepareHeaders(\n  headers: HeadersInit | undefined,\n  defaultHeaders: Record<string, string>,\n): Headers {\n  const responseHeaders = new Headers(headers ?? {});\n\n  for (const [key, value] of Object.entries(defaultHeaders)) {\n    if (!responseHeaders.has(key)) {\n      responseHeaders.set(key, value);\n    }\n  }\n\n  return responseHeaders;\n}\n", "import { prepareHeaders } from '../util/prepare-headers';\n\nexport function createTextStreamResponse({\n  status,\n  statusText,\n  headers,\n  textStream,\n}: ResponseInit & {\n  textStream: ReadableStream<string>;\n}): Response {\n  return new Response(textStream.pipeThrough(new TextEncoderStream()), {\n    status: status ?? 200,\n    statusText,\n    headers: prepareHeaders(headers, {\n      'content-type': 'text/plain; charset=utf-8',\n    }),\n  });\n}\n", "import { ServerResponse } from 'node:http';\n\n/**\n * Writes the content of a stream to a server response.\n */\nexport function writeToServerResponse({\n  response,\n  status,\n  statusText,\n  headers,\n  stream,\n}: {\n  response: ServerResponse;\n  status?: number;\n  statusText?: string;\n  headers?: Record<string, string | number | string[]>;\n  stream: ReadableStream<Uint8Array>;\n}): void {\n  response.writeHead(status ?? 200, statusText, headers);\n\n  const reader = stream.getReader();\n  const read = async () => {\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        response.write(value);\n      }\n    } catch (error) {\n      throw error;\n    } finally {\n      response.end();\n    }\n  };\n\n  read();\n}\n", "import { ServerResponse } from 'node:http';\nimport { prepareHeaders } from '../util/prepare-headers';\nimport { writeToServerResponse } from '../util/write-to-server-response';\n\nexport function pipeTextStreamToResponse({\n  response,\n  status,\n  statusText,\n  headers,\n  textStream,\n}: {\n  response: ServerResponse;\n  textStream: ReadableStream<string>;\n} & ResponseInit): void {\n  writeToServerResponse({\n    response,\n    status,\n    statusText,\n    headers: Object.fromEntries(\n      prepareHeaders(headers, {\n        'content-type': 'text/plain; charset=utf-8',\n      }).entries(),\n    ),\n    stream: textStream.pipeThrough(new TextEncoderStream()),\n  });\n}\n", "export class JsonToSseTransformStream extends TransformStream<unknown, string> {\n  constructor() {\n    super({\n      transform(part, controller) {\n        controller.enqueue(`data: ${JSON.stringify(part)}\\n\\n`);\n      },\n      flush(controller) {\n        controller.enqueue('data: [DONE]\\n\\n');\n      },\n    });\n  }\n}\n", "export const UI_MESSAGE_STREAM_HEADERS = {\n  'content-type': 'text/event-stream',\n  'cache-control': 'no-cache',\n  connection: 'keep-alive',\n  'x-vercel-ai-ui-message-stream': 'v1',\n  'x-accel-buffering': 'no', // disable nginx buffering\n};\n", "import { prepareHeaders } from '../util/prepare-headers';\nimport { JsonToSseTransformStream } from './json-to-sse-transform-stream';\nimport { UI_MESSAGE_STREAM_HEADERS } from './ui-message-stream-headers';\nimport { UIMessageChunk } from './ui-message-chunks';\nimport { UIMessageStreamResponseInit } from './ui-message-stream-response-init';\n\nexport function createUIMessageStreamResponse({\n  status,\n  statusText,\n  headers,\n  stream,\n  consumeSseStream,\n}: UIMessageStreamResponseInit & {\n  stream: ReadableStream<UIMessageChunk>;\n}): Response {\n  let sseStream = stream.pipeThrough(new JsonToSseTransformStream());\n\n  // when the consumeSseStream is provided, we need to tee the stream\n  // and send the second part to the consumeSseStream function\n  // so that it can be consumed by the client independently\n  if (consumeSseStream) {\n    const [stream1, stream2] = sseStream.tee();\n    sseStream = stream1;\n    consumeSseStream({ stream: stream2 }); // no await (do not block the response)\n  }\n\n  return new Response(sseStream.pipeThrough(new TextEncoderStream()), {\n    status,\n    statusText,\n    headers: prepareHeaders(headers, UI_MESSAGE_STREAM_HEADERS),\n  });\n}\n", "import { IdGenerator } from '@ai-sdk/provider-utils';\nimport { UIMessage } from '../ui/ui-messages';\n\nexport function getResponseUIMessageId({\n  originalMessages,\n  responseMessageId,\n}: {\n  originalMessages: UIMessage[] | undefined;\n  responseMessageId: string | IdGenerator;\n}) {\n  // when there are no original messages (i.e. no persistence),\n  // the assistant message id generation is handled on the client side.\n  if (originalMessages == null) {\n    return undefined;\n  }\n\n  const lastMessage = originalMessages[originalMessages.length - 1];\n\n  return lastMessage?.role === 'assistant'\n    ? lastMessage.id\n    : typeof responseMessageId === 'function'\n      ? responseMessageId()\n      : responseMessageId;\n}\n", "import {\n  StandardSchemaV1,\n  validateTypes,\n  Validator,\n} from '@ai-sdk/provider-utils';\nimport { ProviderMetadata } from '../types';\nimport {\n  DataUIMessageChunk,\n  InferUIMessageChunk,\n  isDataUIMessageChunk,\n  UIMessageChunk,\n} from '../ui-message-stream/ui-message-chunks';\nimport { ErrorHandler } from '../util/error-handler';\nimport { mergeObjects } from '../util/merge-objects';\nimport { parsePartialJson } from '../util/parse-partial-json';\nimport { UIDataTypesToSchemas } from './chat';\nimport {\n  DataUIPart,\n  DynamicToolUIPart,\n  getToolName,\n  InferUIMessageData,\n  InferUIMessageMetadata,\n  InferUIMessageToolCall,\n  InferUIMessageTools,\n  isToolUIPart,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolUIPart,\n  UIMessage,\n  UIMessagePart,\n} from './ui-messages';\n\nexport type StreamingUIMessageState<UI_MESSAGE extends UIMessage> = {\n  message: UI_MESSAGE;\n  activeTextParts: Record<string, TextUIPart>;\n  activeReasoningParts: Record<string, ReasoningUIPart>;\n  partialToolCalls: Record<\n    string,\n    { text: string; index: number; toolName: string; dynamic?: boolean }\n  >;\n};\n\nexport function createStreamingUIMessageState<UI_MESSAGE extends UIMessage>({\n  lastMessage,\n  messageId,\n}: {\n  lastMessage: UI_MESSAGE | undefined;\n  messageId: string;\n}): StreamingUIMessageState<UI_MESSAGE> {\n  return {\n    message:\n      lastMessage?.role === 'assistant'\n        ? lastMessage\n        : ({\n            id: messageId,\n            metadata: undefined,\n            role: 'assistant',\n            parts: [] as UIMessagePart<\n              InferUIMessageData<UI_MESSAGE>,\n              InferUIMessageTools<UI_MESSAGE>\n            >[],\n          } as UI_MESSAGE),\n    activeTextParts: {},\n    activeReasoningParts: {},\n    partialToolCalls: {},\n  };\n}\n\nexport function processUIMessageStream<UI_MESSAGE extends UIMessage>({\n  stream,\n  messageMetadataSchema,\n  dataPartSchemas,\n  runUpdateMessageJob,\n  onError,\n  onToolCall,\n  onData,\n}: {\n  // input stream is not fully typed yet:\n  stream: ReadableStream<UIMessageChunk>;\n  messageMetadataSchema?:\n    | Validator<InferUIMessageMetadata<UI_MESSAGE>>\n    | StandardSchemaV1<InferUIMessageMetadata<UI_MESSAGE>>;\n  dataPartSchemas?: UIDataTypesToSchemas<InferUIMessageData<UI_MESSAGE>>;\n  onToolCall?: (options: {\n    toolCall: InferUIMessageToolCall<UI_MESSAGE>;\n  }) => void | PromiseLike<void>;\n  onData?: (dataPart: DataUIPart<InferUIMessageData<UI_MESSAGE>>) => void;\n  runUpdateMessageJob: (\n    job: (options: {\n      state: StreamingUIMessageState<UI_MESSAGE>;\n      write: () => void;\n    }) => Promise<void>,\n  ) => Promise<void>;\n  onError: ErrorHandler;\n}): ReadableStream<InferUIMessageChunk<UI_MESSAGE>> {\n  return stream.pipeThrough(\n    new TransformStream<UIMessageChunk, InferUIMessageChunk<UI_MESSAGE>>({\n      async transform(chunk, controller) {\n        await runUpdateMessageJob(async ({ state, write }) => {\n          function getToolInvocation(toolCallId: string) {\n            const toolInvocations = state.message.parts.filter(isToolUIPart);\n\n            const toolInvocation = toolInvocations.find(\n              invocation => invocation.toolCallId === toolCallId,\n            );\n\n            if (toolInvocation == null) {\n              throw new Error(\n                'tool-output-error must be preceded by a tool-input-available',\n              );\n            }\n\n            return toolInvocation;\n          }\n\n          function getDynamicToolInvocation(toolCallId: string) {\n            const toolInvocations = state.message.parts.filter(\n              part => part.type === 'dynamic-tool',\n            ) as DynamicToolUIPart[];\n\n            const toolInvocation = toolInvocations.find(\n              invocation => invocation.toolCallId === toolCallId,\n            );\n\n            if (toolInvocation == null) {\n              throw new Error(\n                'tool-output-error must be preceded by a tool-input-available',\n              );\n            }\n\n            return toolInvocation;\n          }\n\n          function updateToolPart(\n            options: {\n              toolName: keyof InferUIMessageTools<UI_MESSAGE> & string;\n              toolCallId: string;\n              providerExecuted?: boolean;\n            } & (\n              | {\n                  state: 'input-streaming';\n                  input: unknown;\n                  providerExecuted?: boolean;\n                }\n              | {\n                  state: 'input-available';\n                  input: unknown;\n                  providerExecuted?: boolean;\n                  providerMetadata?: ProviderMetadata;\n                }\n              | {\n                  state: 'output-available';\n                  input: unknown;\n                  output: unknown;\n                  providerExecuted?: boolean;\n                  preliminary?: boolean;\n                }\n              | {\n                  state: 'output-error';\n                  input: unknown;\n                  rawInput?: unknown;\n                  errorText: string;\n                  providerExecuted?: boolean;\n                  providerMetadata?: ProviderMetadata;\n                }\n            ),\n          ) {\n            const part = state.message.parts.find(\n              part =>\n                isToolUIPart(part) && part.toolCallId === options.toolCallId,\n            ) as ToolUIPart<InferUIMessageTools<UI_MESSAGE>> | undefined;\n\n            const anyOptions = options as any;\n            const anyPart = part as any;\n\n            if (part != null) {\n              part.state = options.state;\n              anyPart.input = anyOptions.input;\n              anyPart.output = anyOptions.output;\n              anyPart.errorText = anyOptions.errorText;\n              anyPart.rawInput = anyOptions.rawInput;\n              anyPart.preliminary = anyOptions.preliminary;\n\n              // once providerExecuted is set, it stays for streaming\n              anyPart.providerExecuted =\n                anyOptions.providerExecuted ?? part.providerExecuted;\n\n              if (\n                anyOptions.providerMetadata != null &&\n                part.state === 'input-available'\n              ) {\n                part.callProviderMetadata = anyOptions.providerMetadata;\n              }\n            } else {\n              state.message.parts.push({\n                type: `tool-${options.toolName}`,\n                toolCallId: options.toolCallId,\n                state: options.state,\n                input: anyOptions.input,\n                output: anyOptions.output,\n                rawInput: anyOptions.rawInput,\n                errorText: anyOptions.errorText,\n                providerExecuted: anyOptions.providerExecuted,\n                preliminary: anyOptions.preliminary,\n                ...(anyOptions.providerMetadata != null\n                  ? { callProviderMetadata: anyOptions.providerMetadata }\n                  : {}),\n              } as ToolUIPart<InferUIMessageTools<UI_MESSAGE>>);\n            }\n          }\n\n          function updateDynamicToolPart(\n            options: {\n              toolName: keyof InferUIMessageTools<UI_MESSAGE> & string;\n              toolCallId: string;\n              providerExecuted?: boolean;\n            } & (\n              | {\n                  state: 'input-streaming';\n                  input: unknown;\n                }\n              | {\n                  state: 'input-available';\n                  input: unknown;\n                  providerMetadata?: ProviderMetadata;\n                }\n              | {\n                  state: 'output-available';\n                  input: unknown;\n                  output: unknown;\n                  preliminary: boolean | undefined;\n                }\n              | {\n                  state: 'output-error';\n                  input: unknown;\n                  errorText: string;\n                  providerMetadata?: ProviderMetadata;\n                }\n            ),\n          ) {\n            const part = state.message.parts.find(\n              part =>\n                part.type === 'dynamic-tool' &&\n                part.toolCallId === options.toolCallId,\n            ) as DynamicToolUIPart | undefined;\n\n            const anyOptions = options as any;\n            const anyPart = part as any;\n\n            if (part != null) {\n              part.state = options.state;\n              anyPart.toolName = options.toolName;\n              anyPart.input = anyOptions.input;\n              anyPart.output = anyOptions.output;\n              anyPart.errorText = anyOptions.errorText;\n              anyPart.rawInput = anyOptions.rawInput ?? anyPart.rawInput;\n              anyPart.preliminary = anyOptions.preliminary;\n\n              if (\n                anyOptions.providerMetadata != null &&\n                part.state === 'input-available'\n              ) {\n                part.callProviderMetadata = anyOptions.providerMetadata;\n              }\n            } else {\n              state.message.parts.push({\n                type: 'dynamic-tool',\n                toolName: options.toolName,\n                toolCallId: options.toolCallId,\n                state: options.state,\n                input: anyOptions.input,\n                output: anyOptions.output,\n                errorText: anyOptions.errorText,\n                preliminary: anyOptions.preliminary,\n                ...(anyOptions.providerMetadata != null\n                  ? { callProviderMetadata: anyOptions.providerMetadata }\n                  : {}),\n              } as DynamicToolUIPart);\n            }\n          }\n\n          async function updateMessageMetadata(metadata: unknown) {\n            if (metadata != null) {\n              const mergedMetadata =\n                state.message.metadata != null\n                  ? mergeObjects(state.message.metadata, metadata)\n                  : metadata;\n\n              if (messageMetadataSchema != null) {\n                await validateTypes({\n                  value: mergedMetadata,\n                  schema: messageMetadataSchema,\n                });\n              }\n\n              state.message.metadata =\n                mergedMetadata as InferUIMessageMetadata<UI_MESSAGE>;\n            }\n          }\n\n          switch (chunk.type) {\n            case 'text-start': {\n              const textPart: TextUIPart = {\n                type: 'text',\n                text: '',\n                providerMetadata: chunk.providerMetadata,\n                state: 'streaming',\n              };\n              state.activeTextParts[chunk.id] = textPart;\n              state.message.parts.push(textPart);\n              write();\n              break;\n            }\n\n            case 'text-delta': {\n              const textPart = state.activeTextParts[chunk.id];\n              textPart.text += chunk.delta;\n              textPart.providerMetadata =\n                chunk.providerMetadata ?? textPart.providerMetadata;\n              write();\n              break;\n            }\n\n            case 'text-end': {\n              const textPart = state.activeTextParts[chunk.id];\n              textPart.state = 'done';\n              textPart.providerMetadata =\n                chunk.providerMetadata ?? textPart.providerMetadata;\n              delete state.activeTextParts[chunk.id];\n              write();\n              break;\n            }\n\n            case 'reasoning-start': {\n              const reasoningPart: ReasoningUIPart = {\n                type: 'reasoning',\n                text: '',\n                providerMetadata: chunk.providerMetadata,\n                state: 'streaming',\n              };\n              state.activeReasoningParts[chunk.id] = reasoningPart;\n              state.message.parts.push(reasoningPart);\n              write();\n              break;\n            }\n\n            case 'reasoning-delta': {\n              const reasoningPart = state.activeReasoningParts[chunk.id];\n              reasoningPart.text += chunk.delta;\n              reasoningPart.providerMetadata =\n                chunk.providerMetadata ?? reasoningPart.providerMetadata;\n              write();\n              break;\n            }\n\n            case 'reasoning-end': {\n              const reasoningPart = state.activeReasoningParts[chunk.id];\n              reasoningPart.providerMetadata =\n                chunk.providerMetadata ?? reasoningPart.providerMetadata;\n              reasoningPart.state = 'done';\n              delete state.activeReasoningParts[chunk.id];\n\n              write();\n              break;\n            }\n\n            case 'file': {\n              state.message.parts.push({\n                type: 'file',\n                mediaType: chunk.mediaType,\n                url: chunk.url,\n              });\n\n              write();\n              break;\n            }\n\n            case 'source-url': {\n              state.message.parts.push({\n                type: 'source-url',\n                sourceId: chunk.sourceId,\n                url: chunk.url,\n                title: chunk.title,\n                providerMetadata: chunk.providerMetadata,\n              });\n\n              write();\n              break;\n            }\n\n            case 'source-document': {\n              state.message.parts.push({\n                type: 'source-document',\n                sourceId: chunk.sourceId,\n                mediaType: chunk.mediaType,\n                title: chunk.title,\n                filename: chunk.filename,\n                providerMetadata: chunk.providerMetadata,\n              });\n\n              write();\n              break;\n            }\n\n            case 'tool-input-start': {\n              const toolInvocations = state.message.parts.filter(isToolUIPart);\n\n              // add the partial tool call to the map\n              state.partialToolCalls[chunk.toolCallId] = {\n                text: '',\n                toolName: chunk.toolName,\n                index: toolInvocations.length,\n                dynamic: chunk.dynamic,\n              };\n\n              if (chunk.dynamic) {\n                updateDynamicToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  state: 'input-streaming',\n                  input: undefined,\n                });\n              } else {\n                updateToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  state: 'input-streaming',\n                  input: undefined,\n                  providerExecuted: chunk.providerExecuted,\n                });\n              }\n\n              write();\n              break;\n            }\n\n            case 'tool-input-delta': {\n              const partialToolCall = state.partialToolCalls[chunk.toolCallId];\n\n              partialToolCall.text += chunk.inputTextDelta;\n\n              const { value: partialArgs } = await parsePartialJson(\n                partialToolCall.text,\n              );\n\n              if (partialToolCall.dynamic) {\n                updateDynamicToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: partialToolCall.toolName,\n                  state: 'input-streaming',\n                  input: partialArgs,\n                });\n              } else {\n                updateToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: partialToolCall.toolName,\n                  state: 'input-streaming',\n                  input: partialArgs,\n                });\n              }\n\n              write();\n              break;\n            }\n\n            case 'tool-input-available': {\n              if (chunk.dynamic) {\n                updateDynamicToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  state: 'input-available',\n                  input: chunk.input,\n                  providerMetadata: chunk.providerMetadata,\n                });\n              } else {\n                updateToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  state: 'input-available',\n                  input: chunk.input,\n                  providerExecuted: chunk.providerExecuted,\n                  providerMetadata: chunk.providerMetadata,\n                });\n              }\n\n              write();\n\n              // invoke the onToolCall callback if it exists. This is blocking.\n              // In the future we should make this non-blocking, which\n              // requires additional state management for error handling etc.\n              // Skip calling onToolCall for provider-executed tools since they are already executed\n              if (onToolCall && !chunk.providerExecuted) {\n                await onToolCall({\n                  toolCall: chunk as InferUIMessageToolCall<UI_MESSAGE>,\n                });\n              }\n              break;\n            }\n\n            case 'tool-input-error': {\n              if (chunk.dynamic) {\n                updateDynamicToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  state: 'output-error',\n                  input: chunk.input,\n                  errorText: chunk.errorText,\n                  providerMetadata: chunk.providerMetadata,\n                });\n              } else {\n                updateToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: chunk.toolName,\n                  state: 'output-error',\n                  input: undefined,\n                  rawInput: chunk.input,\n                  errorText: chunk.errorText,\n                  providerExecuted: chunk.providerExecuted,\n                  providerMetadata: chunk.providerMetadata,\n                });\n              }\n\n              write();\n              break;\n            }\n\n            case 'tool-output-available': {\n              if (chunk.dynamic) {\n                const toolInvocation = getDynamicToolInvocation(\n                  chunk.toolCallId,\n                );\n\n                updateDynamicToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: toolInvocation.toolName,\n                  state: 'output-available',\n                  input: (toolInvocation as any).input,\n                  output: chunk.output,\n                  preliminary: chunk.preliminary,\n                });\n              } else {\n                const toolInvocation = getToolInvocation(chunk.toolCallId);\n\n                updateToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: getToolName(toolInvocation),\n                  state: 'output-available',\n                  input: (toolInvocation as any).input,\n                  output: chunk.output,\n                  providerExecuted: chunk.providerExecuted,\n                  preliminary: chunk.preliminary,\n                });\n              }\n\n              write();\n              break;\n            }\n\n            case 'tool-output-error': {\n              if (chunk.dynamic) {\n                const toolInvocation = getDynamicToolInvocation(\n                  chunk.toolCallId,\n                );\n\n                updateDynamicToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: toolInvocation.toolName,\n                  state: 'output-error',\n                  input: (toolInvocation as any).input,\n                  errorText: chunk.errorText,\n                });\n              } else {\n                const toolInvocation = getToolInvocation(chunk.toolCallId);\n\n                updateToolPart({\n                  toolCallId: chunk.toolCallId,\n                  toolName: getToolName(toolInvocation),\n                  state: 'output-error',\n                  input: (toolInvocation as any).input,\n                  rawInput: (toolInvocation as any).rawInput,\n                  errorText: chunk.errorText,\n                });\n              }\n\n              write();\n              break;\n            }\n\n            case 'start-step': {\n              // add a step boundary part to the message\n              state.message.parts.push({ type: 'step-start' });\n              break;\n            }\n\n            case 'finish-step': {\n              // reset the current text and reasoning parts\n              state.activeTextParts = {};\n              state.activeReasoningParts = {};\n              break;\n            }\n\n            case 'start': {\n              if (chunk.messageId != null) {\n                state.message.id = chunk.messageId;\n              }\n\n              await updateMessageMetadata(chunk.messageMetadata);\n\n              if (chunk.messageId != null || chunk.messageMetadata != null) {\n                write();\n              }\n              break;\n            }\n\n            case 'finish': {\n              await updateMessageMetadata(chunk.messageMetadata);\n              if (chunk.messageMetadata != null) {\n                write();\n              }\n              break;\n            }\n\n            case 'message-metadata': {\n              await updateMessageMetadata(chunk.messageMetadata);\n              if (chunk.messageMetadata != null) {\n                write();\n              }\n              break;\n            }\n\n            case 'error': {\n              onError?.(new Error(chunk.errorText));\n              break;\n            }\n\n            default: {\n              if (isDataUIMessageChunk(chunk)) {\n                // validate data chunk if dataPartSchemas is provided\n                if (dataPartSchemas?.[chunk.type] != null) {\n                  await validateTypes({\n                    value: chunk.data,\n                    schema: dataPartSchemas[chunk.type],\n                  });\n                }\n\n                // cast, validation is done above\n                const dataChunk = chunk as DataUIMessageChunk<\n                  InferUIMessageData<UI_MESSAGE>\n                >;\n\n                // transient parts are not added to the message state\n                if (dataChunk.transient) {\n                  onData?.(dataChunk);\n                  break;\n                }\n\n                const existingUIPart =\n                  dataChunk.id != null\n                    ? (state.message.parts.find(\n                        chunkArg =>\n                          dataChunk.type === chunkArg.type &&\n                          dataChunk.id === chunkArg.id,\n                      ) as\n                        | DataUIPart<InferUIMessageData<UI_MESSAGE>>\n                        | undefined)\n                    : undefined;\n\n                if (existingUIPart != null) {\n                  existingUIPart.data = dataChunk.data;\n                } else {\n                  state.message.parts.push(dataChunk);\n                }\n\n                onData?.(dataChunk);\n\n                write();\n              }\n            }\n          }\n\n          controller.enqueue(chunk as InferUIMessageChunk<UI_MESSAGE>);\n        });\n      },\n    }),\n  );\n}\n", "import { z } from 'zod/v4';\nimport {\n  ProviderMetadata,\n  providerMetadataSchema,\n} from '../types/provider-metadata';\nimport {\n  InferUIMessageData,\n  InferUIMessageMetadata,\n  UIDataTypes,\n  UIMessage,\n} from '../ui/ui-messages';\nimport { ValueOf } from '../util/value-of';\n\nexport const uiMessageChunkSchema = z.union([\n  z.strictObject({\n    type: z.literal('text-start'),\n    id: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('text-delta'),\n    id: z.string(),\n    delta: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('text-end'),\n    id: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('error'),\n    errorText: z.string(),\n  }),\n  z.strictObject({\n    type: z.literal('tool-input-start'),\n    toolCallId: z.string(),\n    toolName: z.string(),\n    providerExecuted: z.boolean().optional(),\n    dynamic: z.boolean().optional(),\n  }),\n  z.strictObject({\n    type: z.literal('tool-input-delta'),\n    toolCallId: z.string(),\n    inputTextDelta: z.string(),\n  }),\n  z.strictObject({\n    type: z.literal('tool-input-available'),\n    toolCallId: z.string(),\n    toolName: z.string(),\n    input: z.unknown(),\n    providerExecuted: z.boolean().optional(),\n    providerMetadata: providerMetadataSchema.optional(),\n    dynamic: z.boolean().optional(),\n  }),\n  z.strictObject({\n    type: z.literal('tool-input-error'),\n    toolCallId: z.string(),\n    toolName: z.string(),\n    input: z.unknown(),\n    providerExecuted: z.boolean().optional(),\n    providerMetadata: providerMetadataSchema.optional(),\n    dynamic: z.boolean().optional(),\n    errorText: z.string(),\n  }),\n  z.strictObject({\n    type: z.literal('tool-output-available'),\n    toolCallId: z.string(),\n    output: z.unknown(),\n    providerExecuted: z.boolean().optional(),\n    dynamic: z.boolean().optional(),\n    preliminary: z.boolean().optional(),\n  }),\n  z.strictObject({\n    type: z.literal('tool-output-error'),\n    toolCallId: z.string(),\n    errorText: z.string(),\n    providerExecuted: z.boolean().optional(),\n    dynamic: z.boolean().optional(),\n  }),\n  z.strictObject({\n    type: z.literal('reasoning'),\n    text: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('reasoning-start'),\n    id: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('reasoning-delta'),\n    id: z.string(),\n    delta: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('reasoning-end'),\n    id: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('reasoning-part-finish'),\n  }),\n  z.strictObject({\n    type: z.literal('source-url'),\n    sourceId: z.string(),\n    url: z.string(),\n    title: z.string().optional(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('source-document'),\n    sourceId: z.string(),\n    mediaType: z.string(),\n    title: z.string(),\n    filename: z.string().optional(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.literal('file'),\n    url: z.string(),\n    mediaType: z.string(),\n    providerMetadata: providerMetadataSchema.optional(),\n  }),\n  z.strictObject({\n    type: z.string().startsWith('data-'),\n    id: z.string().optional(),\n    data: z.unknown(),\n    transient: z.boolean().optional(),\n  }),\n  z.strictObject({\n    type: z.literal('start-step'),\n  }),\n  z.strictObject({\n    type: z.literal('finish-step'),\n  }),\n  z.strictObject({\n    type: z.literal('start'),\n    messageId: z.string().optional(),\n    messageMetadata: z.unknown().optional(),\n  }),\n  z.strictObject({\n    type: z.literal('finish'),\n    messageMetadata: z.unknown().optional(),\n  }),\n  z.strictObject({\n    type: z.literal('abort'),\n  }),\n  z.strictObject({\n    type: z.literal('message-metadata'),\n    messageMetadata: z.unknown(),\n  }),\n]);\n\nexport type DataUIMessageChunk<DATA_TYPES extends UIDataTypes> = ValueOf<{\n  [NAME in keyof DATA_TYPES & string]: {\n    type: `data-${NAME}`;\n    id?: string;\n    data: DATA_TYPES[NAME];\n    transient?: boolean;\n  };\n}>;\n\nexport type UIMessageChunk<\n  METADATA = unknown,\n  DATA_TYPES extends UIDataTypes = UIDataTypes,\n> =\n  | {\n      type: 'text-start';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'text-delta';\n      delta: string;\n      id: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'text-end';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'reasoning-start';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'reasoning-delta';\n      id: string;\n      delta: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'reasoning-end';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'error';\n      errorText: string;\n    }\n  | {\n      type: 'tool-input-available';\n      toolCallId: string;\n      toolName: string;\n      input: unknown;\n      providerExecuted?: boolean;\n      providerMetadata?: ProviderMetadata;\n      dynamic?: boolean;\n    }\n  | {\n      type: 'tool-input-error';\n      toolCallId: string;\n      toolName: string;\n      input: unknown;\n      providerExecuted?: boolean;\n      providerMetadata?: ProviderMetadata;\n      dynamic?: boolean;\n      errorText: string;\n    }\n  | {\n      type: 'tool-output-available';\n      toolCallId: string;\n      output: unknown;\n      providerExecuted?: boolean;\n      dynamic?: boolean;\n      preliminary?: boolean;\n    }\n  | {\n      type: 'tool-output-error';\n      toolCallId: string;\n      errorText: string;\n      providerExecuted?: boolean;\n      dynamic?: boolean;\n    }\n  | {\n      type: 'tool-input-start';\n      toolCallId: string;\n      toolName: string;\n      providerExecuted?: boolean;\n      dynamic?: boolean;\n    }\n  | {\n      type: 'tool-input-delta';\n      toolCallId: string;\n      inputTextDelta: string;\n    }\n  | {\n      type: 'source-url';\n      sourceId: string;\n      url: string;\n      title?: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'source-document';\n      sourceId: string;\n      mediaType: string;\n      title: string;\n      filename?: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'file';\n      url: string;\n      mediaType: string;\n    }\n  | DataUIMessageChunk<DATA_TYPES>\n  | {\n      type: 'start-step';\n    }\n  | {\n      type: 'finish-step';\n    }\n  | {\n      type: 'start';\n      messageId?: string;\n      messageMetadata?: METADATA;\n    }\n  | {\n      type: 'finish';\n      messageMetadata?: METADATA;\n    }\n  | {\n      type: 'abort';\n    }\n  | {\n      type: 'message-metadata';\n      messageMetadata: METADATA;\n    };\n\nexport function isDataUIMessageChunk(\n  chunk: UIMessageChunk,\n): chunk is DataUIMessageChunk<UIDataTypes> {\n  return chunk.type.startsWith('data-');\n}\n\nexport type InferUIMessageChunk<T extends UIMessage> = UIMessageChunk<\n  InferUIMessageMetadata<T>,\n  InferUIMessageData<T>\n>;\n", "/**\n * Deeply merges two objects together.\n * - Properties from the `overrides` object override those in the `base` object with the same key.\n * - For nested objects, the merge is performed recursively (deep merge).\n * - Arrays are replaced, not merged.\n * - Primitive values are replaced.\n * - If both `base` and `overrides` are undefined, returns undefined.\n * - If one of `base` or `overrides` is undefined, returns the other.\n *\n * @param base The target object to merge into\n * @param overrides The source object to merge from\n * @returns A new object with the merged properties, or undefined if both inputs are undefined\n */\nexport function mergeObjects<T extends object, U extends object>(\n  base: T | undefined,\n  overrides: U | undefined,\n): (T & U) | T | U | undefined {\n  // If both inputs are undefined, return undefined\n  if (base === undefined && overrides === undefined) {\n    return undefined;\n  }\n\n  // If target is undefined, return source\n  if (base === undefined) {\n    return overrides;\n  }\n\n  // If source is undefined, return target\n  if (overrides === undefined) {\n    return base;\n  }\n\n  // Create a new object to avoid mutating the inputs\n  const result = { ...base } as T & U;\n\n  // Iterate through all keys in the source object\n  for (const key in overrides) {\n    if (Object.prototype.hasOwnProperty.call(overrides, key)) {\n      const overridesValue = overrides[key];\n\n      // Skip if the overrides value is undefined\n      if (overridesValue === undefined) continue;\n\n      // Get the base value if it exists\n      const baseValue =\n        key in base ? base[key as unknown as keyof T] : undefined;\n\n      // Check if both values are objects that can be deeply merged\n      const isSourceObject =\n        overridesValue !== null &&\n        typeof overridesValue === 'object' &&\n        !Array.isArray(overridesValue) &&\n        !(overridesValue instanceof Date) &&\n        !(overridesValue instanceof RegExp);\n\n      const isTargetObject =\n        baseValue !== null &&\n        baseValue !== undefined &&\n        typeof baseValue === 'object' &&\n        !Array.isArray(baseValue) &&\n        !(baseValue instanceof Date) &&\n        !(baseValue instanceof RegExp);\n\n      // If both values are mergeable objects, merge them recursively\n      if (isSourceObject && isTargetObject) {\n        result[key as keyof (T & U)] = mergeObjects(\n          baseValue as object,\n          overridesValue as object,\n        ) as any;\n      } else {\n        // For primitives, arrays, or when one value is not a mergeable object,\n        // simply override with the source value\n        result[key as keyof (T & U)] = overridesValue as any;\n      }\n    }\n  }\n\n  return result;\n}\n", "import { JSONValue } from '@ai-sdk/provider';\nimport { safeParseJSON } from '@ai-sdk/provider-utils';\nimport { fixJson } from './fix-json';\n\nexport async function parsePartialJson(jsonText: string | undefined): Promise<{\n  value: JSONValue | undefined;\n  state:\n    | 'undefined-input'\n    | 'successful-parse'\n    | 'repaired-parse'\n    | 'failed-parse';\n}> {\n  if (jsonText === undefined) {\n    return { value: undefined, state: 'undefined-input' };\n  }\n\n  let result = await safeParseJSON({ text: jsonText });\n\n  if (result.success) {\n    return { value: result.value, state: 'successful-parse' };\n  }\n\n  result = await safeParseJSON({ text: fixJson(jsonText) });\n\n  if (result.success) {\n    return { value: result.value, state: 'repaired-parse' };\n  }\n\n  return { value: undefined, state: 'failed-parse' };\n}\n", "type State =\n  | 'ROOT'\n  | 'FINISH'\n  | 'INSIDE_STRING'\n  | 'INSIDE_STRING_ESCAPE'\n  | 'INSIDE_LITERAL'\n  | 'INSIDE_NUMBER'\n  | 'INSIDE_OBJECT_START'\n  | 'INSIDE_OBJECT_KEY'\n  | 'INSIDE_OBJECT_AFTER_KEY'\n  | 'INSIDE_OBJECT_BEFORE_VALUE'\n  | 'INSIDE_OBJECT_AFTER_VALUE'\n  | 'INSIDE_OBJECT_AFTER_COMMA'\n  | 'INSIDE_ARRAY_START'\n  | 'INSIDE_ARRAY_AFTER_VALUE'\n  | 'INSIDE_ARRAY_AFTER_COMMA';\n\n// Implemented as a scanner with additional fixing\n// that performs a single linear time scan pass over the partial JSON.\n//\n// The states should ideally match relevant states from the JSON spec:\n// https://www.json.org/json-en.html\n//\n// Please note that invalid JSON is not considered/covered, because it\n// is assumed that the resulting JSON will be processed by a standard\n// JSON parser that will detect any invalid JSON.\nexport function fixJson(input: string): string {\n  const stack: State[] = ['ROOT'];\n  let lastValidIndex = -1;\n  let literalStart: number | null = null;\n\n  function processValueStart(char: string, i: number, swapState: State) {\n    {\n      switch (char) {\n        case '\"': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_STRING');\n          break;\n        }\n\n        case 'f':\n        case 't':\n        case 'n': {\n          lastValidIndex = i;\n          literalStart = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_LITERAL');\n          break;\n        }\n\n        case '-': {\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n        case '0':\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_NUMBER');\n          break;\n        }\n\n        case '{': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_OBJECT_START');\n          break;\n        }\n\n        case '[': {\n          lastValidIndex = i;\n          stack.pop();\n          stack.push(swapState);\n          stack.push('INSIDE_ARRAY_START');\n          break;\n        }\n      }\n    }\n  }\n\n  function processAfterObjectValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_OBJECT_AFTER_COMMA');\n        break;\n      }\n      case '}': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  function processAfterArrayValue(char: string, i: number) {\n    switch (char) {\n      case ',': {\n        stack.pop();\n        stack.push('INSIDE_ARRAY_AFTER_COMMA');\n        break;\n      }\n      case ']': {\n        lastValidIndex = i;\n        stack.pop();\n        break;\n      }\n    }\n  }\n\n  for (let i = 0; i < input.length; i++) {\n    const char = input[i];\n    const currentState = stack[stack.length - 1];\n\n    switch (currentState) {\n      case 'ROOT':\n        processValueStart(char, i, 'FINISH');\n        break;\n\n      case 'INSIDE_OBJECT_START': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n          case '}': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_COMMA': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_AFTER_KEY');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_KEY': {\n        switch (char) {\n          case ':': {\n            stack.pop();\n            stack.push('INSIDE_OBJECT_BEFORE_VALUE');\n\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_OBJECT_BEFORE_VALUE': {\n        processValueStart(char, i, 'INSIDE_OBJECT_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        processAfterObjectValue(char, i);\n        break;\n      }\n\n      case 'INSIDE_STRING': {\n        switch (char) {\n          case '\"': {\n            stack.pop();\n            lastValidIndex = i;\n            break;\n          }\n\n          case '\\\\': {\n            stack.push('INSIDE_STRING_ESCAPE');\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START': {\n        switch (char) {\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n            break;\n          }\n        }\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        switch (char) {\n          case ',': {\n            stack.pop();\n            stack.push('INSIDE_ARRAY_AFTER_COMMA');\n            break;\n          }\n\n          case ']': {\n            lastValidIndex = i;\n            stack.pop();\n            break;\n          }\n\n          default: {\n            lastValidIndex = i;\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_ARRAY_AFTER_COMMA': {\n        processValueStart(char, i, 'INSIDE_ARRAY_AFTER_VALUE');\n        break;\n      }\n\n      case 'INSIDE_STRING_ESCAPE': {\n        stack.pop();\n        lastValidIndex = i;\n\n        break;\n      }\n\n      case 'INSIDE_NUMBER': {\n        switch (char) {\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9': {\n            lastValidIndex = i;\n            break;\n          }\n\n          case 'e':\n          case 'E':\n          case '-':\n          case '.': {\n            break;\n          }\n\n          case ',': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case '}': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n              processAfterObjectValue(char, i);\n            }\n\n            break;\n          }\n\n          case ']': {\n            stack.pop();\n\n            if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n              processAfterArrayValue(char, i);\n            }\n\n            break;\n          }\n\n          default: {\n            stack.pop();\n            break;\n          }\n        }\n\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, i + 1);\n\n        if (\n          !'false'.startsWith(partialLiteral) &&\n          !'true'.startsWith(partialLiteral) &&\n          !'null'.startsWith(partialLiteral)\n        ) {\n          stack.pop();\n\n          if (stack[stack.length - 1] === 'INSIDE_OBJECT_AFTER_VALUE') {\n            processAfterObjectValue(char, i);\n          } else if (stack[stack.length - 1] === 'INSIDE_ARRAY_AFTER_VALUE') {\n            processAfterArrayValue(char, i);\n          }\n        } else {\n          lastValidIndex = i;\n        }\n\n        break;\n      }\n    }\n  }\n\n  let result = input.slice(0, lastValidIndex + 1);\n\n  for (let i = stack.length - 1; i >= 0; i--) {\n    const state = stack[i];\n\n    switch (state) {\n      case 'INSIDE_STRING': {\n        result += '\"';\n        break;\n      }\n\n      case 'INSIDE_OBJECT_KEY':\n      case 'INSIDE_OBJECT_AFTER_KEY':\n      case 'INSIDE_OBJECT_AFTER_COMMA':\n      case 'INSIDE_OBJECT_START':\n      case 'INSIDE_OBJECT_BEFORE_VALUE':\n      case 'INSIDE_OBJECT_AFTER_VALUE': {\n        result += '}';\n        break;\n      }\n\n      case 'INSIDE_ARRAY_START':\n      case 'INSIDE_ARRAY_AFTER_COMMA':\n      case 'INSIDE_ARRAY_AFTER_VALUE': {\n        result += ']';\n        break;\n      }\n\n      case 'INSIDE_LITERAL': {\n        const partialLiteral = input.substring(literalStart!, input.length);\n\n        if ('true'.startsWith(partialLiteral)) {\n          result += 'true'.slice(partialLiteral.length);\n        } else if ('false'.startsWith(partialLiteral)) {\n          result += 'false'.slice(partialLiteral.length);\n        } else if ('null'.startsWith(partialLiteral)) {\n          result += 'null'.slice(partialLiteral.length);\n        }\n      }\n    }\n  }\n\n  return result;\n}\n", "import {\n  InferToolInput,\n  InferToolOutput,\n  Tool,\n  ToolCall,\n} from '@ai-sdk/provider-utils';\nimport { ToolSet } from '../generate-text';\nimport { ProviderMetadata } from '../types/provider-metadata';\nimport { DeepPartial } from '../util/deep-partial';\nimport { ValueOf } from '../util/value-of';\n\n/**\nThe data types that can be used in the UI message for the UI message data parts.\n */\nexport type UIDataTypes = Record<string, unknown>;\n\nexport type UITool = {\n  input: unknown;\n  output: unknown | undefined;\n};\n\n/**\n * Infer the input and output types of a tool so it can be used as a UI tool.\n */\nexport type InferUITool<TOOL extends Tool> = {\n  input: InferToolInput<TOOL>;\n  output: InferToolOutput<TOOL>;\n};\n\n/**\n * Infer the input and output types of a tool set so it can be used as a UI tool set.\n */\nexport type InferUITools<TOOLS extends ToolSet> = {\n  [NAME in keyof TOOLS & string]: InferUITool<TOOLS[NAME]>;\n};\n\nexport type UITools = Record<string, UITool>;\n\n/**\nAI SDK UI Messages. They are used in the client and to communicate between the frontend and the API routes.\n */\nexport interface UIMessage<\n  METADATA = unknown,\n  DATA_PARTS extends UIDataTypes = UIDataTypes,\n  TOOLS extends UITools = UITools,\n> {\n  /**\nA unique identifier for the message.\n   */\n  id: string;\n\n  /**\nThe role of the message.\n   */\n  role: 'system' | 'user' | 'assistant';\n\n  /**\nThe metadata of the message.\n   */\n  metadata?: METADATA;\n\n  /**\nThe parts of the message. Use this for rendering the message in the UI.\n\nSystem messages should be avoided (set the system prompt on the server instead).\nThey can have text parts.\n\nUser messages can have text parts and file parts.\n\nAssistant messages can have text, reasoning, tool invocation, and file parts.\n   */\n  parts: Array<UIMessagePart<DATA_PARTS, TOOLS>>;\n}\n\nexport type UIMessagePart<\n  DATA_TYPES extends UIDataTypes,\n  TOOLS extends UITools,\n> =\n  | TextUIPart\n  | ReasoningUIPart\n  | ToolUIPart<TOOLS>\n  | DynamicToolUIPart\n  | SourceUrlUIPart\n  | SourceDocumentUIPart\n  | FileUIPart\n  | DataUIPart<DATA_TYPES>\n  | StepStartUIPart;\n\n/**\n * A text part of a message.\n */\nexport type TextUIPart = {\n  type: 'text';\n\n  /**\n   * The text content.\n   */\n  text: string;\n\n  /**\n   * The state of the text part.\n   */\n  state?: 'streaming' | 'done';\n\n  /**\n   * The provider metadata.\n   */\n  providerMetadata?: ProviderMetadata;\n};\n\n/**\n * A reasoning part of a message.\n */\nexport type ReasoningUIPart = {\n  type: 'reasoning';\n\n  /**\n   * The reasoning text.\n   */\n  text: string;\n\n  /**\n   * The state of the reasoning part.\n   */\n  state?: 'streaming' | 'done';\n\n  /**\n   * The provider metadata.\n   */\n  providerMetadata?: ProviderMetadata;\n};\n\n/**\n * A source part of a message.\n */\nexport type SourceUrlUIPart = {\n  type: 'source-url';\n  sourceId: string;\n  url: string;\n  title?: string;\n  providerMetadata?: ProviderMetadata;\n};\n\n/**\n * A document source part of a message.\n */\nexport type SourceDocumentUIPart = {\n  type: 'source-document';\n  sourceId: string;\n  mediaType: string;\n  title: string;\n  filename?: string;\n  providerMetadata?: ProviderMetadata;\n};\n\n/**\n * A file part of a message.\n */\nexport type FileUIPart = {\n  type: 'file';\n\n  /**\n   * IANA media type of the file.\n   *\n   * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n   */\n  mediaType: string;\n\n  /**\n   * Optional filename of the file.\n   */\n  filename?: string;\n\n  /**\n   * The URL of the file.\n   * It can either be a URL to a hosted file or a [Data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs).\n   */\n  url: string;\n\n  /**\n   * The provider metadata.\n   */\n  providerMetadata?: ProviderMetadata;\n};\n\n/**\n * A step boundary part of a message.\n */\nexport type StepStartUIPart = {\n  type: 'step-start';\n};\n\nexport type DataUIPart<DATA_TYPES extends UIDataTypes> = ValueOf<{\n  [NAME in keyof DATA_TYPES & string]: {\n    type: `data-${NAME}`;\n    id?: string;\n    data: DATA_TYPES[NAME];\n  };\n}>;\n\nexport type ToolUIPart<TOOLS extends UITools = UITools> = ValueOf<{\n  [NAME in keyof TOOLS & string]: {\n    type: `tool-${NAME}`;\n    toolCallId: string;\n  } & (\n    | {\n        state: 'input-streaming';\n        input: DeepPartial<TOOLS[NAME]['input']> | undefined;\n        providerExecuted?: boolean;\n        output?: never;\n        errorText?: never;\n      }\n    | {\n        state: 'input-available';\n        input: TOOLS[NAME]['input'];\n        providerExecuted?: boolean;\n        output?: never;\n        errorText?: never;\n        callProviderMetadata?: ProviderMetadata;\n      }\n    | {\n        state: 'output-available';\n        input: TOOLS[NAME]['input'];\n        output: TOOLS[NAME]['output'];\n        errorText?: never;\n        providerExecuted?: boolean;\n        callProviderMetadata?: ProviderMetadata;\n        preliminary?: boolean;\n      }\n    | {\n        state: 'output-error'; // TODO AI SDK 6: change to 'error' state\n        input: TOOLS[NAME]['input'] | undefined;\n        rawInput?: unknown; // TODO AI SDK 6: remove this field, input should be unknown\n        output?: never;\n        errorText: string;\n        providerExecuted?: boolean;\n        callProviderMetadata?: ProviderMetadata;\n      }\n  );\n}>;\n\nexport type DynamicToolUIPart = {\n  type: 'dynamic-tool';\n  toolName: string;\n  toolCallId: string;\n} & (\n  | {\n      state: 'input-streaming';\n      input: unknown | undefined;\n      output?: never;\n      errorText?: never;\n    }\n  | {\n      state: 'input-available';\n      input: unknown;\n      output?: never;\n      errorText?: never;\n      callProviderMetadata?: ProviderMetadata;\n    }\n  | {\n      state: 'output-available';\n      input: unknown;\n      output: unknown;\n      errorText?: never;\n      callProviderMetadata?: ProviderMetadata;\n      preliminary?: boolean;\n    }\n  | {\n      state: 'output-error'; // TODO AI SDK 6: change to 'error' state\n      input: unknown;\n      output?: never;\n      errorText: string;\n      callProviderMetadata?: ProviderMetadata;\n    }\n);\n\nexport function isToolUIPart<TOOLS extends UITools>(\n  part: UIMessagePart<UIDataTypes, TOOLS>,\n): part is ToolUIPart<TOOLS> {\n  return part.type.startsWith('tool-');\n}\n\nexport function isDynamicToolUIPart(\n  part: UIMessagePart<UIDataTypes, UITools>,\n): part is DynamicToolUIPart {\n  return part.type === 'dynamic-tool';\n}\n\nexport function isToolOrDynamicToolUIPart<TOOLS extends UITools>(\n  part: UIMessagePart<UIDataTypes, TOOLS>,\n): part is ToolUIPart<TOOLS> | DynamicToolUIPart {\n  return isToolUIPart(part) || isDynamicToolUIPart(part);\n}\n\nexport function getToolName<TOOLS extends UITools>(\n  part: ToolUIPart<TOOLS>,\n): keyof TOOLS {\n  return part.type.split('-').slice(1).join('-') as keyof TOOLS;\n}\n\nexport function getToolOrDynamicToolName(\n  part: ToolUIPart<UITools> | DynamicToolUIPart,\n): string {\n  return isDynamicToolUIPart(part) ? part.toolName : getToolName(part);\n}\n\nexport type InferUIMessageMetadata<T extends UIMessage> =\n  T extends UIMessage<infer METADATA> ? METADATA : unknown;\n\nexport type InferUIMessageData<T extends UIMessage> =\n  T extends UIMessage<unknown, infer DATA_TYPES> ? DATA_TYPES : UIDataTypes;\n\nexport type InferUIMessageTools<T extends UIMessage> =\n  T extends UIMessage<unknown, UIDataTypes, infer TOOLS> ? TOOLS : UITools;\n\nexport type InferUIMessageToolOutputs<UI_MESSAGE extends UIMessage> =\n  InferUIMessageTools<UI_MESSAGE>[keyof InferUIMessageTools<UI_MESSAGE>]['output'];\n\nexport type InferUIMessageToolCall<UI_MESSAGE extends UIMessage> =\n  | ValueOf<{\n      [NAME in keyof InferUIMessageTools<UI_MESSAGE>]: ToolCall<\n        NAME & string,\n        InferUIMessageTools<UI_MESSAGE>[NAME] extends { input: infer INPUT }\n          ? INPUT\n          : never\n      > & { dynamic?: false };\n    }>\n  | (ToolCall<string, unknown> & { dynamic: true });\n", "import {\n  createStreamingUIMessageState,\n  processUIMessageStream,\n  StreamingUIMessageState,\n} from '../ui/process-ui-message-stream';\nimport { UIMessage } from '../ui/ui-messages';\nimport { ErrorHandler } from '../util/error-handler';\nimport { InferUIMessageChunk, UIMessageChunk } from './ui-message-chunks';\nimport { UIMessageStreamOnFinishCallback } from './ui-message-stream-on-finish-callback';\n\nexport function handleUIMessageStreamFinish<UI_MESSAGE extends UIMessage>({\n  messageId,\n  originalMessages = [],\n  onFinish,\n  onError,\n  stream,\n}: {\n  stream: ReadableStream<InferUIMessageChunk<UI_MESSAGE>>;\n\n  /**\n   * The message ID to use for the response message.\n   * If not provided, no id will be set for the response message.\n   */\n  messageId?: string;\n\n  /**\n   * The original messages.\n   */\n  originalMessages?: UI_MESSAGE[];\n\n  onError: ErrorHandler;\n\n  onFinish?: UIMessageStreamOnFinishCallback<UI_MESSAGE>;\n}): ReadableStream<InferUIMessageChunk<UI_MESSAGE>> {\n  // last message is only relevant for assistant messages\n  let lastMessage: UI_MESSAGE | undefined =\n    originalMessages?.[originalMessages.length - 1];\n  if (lastMessage?.role !== 'assistant') {\n    lastMessage = undefined;\n  } else {\n    // appending to the last message, so we need to use the same id\n    messageId = lastMessage.id;\n  }\n\n  let isAborted = false;\n\n  const idInjectedStream = stream.pipeThrough(\n    new TransformStream<\n      InferUIMessageChunk<UI_MESSAGE>,\n      InferUIMessageChunk<UI_MESSAGE>\n    >({\n      transform(chunk, controller) {\n        // when there is no messageId in the start chunk,\n        // but the user checked for persistence,\n        // inject the messageId into the chunk\n        if (chunk.type === 'start') {\n          const startChunk = chunk as UIMessageChunk & { type: 'start' };\n          if (startChunk.messageId == null && messageId != null) {\n            startChunk.messageId = messageId;\n          }\n        }\n\n        if (chunk.type === 'abort') {\n          isAborted = true;\n        }\n\n        controller.enqueue(chunk);\n      },\n    }),\n  );\n\n  if (onFinish == null) {\n    return idInjectedStream;\n  }\n\n  const state = createStreamingUIMessageState<UI_MESSAGE>({\n    lastMessage: lastMessage\n      ? (structuredClone(lastMessage) as UI_MESSAGE)\n      : undefined,\n    messageId: messageId ?? '', // will be overridden by the stream\n  });\n\n  const runUpdateMessageJob = async (\n    job: (options: {\n      state: StreamingUIMessageState<UI_MESSAGE>;\n      write: () => void;\n    }) => Promise<void>,\n  ) => {\n    await job({ state, write: () => {} });\n  };\n\n  let finishCalled = false;\n\n  const callOnFinish = async () => {\n    if (finishCalled || !onFinish) {\n      return;\n    }\n    finishCalled = true;\n\n    const isContinuation = state.message.id === lastMessage?.id;\n    await onFinish({\n      isAborted,\n      isContinuation,\n      responseMessage: state.message as UI_MESSAGE,\n      messages: [\n        ...(isContinuation ? originalMessages.slice(0, -1) : originalMessages),\n        state.message,\n      ] as UI_MESSAGE[],\n    });\n  };\n\n  return processUIMessageStream<UI_MESSAGE>({\n    stream: idInjectedStream,\n    runUpdateMessageJob,\n    onError,\n  }).pipeThrough(\n    new TransformStream<\n      InferUIMessageChunk<UI_MESSAGE>,\n      InferUIMessageChunk<UI_MESSAGE>\n    >({\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n      },\n      // @ts-expect-error cancel is still new and missing from types https://developer.mozilla.org/en-US/docs/Web/API/TransformStream#browser_compatibility\n      async cancel() {\n        await callOnFinish();\n      },\n\n      async flush() {\n        await callOnFinish();\n      },\n    }),\n  );\n}\n", "import { ServerResponse } from 'node:http';\nimport { prepareHeaders } from '../util/prepare-headers';\nimport { writeToServerResponse } from '../util/write-to-server-response';\nimport { JsonToSseTransformStream } from './json-to-sse-transform-stream';\nimport { UI_MESSAGE_STREAM_HEADERS } from './ui-message-stream-headers';\nimport { UIMessageChunk } from './ui-message-chunks';\nimport { UIMessageStreamResponseInit } from './ui-message-stream-response-init';\n\nexport function pipeUIMessageStreamToResponse({\n  response,\n  status,\n  statusText,\n  headers,\n  stream,\n  consumeSseStream,\n}: {\n  response: ServerResponse;\n  stream: ReadableStream<UIMessageChunk>;\n} & UIMessageStreamResponseInit): void {\n  let sseStream = stream.pipeThrough(new JsonToSseTransformStream());\n\n  // when the consumeSseStream is provided, we need to tee the stream\n  // and send the second part to the consumeSseStream function\n  // so that it can be consumed by the client independently\n  if (consumeSseStream) {\n    const [stream1, stream2] = sseStream.tee();\n    sseStream = stream1;\n    consumeSseStream({ stream: stream2 }); // no await (do not block the response)\n  }\n\n  writeToServerResponse({\n    response,\n    status,\n    statusText,\n    headers: Object.fromEntries(\n      prepareHeaders(headers, UI_MESSAGE_STREAM_HEADERS).entries(),\n    ),\n    stream: sseStream.pipeThrough(new TextEncoderStream()),\n  });\n}\n", "/**\n * A type that combines AsyncIterable and ReadableStream.\n * This allows a ReadableStream to be consumed using for-await-of syntax.\n */\nexport type AsyncIterableStream<T> = AsyncIterable<T> & ReadableStream<T>;\n\n/**\n * Wraps a ReadableStream and returns an object that is both a ReadableStream and an AsyncIterable.\n * This enables consumption of the stream using for-await-of, with proper resource cleanup on early exit or error.\n *\n * @template T The type of the stream's chunks.\n * @param source The source ReadableStream to wrap.\n * @returns An AsyncIterableStream that can be used as both a ReadableStream and an AsyncIterable.\n */\nexport function createAsyncIterableStream<T>(\n  source: ReadableStream<T>,\n): AsyncIterableStream<T> {\n  // Pipe through a TransformStream to ensure a fresh, unlocked stream.\n  const stream = source.pipeThrough(new TransformStream<T, T>());\n\n  /**\n   * Implements the async iterator protocol for the stream.\n   * Ensures proper cleanup (cancelling and releasing the reader) on completion, early exit, or error.\n   */\n  (stream as AsyncIterableStream<T>)[Symbol.asyncIterator] = function (\n    this: ReadableStream<T>,\n  ): AsyncIterator<T> {\n    const reader = this.getReader();\n\n    let finished = false;\n\n    /**\n     * Cleans up the reader by cancelling and releasing the lock.\n     */\n    async function cleanup(cancelStream: boolean) {\n      finished = true;\n      try {\n        if (cancelStream) {\n          await reader.cancel?.();\n        }\n      } finally {\n        try {\n          reader.releaseLock();\n        } catch {}\n      }\n    }\n\n    return {\n      /**\n       * Reads the next chunk from the stream.\n       * @returns A promise resolving to the next IteratorResult.\n       */\n      async next(): Promise<IteratorResult<T>> {\n        if (finished) {\n          return { done: true, value: undefined };\n        }\n\n        const { done, value } = await reader.read();\n\n        if (done) {\n          await cleanup(true);\n          return { done: true, value: undefined };\n        }\n\n        return { done: false, value };\n      },\n\n      /**\n       * Called on early exit (e.g., break from for-await).\n       * Ensures the stream is cancelled and resources are released.\n       * @returns A promise resolving to a completed IteratorResult.\n       */\n      async return(): Promise<IteratorResult<T>> {\n        await cleanup(true);\n        return { done: true, value: undefined };\n      },\n\n      /**\n       * Called on early exit with error.\n       * Ensures the stream is cancelled and resources are released, then rethrows the error.\n       * @param err The error to throw.\n       * @returns A promise that rejects with the provided error.\n       */\n      async throw(err: unknown): Promise<IteratorResult<T>> {\n        await cleanup(true);\n        throw err;\n      },\n    };\n  };\n\n  return stream as AsyncIterableStream<T>;\n}\n", "/**\n * Consumes a ReadableStream until it's fully read.\n *\n * This function reads the stream chunk by chunk until the stream is exhausted.\n * It doesn't process or return the data from the stream; it simply ensures\n * that the entire stream is read.\n *\n * @param {ReadableStream} stream - The ReadableStream to be consumed.\n * @returns {Promise<void>} A promise that resolves when the stream is fully consumed.\n */\nexport async function consumeStream({\n  stream,\n  onError,\n}: {\n  stream: ReadableStream;\n  onError?: (error: unknown) => void;\n}): Promise<void> {\n  const reader = stream.getReader();\n  try {\n    while (true) {\n      const { done } = await reader.read();\n      if (done) break;\n    }\n  } catch (error) {\n    onError?.(error);\n  } finally {\n    reader.releaseLock();\n  }\n}\n", "import { ErrorHandler } from './error-handler';\n\n/**\n * Creates a Promise with externally accessible resolve and reject functions.\n *\n * @template T - The type of the value that the Promise will resolve to.\n * @returns An object containing:\n *   - promise: A Promise that can be resolved or rejected externally.\n *   - resolve: A function to resolve the Promise with a value of type T.\n *   - reject: A function to reject the Promise with an error.\n */\nexport function createResolvablePromise<T = any>(): {\n  promise: Promise<T>;\n  resolve: (value: T) => void;\n  reject: ErrorHandler;\n} {\n  let resolve: (value: T) => void;\n  let reject: ErrorHandler;\n\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n\n  return {\n    promise,\n    resolve: resolve!,\n    reject: reject!,\n  };\n}\n", "import { createResolvablePromise } from './create-resolvable-promise';\n\n/**\n * Creates a stitchable stream that can pipe one stream at a time.\n *\n * @template T - The type of values emitted by the streams.\n * @returns {Object} An object containing the stitchable stream and control methods.\n */\nexport function createStitchableStream<T>(): {\n  stream: ReadableStream<T>;\n  addStream: (innerStream: ReadableStream<T>) => void;\n  close: () => void;\n  terminate: () => void;\n} {\n  let innerStreamReaders: ReadableStreamDefaultReader<T>[] = [];\n  let controller: ReadableStreamDefaultController<T> | null = null;\n  let isClosed = false;\n  let waitForNewStream = createResolvablePromise<void>();\n\n  const terminate = () => {\n    isClosed = true;\n    waitForNewStream.resolve();\n\n    innerStreamReaders.forEach(reader => reader.cancel());\n    innerStreamReaders = [];\n    controller?.close();\n  };\n\n  const processPull = async () => {\n    // Case 1: Outer stream is closed and no more inner streams\n    if (isClosed && innerStreamReaders.length === 0) {\n      controller?.close();\n      return;\n    }\n\n    // Case 2: No inner streams available, but outer stream is open\n    // wait for a new inner stream to be added or the outer stream to close\n    if (innerStreamReaders.length === 0) {\n      waitForNewStream = createResolvablePromise<void>();\n      await waitForNewStream.promise;\n      return processPull();\n    }\n\n    try {\n      const { value, done } = await innerStreamReaders[0].read();\n\n      if (done) {\n        // Case 3: Current inner stream is done\n        innerStreamReaders.shift(); // Remove the finished stream\n\n        // Continue pulling from the next stream if available\n        if (innerStreamReaders.length > 0) {\n          await processPull();\n        } else if (isClosed) {\n          controller?.close();\n        }\n      } else {\n        // Case 4: Current inner stream returns an item\n        controller?.enqueue(value);\n      }\n    } catch (error) {\n      // Case 5: Current inner stream throws an error\n      controller?.error(error);\n      innerStreamReaders.shift(); // Remove the errored stream\n      terminate(); // we have errored, terminate all streams\n    }\n  };\n\n  return {\n    stream: new ReadableStream<T>({\n      start(controllerParam) {\n        controller = controllerParam;\n      },\n      pull: processPull,\n      async cancel() {\n        for (const reader of innerStreamReaders) {\n          await reader.cancel();\n        }\n        innerStreamReaders = [];\n        isClosed = true;\n      },\n    }),\n    addStream: (innerStream: ReadableStream<T>) => {\n      if (isClosed) {\n        throw new Error('Cannot add inner stream: outer stream is closed');\n      }\n\n      innerStreamReaders.push(innerStream.getReader());\n      waitForNewStream.resolve();\n    },\n\n    /**\n     * Gracefully close the outer stream. This will let the inner streams\n     * finish processing and then close the outer stream.\n     */\n    close: () => {\n      isClosed = true;\n      waitForNewStream.resolve();\n\n      if (innerStreamReaders.length === 0) {\n        controller?.close();\n      }\n    },\n\n    /**\n     * Immediately close the outer stream. This will cancel all inner streams\n     * and close the outer stream.\n     */\n    terminate,\n  };\n}\n", "/**\n * Delayed promise. It is only constructed once the value is accessed.\n * This is useful to avoid unhandled promise rejections when the promise is created\n * but not accessed.\n */\nexport class DelayedPromise<T> {\n  private status:\n    | { type: 'pending' }\n    | { type: 'resolved'; value: T }\n    | { type: 'rejected'; error: unknown } = { type: 'pending' };\n  private _promise: Promise<T> | undefined;\n  private _resolve: undefined | ((value: T) => void) = undefined;\n  private _reject: undefined | ((error: unknown) => void) = undefined;\n\n  get promise(): Promise<T> {\n    if (this._promise) {\n      return this._promise;\n    }\n\n    this._promise = new Promise<T>((resolve, reject) => {\n      if (this.status.type === 'resolved') {\n        resolve(this.status.value);\n      } else if (this.status.type === 'rejected') {\n        reject(this.status.error);\n      }\n\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n\n    return this._promise;\n  }\n\n  resolve(value: T): void {\n    this.status = { type: 'resolved', value };\n\n    if (this._promise) {\n      this._resolve?.(value);\n    }\n  }\n\n  reject(error: unknown): void {\n    this.status = { type: 'rejected', error };\n\n    if (this._promise) {\n      this._reject?.(error);\n    }\n  }\n}\n", "// Shim for performance.now() to support environments that don't have it:\nexport function now(): number {\n  return globalThis?.performance?.now() ?? Date.now();\n}\n", "import {\n  LanguageModelV2CallWarning,\n  LanguageModelV2StreamPart,\n} from '@ai-sdk/provider';\nimport {\n  executeTool,\n  generateId,\n  getErrorMessage,\n  ModelMessage,\n} from '@ai-sdk/provider-utils';\nimport { Tracer } from '@opentelemetry/api';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { recordErrorOnSpan, recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { FinishReason, LanguageModelUsage, ProviderMetadata } from '../types';\nimport { Source } from '../types/language-model';\nimport { DefaultGeneratedFileWithType, GeneratedFile } from './generated-file';\nimport { parseToolCall } from './parse-tool-call';\nimport { TypedToolCall } from './tool-call';\nimport { ToolCallRepairFunction } from './tool-call-repair-function';\nimport { TypedToolError } from './tool-error';\nimport { TypedToolResult } from './tool-result';\nimport { ToolSet } from './tool-set';\n\nexport type SingleRequestTextStreamPart<TOOLS extends ToolSet> =\n  // Text blocks:\n  | {\n      type: 'text-start';\n      providerMetadata?: ProviderMetadata;\n      id: string;\n    }\n  | {\n      type: 'text-delta';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n      delta: string;\n    }\n  | {\n      type: 'text-end';\n      providerMetadata?: ProviderMetadata;\n      id: string;\n    }\n\n  // Reasoning blocks:\n  | {\n      type: 'reasoning-start';\n      providerMetadata?: ProviderMetadata;\n      id: string;\n    }\n  | {\n      type: 'reasoning-delta';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n      delta: string;\n    }\n  | {\n      type: 'reasoning-end';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n    }\n\n  // Tool calls:\n  | {\n      type: 'tool-input-start';\n      id: string;\n      toolName: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'tool-input-delta';\n      id: string;\n      delta: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | {\n      type: 'tool-input-end';\n      id: string;\n      providerMetadata?: ProviderMetadata;\n    }\n  | ({ type: 'source' } & Source)\n  | { type: 'file'; file: GeneratedFile } // different because of GeneratedFile object\n  | ({ type: 'tool-call' } & TypedToolCall<TOOLS>)\n  | ({ type: 'tool-result' } & TypedToolResult<TOOLS>)\n  | ({ type: 'tool-error' } & TypedToolError<TOOLS>)\n  | { type: 'file'; file: GeneratedFile } // different because of GeneratedFile object\n  | { type: 'stream-start'; warnings: LanguageModelV2CallWarning[] }\n  | {\n      type: 'response-metadata';\n      id?: string;\n      timestamp?: Date;\n      modelId?: string;\n    }\n  | {\n      type: 'finish';\n      finishReason: FinishReason;\n      usage: LanguageModelUsage;\n      providerMetadata?: ProviderMetadata;\n    }\n  | { type: 'error'; error: unknown }\n  | { type: 'raw'; rawValue: unknown };\n\nexport function runToolsTransformation<TOOLS extends ToolSet>({\n  tools,\n  generatorStream,\n  tracer,\n  telemetry,\n  system,\n  messages,\n  abortSignal,\n  repairToolCall,\n  experimental_context,\n}: {\n  tools: TOOLS | undefined;\n  generatorStream: ReadableStream<LanguageModelV2StreamPart>;\n  tracer: Tracer;\n  telemetry: TelemetrySettings | undefined;\n  system: string | undefined;\n  messages: ModelMessage[];\n  abortSignal: AbortSignal | undefined;\n  repairToolCall: ToolCallRepairFunction<TOOLS> | undefined;\n  experimental_context: unknown;\n}): ReadableStream<SingleRequestTextStreamPart<TOOLS>> {\n  // tool results stream\n  let toolResultsStreamController: ReadableStreamDefaultController<\n    SingleRequestTextStreamPart<TOOLS>\n  > | null = null;\n  const toolResultsStream = new ReadableStream<\n    SingleRequestTextStreamPart<TOOLS>\n  >({\n    start(controller) {\n      toolResultsStreamController = controller;\n    },\n  });\n\n  // keep track of outstanding tool results for stream closing:\n  const outstandingToolResults = new Set<string>();\n\n  // keep track of tool inputs for provider-side tool results\n  const toolInputs = new Map<string, unknown>();\n\n  let canClose = false;\n  let finishChunk:\n    | (SingleRequestTextStreamPart<TOOLS> & { type: 'finish' })\n    | undefined = undefined;\n\n  function attemptClose() {\n    // close the tool results controller if no more outstanding tool calls\n    if (canClose && outstandingToolResults.size === 0) {\n      // we delay sending the finish chunk until all tool results (incl. delayed ones)\n      // are received to ensure that the frontend receives tool results before a message\n      // finish event arrives.\n      if (finishChunk != null) {\n        toolResultsStreamController!.enqueue(finishChunk);\n      }\n\n      toolResultsStreamController!.close();\n    }\n  }\n\n  // forward stream\n  const forwardStream = new TransformStream<\n    LanguageModelV2StreamPart,\n    SingleRequestTextStreamPart<TOOLS>\n  >({\n    async transform(\n      chunk: LanguageModelV2StreamPart,\n      controller: TransformStreamDefaultController<\n        SingleRequestTextStreamPart<TOOLS>\n      >,\n    ) {\n      const chunkType = chunk.type;\n\n      switch (chunkType) {\n        // forward:\n        case 'stream-start':\n        case 'text-start':\n        case 'text-delta':\n        case 'text-end':\n        case 'reasoning-start':\n        case 'reasoning-delta':\n        case 'reasoning-end':\n        case 'tool-input-start':\n        case 'tool-input-delta':\n        case 'tool-input-end':\n        case 'source':\n        case 'response-metadata':\n        case 'error':\n        case 'raw': {\n          controller.enqueue(chunk);\n          break;\n        }\n\n        case 'file': {\n          controller.enqueue({\n            type: 'file',\n            file: new DefaultGeneratedFileWithType({\n              data: chunk.data,\n              mediaType: chunk.mediaType,\n            }),\n          });\n          break;\n        }\n\n        case 'finish': {\n          finishChunk = {\n            type: 'finish',\n            finishReason: chunk.finishReason,\n            usage: chunk.usage,\n            providerMetadata: chunk.providerMetadata,\n          };\n          break;\n        }\n\n        // process tool call:\n        case 'tool-call': {\n          try {\n            const toolCall = await parseToolCall({\n              toolCall: chunk,\n              tools,\n              repairToolCall,\n              system,\n              messages,\n            });\n\n            controller.enqueue(toolCall);\n\n            // handle invalid tool calls:\n            if (toolCall.invalid) {\n              toolResultsStreamController!.enqueue({\n                type: 'tool-error',\n                toolCallId: toolCall.toolCallId,\n                toolName: toolCall.toolName,\n                input: toolCall.input,\n                error: getErrorMessage(toolCall.error!),\n                dynamic: true,\n              });\n\n              break;\n            }\n\n            const tool = tools![toolCall.toolName];\n\n            toolInputs.set(toolCall.toolCallId, toolCall.input);\n\n            if (tool.onInputAvailable != null) {\n              await tool.onInputAvailable({\n                input: toolCall.input,\n                toolCallId: toolCall.toolCallId,\n                messages,\n                abortSignal,\n                experimental_context,\n              });\n            }\n\n            // Only execute tools that are not provider-executed:\n            if (tool.execute != null && toolCall.providerExecuted !== true) {\n              const toolExecutionId = generateId(); // use our own id to guarantee uniqueness\n              outstandingToolResults.add(toolExecutionId);\n\n              // Note: we don't await the tool execution here (by leaving out 'await' on recordSpan),\n              // because we want to process the next chunk as soon as possible.\n              // This is important for the case where the tool execution takes a long time.\n              recordSpan({\n                name: 'ai.toolCall',\n                attributes: selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    ...assembleOperationName({\n                      operationId: 'ai.toolCall',\n                      telemetry,\n                    }),\n                    'ai.toolCall.name': toolCall.toolName,\n                    'ai.toolCall.id': toolCall.toolCallId,\n                    'ai.toolCall.args': {\n                      output: () => JSON.stringify(toolCall.input),\n                    },\n                  },\n                }),\n                tracer,\n                fn: async span => {\n                  let output: unknown;\n\n                  try {\n                    const stream = executeTool({\n                      execute: tool.execute!.bind(tool),\n                      input: toolCall.input,\n                      options: {\n                        toolCallId: toolCall.toolCallId,\n                        messages,\n                        abortSignal,\n                        experimental_context,\n                      },\n                    });\n\n                    for await (const part of stream) {\n                      toolResultsStreamController!.enqueue({\n                        ...toolCall,\n                        type: 'tool-result',\n                        output: part.output,\n                        ...(part.type === 'preliminary' && {\n                          preliminary: true,\n                        }),\n                      });\n\n                      if (part.type === 'final') {\n                        output = part.output;\n                      }\n                    }\n                  } catch (error) {\n                    recordErrorOnSpan(span, error);\n                    toolResultsStreamController!.enqueue({\n                      ...toolCall,\n                      type: 'tool-error',\n                      error,\n                    } satisfies TypedToolError<TOOLS>);\n\n                    outstandingToolResults.delete(toolExecutionId);\n                    attemptClose();\n                    return;\n                  }\n\n                  outstandingToolResults.delete(toolExecutionId);\n                  attemptClose();\n\n                  // record telemetry\n                  try {\n                    span.setAttributes(\n                      selectTelemetryAttributes({\n                        telemetry,\n                        attributes: {\n                          'ai.toolCall.result': {\n                            output: () => JSON.stringify(output),\n                          },\n                        },\n                      }),\n                    );\n                  } catch (ignored) {\n                    // JSON stringify might fail if the result is not serializable,\n                    // in which case we just ignore it. In the future we might want to\n                    // add an optional serialize method to the tool interface and warn\n                    // if the result is not serializable.\n                  }\n                },\n              });\n            }\n          } catch (error) {\n            toolResultsStreamController!.enqueue({ type: 'error', error });\n          }\n\n          break;\n        }\n\n        case 'tool-result': {\n          const toolName = chunk.toolName as keyof TOOLS & string;\n\n          if (chunk.isError) {\n            toolResultsStreamController!.enqueue({\n              type: 'tool-error',\n              toolCallId: chunk.toolCallId,\n              toolName,\n              input: toolInputs.get(chunk.toolCallId),\n              providerExecuted: chunk.providerExecuted,\n              error: chunk.result,\n            } as TypedToolError<TOOLS>);\n          } else {\n            controller.enqueue({\n              type: 'tool-result',\n              toolCallId: chunk.toolCallId,\n              toolName,\n              input: toolInputs.get(chunk.toolCallId),\n              output: chunk.result,\n              providerExecuted: chunk.providerExecuted,\n            } as TypedToolResult<TOOLS>);\n          }\n          break;\n        }\n\n        default: {\n          const _exhaustiveCheck: never = chunkType;\n          throw new Error(`Unhandled chunk type: ${_exhaustiveCheck}`);\n        }\n      }\n    },\n\n    flush() {\n      canClose = true;\n      attemptClose();\n    },\n  });\n\n  // combine the generator stream and the tool results stream\n  return new ReadableStream<SingleRequestTextStreamPart<TOOLS>>({\n    async start(controller) {\n      // need to wait for both pipes so there are no dangling promises that\n      // can cause uncaught promise rejections when the stream is aborted\n      return Promise.all([\n        generatorStream.pipeThrough(forwardStream).pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n              // the generator stream controller is automatically closed when it's consumed\n            },\n          }),\n        ),\n        toolResultsStream.pipeTo(\n          new WritableStream({\n            write(chunk) {\n              controller.enqueue(chunk);\n            },\n            close() {\n              controller.close();\n            },\n          }),\n        ),\n      ]);\n    },\n  });\n}\n", "import { IdGenerator, ProviderOptions } from '@ai-sdk/provider-utils';\nimport {\n  generateText,\n  GenerateTextOnStepFinishCallback,\n} from '../generate-text/generate-text';\nimport { GenerateTextResult } from '../generate-text/generate-text-result';\nimport { Output } from '../generate-text/output';\nimport { PrepareStepFunction } from '../generate-text/prepare-step';\nimport { StopCondition } from '../generate-text/stop-condition';\nimport { streamText } from '../generate-text/stream-text';\nimport { StreamTextResult } from '../generate-text/stream-text-result';\nimport { ToolCallRepairFunction } from '../generate-text/tool-call-repair-function';\nimport { ToolSet } from '../generate-text/tool-set';\nimport { CallSettings } from '../prompt/call-settings';\nimport { Prompt } from '../prompt/prompt';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { LanguageModel, ToolChoice } from '../types/language-model';\nimport { ProviderMetadata } from '../types/provider-metadata';\n\nexport type AgentSettings<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  OUTPUT_PARTIAL = never,\n> = CallSettings & {\n  /**\n   * The system prompt to use.\n   */\n  system?: string;\n\n  /**\nThe language model to use.\n   */\n  model: LanguageModel;\n\n  /**\nThe tools that the model can call. The model needs to support calling tools.\n*/\n  tools?: TOOLS;\n\n  /**\nThe tool choice strategy. Default: 'auto'.\n   */\n  toolChoice?: ToolChoice<NoInfer<TOOLS>>;\n\n  /**\nCondition for stopping the generation when there are tool results in the last step.\nWhen the condition is an array, any of the conditions can be met to stop the generation.\n\n@default stepCountIs(1)\n   */\n  stopWhen?:\n    | StopCondition<NoInfer<TOOLS>>\n    | Array<StopCondition<NoInfer<TOOLS>>>;\n\n  /**\nOptional telemetry configuration (experimental).\n   */\n  experimental_telemetry?: TelemetrySettings;\n\n  /**\nLimits the tools that are available for the model to call without\nchanging the tool call and result types in the result.\n   */\n  activeTools?: Array<keyof NoInfer<TOOLS>>;\n\n  /**\nOptional specification for parsing structured outputs from the LLM response.\n   */\n  experimental_output?: Output<OUTPUT, OUTPUT_PARTIAL>;\n\n  /**\n   * @deprecated Use `prepareStep` instead.\n   */\n  experimental_prepareStep?: PrepareStepFunction<NoInfer<TOOLS>>;\n\n  /**\nOptional function that you can use to provide different settings for a step.\n  */\n  prepareStep?: PrepareStepFunction<NoInfer<TOOLS>>;\n\n  /**\nA function that attempts to repair a tool call that failed to parse.\n   */\n  experimental_repairToolCall?: ToolCallRepairFunction<NoInfer<TOOLS>>;\n\n  /**\n  Callback that is called when each step (LLM call) is finished, including intermediate steps.\n  */\n  onStepFinish?: GenerateTextOnStepFinishCallback<NoInfer<TOOLS>>;\n\n  /**\n   * Context that is passed into tool calls.\n   *\n   * Experimental (can break in patch releases).\n   *\n   * @default undefined\n   */\n  experimental_context?: unknown;\n\n  /**\n   * Internal. For test use only. May change without notice.\n   */\n  _internal?: {\n    generateId?: IdGenerator;\n    currentDate?: () => Date;\n  };\n};\n\nexport class Agent<\n  TOOLS extends ToolSet,\n  OUTPUT = never,\n  OUTPUT_PARTIAL = never,\n> {\n  private readonly settings: AgentSettings<TOOLS, OUTPUT, OUTPUT_PARTIAL>;\n\n  constructor(settings: AgentSettings<TOOLS, OUTPUT, OUTPUT_PARTIAL>) {\n    this.settings = settings;\n  }\n\n  async generate(\n    options: Prompt & {\n      /**\nAdditional provider-specific metadata. They are passed through\nfrom the provider to the AI SDK and enable provider-specific\nresults that can be fully encapsulated in the provider.\n   */\n      providerMetadata?: ProviderMetadata;\n      /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n         */\n      providerOptions?: ProviderOptions;\n    },\n  ): Promise<GenerateTextResult<TOOLS, OUTPUT>> {\n    return generateText({ ...this.settings, ...options });\n  }\n\n  stream(\n    options: Prompt & {\n      /**\nAdditional provider-specific metadata. They are passed through\nfrom the provider to the AI SDK and enable provider-specific\nresults that can be fully encapsulated in the provider.\n   */\n      providerMetadata?: ProviderMetadata;\n      /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n         */\n      providerOptions?: ProviderOptions;\n    },\n  ): StreamTextResult<TOOLS, OUTPUT_PARTIAL> {\n    return streamText({ ...this.settings, ...options });\n  }\n}\n", "import { ProviderOptions } from '@ai-sdk/provider-utils';\nimport { resolveEmbeddingModel } from '../model/resolve-model';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { EmbeddingModel } from '../types';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { EmbedResult } from './embed-result';\n\n/**\nEmbed a value using an embedding model. The type of the value is defined by the embedding model.\n\n@param model - The embedding model to use.\n@param value - The value that should be embedded.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the embedding, the value, and additional information.\n */\nexport async function embed<VALUE = string>({\n  model: modelArg,\n  value,\n  providerOptions,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  experimental_telemetry: telemetry,\n}: {\n  /**\nThe embedding model to use.\n     */\n  model: EmbeddingModel<VALUE>;\n\n  /**\nThe value that should be embedded.\n   */\n  value: VALUE;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n\n  /**\n  Additional provider-specific options. They are passed through\n  to the provider from the AI SDK and enable provider-specific\n  functionality that can be fully encapsulated in the provider.\n  */\n  providerOptions?: ProviderOptions;\n\n  /**\n   * Optional telemetry configuration (experimental).\n   */\n  experimental_telemetry?: TelemetrySettings;\n}): Promise<EmbedResult<VALUE>> {\n  const model = resolveEmbeddingModel<VALUE>(modelArg);\n\n  const { maxRetries, retry } = prepareRetries({\n    maxRetries: maxRetriesArg,\n    abortSignal,\n  });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model: model,\n    telemetry,\n    headers,\n    settings: { maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.embed',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: 'ai.embed', telemetry }),\n        ...baseTelemetryAttributes,\n        'ai.value': { input: () => JSON.stringify(value) },\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const { embedding, usage, response, providerMetadata } = await retry(() =>\n        // nested spans to align with the embedMany telemetry data:\n        recordSpan({\n          name: 'ai.embed.doEmbed',\n          attributes: selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              ...assembleOperationName({\n                operationId: 'ai.embed.doEmbed',\n                telemetry,\n              }),\n              ...baseTelemetryAttributes,\n              // specific settings that only make sense on the outer level:\n              'ai.values': { input: () => [JSON.stringify(value)] },\n            },\n          }),\n          tracer,\n          fn: async doEmbedSpan => {\n            const modelResponse = await model.doEmbed({\n              values: [value],\n              abortSignal,\n              headers,\n              providerOptions,\n            });\n\n            const embedding = modelResponse.embeddings[0];\n            const usage = modelResponse.usage ?? { tokens: NaN };\n\n            doEmbedSpan.setAttributes(\n              selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  'ai.embeddings': {\n                    output: () =>\n                      modelResponse.embeddings.map(embedding =>\n                        JSON.stringify(embedding),\n                      ),\n                  },\n                  'ai.usage.tokens': usage.tokens,\n                },\n              }),\n            );\n\n            return {\n              embedding,\n              usage,\n              providerMetadata: modelResponse.providerMetadata,\n              response: modelResponse.response,\n            };\n          },\n        }),\n      );\n\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.embedding': { output: () => JSON.stringify(embedding) },\n            'ai.usage.tokens': usage.tokens,\n          },\n        }),\n      );\n\n      return new DefaultEmbedResult({\n        value,\n        embedding,\n        usage,\n        providerMetadata,\n        response,\n      });\n    },\n  });\n}\n\nclass DefaultEmbedResult<VALUE> implements EmbedResult<VALUE> {\n  readonly value: EmbedResult<VALUE>['value'];\n  readonly embedding: EmbedResult<VALUE>['embedding'];\n  readonly usage: EmbedResult<VALUE>['usage'];\n  readonly providerMetadata: EmbedResult<VALUE>['providerMetadata'];\n  readonly response: EmbedResult<VALUE>['response'];\n\n  constructor(options: {\n    value: EmbedResult<VALUE>['value'];\n    embedding: EmbedResult<VALUE>['embedding'];\n    usage: EmbedResult<VALUE>['usage'];\n    providerMetadata?: EmbedResult<VALUE>['providerMetadata'];\n    response?: EmbedResult<VALUE>['response'];\n  }) {\n    this.value = options.value;\n    this.embedding = options.embedding;\n    this.usage = options.usage;\n    this.providerMetadata = options.providerMetadata;\n    this.response = options.response;\n  }\n}\n", "/**\n * Splits an array into chunks of a specified size.\n *\n * @template T - The type of elements in the array.\n * @param {T[]} array - The array to split.\n * @param {number} chunkSize - The size of each chunk.\n * @returns {T[][]} - A new array containing the chunks.\n */\nexport function splitArray<T>(array: T[], chunkSize: number): T[][] {\n  if (chunkSize <= 0) {\n    throw new Error('chunkSize must be greater than 0');\n  }\n\n  const result = [];\n  for (let i = 0; i < array.length; i += chunkSize) {\n    result.push(array.slice(i, i + chunkSize));\n  }\n\n  return result;\n}\n", "import { ProviderOptions } from '@ai-sdk/provider-utils';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { splitArray } from '../util/split-array';\nimport { UnsupportedModelVersionError } from '../error/unsupported-model-version-error';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { Embedding, EmbeddingModel, ProviderMetadata } from '../types';\nimport { resolveEmbeddingModel } from '../model/resolve-model';\nimport { EmbedManyResult } from './embed-many-result';\n\n/**\nEmbed several values using an embedding model. The type of the value is defined\nby the embedding model.\n\n`embedMany` automatically splits large requests into smaller chunks if the model\nhas a limit on how many embeddings can be generated in a single call.\n\n@param model - The embedding model to use.\n@param values - The values that should be embedded.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the embeddings, the value, and additional information.\n */\nexport async function embedMany<VALUE = string>({\n  model: modelArg,\n  values,\n  maxParallelCalls = Infinity,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n  providerOptions,\n  experimental_telemetry: telemetry,\n}: {\n  /**\nThe embedding model to use.\n     */\n  model: EmbeddingModel<VALUE>;\n\n  /**\nThe values that should be embedded.\n   */\n  values: Array<VALUE>;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n\n  /**\n   * Optional telemetry configuration (experimental).\n   */\n  experimental_telemetry?: TelemetrySettings;\n\n  /**\n  Additional provider-specific options. They are passed through\n  to the provider from the AI SDK and enable provider-specific\n  functionality that can be fully encapsulated in the provider.\n  */\n  providerOptions?: ProviderOptions;\n\n  /**\n   * Maximum number of concurrent requests.\n   *\n   * @default Infinity\n   */\n  maxParallelCalls?: number;\n}): Promise<EmbedManyResult<VALUE>> {\n  const model = resolveEmbeddingModel<VALUE>(modelArg);\n\n  const { maxRetries, retry } = prepareRetries({\n    maxRetries: maxRetriesArg,\n    abortSignal,\n  });\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  return recordSpan({\n    name: 'ai.embedMany',\n    attributes: selectTelemetryAttributes({\n      telemetry,\n      attributes: {\n        ...assembleOperationName({ operationId: 'ai.embedMany', telemetry }),\n        ...baseTelemetryAttributes,\n        // specific settings that only make sense on the outer level:\n        'ai.values': {\n          input: () => values.map(value => JSON.stringify(value)),\n        },\n      },\n    }),\n    tracer,\n    fn: async span => {\n      const [maxEmbeddingsPerCall, supportsParallelCalls] = await Promise.all([\n        model.maxEmbeddingsPerCall,\n        model.supportsParallelCalls,\n      ]);\n\n      // the model has not specified limits on\n      // how many embeddings can be generated in a single call\n      if (maxEmbeddingsPerCall == null || maxEmbeddingsPerCall === Infinity) {\n        const { embeddings, usage, response, providerMetadata } = await retry(\n          () => {\n            // nested spans to align with the embedMany telemetry data:\n            return recordSpan({\n              name: 'ai.embedMany.doEmbed',\n              attributes: selectTelemetryAttributes({\n                telemetry,\n                attributes: {\n                  ...assembleOperationName({\n                    operationId: 'ai.embedMany.doEmbed',\n                    telemetry,\n                  }),\n                  ...baseTelemetryAttributes,\n                  // specific settings that only make sense on the outer level:\n                  'ai.values': {\n                    input: () => values.map(value => JSON.stringify(value)),\n                  },\n                },\n              }),\n              tracer,\n              fn: async doEmbedSpan => {\n                const modelResponse = await model.doEmbed({\n                  values,\n                  abortSignal,\n                  headers,\n                  providerOptions,\n                });\n\n                const embeddings = modelResponse.embeddings;\n                const usage = modelResponse.usage ?? { tokens: NaN };\n\n                doEmbedSpan.setAttributes(\n                  selectTelemetryAttributes({\n                    telemetry,\n                    attributes: {\n                      'ai.embeddings': {\n                        output: () =>\n                          embeddings.map(embedding =>\n                            JSON.stringify(embedding),\n                          ),\n                      },\n                      'ai.usage.tokens': usage.tokens,\n                    },\n                  }),\n                );\n\n                return {\n                  embeddings,\n                  usage,\n                  providerMetadata: modelResponse.providerMetadata,\n                  response: modelResponse.response,\n                };\n              },\n            });\n          },\n        );\n\n        span.setAttributes(\n          selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              'ai.embeddings': {\n                output: () =>\n                  embeddings.map(embedding => JSON.stringify(embedding)),\n              },\n              'ai.usage.tokens': usage.tokens,\n            },\n          }),\n        );\n\n        return new DefaultEmbedManyResult({\n          values,\n          embeddings,\n          usage,\n          providerMetadata,\n          responses: [response],\n        });\n      }\n\n      // split the values into chunks that are small enough for the model:\n      const valueChunks = splitArray(values, maxEmbeddingsPerCall);\n\n      // serially embed the chunks:\n      const embeddings: Array<Embedding> = [];\n      const responses: Array<\n        | {\n            headers?: Record<string, string>;\n            body?: unknown;\n          }\n        | undefined\n      > = [];\n      let tokens = 0;\n      let providerMetadata: ProviderMetadata | undefined;\n\n      const parallelChunks = splitArray(\n        valueChunks,\n        supportsParallelCalls ? maxParallelCalls : 1,\n      );\n\n      for (const parallelChunk of parallelChunks) {\n        const results = await Promise.all(\n          parallelChunk.map(chunk => {\n            return retry(() => {\n              // nested spans to align with the embedMany telemetry data:\n              return recordSpan({\n                name: 'ai.embedMany.doEmbed',\n                attributes: selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    ...assembleOperationName({\n                      operationId: 'ai.embedMany.doEmbed',\n                      telemetry,\n                    }),\n                    ...baseTelemetryAttributes,\n                    // specific settings that only make sense on the outer level:\n                    'ai.values': {\n                      input: () => chunk.map(value => JSON.stringify(value)),\n                    },\n                  },\n                }),\n                tracer,\n                fn: async doEmbedSpan => {\n                  const modelResponse = await model.doEmbed({\n                    values: chunk,\n                    abortSignal,\n                    headers,\n                    providerOptions,\n                  });\n\n                  const embeddings = modelResponse.embeddings;\n                  const usage = modelResponse.usage ?? { tokens: NaN };\n\n                  doEmbedSpan.setAttributes(\n                    selectTelemetryAttributes({\n                      telemetry,\n                      attributes: {\n                        'ai.embeddings': {\n                          output: () =>\n                            embeddings.map(embedding =>\n                              JSON.stringify(embedding),\n                            ),\n                        },\n                        'ai.usage.tokens': usage.tokens,\n                      },\n                    }),\n                  );\n\n                  return {\n                    embeddings,\n                    usage,\n                    providerMetadata: modelResponse.providerMetadata,\n                    response: modelResponse.response,\n                  };\n                },\n              });\n            });\n          }),\n        );\n\n        for (const result of results) {\n          embeddings.push(...result.embeddings);\n          responses.push(result.response);\n          tokens += result.usage.tokens;\n          if (result.providerMetadata) {\n            if (!providerMetadata) {\n              providerMetadata = { ...result.providerMetadata };\n            } else {\n              for (const [providerName, metadata] of Object.entries(\n                result.providerMetadata,\n              )) {\n                providerMetadata[providerName] = {\n                  ...(providerMetadata[providerName] ?? {}),\n                  ...metadata,\n                };\n              }\n            }\n          }\n        }\n      }\n\n      span.setAttributes(\n        selectTelemetryAttributes({\n          telemetry,\n          attributes: {\n            'ai.embeddings': {\n              output: () =>\n                embeddings.map(embedding => JSON.stringify(embedding)),\n            },\n            'ai.usage.tokens': tokens,\n          },\n        }),\n      );\n\n      return new DefaultEmbedManyResult({\n        values,\n        embeddings,\n        usage: { tokens },\n        providerMetadata: providerMetadata,\n        responses,\n      });\n    },\n  });\n}\n\nclass DefaultEmbedManyResult<VALUE> implements EmbedManyResult<VALUE> {\n  readonly values: EmbedManyResult<VALUE>['values'];\n  readonly embeddings: EmbedManyResult<VALUE>['embeddings'];\n  readonly usage: EmbedManyResult<VALUE>['usage'];\n  readonly providerMetadata: EmbedManyResult<VALUE>['providerMetadata'];\n  readonly responses: EmbedManyResult<VALUE>['responses'];\n\n  constructor(options: {\n    values: EmbedManyResult<VALUE>['values'];\n    embeddings: EmbedManyResult<VALUE>['embeddings'];\n    usage: EmbedManyResult<VALUE>['usage'];\n    providerMetadata?: EmbedManyResult<VALUE>['providerMetadata'];\n    responses?: EmbedManyResult<VALUE>['responses'];\n  }) {\n    this.values = options.values;\n    this.embeddings = options.embeddings;\n    this.usage = options.usage;\n    this.providerMetadata = options.providerMetadata;\n    this.responses = options.responses;\n  }\n}\n", "import { ImageModelV2, ImageModelV2ProviderMetadata } from '@ai-sdk/provider';\nimport { ProviderOptions } from '@ai-sdk/provider-utils';\nimport { NoImageGeneratedError } from '../error/no-image-generated-error';\nimport {\n  detectMediaType,\n  imageMediaTypeSignatures,\n} from '../util/detect-media-type';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { UnsupportedModelVersionError } from '../error/unsupported-model-version-error';\nimport {\n  DefaultGeneratedFile,\n  GeneratedFile,\n} from '../generate-text/generated-file';\nimport { ImageGenerationWarning } from '../types/image-model';\nimport { ImageModelResponseMetadata } from '../types/image-model-response-metadata';\nimport { GenerateImageResult } from './generate-image-result';\n\n/**\nGenerates images using an image model.\n\n@param model - The image model to use.\n@param prompt - The prompt that should be used to generate the image.\n@param n - Number of images to generate. Default: 1.\n@param size - Size of the images to generate. Must have the format `{width}x{height}`.\n@param aspectRatio - Aspect ratio of the images to generate. Must have the format `{width}:{height}`.\n@param seed - Seed for the image generation.\n@param providerOptions - Additional provider-specific options that are passed through to the provider\nas body parameters.\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the generated images.\n */\nexport async function generateImage({\n  model,\n  prompt,\n  n = 1,\n  maxImagesPerCall,\n  size,\n  aspectRatio,\n  seed,\n  providerOptions,\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n}: {\n  /**\nThe image model to use.\n     */\n  model: ImageModelV2;\n\n  /**\nThe prompt that should be used to generate the image.\n   */\n  prompt: string;\n\n  /**\nNumber of images to generate.\n   */\n  n?: number;\n\n  /**\nNumber of images to generate.\n   */\n  maxImagesPerCall?: number;\n\n  /**\nSize of the images to generate. Must have the format `{width}x{height}`. If not provided, the default size will be used.\n   */\n  size?: `${number}x${number}`;\n\n  /**\nAspect ratio of the images to generate. Must have the format `{width}:{height}`. If not provided, the default aspect ratio will be used.\n   */\n  aspectRatio?: `${number}:${number}`;\n\n  /**\nSeed for the image generation. If not provided, the default seed will be used.\n   */\n  seed?: number;\n\n  /**\nAdditional provider-specific options that are passed through to the provider\nas body parameters.\n\nThe outer record is keyed by the provider name, and the inner\nrecord is keyed by the provider-specific metadata key.\n```ts\n{\n  \"openai\": {\n    \"style\": \"vivid\"\n  }\n}\n```\n     */\n  providerOptions?: ProviderOptions;\n\n  /**\nMaximum number of retries per embedding model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n}): Promise<GenerateImageResult> {\n  if (model.specificationVersion !== 'v2') {\n    throw new UnsupportedModelVersionError({\n      version: model.specificationVersion,\n      provider: model.provider,\n      modelId: model.modelId,\n    });\n  }\n\n  const { retry } = prepareRetries({\n    maxRetries: maxRetriesArg,\n    abortSignal,\n  });\n\n  // default to 1 if the model has not specified limits on\n  // how many images can be generated in a single call\n  const maxImagesPerCallWithDefault =\n    maxImagesPerCall ?? (await invokeModelMaxImagesPerCall(model)) ?? 1;\n\n  // parallelize calls to the model:\n  const callCount = Math.ceil(n / maxImagesPerCallWithDefault);\n  const callImageCounts = Array.from({ length: callCount }, (_, i) => {\n    if (i < callCount - 1) {\n      return maxImagesPerCallWithDefault;\n    }\n\n    const remainder = n % maxImagesPerCallWithDefault;\n    return remainder === 0 ? maxImagesPerCallWithDefault : remainder;\n  });\n\n  const results = await Promise.all(\n    callImageCounts.map(async callImageCount =>\n      retry(() =>\n        model.doGenerate({\n          prompt,\n          n: callImageCount,\n          abortSignal,\n          headers,\n          size,\n          aspectRatio,\n          seed,\n          providerOptions: providerOptions ?? {},\n        }),\n      ),\n    ),\n  );\n\n  // collect result images, warnings, and response metadata\n  const images: Array<DefaultGeneratedFile> = [];\n  const warnings: Array<ImageGenerationWarning> = [];\n  const responses: Array<ImageModelResponseMetadata> = [];\n  const providerMetadata: ImageModelV2ProviderMetadata = {};\n  for (const result of results) {\n    images.push(\n      ...result.images.map(\n        image =>\n          new DefaultGeneratedFile({\n            data: image,\n            mediaType:\n              detectMediaType({\n                data: image,\n                signatures: imageMediaTypeSignatures,\n              }) ?? 'image/png',\n          }),\n      ),\n    );\n    warnings.push(...result.warnings);\n\n    if (result.providerMetadata) {\n      for (const [providerName, metadata] of Object.entries<{\n        images: unknown;\n      }>(result.providerMetadata)) {\n        providerMetadata[providerName] ??= { images: [] };\n        providerMetadata[providerName].images.push(\n          ...result.providerMetadata[providerName].images,\n        );\n      }\n    }\n\n    responses.push(result.response);\n  }\n\n  if (!images.length) {\n    throw new NoImageGeneratedError({ responses });\n  }\n\n  return new DefaultGenerateImageResult({\n    images,\n    warnings,\n    responses,\n    providerMetadata,\n  });\n}\n\nclass DefaultGenerateImageResult implements GenerateImageResult {\n  readonly images: Array<GeneratedFile>;\n  readonly warnings: Array<ImageGenerationWarning>;\n  readonly responses: Array<ImageModelResponseMetadata>;\n  readonly providerMetadata: ImageModelV2ProviderMetadata;\n\n  constructor(options: {\n    images: Array<GeneratedFile>;\n    warnings: Array<ImageGenerationWarning>;\n    responses: Array<ImageModelResponseMetadata>;\n    providerMetadata: ImageModelV2ProviderMetadata;\n  }) {\n    this.images = options.images;\n    this.warnings = options.warnings;\n    this.responses = options.responses;\n    this.providerMetadata = options.providerMetadata;\n  }\n\n  get image() {\n    return this.images[0];\n  }\n}\n\nasync function invokeModelMaxImagesPerCall(model: ImageModelV2) {\n  const isFunction = model.maxImagesPerCall instanceof Function;\n\n  if (!isFunction) {\n    return model.maxImagesPerCall;\n  }\n\n  return model.maxImagesPerCall({\n    modelId: model.modelId,\n  });\n}\n", "import { JSONValue } from '@ai-sdk/provider';\nimport {\n  createIdGenerator,\n  InferSchema,\n  ProviderOptions,\n  Schema,\n} from '@ai-sdk/provider-utils';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport { NoObjectGeneratedError } from '../error/no-object-generated-error';\nimport { extractReasoningContent } from '../generate-text/extract-reasoning-content';\nimport { extractTextContent } from '../generate-text/extract-text-content';\nimport { resolveLanguageModel } from '../model/resolve-model';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { wrapGatewayError } from '../prompt/wrap-gateway-error';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { stringifyForTelemetry } from '../telemetry/stringify-for-telemetry';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModel,\n} from '../types/language-model';\nimport { LanguageModelRequestMetadata } from '../types/language-model-request-metadata';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderMetadata } from '../types/provider-metadata';\nimport { LanguageModelUsage } from '../types/usage';\nimport { prepareHeaders } from '../util/prepare-headers';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { GenerateObjectResult } from './generate-object-result';\nimport { getOutputStrategy } from './output-strategy';\nimport { parseAndValidateObjectResultWithRepair } from './parse-and-validate-object-result';\nimport { RepairTextFunction } from './repair-text';\nimport { validateObjectGenerationInput } from './validate-object-generation-input';\n\nconst originalGenerateId = createIdGenerator({ prefix: 'aiobj', size: 24 });\n\n/**\nGenerate a structured, typed object for a given prompt and schema using a language model.\n\nThis function does not stream the output. If you want to stream the output, use `streamObject` instead.\n\n@param model - The language model to use.\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxOutputTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param schema - The schema of the object that the model should generate.\n@param schemaName - Optional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n@param schemaDescription - Optional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n\n@param output - The type of the output.\n\n- 'object': The output is an object.\n- 'array': The output is an array.\n- 'enum': The output is an enum.\n- 'no-schema': The output is not a schema.\n\n@param experimental_repairText - A function that attempts to repair the raw output of the model\nto enable JSON parsing.\n\n@param experimental_telemetry - Optional telemetry configuration (experimental).\n\n@param providerOptions - Additional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n\n@returns\nA result object that contains the generated object, the finish reason, the token usage, and additional information.\n */\nexport async function generateObject<\n  SCHEMA extends\n    | z3.Schema\n    | z4.core.$ZodType\n    | Schema = z4.core.$ZodType<JSONValue>,\n  OUTPUT extends\n    | 'object'\n    | 'array'\n    | 'enum'\n    | 'no-schema' = InferSchema<SCHEMA> extends string ? 'enum' : 'object',\n  RESULT = OUTPUT extends 'array'\n    ? Array<InferSchema<SCHEMA>>\n    : InferSchema<SCHEMA>,\n>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt &\n    (OUTPUT extends 'enum'\n      ? {\n          /**\nThe enum values that the model should use.\n        */\n          enum: Array<RESULT>;\n          mode?: 'json';\n          output: 'enum';\n        }\n      : OUTPUT extends 'no-schema'\n        ? {}\n        : {\n            /**\nThe schema of the object that the model should generate.\n        */\n            schema: SCHEMA;\n\n            /**\nOptional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n        */\n            schemaName?: string;\n\n            /**\nOptional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n        */\n            schemaDescription?: string;\n\n            /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n        */\n            mode?: 'auto' | 'json' | 'tool';\n          }) & {\n      output?: OUTPUT;\n\n      /**\n  The language model to use.\n       */\n      model: LanguageModel;\n      /**\n  A function that attempts to repair the raw output of the model\n  to enable JSON parsing.\n       */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\n  Optional telemetry configuration (experimental).\n         */\n\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\n  Additional provider-specific options. They are passed through\n  to the provider from the AI SDK and enable provider-specific\n  functionality that can be fully encapsulated in the provider.\n   */\n      providerOptions?: ProviderOptions;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n      };\n    },\n): Promise<GenerateObjectResult<RESULT>> {\n  const {\n    model: modelArg,\n    output = 'object',\n    system,\n    prompt,\n    messages,\n    maxRetries: maxRetriesArg,\n    abortSignal,\n    headers,\n    experimental_repairText: repairText,\n    experimental_telemetry: telemetry,\n    providerOptions,\n    _internal: {\n      generateId = originalGenerateId,\n      currentDate = () => new Date(),\n    } = {},\n    ...settings\n  } = options;\n\n  const model = resolveLanguageModel(modelArg);\n\n  const enumValues = 'enum' in options ? options.enum : undefined;\n  const {\n    schema: inputSchema,\n    schemaDescription,\n    schemaName,\n  } = 'schema' in options ? options : {};\n\n  validateObjectGenerationInput({\n    output,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription,\n    enumValues,\n  });\n\n  const { maxRetries, retry } = prepareRetries({\n    maxRetries: maxRetriesArg,\n    abortSignal,\n  });\n\n  const outputStrategy = getOutputStrategy({\n    output,\n    schema: inputSchema,\n    enumValues,\n  });\n\n  const callSettings = prepareCallSettings(settings);\n\n  const baseTelemetryAttributes = getBaseTelemetryAttributes({\n    model,\n    telemetry,\n    headers,\n    settings: { ...callSettings, maxRetries },\n  });\n\n  const tracer = getTracer(telemetry);\n\n  try {\n    return await recordSpan({\n      name: 'ai.generateObject',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({\n            operationId: 'ai.generateObject',\n            telemetry,\n          }),\n          ...baseTelemetryAttributes,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n          'ai.schema':\n            outputStrategy.jsonSchema != null\n              ? { input: () => JSON.stringify(outputStrategy.jsonSchema) }\n              : undefined,\n          'ai.schema.name': schemaName,\n          'ai.schema.description': schemaDescription,\n          'ai.settings.output': outputStrategy.type,\n        },\n      }),\n      tracer,\n      fn: async span => {\n        let result: string;\n        let finishReason: FinishReason;\n        let usage: LanguageModelUsage;\n        let warnings: CallWarning[] | undefined;\n        let response: LanguageModelResponseMetadata;\n        let request: LanguageModelRequestMetadata;\n        let resultProviderMetadata: ProviderMetadata | undefined;\n        let reasoning: string | undefined;\n\n        const standardizedPrompt = await standardizePrompt({\n          system,\n          prompt,\n          messages,\n        } as Prompt);\n\n        const promptMessages = await convertToLanguageModelPrompt({\n          prompt: standardizedPrompt,\n          supportedUrls: await model.supportedUrls,\n        });\n\n        const generateResult = await retry(() =>\n          recordSpan({\n            name: 'ai.generateObject.doGenerate',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.generateObject.doGenerate',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                'ai.prompt.messages': {\n                  input: () => stringifyForTelemetry(promptMessages),\n                },\n\n                // standardized gen-ai llm span attributes:\n                'gen_ai.system': model.provider,\n                'gen_ai.request.model': model.modelId,\n                'gen_ai.request.frequency_penalty':\n                  callSettings.frequencyPenalty,\n                'gen_ai.request.max_tokens': callSettings.maxOutputTokens,\n                'gen_ai.request.presence_penalty': callSettings.presencePenalty,\n                'gen_ai.request.temperature': callSettings.temperature,\n                'gen_ai.request.top_k': callSettings.topK,\n                'gen_ai.request.top_p': callSettings.topP,\n              },\n            }),\n            tracer,\n            fn: async span => {\n              const result = await model.doGenerate({\n                responseFormat: {\n                  type: 'json',\n                  schema: outputStrategy.jsonSchema,\n                  name: schemaName,\n                  description: schemaDescription,\n                },\n                ...prepareCallSettings(settings),\n                prompt: promptMessages,\n                providerOptions,\n                abortSignal,\n                headers,\n              });\n\n              const responseData = {\n                id: result.response?.id ?? generateId(),\n                timestamp: result.response?.timestamp ?? currentDate(),\n                modelId: result.response?.modelId ?? model.modelId,\n                headers: result.response?.headers,\n                body: result.response?.body,\n              };\n\n              const text = extractTextContent(result.content);\n              const reasoning = extractReasoningContent(result.content);\n\n              if (text === undefined) {\n                throw new NoObjectGeneratedError({\n                  message:\n                    'No object generated: the model did not return a response.',\n                  response: responseData,\n                  usage: result.usage,\n                  finishReason: result.finishReason,\n                });\n              }\n\n              // Add response information to the span:\n              span.setAttributes(\n                selectTelemetryAttributes({\n                  telemetry,\n                  attributes: {\n                    'ai.response.finishReason': result.finishReason,\n                    'ai.response.object': { output: () => text },\n                    'ai.response.id': responseData.id,\n                    'ai.response.model': responseData.modelId,\n                    'ai.response.timestamp':\n                      responseData.timestamp.toISOString(),\n                    'ai.response.providerMetadata': JSON.stringify(\n                      result.providerMetadata,\n                    ),\n\n                    // TODO rename telemetry attributes to inputTokens and outputTokens\n                    'ai.usage.promptTokens': result.usage.inputTokens,\n                    'ai.usage.completionTokens': result.usage.outputTokens,\n\n                    // standardized gen-ai llm span attributes:\n                    'gen_ai.response.finish_reasons': [result.finishReason],\n                    'gen_ai.response.id': responseData.id,\n                    'gen_ai.response.model': responseData.modelId,\n                    'gen_ai.usage.input_tokens': result.usage.inputTokens,\n                    'gen_ai.usage.output_tokens': result.usage.outputTokens,\n                  },\n                }),\n              );\n\n              return {\n                ...result,\n                objectText: text,\n                reasoning,\n                responseData,\n              };\n            },\n          }),\n        );\n\n        result = generateResult.objectText;\n        finishReason = generateResult.finishReason;\n        usage = generateResult.usage;\n        warnings = generateResult.warnings;\n        resultProviderMetadata = generateResult.providerMetadata;\n        request = generateResult.request ?? {};\n        response = generateResult.responseData;\n        reasoning = generateResult.reasoning;\n\n        const object = await parseAndValidateObjectResultWithRepair(\n          result,\n          outputStrategy,\n          repairText,\n          {\n            response,\n            usage,\n            finishReason,\n          },\n        );\n\n        // Add response information to the span:\n        span.setAttributes(\n          selectTelemetryAttributes({\n            telemetry,\n            attributes: {\n              'ai.response.finishReason': finishReason,\n              'ai.response.object': {\n                output: () => JSON.stringify(object),\n              },\n              'ai.response.providerMetadata': JSON.stringify(\n                resultProviderMetadata,\n              ),\n\n              // TODO rename telemetry attributes to inputTokens and outputTokens\n              'ai.usage.promptTokens': usage.inputTokens,\n              'ai.usage.completionTokens': usage.outputTokens,\n            },\n          }),\n        );\n\n        return new DefaultGenerateObjectResult({\n          object,\n          reasoning,\n          finishReason,\n          usage,\n          warnings,\n          request,\n          response,\n          providerMetadata: resultProviderMetadata,\n        });\n      },\n    });\n  } catch (error) {\n    throw wrapGatewayError(error);\n  }\n}\n\nclass DefaultGenerateObjectResult<T> implements GenerateObjectResult<T> {\n  readonly object: GenerateObjectResult<T>['object'];\n  readonly finishReason: GenerateObjectResult<T>['finishReason'];\n  readonly usage: GenerateObjectResult<T>['usage'];\n  readonly warnings: GenerateObjectResult<T>['warnings'];\n  readonly providerMetadata: GenerateObjectResult<T>['providerMetadata'];\n  readonly response: GenerateObjectResult<T>['response'];\n  readonly request: GenerateObjectResult<T>['request'];\n  readonly reasoning: GenerateObjectResult<T>['reasoning'];\n\n  constructor(options: {\n    object: GenerateObjectResult<T>['object'];\n    finishReason: GenerateObjectResult<T>['finishReason'];\n    usage: GenerateObjectResult<T>['usage'];\n    warnings: GenerateObjectResult<T>['warnings'];\n    providerMetadata: GenerateObjectResult<T>['providerMetadata'];\n    response: GenerateObjectResult<T>['response'];\n    request: GenerateObjectResult<T>['request'];\n    reasoning: GenerateObjectResult<T>['reasoning'];\n  }) {\n    this.object = options.object;\n    this.finishReason = options.finishReason;\n    this.usage = options.usage;\n    this.warnings = options.warnings;\n    this.providerMetadata = options.providerMetadata;\n    this.response = options.response;\n    this.request = options.request;\n    this.reasoning = options.reasoning;\n  }\n\n  toJsonResponse(init?: ResponseInit): Response {\n    return new Response(JSON.stringify(this.object), {\n      status: init?.status ?? 200,\n      headers: prepareHeaders(init?.headers, {\n        'content-type': 'application/json; charset=utf-8',\n      }),\n    });\n  }\n}\n", "import {\n  LanguageModelV2Content,\n  LanguageModelV2Reasoning,\n} from '@ai-sdk/provider';\n\nexport function extractReasoningContent(\n  content: LanguageModelV2Content[],\n): string | undefined {\n  const parts = content.filter(\n    (content): content is LanguageModelV2Reasoning =>\n      content.type === 'reasoning',\n  );\n\n  return parts.length === 0\n    ? undefined\n    : parts.map(content => content.text).join('\\n');\n}\n", "import {\n  isJSONArray,\n  isJSONObject,\n  JSONObject,\n  JSONSchema7,\n  JSONValue,\n  TypeValidationError,\n  UnsupportedFunctionalityError,\n} from '@ai-sdk/provider';\nimport {\n  asSchema,\n  safeValidateTypes,\n  Schema,\n  ValidationResult,\n} from '@ai-sdk/provider-utils';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport { NoObjectGeneratedError } from '../error/no-object-generated-error';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { DeepPartial } from '../util/deep-partial';\nimport {\n  FinishReason,\n  LanguageModelResponseMetadata,\n  LanguageModelUsage,\n} from '../types';\nimport { ObjectStreamPart } from './stream-object-result';\n\nexport interface OutputStrategy<PARTIAL, RESULT, ELEMENT_STREAM> {\n  readonly type: 'object' | 'array' | 'enum' | 'no-schema';\n  readonly jsonSchema: JSONSchema7 | undefined;\n\n  validatePartialResult({\n    value,\n    textDelta,\n    isFinalDelta,\n  }: {\n    value: JSONValue;\n    textDelta: string;\n    isFirstDelta: boolean;\n    isFinalDelta: boolean;\n    latestObject: PARTIAL | undefined;\n  }): Promise<\n    ValidationResult<{\n      partial: PARTIAL;\n      textDelta: string;\n    }>\n  >;\n  validateFinalResult(\n    value: JSONValue | undefined,\n    context: {\n      text: string;\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n    },\n  ): Promise<ValidationResult<RESULT>>;\n\n  createElementStream(\n    originalStream: ReadableStream<ObjectStreamPart<PARTIAL>>,\n  ): ELEMENT_STREAM;\n}\n\nconst noSchemaOutputStrategy: OutputStrategy<JSONValue, JSONValue, never> = {\n  type: 'no-schema',\n  jsonSchema: undefined,\n\n  async validatePartialResult({ value, textDelta }) {\n    return { success: true, value: { partial: value, textDelta } };\n  },\n\n  async validateFinalResult(\n    value: JSONValue | undefined,\n    context: {\n      text: string;\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n      finishReason: FinishReason;\n    },\n  ): Promise<ValidationResult<JSONValue>> {\n    return value === undefined\n      ? {\n          success: false,\n          error: new NoObjectGeneratedError({\n            message: 'No object generated: response did not match schema.',\n            text: context.text,\n            response: context.response,\n            usage: context.usage,\n            finishReason: context.finishReason,\n          }),\n        }\n      : { success: true, value };\n  },\n\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: 'element streams in no-schema mode',\n    });\n  },\n};\n\nconst objectOutputStrategy = <OBJECT>(\n  schema: Schema<OBJECT>,\n): OutputStrategy<DeepPartial<OBJECT>, OBJECT, never> => ({\n  type: 'object',\n  jsonSchema: schema.jsonSchema,\n\n  async validatePartialResult({ value, textDelta }) {\n    return {\n      success: true,\n      value: {\n        // Note: currently no validation of partial results:\n        partial: value as DeepPartial<OBJECT>,\n        textDelta,\n      },\n    };\n  },\n\n  async validateFinalResult(\n    value: JSONValue | undefined,\n  ): Promise<ValidationResult<OBJECT>> {\n    return safeValidateTypes({ value, schema });\n  },\n\n  createElementStream() {\n    throw new UnsupportedFunctionalityError({\n      functionality: 'element streams in object mode',\n    });\n  },\n});\n\nconst arrayOutputStrategy = <ELEMENT>(\n  schema: Schema<ELEMENT>,\n): OutputStrategy<ELEMENT[], ELEMENT[], AsyncIterableStream<ELEMENT>> => {\n  // remove $schema from schema.jsonSchema:\n  const { $schema, ...itemSchema } = schema.jsonSchema;\n\n  return {\n    type: 'enum',\n\n    // wrap in object that contains array of elements, since most LLMs will not\n    // be able to generate an array directly:\n    // possible future optimization: use arrays directly when model supports grammar-guided generation\n    jsonSchema: {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      type: 'object',\n      properties: {\n        elements: { type: 'array', items: itemSchema },\n      },\n      required: ['elements'],\n      additionalProperties: false,\n    },\n\n    async validatePartialResult({\n      value,\n      latestObject,\n      isFirstDelta,\n      isFinalDelta,\n    }) {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be an object that contains an array of elements',\n          }),\n        };\n      }\n\n      const inputArray = value.elements as Array<JSONObject>;\n      const resultArray: Array<ELEMENT> = [];\n\n      for (let i = 0; i < inputArray.length; i++) {\n        const element = inputArray[i];\n        const result = await safeValidateTypes({ value: element, schema });\n\n        // special treatment for last processed element:\n        // ignore parse or validation failures, since they indicate that the\n        // last element is incomplete and should not be included in the result,\n        // unless it is the final delta\n        if (i === inputArray.length - 1 && !isFinalDelta) {\n          continue;\n        }\n\n        if (!result.success) {\n          return result;\n        }\n\n        resultArray.push(result.value);\n      }\n\n      // calculate delta:\n      const publishedElementCount = latestObject?.length ?? 0;\n\n      let textDelta = '';\n\n      if (isFirstDelta) {\n        textDelta += '[';\n      }\n\n      if (publishedElementCount > 0) {\n        textDelta += ',';\n      }\n\n      textDelta += resultArray\n        .slice(publishedElementCount) // only new elements\n        .map(element => JSON.stringify(element))\n        .join(',');\n\n      if (isFinalDelta) {\n        textDelta += ']';\n      }\n\n      return {\n        success: true,\n        value: {\n          partial: resultArray,\n          textDelta,\n        },\n      };\n    },\n\n    async validateFinalResult(\n      value: JSONValue | undefined,\n    ): Promise<ValidationResult<Array<ELEMENT>>> {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || !isJSONArray(value.elements)) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be an object that contains an array of elements',\n          }),\n        };\n      }\n\n      const inputArray = value.elements as Array<JSONObject>;\n\n      // check that each element in the array is of the correct type:\n      for (const element of inputArray) {\n        const result = await safeValidateTypes({ value: element, schema });\n        if (!result.success) {\n          return result;\n        }\n      }\n\n      return { success: true, value: inputArray as Array<ELEMENT> };\n    },\n\n    createElementStream(\n      originalStream: ReadableStream<ObjectStreamPart<ELEMENT[]>>,\n    ) {\n      let publishedElements = 0;\n\n      return createAsyncIterableStream(\n        originalStream.pipeThrough(\n          new TransformStream<ObjectStreamPart<ELEMENT[]>, ELEMENT>({\n            transform(chunk, controller) {\n              switch (chunk.type) {\n                case 'object': {\n                  const array = chunk.object;\n\n                  // publish new elements one by one:\n                  for (\n                    ;\n                    publishedElements < array.length;\n                    publishedElements++\n                  ) {\n                    controller.enqueue(array[publishedElements]);\n                  }\n\n                  break;\n                }\n\n                case 'text-delta':\n                case 'finish':\n                case 'error': // suppress error (use onError instead)\n                  break;\n\n                default: {\n                  const _exhaustiveCheck: never = chunk;\n                  throw new Error(\n                    `Unsupported chunk type: ${_exhaustiveCheck}`,\n                  );\n                }\n              }\n            },\n          }),\n        ),\n      );\n    },\n  };\n};\n\nconst enumOutputStrategy = <ENUM extends string>(\n  enumValues: Array<ENUM>,\n): OutputStrategy<string, ENUM, never> => {\n  return {\n    type: 'enum',\n\n    // wrap in object that contains result, since most LLMs will not\n    // be able to generate an enum value directly:\n    // possible future optimization: use enums directly when model supports top-level enums\n    jsonSchema: {\n      $schema: 'http://json-schema.org/draft-07/schema#',\n      type: 'object',\n      properties: {\n        result: { type: 'string', enum: enumValues },\n      },\n      required: ['result'],\n      additionalProperties: false,\n    },\n\n    async validateFinalResult(\n      value: JSONValue | undefined,\n    ): Promise<ValidationResult<ENUM>> {\n      // check that the value is an object that contains an array of elements:\n      if (!isJSONObject(value) || typeof value.result !== 'string') {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause:\n              'value must be an object that contains a string in the \"result\" property.',\n          }),\n        };\n      }\n\n      const result = value.result as string;\n\n      return enumValues.includes(result as ENUM)\n        ? { success: true, value: result as ENUM }\n        : {\n            success: false,\n            error: new TypeValidationError({\n              value,\n              cause: 'value must be a string in the enum',\n            }),\n          };\n    },\n\n    async validatePartialResult({ value, textDelta }) {\n      if (!isJSONObject(value) || typeof value.result !== 'string') {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause:\n              'value must be an object that contains a string in the \"result\" property.',\n          }),\n        };\n      }\n\n      const result = value.result as string;\n      const possibleEnumValues = enumValues.filter(enumValue =>\n        enumValue.startsWith(result),\n      );\n\n      if (value.result.length === 0 || possibleEnumValues.length === 0) {\n        return {\n          success: false,\n          error: new TypeValidationError({\n            value,\n            cause: 'value must be a string in the enum',\n          }),\n        };\n      }\n\n      return {\n        success: true,\n        value: {\n          partial:\n            possibleEnumValues.length > 1 ? result : possibleEnumValues[0],\n          textDelta,\n        },\n      };\n    },\n\n    createElementStream() {\n      // no streaming in enum mode\n      throw new UnsupportedFunctionalityError({\n        functionality: 'element streams in enum mode',\n      });\n    },\n  };\n};\n\nexport function getOutputStrategy<SCHEMA>({\n  output,\n  schema,\n  enumValues,\n}: {\n  output: 'object' | 'array' | 'enum' | 'no-schema';\n  schema?:\n    | z4.core.$ZodType<SCHEMA, any>\n    | z3.Schema<SCHEMA, z3.ZodTypeDef, any>\n    | Schema<SCHEMA>;\n  enumValues?: Array<SCHEMA>;\n}): OutputStrategy<any, any, any> {\n  switch (output) {\n    case 'object':\n      return objectOutputStrategy(asSchema(schema!));\n    case 'array':\n      return arrayOutputStrategy(asSchema(schema!));\n    case 'enum':\n      return enumOutputStrategy(enumValues! as Array<string>);\n    case 'no-schema':\n      return noSchemaOutputStrategy;\n    default: {\n      const _exhaustiveCheck: never = output;\n      throw new Error(`Unsupported output: ${_exhaustiveCheck}`);\n    }\n  }\n}\n", "import { JSONParseError, TypeValidationError } from '@ai-sdk/provider';\nimport { safeParseJSON } from '@ai-sdk/provider-utils';\nimport { NoObjectGeneratedError } from '../error/no-object-generated-error';\nimport type {\n  FinishReason,\n  LanguageModelResponseMetadata,\n  LanguageModelUsage,\n} from '../types';\nimport type { OutputStrategy } from './output-strategy';\nimport { RepairTextFunction } from './repair-text';\n\n/**\n * Parses and validates a result string by parsing it as JSON and validating against the output strategy.\n *\n * @param result - The result string to parse and validate\n * @param outputStrategy - The output strategy containing validation logic\n * @param context - Additional context for error reporting\n * @returns The validated result\n * @throws NoObjectGeneratedError if parsing or validation fails\n */\nasync function parseAndValidateObjectResult<RESULT>(\n  result: string,\n  outputStrategy: OutputStrategy<any, RESULT, any>,\n  context: {\n    response: LanguageModelResponseMetadata;\n    usage: LanguageModelUsage;\n    finishReason: FinishReason;\n  },\n): Promise<RESULT> {\n  const parseResult = await safeParseJSON({ text: result });\n\n  if (!parseResult.success) {\n    throw new NoObjectGeneratedError({\n      message: 'No object generated: could not parse the response.',\n      cause: parseResult.error,\n      text: result,\n      response: context.response,\n      usage: context.usage,\n      finishReason: context.finishReason,\n    });\n  }\n\n  const validationResult = await outputStrategy.validateFinalResult(\n    parseResult.value,\n    {\n      text: result,\n      response: context.response,\n      usage: context.usage,\n    },\n  );\n\n  if (!validationResult.success) {\n    throw new NoObjectGeneratedError({\n      message: 'No object generated: response did not match schema.',\n      cause: validationResult.error,\n      text: result,\n      response: context.response,\n      usage: context.usage,\n      finishReason: context.finishReason,\n    });\n  }\n\n  return validationResult.value;\n}\n\n/**\n * Parses and validates a result string by parsing it as JSON and validating against the output strategy.\n * If the result cannot be parsed, it attempts to repair the result using the repairText function.\n *\n * @param result - The result string to parse and validate\n * @param outputStrategy - The output strategy containing validation logic\n * @param repairText - A function that attempts to repair the result string\n * @param context - Additional context for error reporting\n * @returns The validated result\n * @throws NoObjectGeneratedError if parsing or validation fails\n */\nexport async function parseAndValidateObjectResultWithRepair<RESULT>(\n  result: string,\n  outputStrategy: OutputStrategy<any, RESULT, any>,\n  repairText: RepairTextFunction | undefined,\n  context: {\n    response: LanguageModelResponseMetadata;\n    usage: LanguageModelUsage;\n    finishReason: FinishReason;\n  },\n): Promise<RESULT> {\n  try {\n    return await parseAndValidateObjectResult(result, outputStrategy, context);\n  } catch (error) {\n    if (\n      repairText != null &&\n      NoObjectGeneratedError.isInstance(error) &&\n      (JSONParseError.isInstance(error.cause) ||\n        TypeValidationError.isInstance(error.cause))\n    ) {\n      const repairedText = await repairText({\n        text: result,\n        error: error.cause,\n      });\n      if (repairedText === null) {\n        throw error;\n      }\n      return await parseAndValidateObjectResult(\n        repairedText,\n        outputStrategy,\n        context,\n      );\n    }\n    throw error;\n  }\n}\n", "import { Schema } from '@ai-sdk/provider-utils';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport { InvalidArgumentError } from '../error/invalid-argument-error';\n\nexport function validateObjectGenerationInput({\n  output,\n  schema,\n  schemaName,\n  schemaDescription,\n  enumValues,\n}: {\n  output?: 'object' | 'array' | 'enum' | 'no-schema';\n  schema?: z4.core.$ZodType | z3.Schema<any, z3.ZodTypeDef, any> | Schema<any>;\n  schemaName?: string;\n  schemaDescription?: string;\n  enumValues?: Array<unknown>;\n}) {\n  if (\n    output != null &&\n    output !== 'object' &&\n    output !== 'array' &&\n    output !== 'enum' &&\n    output !== 'no-schema'\n  ) {\n    throw new InvalidArgumentError({\n      parameter: 'output',\n      value: output,\n      message: 'Invalid output type.',\n    });\n  }\n\n  if (output === 'no-schema') {\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is not supported for no-schema output.',\n      });\n    }\n\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaDescription',\n        value: schemaDescription,\n        message: 'Schema description is not supported for no-schema output.',\n      });\n    }\n\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaName',\n        value: schemaName,\n        message: 'Schema name is not supported for no-schema output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for no-schema output.',\n      });\n    }\n  }\n\n  if (output === 'object') {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is required for object output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for object output.',\n      });\n    }\n  }\n\n  if (output === 'array') {\n    if (schema == null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Element schema is required for array output.',\n      });\n    }\n\n    if (enumValues != null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are not supported for array output.',\n      });\n    }\n  }\n\n  if (output === 'enum') {\n    if (schema != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schema',\n        value: schema,\n        message: 'Schema is not supported for enum output.',\n      });\n    }\n\n    if (schemaDescription != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaDescription',\n        value: schemaDescription,\n        message: 'Schema description is not supported for enum output.',\n      });\n    }\n\n    if (schemaName != null) {\n      throw new InvalidArgumentError({\n        parameter: 'schemaName',\n        value: schemaName,\n        message: 'Schema name is not supported for enum output.',\n      });\n    }\n\n    if (enumValues == null) {\n      throw new InvalidArgumentError({\n        parameter: 'enumValues',\n        value: enumValues,\n        message: 'Enum values are required for enum output.',\n      });\n    }\n\n    for (const value of enumValues) {\n      if (typeof value !== 'string') {\n        throw new InvalidArgumentError({\n          parameter: 'enumValues',\n          value,\n          message: 'Enum values must be strings.',\n        });\n      }\n    }\n  }\n}\n", "import {\n  JSONValue,\n  LanguageModelV2CallWarning,\n  LanguageModelV2FinishReason,\n  LanguageModelV2StreamPart,\n  LanguageModelV2Usage,\n  SharedV2ProviderMetadata,\n} from '@ai-sdk/provider';\nimport {\n  createIdGenerator,\n  ProviderOptions,\n  type InferSchema,\n  type Schema,\n} from '@ai-sdk/provider-utils';\nimport { ServerResponse } from 'http';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport { resolveLanguageModel } from '../model/resolve-model';\nimport { CallSettings } from '../prompt/call-settings';\nimport { convertToLanguageModelPrompt } from '../prompt/convert-to-language-model-prompt';\nimport { prepareCallSettings } from '../prompt/prepare-call-settings';\nimport { Prompt } from '../prompt/prompt';\nimport { standardizePrompt } from '../prompt/standardize-prompt';\nimport { wrapGatewayError } from '../prompt/wrap-gateway-error';\nimport { assembleOperationName } from '../telemetry/assemble-operation-name';\nimport { getBaseTelemetryAttributes } from '../telemetry/get-base-telemetry-attributes';\nimport { getTracer } from '../telemetry/get-tracer';\nimport { recordSpan } from '../telemetry/record-span';\nimport { selectTelemetryAttributes } from '../telemetry/select-telemetry-attributes';\nimport { stringifyForTelemetry } from '../telemetry/stringify-for-telemetry';\nimport { TelemetrySettings } from '../telemetry/telemetry-settings';\nimport { createTextStreamResponse } from '../text-stream/create-text-stream-response';\nimport { pipeTextStreamToResponse } from '../text-stream/pipe-text-stream-to-response';\nimport {\n  CallWarning,\n  FinishReason,\n  LanguageModel,\n} from '../types/language-model';\nimport { LanguageModelRequestMetadata } from '../types/language-model-request-metadata';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { ProviderMetadata } from '../types/provider-metadata';\nimport { LanguageModelUsage } from '../types/usage';\nimport { DeepPartial, isDeepEqualData, parsePartialJson } from '../util';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { createStitchableStream } from '../util/create-stitchable-stream';\nimport { DelayedPromise } from '../util/delayed-promise';\nimport { now as originalNow } from '../util/now';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { getOutputStrategy, OutputStrategy } from './output-strategy';\nimport { parseAndValidateObjectResultWithRepair } from './parse-and-validate-object-result';\nimport { RepairTextFunction } from './repair-text';\nimport { ObjectStreamPart, StreamObjectResult } from './stream-object-result';\nimport { validateObjectGenerationInput } from './validate-object-generation-input';\n\nconst originalGenerateId = createIdGenerator({ prefix: 'aiobj', size: 24 });\n\n/**\nCallback that is set using the `onError` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamObjectOnErrorCallback = (event: {\n  error: unknown;\n}) => Promise<void> | void;\n\n/**\nCallback that is set using the `onFinish` option.\n\n@param event - The event that is passed to the callback.\n */\nexport type StreamObjectOnFinishCallback<RESULT> = (event: {\n  /**\nThe token usage of the generated response.\n*/\n  usage: LanguageModelUsage;\n\n  /**\nThe generated object. Can be undefined if the final object does not match the schema.\n*/\n  object: RESULT | undefined;\n\n  /**\nOptional error object. This is e.g. a TypeValidationError when the final object does not match the schema.\n*/\n  error: unknown | undefined;\n\n  /**\nResponse metadata.\n */\n  response: LanguageModelResponseMetadata;\n\n  /**\nWarnings from the model provider (e.g. unsupported settings).\n*/\n  warnings?: CallWarning[];\n\n  /**\nAdditional provider-specific metadata. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n*/\n  providerMetadata: ProviderMetadata | undefined;\n}) => Promise<void> | void;\n\n/**\nGenerate a structured, typed object for a given prompt and schema using a language model.\n\nThis function streams the output. If you do not want to stream the output, use `generateObject` instead.\n\n@param model - The language model to use.\n@param tools - Tools that are accessible to and can be called by the model. The model needs to support calling tools.\n\n@param system - A system message that will be part of the prompt.\n@param prompt - A simple text prompt. You can either use `prompt` or `messages` but not both.\n@param messages - A list of messages. You can either use `prompt` or `messages` but not both.\n\n@param maxOutputTokens - Maximum number of tokens to generate.\n@param temperature - Temperature setting.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topP - Nucleus sampling.\nThe value is passed through to the provider. The range depends on the provider and model.\nIt is recommended to set either `temperature` or `topP`, but not both.\n@param topK - Only sample from the top K options for each subsequent token.\nUsed to remove \"long tail\" low probability responses.\nRecommended for advanced use cases only. You usually only need to use temperature.\n@param presencePenalty - Presence penalty setting.\nIt affects the likelihood of the model to repeat information that is already in the prompt.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param frequencyPenalty - Frequency penalty setting.\nIt affects the likelihood of the model to repeatedly use the same words or phrases.\nThe value is passed through to the provider. The range depends on the provider and model.\n@param stopSequences - Stop sequences.\nIf set, the model will stop generating text when one of the stop sequences is generated.\n@param seed - The seed (integer) to use for random sampling.\nIf set and supported by the model, calls will generate deterministic results.\n\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@param schema - The schema of the object that the model should generate.\n@param schemaName - Optional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n@param schemaDescription - Optional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n\n@param output - The type of the output.\n\n- 'object': The output is an object.\n- 'array': The output is an array.\n- 'enum': The output is an enum.\n- 'no-schema': The output is not a schema.\n\n@param experimental_telemetry - Optional telemetry configuration (experimental).\n\n@param providerOptions - Additional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n\n@returns\nA result object for accessing the partial object stream and additional information.\n */\nexport function streamObject<\n  SCHEMA extends\n    | z3.Schema\n    | z4.core.$ZodType\n    | Schema = z4.core.$ZodType<JSONValue>,\n  OUTPUT extends\n    | 'object'\n    | 'array'\n    | 'enum'\n    | 'no-schema' = InferSchema<SCHEMA> extends string ? 'enum' : 'object',\n  RESULT = OUTPUT extends 'array'\n    ? Array<InferSchema<SCHEMA>>\n    : InferSchema<SCHEMA>,\n>(\n  options: Omit<CallSettings, 'stopSequences'> &\n    Prompt &\n    (OUTPUT extends 'enum'\n      ? {\n          /**\nThe enum values that the model should use.\n        */\n          enum: Array<RESULT>;\n          mode?: 'json';\n          output: 'enum';\n        }\n      : OUTPUT extends 'no-schema'\n        ? {}\n        : {\n            /**\nThe schema of the object that the model should generate.\n      */\n            schema: SCHEMA;\n\n            /**\nOptional name of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema name.\n      */\n            schemaName?: string;\n\n            /**\nOptional description of the output that should be generated.\nUsed by some providers for additional LLM guidance, e.g.\nvia tool or schema description.\n      */\n            schemaDescription?: string;\n\n            /**\nThe mode to use for object generation.\n\nThe schema is converted into a JSON schema and used in one of the following ways\n\n- 'auto': The provider will choose the best mode for the model.\n- 'tool': A tool with the JSON schema as parameters is provided and the provider is instructed to use it.\n- 'json': The JSON schema and an instruction are injected into the prompt. If the provider supports JSON mode, it is enabled. If the provider supports JSON grammars, the grammar is used.\n\nPlease note that most providers do not support all modes.\n\nDefault and recommended: 'auto' (best mode for the model).\n      */\n            mode?: 'auto' | 'json' | 'tool';\n          }) & {\n      output?: OUTPUT;\n\n      /**\nThe language model to use.\n     */\n      model: LanguageModel;\n\n      /**\nA function that attempts to repair the raw output of the model\nto enable JSON parsing.\n       */\n      experimental_repairText?: RepairTextFunction;\n\n      /**\nOptional telemetry configuration (experimental).\n       */\n\n      experimental_telemetry?: TelemetrySettings;\n\n      /**\nAdditional provider-specific options. They are passed through\nto the provider from the AI SDK and enable provider-specific\nfunctionality that can be fully encapsulated in the provider.\n */\n      providerOptions?: ProviderOptions;\n\n      /**\nCallback that is invoked when an error occurs during streaming.\nYou can use it to log errors.\nThe stream processing will pause until the callback promise is resolved.\n     */\n      onError?: StreamObjectOnErrorCallback;\n\n      /**\nCallback that is called when the LLM response and the final object validation are finished.\n*/\n      onFinish?: StreamObjectOnFinishCallback<RESULT>;\n\n      /**\n       * Internal. For test use only. May change without notice.\n       */\n      _internal?: {\n        generateId?: () => string;\n        currentDate?: () => Date;\n        now?: () => number;\n      };\n    },\n): StreamObjectResult<\n  OUTPUT extends 'enum'\n    ? string\n    : OUTPUT extends 'array'\n      ? RESULT\n      : DeepPartial<RESULT>,\n  OUTPUT extends 'array' ? RESULT : RESULT,\n  OUTPUT extends 'array'\n    ? RESULT extends Array<infer U>\n      ? AsyncIterableStream<U>\n      : never\n    : never\n> {\n  const {\n    model,\n    output = 'object',\n    system,\n    prompt,\n    messages,\n    maxRetries,\n    abortSignal,\n    headers,\n    experimental_repairText: repairText,\n    experimental_telemetry: telemetry,\n    providerOptions,\n    onError = ({ error }: { error: unknown }) => {\n      console.error(error);\n    },\n    onFinish,\n    _internal: {\n      generateId = originalGenerateId,\n      currentDate = () => new Date(),\n      now = originalNow,\n    } = {},\n    ...settings\n  } = options;\n\n  const enumValues =\n    'enum' in options && options.enum ? options.enum : undefined;\n\n  const {\n    schema: inputSchema,\n    schemaDescription,\n    schemaName,\n  } = 'schema' in options ? options : {};\n\n  validateObjectGenerationInput({\n    output,\n    schema: inputSchema,\n    schemaName,\n    schemaDescription,\n    enumValues,\n  });\n\n  const outputStrategy = getOutputStrategy({\n    output,\n    schema: inputSchema,\n    enumValues,\n  });\n\n  return new DefaultStreamObjectResult({\n    model,\n    telemetry,\n    headers,\n    settings,\n    maxRetries,\n    abortSignal,\n    outputStrategy,\n    system,\n    prompt,\n    messages,\n    schemaName,\n    schemaDescription,\n    providerOptions,\n    repairText,\n    onError,\n    onFinish,\n    generateId,\n    currentDate,\n    now,\n  });\n}\n\nclass DefaultStreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM>\n  implements StreamObjectResult<PARTIAL, RESULT, ELEMENT_STREAM>\n{\n  private readonly _object = new DelayedPromise<RESULT>();\n  private readonly _usage = new DelayedPromise<LanguageModelUsage>();\n  private readonly _providerMetadata = new DelayedPromise<\n    ProviderMetadata | undefined\n  >();\n  private readonly _warnings = new DelayedPromise<CallWarning[] | undefined>();\n  private readonly _request =\n    new DelayedPromise<LanguageModelRequestMetadata>();\n  private readonly _response =\n    new DelayedPromise<LanguageModelResponseMetadata>();\n  private readonly _finishReason = new DelayedPromise<FinishReason>();\n\n  private readonly baseStream: ReadableStream<ObjectStreamPart<PARTIAL>>;\n\n  private readonly outputStrategy: OutputStrategy<\n    PARTIAL,\n    RESULT,\n    ELEMENT_STREAM\n  >;\n\n  constructor({\n    model: modelArg,\n    headers,\n    telemetry,\n    settings,\n    maxRetries: maxRetriesArg,\n    abortSignal,\n    outputStrategy,\n    system,\n    prompt,\n    messages,\n    schemaName,\n    schemaDescription,\n    providerOptions,\n    repairText,\n    onError,\n    onFinish,\n    generateId,\n    currentDate,\n    now,\n  }: {\n    model: LanguageModel;\n    telemetry: TelemetrySettings | undefined;\n    headers: Record<string, string | undefined> | undefined;\n    settings: Omit<CallSettings, 'abortSignal' | 'headers'>;\n    maxRetries: number | undefined;\n    abortSignal: AbortSignal | undefined;\n    outputStrategy: OutputStrategy<PARTIAL, RESULT, ELEMENT_STREAM>;\n    system: Prompt['system'];\n    prompt: Prompt['prompt'];\n    messages: Prompt['messages'];\n    schemaName: string | undefined;\n    schemaDescription: string | undefined;\n    providerOptions: ProviderOptions | undefined;\n    repairText: RepairTextFunction | undefined;\n    onError: StreamObjectOnErrorCallback;\n    onFinish: StreamObjectOnFinishCallback<RESULT> | undefined;\n    generateId: () => string;\n    currentDate: () => Date;\n    now: () => number;\n  }) {\n    const model = resolveLanguageModel(modelArg);\n\n    const { maxRetries, retry } = prepareRetries({\n      maxRetries: maxRetriesArg,\n      abortSignal,\n    });\n\n    const callSettings = prepareCallSettings(settings);\n\n    const baseTelemetryAttributes = getBaseTelemetryAttributes({\n      model,\n      telemetry,\n      headers,\n      settings: { ...callSettings, maxRetries },\n    });\n\n    const tracer = getTracer(telemetry);\n    const self = this;\n\n    const stitchableStream =\n      createStitchableStream<ObjectStreamPart<PARTIAL>>();\n\n    const eventProcessor = new TransformStream<\n      ObjectStreamPart<PARTIAL>,\n      ObjectStreamPart<PARTIAL>\n    >({\n      transform(chunk, controller) {\n        controller.enqueue(chunk);\n\n        if (chunk.type === 'error') {\n          onError({ error: wrapGatewayError(chunk.error) });\n        }\n      },\n    });\n\n    this.baseStream = stitchableStream.stream.pipeThrough(eventProcessor);\n\n    recordSpan({\n      name: 'ai.streamObject',\n      attributes: selectTelemetryAttributes({\n        telemetry,\n        attributes: {\n          ...assembleOperationName({\n            operationId: 'ai.streamObject',\n            telemetry,\n          }),\n          ...baseTelemetryAttributes,\n          // specific settings that only make sense on the outer level:\n          'ai.prompt': {\n            input: () => JSON.stringify({ system, prompt, messages }),\n          },\n          'ai.schema':\n            outputStrategy.jsonSchema != null\n              ? { input: () => JSON.stringify(outputStrategy.jsonSchema) }\n              : undefined,\n          'ai.schema.name': schemaName,\n          'ai.schema.description': schemaDescription,\n          'ai.settings.output': outputStrategy.type,\n        },\n      }),\n      tracer,\n      endWhenDone: false,\n      fn: async rootSpan => {\n        const standardizedPrompt = await standardizePrompt({\n          system,\n          prompt,\n          messages,\n        } as Prompt);\n\n        const callOptions = {\n          responseFormat: {\n            type: 'json' as const,\n            schema: outputStrategy.jsonSchema,\n            name: schemaName,\n            description: schemaDescription,\n          },\n          ...prepareCallSettings(settings),\n          prompt: await convertToLanguageModelPrompt({\n            prompt: standardizedPrompt,\n            supportedUrls: await model.supportedUrls,\n          }),\n          providerOptions,\n          abortSignal,\n          headers,\n          includeRawChunks: false,\n        };\n\n        const transformer: Transformer<\n          LanguageModelV2StreamPart,\n          ObjectStreamInputPart\n        > = {\n          transform: (chunk, controller) => {\n            switch (chunk.type) {\n              case 'text-delta':\n                controller.enqueue(chunk.delta);\n                break;\n              case 'response-metadata':\n              case 'finish':\n              case 'error':\n              case 'stream-start':\n                controller.enqueue(chunk);\n                break;\n            }\n          },\n        };\n\n        const {\n          result: { stream, response, request },\n          doStreamSpan,\n          startTimestampMs,\n        } = await retry(() =>\n          recordSpan({\n            name: 'ai.streamObject.doStream',\n            attributes: selectTelemetryAttributes({\n              telemetry,\n              attributes: {\n                ...assembleOperationName({\n                  operationId: 'ai.streamObject.doStream',\n                  telemetry,\n                }),\n                ...baseTelemetryAttributes,\n                'ai.prompt.messages': {\n                  input: () => stringifyForTelemetry(callOptions.prompt),\n                },\n\n                // standardized gen-ai llm span attributes:\n                'gen_ai.system': model.provider,\n                'gen_ai.request.model': model.modelId,\n                'gen_ai.request.frequency_penalty':\n                  callSettings.frequencyPenalty,\n                'gen_ai.request.max_tokens': callSettings.maxOutputTokens,\n                'gen_ai.request.presence_penalty': callSettings.presencePenalty,\n                'gen_ai.request.temperature': callSettings.temperature,\n                'gen_ai.request.top_k': callSettings.topK,\n                'gen_ai.request.top_p': callSettings.topP,\n              },\n            }),\n            tracer,\n            endWhenDone: false,\n            fn: async doStreamSpan => ({\n              startTimestampMs: now(),\n              doStreamSpan,\n              result: await model.doStream(callOptions),\n            }),\n          }),\n        );\n\n        self._request.resolve(request ?? {});\n\n        // store information for onFinish callback:\n        let warnings: LanguageModelV2CallWarning[] | undefined;\n        let usage: LanguageModelUsage = {\n          inputTokens: undefined,\n          outputTokens: undefined,\n          totalTokens: undefined,\n        };\n        let finishReason: LanguageModelV2FinishReason | undefined;\n        let providerMetadata: ProviderMetadata | undefined;\n        let object: RESULT | undefined;\n        let error: unknown | undefined;\n\n        // pipe chunks through a transformation stream that extracts metadata:\n        let accumulatedText = '';\n        let textDelta = '';\n        let fullResponse: {\n          id: string;\n          timestamp: Date;\n          modelId: string;\n        } = {\n          id: generateId(),\n          timestamp: currentDate(),\n          modelId: model.modelId,\n        };\n\n        // Keep track of raw parse result before type validation, since e.g. Zod might\n        // change the object by mapping properties.\n        let latestObjectJson: JSONValue | undefined = undefined;\n        let latestObject: PARTIAL | undefined = undefined;\n        let isFirstChunk = true;\n        let isFirstDelta = true;\n\n        const transformedStream = stream\n          .pipeThrough(new TransformStream(transformer))\n          .pipeThrough(\n            new TransformStream<\n              string | ObjectStreamInputPart,\n              ObjectStreamPart<PARTIAL>\n            >({\n              async transform(chunk, controller): Promise<void> {\n                if (\n                  typeof chunk === 'object' &&\n                  chunk.type === 'stream-start'\n                ) {\n                  warnings = chunk.warnings;\n                  return; // stream start chunks are sent immediately and do not count as first chunk\n                }\n\n                // Telemetry event for first chunk:\n                if (isFirstChunk) {\n                  const msToFirstChunk = now() - startTimestampMs;\n\n                  isFirstChunk = false;\n\n                  doStreamSpan.addEvent('ai.stream.firstChunk', {\n                    'ai.stream.msToFirstChunk': msToFirstChunk,\n                  });\n\n                  doStreamSpan.setAttributes({\n                    'ai.stream.msToFirstChunk': msToFirstChunk,\n                  });\n                }\n\n                // process partial text chunks\n                if (typeof chunk === 'string') {\n                  accumulatedText += chunk;\n                  textDelta += chunk;\n\n                  const { value: currentObjectJson, state: parseState } =\n                    await parsePartialJson(accumulatedText);\n\n                  if (\n                    currentObjectJson !== undefined &&\n                    !isDeepEqualData(latestObjectJson, currentObjectJson)\n                  ) {\n                    const validationResult =\n                      await outputStrategy.validatePartialResult({\n                        value: currentObjectJson,\n                        textDelta,\n                        latestObject,\n                        isFirstDelta,\n                        isFinalDelta: parseState === 'successful-parse',\n                      });\n\n                    if (\n                      validationResult.success &&\n                      !isDeepEqualData(\n                        latestObject,\n                        validationResult.value.partial,\n                      )\n                    ) {\n                      // inside inner check to correctly parse the final element in array mode:\n                      latestObjectJson = currentObjectJson;\n                      latestObject = validationResult.value.partial;\n\n                      controller.enqueue({\n                        type: 'object',\n                        object: latestObject,\n                      });\n\n                      controller.enqueue({\n                        type: 'text-delta',\n                        textDelta: validationResult.value.textDelta,\n                      });\n\n                      textDelta = '';\n                      isFirstDelta = false;\n                    }\n                  }\n\n                  return;\n                }\n\n                switch (chunk.type) {\n                  case 'response-metadata': {\n                    fullResponse = {\n                      id: chunk.id ?? fullResponse.id,\n                      timestamp: chunk.timestamp ?? fullResponse.timestamp,\n                      modelId: chunk.modelId ?? fullResponse.modelId,\n                    };\n                    break;\n                  }\n\n                  case 'finish': {\n                    // send final text delta:\n                    if (textDelta !== '') {\n                      controller.enqueue({ type: 'text-delta', textDelta });\n                    }\n\n                    // store finish reason for telemetry:\n                    finishReason = chunk.finishReason;\n\n                    // store usage and metadata for promises and onFinish callback:\n                    usage = chunk.usage;\n                    providerMetadata = chunk.providerMetadata;\n\n                    controller.enqueue({\n                      ...chunk,\n                      usage,\n                      response: fullResponse,\n                    });\n\n                    // resolve promises that can be resolved now:\n                    self._usage.resolve(usage);\n                    self._providerMetadata.resolve(providerMetadata);\n                    self._warnings.resolve(warnings);\n                    self._response.resolve({\n                      ...fullResponse,\n                      headers: response?.headers,\n                    });\n                    self._finishReason.resolve(finishReason ?? 'unknown');\n\n                    try {\n                      object = await parseAndValidateObjectResultWithRepair(\n                        accumulatedText,\n                        outputStrategy,\n                        repairText,\n                        {\n                          response: fullResponse,\n                          usage,\n                          finishReason,\n                        },\n                      );\n                      self._object.resolve(object);\n                    } catch (e) {\n                      error = e;\n                      self._object.reject(e);\n                    }\n                    break;\n                  }\n\n                  default: {\n                    controller.enqueue(chunk);\n                    break;\n                  }\n                }\n              },\n\n              // invoke onFinish callback and resolve toolResults promise when the stream is about to close:\n              async flush(controller) {\n                try {\n                  const finalUsage = usage ?? {\n                    promptTokens: NaN,\n                    completionTokens: NaN,\n                    totalTokens: NaN,\n                  };\n\n                  doStreamSpan.setAttributes(\n                    selectTelemetryAttributes({\n                      telemetry,\n                      attributes: {\n                        'ai.response.finishReason': finishReason,\n                        'ai.response.object': {\n                          output: () => JSON.stringify(object),\n                        },\n                        'ai.response.id': fullResponse.id,\n                        'ai.response.model': fullResponse.modelId,\n                        'ai.response.timestamp':\n                          fullResponse.timestamp.toISOString(),\n                        'ai.response.providerMetadata':\n                          JSON.stringify(providerMetadata),\n\n                        'ai.usage.inputTokens': finalUsage.inputTokens,\n                        'ai.usage.outputTokens': finalUsage.outputTokens,\n                        'ai.usage.totalTokens': finalUsage.totalTokens,\n                        'ai.usage.reasoningTokens': finalUsage.reasoningTokens,\n                        'ai.usage.cachedInputTokens':\n                          finalUsage.cachedInputTokens,\n\n                        // standardized gen-ai llm span attributes:\n                        'gen_ai.response.finish_reasons': [finishReason],\n                        'gen_ai.response.id': fullResponse.id,\n                        'gen_ai.response.model': fullResponse.modelId,\n                        'gen_ai.usage.input_tokens': finalUsage.inputTokens,\n                        'gen_ai.usage.output_tokens': finalUsage.outputTokens,\n                      },\n                    }),\n                  );\n\n                  // finish doStreamSpan before other operations for correct timing:\n                  doStreamSpan.end();\n\n                  // Add response information to the root span:\n                  rootSpan.setAttributes(\n                    selectTelemetryAttributes({\n                      telemetry,\n                      attributes: {\n                        'ai.usage.inputTokens': finalUsage.inputTokens,\n                        'ai.usage.outputTokens': finalUsage.outputTokens,\n                        'ai.usage.totalTokens': finalUsage.totalTokens,\n                        'ai.usage.reasoningTokens': finalUsage.reasoningTokens,\n                        'ai.usage.cachedInputTokens':\n                          finalUsage.cachedInputTokens,\n                        'ai.response.object': {\n                          output: () => JSON.stringify(object),\n                        },\n                        'ai.response.providerMetadata':\n                          JSON.stringify(providerMetadata),\n                      },\n                    }),\n                  );\n\n                  // call onFinish callback:\n                  await onFinish?.({\n                    usage: finalUsage,\n                    object,\n                    error,\n                    response: {\n                      ...fullResponse,\n                      headers: response?.headers,\n                    },\n                    warnings,\n                    providerMetadata,\n                  });\n                } catch (error) {\n                  controller.enqueue({ type: 'error', error });\n                } finally {\n                  rootSpan.end();\n                }\n              },\n            }),\n          );\n\n        stitchableStream.addStream(transformedStream);\n      },\n    })\n      .catch(error => {\n        // add an empty stream with an error to break the stream:\n        stitchableStream.addStream(\n          new ReadableStream({\n            start(controller) {\n              controller.enqueue({ type: 'error', error });\n              controller.close();\n            },\n          }),\n        );\n      })\n      .finally(() => {\n        stitchableStream.close();\n      });\n\n    this.outputStrategy = outputStrategy;\n  }\n\n  get object() {\n    return this._object.promise;\n  }\n\n  get usage() {\n    return this._usage.promise;\n  }\n\n  get providerMetadata() {\n    return this._providerMetadata.promise;\n  }\n\n  get warnings() {\n    return this._warnings.promise;\n  }\n\n  get request() {\n    return this._request.promise;\n  }\n\n  get response() {\n    return this._response.promise;\n  }\n\n  get finishReason() {\n    return this._finishReason.promise;\n  }\n\n  get partialObjectStream(): AsyncIterableStream<PARTIAL> {\n    return createAsyncIterableStream(\n      this.baseStream.pipeThrough(\n        new TransformStream<ObjectStreamPart<PARTIAL>, PARTIAL>({\n          transform(chunk, controller) {\n            switch (chunk.type) {\n              case 'object':\n                controller.enqueue(chunk.object);\n                break;\n\n              case 'text-delta':\n              case 'finish':\n              case 'error': // suppress error (use onError instead)\n                break;\n\n              default: {\n                const _exhaustiveCheck: never = chunk;\n                throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n              }\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get elementStream(): ELEMENT_STREAM {\n    return this.outputStrategy.createElementStream(this.baseStream);\n  }\n\n  get textStream(): AsyncIterableStream<string> {\n    return createAsyncIterableStream(\n      this.baseStream.pipeThrough(\n        new TransformStream<ObjectStreamPart<PARTIAL>, string>({\n          transform(chunk, controller) {\n            switch (chunk.type) {\n              case 'text-delta':\n                controller.enqueue(chunk.textDelta);\n                break;\n\n              case 'object':\n              case 'finish':\n              case 'error': // suppress error (use onError instead)\n                break;\n\n              default: {\n                const _exhaustiveCheck: never = chunk;\n                throw new Error(`Unsupported chunk type: ${_exhaustiveCheck}`);\n              }\n            }\n          },\n        }),\n      ),\n    );\n  }\n\n  get fullStream(): AsyncIterableStream<ObjectStreamPart<PARTIAL>> {\n    return createAsyncIterableStream(this.baseStream);\n  }\n\n  pipeTextStreamToResponse(response: ServerResponse, init?: ResponseInit) {\n    pipeTextStreamToResponse({\n      response,\n      textStream: this.textStream,\n      ...init,\n    });\n  }\n\n  toTextStreamResponse(init?: ResponseInit): Response {\n    return createTextStreamResponse({\n      textStream: this.textStream,\n      ...init,\n    });\n  }\n}\n\nexport type ObjectStreamInputPart =\n  | string\n  | {\n      type: 'stream-start';\n      warnings: LanguageModelV2CallWarning[];\n    }\n  | {\n      type: 'error';\n      error: unknown;\n    }\n  | {\n      type: 'response-metadata';\n      id?: string;\n      timestamp?: Date;\n      modelId?: string;\n    }\n  | {\n      type: 'finish';\n      finishReason: LanguageModelV2FinishReason;\n      usage: LanguageModelV2Usage;\n      providerMetadata?: SharedV2ProviderMetadata;\n    };\n", "import { InvalidArgumentError } from '../error/invalid-argument-error';\n\n/**\n * Calculates the cosine similarity between two vectors. This is a useful metric for\n * comparing the similarity of two vectors such as embeddings.\n *\n * @param vector1 - The first vector.\n * @param vector2 - The second vector.\n *\n * @returns The cosine similarity between vector1 and vector2.\n * @returns 0 if either vector is the zero vector.\n *\n * @throws {InvalidArgumentError} If the vectors do not have the same length.\n */\nexport function cosineSimilarity(vector1: number[], vector2: number[]): number {\n  if (vector1.length !== vector2.length) {\n    throw new InvalidArgumentError({\n      parameter: 'vector1,vector2',\n      value: { vector1Length: vector1.length, vector2Length: vector2.length },\n      message: `Vectors must have the same length`,\n    });\n  }\n\n  const n = vector1.length;\n\n  if (n === 0) {\n    return 0; // Return 0 for empty vectors if no error is thrown\n  }\n\n  let magnitudeSquared1 = 0;\n  let magnitudeSquared2 = 0;\n  let dotProduct = 0;\n\n  for (let i = 0; i < n; i++) {\n    const value1 = vector1[i];\n    const value2 = vector2[i];\n\n    magnitudeSquared1 += value1 * value1;\n    magnitudeSquared2 += value2 * value2;\n    dotProduct += value1 * value2;\n  }\n\n  return magnitudeSquared1 === 0 || magnitudeSquared2 === 0\n    ? 0\n    : dotProduct /\n        (Math.sqrt(magnitudeSquared1) * Math.sqrt(magnitudeSquared2));\n}\n", "/**\n * Converts a data URL of type text/* to a text string.\n */\nexport function getTextFromDataUrl(dataUrl: string): string {\n  const [header, base64Content] = dataUrl.split(',');\n  const mediaType = header.split(';')[0].split(':')[1];\n\n  if (mediaType == null || base64Content == null) {\n    throw new Error('Invalid data URL format');\n  }\n\n  try {\n    return window.atob(base64Content);\n  } catch (error) {\n    throw new Error(`Error decoding data URL`);\n  }\n}\n", "/**\n * Performs a deep-equal comparison of two parsed JSON objects.\n *\n * @param {any} obj1 - The first object to compare.\n * @param {any} obj2 - The second object to compare.\n * @returns {boolean} - Returns true if the two objects are deeply equal, false otherwise.\n */\nexport function isDeepEqualData(obj1: any, obj2: any): boolean {\n  // Check for strict equality first\n  if (obj1 === obj2) return true;\n\n  // Check if either is null or undefined\n  if (obj1 == null || obj2 == null) return false;\n\n  // Check if both are objects\n  if (typeof obj1 !== 'object' && typeof obj2 !== 'object')\n    return obj1 === obj2;\n\n  // If they are not strictly equal, they both need to be Objects\n  if (obj1.constructor !== obj2.constructor) return false;\n\n  // Special handling for Date objects\n  if (obj1 instanceof Date && obj2 instanceof Date) {\n    return obj1.getTime() === obj2.getTime();\n  }\n\n  // Handle arrays: compare length and then perform a recursive deep comparison on each item\n  if (Array.isArray(obj1)) {\n    if (obj1.length !== obj2.length) return false;\n    for (let i = 0; i < obj1.length; i++) {\n      if (!isDeepEqualData(obj1[i], obj2[i])) return false;\n    }\n    return true; // All array elements matched\n  }\n\n  // Compare the set of keys in each object\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length) return false;\n\n  // Check each key-value pair recursively\n  for (const key of keys1) {\n    if (!keys2.includes(key)) return false;\n    if (!isDeepEqualData(obj1[key], obj2[key])) return false;\n  }\n\n  return true; // All keys and values matched\n}\n", "import { Job } from './job';\n\nexport class SerialJobExecutor {\n  private queue: Array<Job> = [];\n  private isProcessing = false;\n\n  private async processQueue() {\n    if (this.isProcessing) {\n      return;\n    }\n\n    this.isProcessing = true;\n\n    while (this.queue.length > 0) {\n      await this.queue[0]();\n      this.queue.shift();\n    }\n\n    this.isProcessing = false;\n  }\n\n  async run(job: Job): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.queue.push(async () => {\n        try {\n          await job();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      void this.processQueue();\n    });\n  }\n}\n", "import { delay as delayFunction } from '@ai-sdk/provider-utils';\n\n/**\n * Creates a ReadableStream that emits the provided values with an optional delay between each value.\n *\n * @param options - The configuration options\n * @param options.chunks - Array of values to be emitted by the stream\n * @param options.initialDelayInMs - Optional initial delay in milliseconds before emitting the first value (default: 0). Can be set to `null` to skip the initial delay. The difference between `initialDelayInMs: null` and `initialDelayInMs: 0` is that `initialDelayInMs: null` will emit the values without any delay, while `initialDelayInMs: 0` will emit the values with a delay of 0 milliseconds.\n * @param options.chunkDelayInMs - Optional delay in milliseconds between emitting each value (default: 0). Can be set to `null` to skip the delay. The difference between `chunkDelayInMs: null` and `chunkDelayInMs: 0` is that `chunkDelayInMs: null` will emit the values without any delay, while `chunkDelayInMs: 0` will emit the values with a delay of 0 milliseconds.\n * @returns A ReadableStream that emits the provided values\n */\nexport function simulateReadableStream<T>({\n  chunks,\n  initialDelayInMs = 0,\n  chunkDelayInMs = 0,\n  _internal,\n}: {\n  chunks: T[];\n  initialDelayInMs?: number | null;\n  chunkDelayInMs?: number | null;\n  _internal?: {\n    delay?: (ms: number | null) => Promise<void>;\n  };\n}): ReadableStream<T> {\n  const delay = _internal?.delay ?? delayFunction;\n\n  let index = 0;\n\n  return new ReadableStream({\n    async pull(controller) {\n      if (index < chunks.length) {\n        await delay(index === 0 ? initialDelayInMs : chunkDelayInMs);\n        controller.enqueue(chunks[index++]);\n      } else {\n        controller.close();\n      }\n    },\n  });\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { SpeechModelResponseMetadata } from '../types/speech-model-response-metadata';\n\n/**\nError that is thrown when no speech audio was generated.\n */\nexport class NoSpeechGeneratedError extends AISDKError {\n  readonly responses: Array<SpeechModelResponseMetadata>;\n\n  constructor(options: { responses: Array<SpeechModelResponseMetadata> }) {\n    super({\n      name: 'AI_NoSpeechGeneratedError',\n      message: 'No speech audio generated.',\n    });\n\n    this.responses = options.responses;\n  }\n}\n", "import {\n  GeneratedFile,\n  DefaultGeneratedFile,\n} from '../generate-text/generated-file';\n\n/**\n * A generated audio file.\n */\nexport interface GeneratedAudioFile extends GeneratedFile {\n  /**\n   * Audio format of the file (e.g., 'mp3', 'wav', etc.)\n   */\n  readonly format: string;\n}\n\nexport class DefaultGeneratedAudioFile\n  extends DefaultGeneratedFile\n  implements GeneratedAudioFile\n{\n  readonly format: string;\n\n  constructor({\n    data,\n    mediaType,\n  }: {\n    data: string | Uint8Array;\n    mediaType: string;\n  }) {\n    super({ data, mediaType });\n    let format = 'mp3';\n\n    // If format is not provided, try to determine it from the media type\n    if (mediaType) {\n      const mediaTypeParts = mediaType.split('/');\n\n      if (mediaTypeParts.length === 2) {\n        // Handle special cases for audio formats\n        if (mediaType !== 'audio/mpeg') {\n          format = mediaTypeParts[1];\n        }\n      }\n    }\n\n    if (!format) {\n      // TODO this should be an AI SDK error\n      throw new Error(\n        'Audio format must be provided or determinable from media type',\n      );\n    }\n\n    this.format = format;\n  }\n}\n\nexport class DefaultGeneratedAudioFileWithType extends DefaultGeneratedAudioFile {\n  readonly type = 'audio';\n\n  constructor(options: {\n    data: string | Uint8Array;\n    mediaType: string;\n    format: string;\n  }) {\n    super(options);\n  }\n}\n", "import { JSONValue, SpeechModelV2 } from '@ai-sdk/provider';\nimport { ProviderOptions } from '@ai-sdk/provider-utils';\nimport { NoSpeechGeneratedError } from '../error/no-speech-generated-error';\nimport {\n  audioMediaTypeSignatures,\n  detectMediaType,\n} from '../util/detect-media-type';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { UnsupportedModelVersionError } from '../error/unsupported-model-version-error';\nimport { SpeechWarning } from '../types/speech-model';\nimport { SpeechModelResponseMetadata } from '../types/speech-model-response-metadata';\nimport { SpeechResult } from './generate-speech-result';\nimport {\n  DefaultGeneratedAudioFile,\n  GeneratedAudioFile,\n} from './generated-audio-file';\n\n/**\nGenerates speech audio using a speech model.\n\n@param model - The speech model to use.\n@param text - The text to convert to speech.\n@param voice - The voice to use for speech generation.\n@param outputFormat - The output format to use for speech generation e.g. \"mp3\", \"wav\", etc.\n@param instructions - Instructions for the speech generation e.g. \"Speak in a slow and steady tone\".\n@param speed - The speed of the speech generation.\n@param providerOptions - Additional provider-specific options that are passed through to the provider\nas body parameters.\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the generated audio data.\n */\nexport async function generateSpeech({\n  model,\n  text,\n  voice,\n  outputFormat,\n  instructions,\n  speed,\n  language,\n  providerOptions = {},\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n}: {\n  /**\nThe speech model to use.\n     */\n  model: SpeechModelV2;\n\n  /**\nThe text to convert to speech.\n   */\n  text: string;\n\n  /**\nThe voice to use for speech generation.\n   */\n  voice?: string;\n\n  /**\n   * The desired output format for the audio e.g. \"mp3\", \"wav\", etc.\n   */\n  outputFormat?: 'mp3' | 'wav' | (string & {});\n\n  /**\n    Instructions for the speech generation e.g. \"Speak in a slow and steady tone\".\n  */\n  instructions?: string;\n\n  /**\n  The speed of the speech generation.\n   */\n  speed?: number;\n\n  /**\n  The language for speech generation. This should be an ISO 639-1 language code (e.g. \"en\", \"es\", \"fr\")\n  or \"auto\" for automatic language detection. Provider support varies.\n   */\n  language?: string;\n\n  /**\nAdditional provider-specific options that are passed through to the provider\nas body parameters.\n\nThe outer record is keyed by the provider name, and the inner\nrecord is keyed by the provider-specific metadata key.\n```ts\n{\n  \"openai\": {}\n}\n```\n     */\n  providerOptions?: ProviderOptions;\n\n  /**\nMaximum number of retries per speech model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n}): Promise<SpeechResult> {\n  if (model.specificationVersion !== 'v2') {\n    throw new UnsupportedModelVersionError({\n      version: model.specificationVersion,\n      provider: model.provider,\n      modelId: model.modelId,\n    });\n  }\n\n  const { retry } = prepareRetries({\n    maxRetries: maxRetriesArg,\n    abortSignal,\n  });\n\n  const result = await retry(() =>\n    model.doGenerate({\n      text,\n      voice,\n      outputFormat,\n      instructions,\n      speed,\n      language,\n      abortSignal,\n      headers,\n      providerOptions,\n    }),\n  );\n\n  if (!result.audio || result.audio.length === 0) {\n    throw new NoSpeechGeneratedError({ responses: [result.response] });\n  }\n\n  return new DefaultSpeechResult({\n    audio: new DefaultGeneratedAudioFile({\n      data: result.audio,\n      mediaType:\n        detectMediaType({\n          data: result.audio,\n          signatures: audioMediaTypeSignatures,\n        }) ?? 'audio/mp3',\n    }),\n    warnings: result.warnings,\n    responses: [result.response],\n    providerMetadata: result.providerMetadata,\n  });\n}\n\nclass DefaultSpeechResult implements SpeechResult {\n  readonly audio: GeneratedAudioFile;\n  readonly warnings: Array<SpeechWarning>;\n  readonly responses: Array<SpeechModelResponseMetadata>;\n  readonly providerMetadata: Record<string, Record<string, JSONValue>>;\n\n  constructor(options: {\n    audio: GeneratedAudioFile;\n    warnings: Array<SpeechWarning>;\n    responses: Array<SpeechModelResponseMetadata>;\n    providerMetadata: Record<string, Record<string, JSONValue>> | undefined;\n  }) {\n    this.audio = options.audio;\n    this.warnings = options.warnings;\n    this.responses = options.responses;\n    this.providerMetadata = options.providerMetadata ?? {};\n  }\n}\n", "import { LanguageModelV2CallOptions } from '@ai-sdk/provider';\nimport {\n  asSchema,\n  safeParseJSON,\n  safeValidateTypes,\n  Schema,\n} from '@ai-sdk/provider-utils';\nimport * as z3 from 'zod/v3';\nimport * as z4 from 'zod/v4';\nimport { NoObjectGeneratedError } from '../error/no-object-generated-error';\nimport { DeepPartial } from '../util/deep-partial';\nimport { parsePartialJson } from '../util/parse-partial-json';\nimport { FinishReason } from '../types/language-model';\nimport { LanguageModelResponseMetadata } from '../types/language-model-response-metadata';\nimport { LanguageModelUsage } from '../types/usage';\n\nexport interface Output<OUTPUT, PARTIAL> {\n  readonly type: 'object' | 'text';\n\n  responseFormat: LanguageModelV2CallOptions['responseFormat'];\n\n  parsePartial(options: {\n    text: string;\n  }): Promise<{ partial: PARTIAL } | undefined>;\n\n  parseOutput(\n    options: { text: string },\n    context: {\n      response: LanguageModelResponseMetadata;\n      usage: LanguageModelUsage;\n      finishReason: FinishReason;\n    },\n  ): Promise<OUTPUT>;\n}\n\nexport const text = (): Output<string, string> => ({\n  type: 'text',\n\n  responseFormat: { type: 'text' },\n\n  async parsePartial({ text }: { text: string }) {\n    return { partial: text };\n  },\n\n  async parseOutput({ text }: { text: string }) {\n    return text;\n  },\n});\n\nexport const object = <OUTPUT>({\n  schema: inputSchema,\n}: {\n  schema:\n    | z4.core.$ZodType<OUTPUT, any>\n    | z3.Schema<OUTPUT, z3.ZodTypeDef, any>\n    | Schema<OUTPUT>;\n}): Output<OUTPUT, DeepPartial<OUTPUT>> => {\n  const schema = asSchema(inputSchema);\n\n  return {\n    type: 'object',\n\n    responseFormat: {\n      type: 'json',\n      schema: schema.jsonSchema,\n    },\n\n    async parsePartial({ text }: { text: string }) {\n      const result = await parsePartialJson(text);\n\n      switch (result.state) {\n        case 'failed-parse':\n        case 'undefined-input':\n          return undefined;\n\n        case 'repaired-parse':\n        case 'successful-parse':\n          return {\n            // Note: currently no validation of partial results:\n            partial: result.value as DeepPartial<OUTPUT>,\n          };\n\n        default: {\n          const _exhaustiveCheck: never = result.state;\n          throw new Error(`Unsupported parse state: ${_exhaustiveCheck}`);\n        }\n      }\n    },\n\n    async parseOutput(\n      { text }: { text: string },\n      context: {\n        response: LanguageModelResponseMetadata;\n        usage: LanguageModelUsage;\n        finishReason: FinishReason;\n      },\n    ) {\n      const parseResult = await safeParseJSON({ text });\n\n      if (!parseResult.success) {\n        throw new NoObjectGeneratedError({\n          message: 'No object generated: could not parse the response.',\n          cause: parseResult.error,\n          text,\n          response: context.response,\n          usage: context.usage,\n          finishReason: context.finishReason,\n        });\n      }\n\n      const validationResult = await safeValidateTypes({\n        value: parseResult.value,\n        schema,\n      });\n\n      if (!validationResult.success) {\n        throw new NoObjectGeneratedError({\n          message: 'No object generated: response did not match schema.',\n          cause: validationResult.error,\n          text,\n          response: context.response,\n          usage: context.usage,\n          finishReason: context.finishReason,\n        });\n      }\n\n      return validationResult.value;\n    },\n  };\n};\n", "import { delay as originalDelay } from '@ai-sdk/provider-utils';\nimport { TextStreamPart } from './stream-text-result';\nimport { ToolSet } from './tool-set';\nimport { InvalidArgumentError } from '@ai-sdk/provider';\n\nconst CHUNKING_REGEXPS = {\n  word: /\\S+\\s+/m,\n  line: /\\n+/m,\n};\n\n/**\n * Detects the first chunk in a buffer.\n *\n * @param buffer - The buffer to detect the first chunk in.\n *\n * @returns The first detected chunk, or `undefined` if no chunk was detected.\n */\nexport type ChunkDetector = (buffer: string) => string | undefined | null;\n\n/**\n * Smooths text streaming output.\n *\n * @param delayInMs - The delay in milliseconds between each chunk. Defaults to 10ms. Can be set to `null` to skip the delay.\n * @param chunking - Controls how the text is chunked for streaming. Use \"word\" to stream word by word (default), \"line\" to stream line by line, or provide a custom RegExp pattern for custom chunking.\n *\n * @returns A transform stream that smooths text streaming output.\n */\nexport function smoothStream<TOOLS extends ToolSet>({\n  delayInMs = 10,\n  chunking = 'word',\n  _internal: { delay = originalDelay } = {},\n}: {\n  delayInMs?: number | null;\n  chunking?: 'word' | 'line' | RegExp | ChunkDetector;\n  /**\n   * Internal. For test use only. May change without notice.\n   */\n  _internal?: {\n    delay?: (delayInMs: number | null) => Promise<void>;\n  };\n} = {}): (options: {\n  tools: TOOLS;\n}) => TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>> {\n  let detectChunk: ChunkDetector;\n\n  if (typeof chunking === 'function') {\n    detectChunk = buffer => {\n      const match = chunking(buffer);\n\n      if (match == null) {\n        return null;\n      }\n\n      if (!match.length) {\n        throw new Error(`Chunking function must return a non-empty string.`);\n      }\n\n      if (!buffer.startsWith(match)) {\n        throw new Error(\n          `Chunking function must return a match that is a prefix of the buffer. Received: \"${match}\" expected to start with \"${buffer}\"`,\n        );\n      }\n\n      return match;\n    };\n  } else {\n    const chunkingRegex =\n      typeof chunking === 'string' ? CHUNKING_REGEXPS[chunking] : chunking;\n\n    if (chunkingRegex == null) {\n      throw new InvalidArgumentError({\n        argument: 'chunking',\n        message: `Chunking must be \"word\" or \"line\" or a RegExp. Received: ${chunking}`,\n      });\n    }\n\n    detectChunk = buffer => {\n      const match = chunkingRegex.exec(buffer);\n\n      if (!match) {\n        return null;\n      }\n\n      return buffer.slice(0, match.index) + match?.[0];\n    };\n  }\n\n  return () => {\n    let buffer = '';\n    let id = '';\n\n    return new TransformStream<TextStreamPart<TOOLS>, TextStreamPart<TOOLS>>({\n      async transform(chunk, controller) {\n        if (chunk.type !== 'text-delta') {\n          if (buffer.length > 0) {\n            controller.enqueue({ type: 'text-delta', text: buffer, id });\n            buffer = '';\n          }\n\n          controller.enqueue(chunk);\n          return;\n        }\n\n        if (chunk.id !== id && buffer.length > 0) {\n          controller.enqueue({ type: 'text-delta', text: buffer, id });\n          buffer = '';\n        }\n\n        buffer += chunk.text;\n        id = chunk.id;\n\n        let match;\n\n        while ((match = detectChunk(buffer)) != null) {\n          controller.enqueue({ type: 'text-delta', text: match, id });\n          buffer = buffer.slice(match.length);\n\n          await delay(delayInMs);\n        }\n      },\n    });\n  };\n}\n", "import { LanguageModelV2CallOptions } from '@ai-sdk/provider';\nimport { LanguageModelMiddleware } from '../types';\nimport { mergeObjects } from '../util/merge-objects';\n\n/**\n * Applies default settings for a language model.\n */\nexport function defaultSettingsMiddleware({\n  settings,\n}: {\n  settings: Partial<{\n    maxOutputTokens?: LanguageModelV2CallOptions['maxOutputTokens'];\n    temperature?: LanguageModelV2CallOptions['temperature'];\n    stopSequences?: LanguageModelV2CallOptions['stopSequences'];\n    topP?: LanguageModelV2CallOptions['topP'];\n    topK?: LanguageModelV2CallOptions['topK'];\n    presencePenalty?: LanguageModelV2CallOptions['presencePenalty'];\n    frequencyPenalty?: LanguageModelV2CallOptions['frequencyPenalty'];\n    responseFormat?: LanguageModelV2CallOptions['responseFormat'];\n    seed?: LanguageModelV2CallOptions['seed'];\n    tools?: LanguageModelV2CallOptions['tools'];\n    toolChoice?: LanguageModelV2CallOptions['toolChoice'];\n    headers?: LanguageModelV2CallOptions['headers'];\n    providerOptions?: LanguageModelV2CallOptions['providerOptions'];\n  }>;\n}): LanguageModelMiddleware {\n  return {\n    middlewareVersion: 'v2',\n    transformParams: async ({ params }) => {\n      return mergeObjects(settings, params) as LanguageModelV2CallOptions;\n    },\n  };\n}\n", "/**\n * Returns the index of the start of the searchedText in the text, or null if it\n * is not found.\n */\nexport function getPotentialStartIndex(\n  text: string,\n  searchedText: string,\n): number | null {\n  // Return null immediately if searchedText is empty.\n  if (searchedText.length === 0) {\n    return null;\n  }\n\n  // Check if the searchedText exists as a direct substring of text.\n  const directIndex = text.indexOf(searchedText);\n  if (directIndex !== -1) {\n    return directIndex;\n  }\n\n  // Otherwise, look for the largest suffix of \"text\" that matches\n  // a prefix of \"searchedText\". We go from the end of text inward.\n  for (let i = text.length - 1; i >= 0; i--) {\n    const suffix = text.substring(i);\n    if (searchedText.startsWith(suffix)) {\n      return i;\n    }\n  }\n\n  return null;\n}\n", "import type {\n  LanguageModelV2Content,\n  LanguageModelV2StreamPart,\n} from '@ai-sdk/provider';\nimport { LanguageModelMiddleware } from '../types/language-model-middleware';\nimport { getPotentialStartIndex } from '../util/get-potential-start-index';\n\n/**\n * Extract an XML-tagged reasoning section from the generated text and exposes it\n * as a `reasoning` property on the result.\n *\n * @param tagName - The name of the XML tag to extract reasoning from.\n * @param separator - The separator to use between reasoning and text sections.\n * @param startWithReasoning - Whether to start with reasoning tokens.\n */\nexport function extractReasoningMiddleware({\n  tagName,\n  separator = '\\n',\n  startWithReasoning = false,\n}: {\n  tagName: string;\n  separator?: string;\n  startWithReasoning?: boolean;\n}): LanguageModelMiddleware {\n  const openingTag = `<${tagName}>`;\n  const closingTag = `<\\/${tagName}>`;\n\n  return {\n    middlewareVersion: 'v2',\n    wrapGenerate: async ({ doGenerate }) => {\n      const { content, ...rest } = await doGenerate();\n\n      const transformedContent: LanguageModelV2Content[] = [];\n      for (const part of content) {\n        if (part.type !== 'text') {\n          transformedContent.push(part);\n          continue;\n        }\n\n        const text = startWithReasoning ? openingTag + part.text : part.text;\n\n        const regexp = new RegExp(`${openingTag}(.*?)${closingTag}`, 'gs');\n        const matches = Array.from(text.matchAll(regexp));\n\n        if (!matches.length) {\n          transformedContent.push(part);\n          continue;\n        }\n\n        const reasoningText = matches.map(match => match[1]).join(separator);\n\n        let textWithoutReasoning = text;\n        for (let i = matches.length - 1; i >= 0; i--) {\n          const match = matches[i];\n\n          const beforeMatch = textWithoutReasoning.slice(0, match.index);\n          const afterMatch = textWithoutReasoning.slice(\n            match.index! + match[0].length,\n          );\n\n          textWithoutReasoning =\n            beforeMatch +\n            (beforeMatch.length > 0 && afterMatch.length > 0 ? separator : '') +\n            afterMatch;\n        }\n\n        transformedContent.push({\n          type: 'reasoning',\n          text: reasoningText,\n        });\n\n        transformedContent.push({\n          type: 'text',\n          text: textWithoutReasoning,\n        });\n      }\n\n      return { content: transformedContent, ...rest };\n    },\n\n    wrapStream: async ({ doStream }) => {\n      const { stream, ...rest } = await doStream();\n\n      const reasoningExtractions: Record<\n        string,\n        {\n          isFirstReasoning: boolean;\n          isFirstText: boolean;\n          afterSwitch: boolean;\n          isReasoning: boolean;\n          buffer: string;\n          idCounter: number;\n          textId: string;\n        }\n      > = {};\n\n      let delayedTextStart: LanguageModelV2StreamPart | undefined;\n\n      return {\n        stream: stream.pipeThrough(\n          new TransformStream<\n            LanguageModelV2StreamPart,\n            LanguageModelV2StreamPart\n          >({\n            transform: (chunk, controller) => {\n              // do not send `text-start` before `reasoning-start`\n              // https://github.com/vercel/ai/issues/7774\n              if (chunk.type === 'text-start') {\n                delayedTextStart = chunk;\n                return;\n              }\n\n              if (chunk.type === 'text-end' && delayedTextStart) {\n                controller.enqueue(delayedTextStart);\n                delayedTextStart = undefined;\n              }\n\n              if (chunk.type !== 'text-delta') {\n                controller.enqueue(chunk);\n                return;\n              }\n\n              if (reasoningExtractions[chunk.id] == null) {\n                reasoningExtractions[chunk.id] = {\n                  isFirstReasoning: true,\n                  isFirstText: true,\n                  afterSwitch: false,\n                  isReasoning: startWithReasoning,\n                  buffer: '',\n                  idCounter: 0,\n                  textId: chunk.id,\n                };\n              }\n\n              const activeExtraction = reasoningExtractions[chunk.id];\n\n              activeExtraction.buffer += chunk.delta;\n\n              function publish(text: string) {\n                if (text.length > 0) {\n                  const prefix =\n                    activeExtraction.afterSwitch &&\n                    (activeExtraction.isReasoning\n                      ? !activeExtraction.isFirstReasoning\n                      : !activeExtraction.isFirstText)\n                      ? separator\n                      : '';\n\n                  if (\n                    activeExtraction.isReasoning &&\n                    (activeExtraction.afterSwitch ||\n                      activeExtraction.isFirstReasoning)\n                  ) {\n                    controller.enqueue({\n                      type: 'reasoning-start',\n                      id: `reasoning-${activeExtraction.idCounter}`,\n                    });\n                  }\n\n                  if (activeExtraction.isReasoning) {\n                    controller.enqueue({\n                      type: 'reasoning-delta',\n                      delta: prefix + text,\n                      id: `reasoning-${activeExtraction.idCounter}`,\n                    });\n                  } else {\n                    if (delayedTextStart) {\n                      controller.enqueue(delayedTextStart);\n                      delayedTextStart = undefined;\n                    }\n                    controller.enqueue({\n                      type: 'text-delta',\n                      delta: prefix + text,\n                      id: activeExtraction.textId,\n                    });\n                  }\n                  activeExtraction.afterSwitch = false;\n\n                  if (activeExtraction.isReasoning) {\n                    activeExtraction.isFirstReasoning = false;\n                  } else {\n                    activeExtraction.isFirstText = false;\n                  }\n                }\n              }\n\n              do {\n                const nextTag = activeExtraction.isReasoning\n                  ? closingTag\n                  : openingTag;\n\n                const startIndex = getPotentialStartIndex(\n                  activeExtraction.buffer,\n                  nextTag,\n                );\n\n                // no opening or closing tag found, publish the buffer\n                if (startIndex == null) {\n                  publish(activeExtraction.buffer);\n                  activeExtraction.buffer = '';\n                  break;\n                }\n\n                // publish text before the tag\n                publish(activeExtraction.buffer.slice(0, startIndex));\n\n                const foundFullMatch =\n                  startIndex + nextTag.length <= activeExtraction.buffer.length;\n\n                if (foundFullMatch) {\n                  activeExtraction.buffer = activeExtraction.buffer.slice(\n                    startIndex + nextTag.length,\n                  );\n\n                  // reasoning part finished:\n                  if (activeExtraction.isReasoning) {\n                    controller.enqueue({\n                      type: 'reasoning-end',\n                      id: `reasoning-${activeExtraction.idCounter++}`,\n                    });\n                  }\n\n                  activeExtraction.isReasoning = !activeExtraction.isReasoning;\n                  activeExtraction.afterSwitch = true;\n                } else {\n                  activeExtraction.buffer =\n                    activeExtraction.buffer.slice(startIndex);\n                  break;\n                }\n              } while (true);\n            },\n          }),\n        ),\n        ...rest,\n      };\n    },\n  };\n}\n", "import type { LanguageModelV2StreamPart } from '@ai-sdk/provider';\nimport { LanguageModelMiddleware } from '../types';\n\n/**\n * Simulates streaming chunks with the response from a generate call.\n */\nexport function simulateStreamingMiddleware(): LanguageModelMiddleware {\n  return {\n    middlewareVersion: 'v2',\n    wrapStream: async ({ doGenerate }) => {\n      const result = await doGenerate();\n\n      let id = 0;\n\n      const simulatedStream = new ReadableStream<LanguageModelV2StreamPart>({\n        start(controller) {\n          controller.enqueue({\n            type: 'stream-start',\n            warnings: result.warnings,\n          });\n\n          controller.enqueue({ type: 'response-metadata', ...result.response });\n\n          for (const part of result.content) {\n            switch (part.type) {\n              case 'text': {\n                if (part.text.length > 0) {\n                  controller.enqueue({ type: 'text-start', id: String(id) });\n                  controller.enqueue({\n                    type: 'text-delta',\n                    id: String(id),\n                    delta: part.text,\n                  });\n                  controller.enqueue({ type: 'text-end', id: String(id) });\n                  id++;\n                }\n                break;\n              }\n              case 'reasoning': {\n                controller.enqueue({\n                  type: 'reasoning-start',\n                  id: String(id),\n                  providerMetadata: part.providerMetadata,\n                });\n                controller.enqueue({\n                  type: 'reasoning-delta',\n                  id: String(id),\n                  delta: part.text,\n                });\n                controller.enqueue({ type: 'reasoning-end', id: String(id) });\n                id++;\n                break;\n              }\n              default: {\n                controller.enqueue(part);\n                break;\n              }\n            }\n          }\n\n          controller.enqueue({\n            type: 'finish',\n            finishReason: result.finishReason,\n            usage: result.usage,\n            providerMetadata: result.providerMetadata,\n          });\n\n          controller.close();\n        },\n      });\n\n      return {\n        stream: simulatedStream,\n        request: result.request,\n        response: result.response,\n      };\n    },\n  };\n}\n", "import { LanguageModelV2, LanguageModelV2CallOptions } from '@ai-sdk/provider';\nimport { LanguageModelMiddleware } from '../types';\nimport { asArray } from '../util/as-array';\n\n/**\n * Wraps a LanguageModelV2 instance with middleware functionality.\n * This function allows you to apply middleware to transform parameters,\n * wrap generate operations, and wrap stream operations of a language model.\n *\n * @param options - Configuration options for wrapping the language model.\n * @param options.model - The original LanguageModelV2 instance to be wrapped.\n * @param options.middleware - The middleware to be applied to the language model. When multiple middlewares are provided, the first middleware will transform the input first, and the last middleware will be wrapped directly around the model.\n * @param options.modelId - Optional custom model ID to override the original model's ID.\n * @param options.providerId - Optional custom provider ID to override the original model's provider ID.\n * @returns A new LanguageModelV2 instance with middleware applied.\n */\nexport const wrapLanguageModel = ({\n  model,\n  middleware: middlewareArg,\n  modelId,\n  providerId,\n}: {\n  model: LanguageModelV2;\n  middleware: LanguageModelMiddleware | LanguageModelMiddleware[];\n  modelId?: string;\n  providerId?: string;\n}): LanguageModelV2 => {\n  return asArray(middlewareArg)\n    .reverse()\n    .reduce((wrappedModel, middleware) => {\n      return doWrap({ model: wrappedModel, middleware, modelId, providerId });\n    }, model);\n};\n\nconst doWrap = ({\n  model,\n  middleware: {\n    transformParams,\n    wrapGenerate,\n    wrapStream,\n    overrideProvider,\n    overrideModelId,\n    overrideSupportedUrls,\n  },\n  modelId,\n  providerId,\n}: {\n  model: LanguageModelV2;\n  middleware: LanguageModelMiddleware;\n  modelId?: string;\n  providerId?: string;\n}): LanguageModelV2 => {\n  async function doTransform({\n    params,\n    type,\n  }: {\n    params: LanguageModelV2CallOptions;\n    type: 'generate' | 'stream';\n  }) {\n    return transformParams\n      ? await transformParams({ params, type, model })\n      : params;\n  }\n\n  return {\n    specificationVersion: 'v2',\n\n    provider: providerId ?? overrideProvider?.({ model }) ?? model.provider,\n    modelId: modelId ?? overrideModelId?.({ model }) ?? model.modelId,\n    supportedUrls: overrideSupportedUrls?.({ model }) ?? model.supportedUrls,\n\n    async doGenerate(\n      params: LanguageModelV2CallOptions,\n    ): Promise<Awaited<ReturnType<LanguageModelV2['doGenerate']>>> {\n      const transformedParams = await doTransform({ params, type: 'generate' });\n      const doGenerate = async () => model.doGenerate(transformedParams);\n      const doStream = async () => model.doStream(transformedParams);\n      return wrapGenerate\n        ? wrapGenerate({\n            doGenerate,\n            doStream,\n            params: transformedParams,\n            model,\n          })\n        : doGenerate();\n    },\n\n    async doStream(\n      params: LanguageModelV2CallOptions,\n    ): Promise<Awaited<ReturnType<LanguageModelV2['doStream']>>> {\n      const transformedParams = await doTransform({ params, type: 'stream' });\n      const doGenerate = async () => model.doGenerate(transformedParams);\n      const doStream = async () => model.doStream(transformedParams);\n      return wrapStream\n        ? wrapStream({ doGenerate, doStream, params: transformedParams, model })\n        : doStream();\n    },\n  };\n};\n", "import type { ProviderV2 } from '@ai-sdk/provider';\nimport { LanguageModelMiddleware } from '../types/language-model-middleware';\nimport { wrapLanguageModel } from './wrap-language-model';\n\n/**\n * Wraps a ProviderV2 instance with middleware functionality.\n * This function allows you to apply middleware to all language models\n * from the provider, enabling you to transform parameters, wrap generate\n * operations, and wrap stream operations for every language model.\n *\n * @param options - Configuration options for wrapping the provider.\n * @param options.provider - The original ProviderV2 instance to be wrapped.\n * @param options.languageModelMiddleware - The middleware to be applied to all language models from the provider. When multiple middlewares are provided, the first middleware will transform the input first, and the last middleware will be wrapped directly around the model.\n * @returns A new ProviderV2 instance with middleware applied to all language models.\n */\nexport function wrapProvider({\n  provider,\n  languageModelMiddleware,\n}: {\n  provider: ProviderV2;\n  languageModelMiddleware: LanguageModelMiddleware | LanguageModelMiddleware[];\n}): ProviderV2 {\n  const wrappedProvider = {\n    languageModel(modelId: string) {\n      let model = provider.languageModel(modelId);\n      model = wrapLanguageModel({\n        model,\n        middleware: languageModelMiddleware,\n      });\n      return model;\n    },\n    textEmbeddingModel: provider.textEmbeddingModel,\n    imageModel: provider.imageModel,\n    transcriptionModel: provider.transcriptionModel,\n    speechModel: provider.speechModel,\n  };\n\n  return wrappedProvider;\n}\n", "import {\n  EmbeddingModelV2,\n  ImageModelV2,\n  LanguageModelV2,\n  NoSuchModelError,\n  ProviderV2,\n  SpeechModelV2,\n  TranscriptionModelV2,\n} from '@ai-sdk/provider';\n\n/**\n * Creates a custom provider with specified language models, text embedding models, image models, transcription models, speech models, and an optional fallback provider.\n *\n * @param {Object} options - The options for creating the custom provider.\n * @param {Record<string, LanguageModel>} [options.languageModels] - A record of language models, where keys are model IDs and values are LanguageModel instances.\n * @param {Record<string, EmbeddingModel<string>>} [options.textEmbeddingModels] - A record of text embedding models, where keys are model IDs and values are EmbeddingModel<string> instances.\n * @param {Record<string, ImageModel>} [options.imageModels] - A record of image models, where keys are model IDs and values are ImageModel instances.\n * @param {Record<string, TranscriptionModel>} [options.transcriptionModels] - A record of transcription models, where keys are model IDs and values are TranscriptionModel instances.\n * @param {Record<string, SpeechModel>} [options.speechModels] - A record of speech models, where keys are model IDs and values are SpeechModel instances.\n * @param {Provider} [options.fallbackProvider] - An optional fallback provider to use when a requested model is not found in the custom provider.\n * @returns {Provider} A Provider object with languageModel, textEmbeddingModel, imageModel, transcriptionModel, and speechModel methods.\n *\n * @throws {NoSuchModelError} Throws when a requested model is not found and no fallback provider is available.\n */\nexport function customProvider<\n  LANGUAGE_MODELS extends Record<string, LanguageModelV2>,\n  EMBEDDING_MODELS extends Record<string, EmbeddingModelV2<string>>,\n  IMAGE_MODELS extends Record<string, ImageModelV2>,\n  TRANSCRIPTION_MODELS extends Record<string, TranscriptionModelV2>,\n  SPEECH_MODELS extends Record<string, SpeechModelV2>,\n>({\n  languageModels,\n  textEmbeddingModels,\n  imageModels,\n  transcriptionModels,\n  speechModels,\n  fallbackProvider,\n}: {\n  languageModels?: LANGUAGE_MODELS;\n  textEmbeddingModels?: EMBEDDING_MODELS;\n  imageModels?: IMAGE_MODELS;\n  transcriptionModels?: TRANSCRIPTION_MODELS;\n  speechModels?: SPEECH_MODELS;\n  fallbackProvider?: ProviderV2;\n}): ProviderV2 & {\n  languageModel(modelId: ExtractModelId<LANGUAGE_MODELS>): LanguageModelV2;\n  textEmbeddingModel(\n    modelId: ExtractModelId<EMBEDDING_MODELS>,\n  ): EmbeddingModelV2<string>;\n  imageModel(modelId: ExtractModelId<IMAGE_MODELS>): ImageModelV2;\n  transcriptionModel(\n    modelId: ExtractModelId<TRANSCRIPTION_MODELS>,\n  ): TranscriptionModelV2;\n  speechModel(modelId: ExtractModelId<SPEECH_MODELS>): SpeechModelV2;\n} {\n  return {\n    languageModel(modelId: ExtractModelId<LANGUAGE_MODELS>): LanguageModelV2 {\n      if (languageModels != null && modelId in languageModels) {\n        return languageModels[modelId];\n      }\n\n      if (fallbackProvider) {\n        return fallbackProvider.languageModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'languageModel' });\n    },\n\n    textEmbeddingModel(\n      modelId: ExtractModelId<EMBEDDING_MODELS>,\n    ): EmbeddingModelV2<string> {\n      if (textEmbeddingModels != null && modelId in textEmbeddingModels) {\n        return textEmbeddingModels[modelId];\n      }\n\n      if (fallbackProvider) {\n        return fallbackProvider.textEmbeddingModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'textEmbeddingModel' });\n    },\n\n    imageModel(modelId: ExtractModelId<IMAGE_MODELS>): ImageModelV2 {\n      if (imageModels != null && modelId in imageModels) {\n        return imageModels[modelId];\n      }\n\n      if (fallbackProvider?.imageModel) {\n        return fallbackProvider.imageModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'imageModel' });\n    },\n\n    transcriptionModel(\n      modelId: ExtractModelId<TRANSCRIPTION_MODELS>,\n    ): TranscriptionModelV2 {\n      if (transcriptionModels != null && modelId in transcriptionModels) {\n        return transcriptionModels[modelId];\n      }\n\n      if (fallbackProvider?.transcriptionModel) {\n        return fallbackProvider.transcriptionModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'transcriptionModel' });\n    },\n\n    speechModel(modelId: ExtractModelId<SPEECH_MODELS>): SpeechModelV2 {\n      if (speechModels != null && modelId in speechModels) {\n        return speechModels[modelId];\n      }\n\n      if (fallbackProvider?.speechModel) {\n        return fallbackProvider.speechModel(modelId);\n      }\n\n      throw new NoSuchModelError({ modelId, modelType: 'speechModel' });\n    },\n  };\n}\n\n/**\n * @deprecated Use `customProvider` instead.\n */\nexport const experimental_customProvider = customProvider;\n\ntype ExtractModelId<MODELS extends Record<string, unknown>> = Extract<\n  keyof MODELS,\n  string\n>;\n", "import { AISDKError, NoSuchModelError } from '@ai-sdk/provider';\n\nconst name = 'AI_NoSuchProviderError';\nconst marker = `vercel.ai.error.${name}`;\nconst symbol = Symbol.for(marker);\n\nexport class NoSuchProviderError extends NoSuchModelError {\n  private readonly [symbol] = true; // used in isInstance\n\n  readonly providerId: string;\n  readonly availableProviders: string[];\n\n  constructor({\n    modelId,\n    modelType,\n    providerId,\n    availableProviders,\n    message = `No such provider: ${providerId} (available providers: ${availableProviders.join()})`,\n  }: {\n    modelId: string;\n    modelType:\n      | 'languageModel'\n      | 'textEmbeddingModel'\n      | 'imageModel'\n      | 'transcriptionModel'\n      | 'speechModel';\n    providerId: string;\n    availableProviders: string[];\n    message?: string;\n  }) {\n    super({ errorName: name, modelId, modelType, message });\n\n    this.providerId = providerId;\n    this.availableProviders = availableProviders;\n  }\n\n  static isInstance(error: unknown): error is NoSuchProviderError {\n    return AISDKError.hasMarker(error, marker);\n  }\n}\n", "import {\n  EmbeddingModelV2,\n  ImageModelV2,\n  LanguageModelV2,\n  NoSuchModelError,\n  ProviderV2,\n  SpeechModelV2,\n  TranscriptionModelV2,\n} from '@ai-sdk/provider';\nimport { wrapLanguageModel } from '../middleware/wrap-language-model';\nimport { LanguageModelMiddleware } from '../types';\nimport { NoSuchProviderError } from './no-such-provider-error';\n\ntype ExtractLiteralUnion<T> = T extends string\n  ? string extends T\n    ? never\n    : T\n  : never;\n\nexport interface ProviderRegistryProvider<\n  PROVIDERS extends Record<string, ProviderV2> = Record<string, ProviderV2>,\n  SEPARATOR extends string = ':',\n> {\n  languageModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string\n      ? `${KEY & string}${SEPARATOR}${ExtractLiteralUnion<Parameters<NonNullable<PROVIDERS[KEY]['languageModel']>>[0]>}`\n      : never,\n  ): LanguageModelV2;\n  languageModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string ? `${KEY & string}${SEPARATOR}${string}` : never,\n  ): LanguageModelV2;\n\n  textEmbeddingModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string\n      ? `${KEY & string}${SEPARATOR}${ExtractLiteralUnion<Parameters<NonNullable<PROVIDERS[KEY]['textEmbeddingModel']>>[0]>}`\n      : never,\n  ): EmbeddingModelV2<string>;\n  textEmbeddingModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string ? `${KEY & string}${SEPARATOR}${string}` : never,\n  ): EmbeddingModelV2<string>;\n\n  imageModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string\n      ? `${KEY & string}${SEPARATOR}${ExtractLiteralUnion<Parameters<NonNullable<PROVIDERS[KEY]['imageModel']>>[0]>}`\n      : never,\n  ): ImageModelV2;\n  imageModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string ? `${KEY & string}${SEPARATOR}${string}` : never,\n  ): ImageModelV2;\n\n  transcriptionModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string\n      ? `${KEY & string}${SEPARATOR}${ExtractLiteralUnion<Parameters<NonNullable<PROVIDERS[KEY]['transcriptionModel']>>[0]>}`\n      : never,\n  ): TranscriptionModelV2;\n  transcriptionModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string ? `${KEY & string}${SEPARATOR}${string}` : never,\n  ): TranscriptionModelV2;\n\n  speechModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string\n      ? `${KEY & string}${SEPARATOR}${ExtractLiteralUnion<Parameters<NonNullable<PROVIDERS[KEY]['speechModel']>>[0]>}`\n      : never,\n  ): SpeechModelV2;\n  speechModel<KEY extends keyof PROVIDERS>(\n    id: KEY extends string ? `${KEY & string}${SEPARATOR}${string}` : never,\n  ): SpeechModelV2;\n}\n\n/**\n * Creates a registry for the given providers with optional middleware functionality.\n * This function allows you to register multiple providers and optionally apply middleware\n * to all language models from the registry, enabling you to transform parameters, wrap generate\n * operations, and wrap stream operations for every language model accessed through the registry.\n *\n * @param providers - A record of provider instances to be registered in the registry.\n * @param options - Configuration options for the provider registry.\n * @param options.separator - The separator used between provider ID and model ID in the combined identifier. Defaults to ':'.\n * @param options.languageModelMiddleware - Optional middleware to be applied to all language models from the registry. When multiple middlewares are provided, the first middleware will transform the input first, and the last middleware will be wrapped directly around the model.\n * @returns A new ProviderRegistryProvider instance that provides access to all registered providers with optional middleware applied to language models.\n */\nexport function createProviderRegistry<\n  PROVIDERS extends Record<string, ProviderV2>,\n  SEPARATOR extends string = ':',\n>(\n  providers: PROVIDERS,\n  {\n    separator = ':' as SEPARATOR,\n    languageModelMiddleware,\n  }: {\n    separator?: SEPARATOR;\n    languageModelMiddleware?:\n      | LanguageModelMiddleware\n      | LanguageModelMiddleware[];\n  } = {},\n): ProviderRegistryProvider<PROVIDERS, SEPARATOR> {\n  const registry = new DefaultProviderRegistry<PROVIDERS, SEPARATOR>({\n    separator,\n    languageModelMiddleware,\n  });\n\n  for (const [id, provider] of Object.entries(providers)) {\n    registry.registerProvider({ id, provider } as {\n      id: keyof PROVIDERS;\n      provider: PROVIDERS[keyof PROVIDERS];\n    });\n  }\n\n  return registry;\n}\n\n/**\n * @deprecated Use `createProviderRegistry` instead.\n */\nexport const experimental_createProviderRegistry = createProviderRegistry;\n\nclass DefaultProviderRegistry<\n  PROVIDERS extends Record<string, ProviderV2>,\n  SEPARATOR extends string,\n> implements ProviderRegistryProvider<PROVIDERS, SEPARATOR>\n{\n  private providers: PROVIDERS = {} as PROVIDERS;\n  private separator: SEPARATOR;\n  private languageModelMiddleware?:\n    | LanguageModelMiddleware\n    | LanguageModelMiddleware[];\n\n  constructor({\n    separator,\n    languageModelMiddleware,\n  }: {\n    separator: SEPARATOR;\n    languageModelMiddleware?:\n      | LanguageModelMiddleware\n      | LanguageModelMiddleware[];\n  }) {\n    this.separator = separator;\n    this.languageModelMiddleware = languageModelMiddleware;\n  }\n\n  registerProvider<K extends keyof PROVIDERS>({\n    id,\n    provider,\n  }: {\n    id: K;\n    provider: PROVIDERS[K];\n  }): void {\n    this.providers[id] = provider;\n  }\n\n  private getProvider(\n    id: string,\n    modelType:\n      | 'languageModel'\n      | 'textEmbeddingModel'\n      | 'imageModel'\n      | 'transcriptionModel'\n      | 'speechModel',\n  ): ProviderV2 {\n    const provider = this.providers[id as keyof PROVIDERS];\n\n    if (provider == null) {\n      throw new NoSuchProviderError({\n        modelId: id,\n        modelType,\n        providerId: id,\n        availableProviders: Object.keys(this.providers),\n      });\n    }\n\n    return provider;\n  }\n\n  private splitId(\n    id: string,\n    modelType:\n      | 'languageModel'\n      | 'textEmbeddingModel'\n      | 'imageModel'\n      | 'transcriptionModel'\n      | 'speechModel',\n  ): [string, string] {\n    const index = id.indexOf(this.separator);\n\n    if (index === -1) {\n      throw new NoSuchModelError({\n        modelId: id,\n        modelType,\n        message:\n          `Invalid ${modelType} id for registry: ${id} ` +\n          `(must be in the format \"providerId${this.separator}modelId\")`,\n      });\n    }\n\n    return [id.slice(0, index), id.slice(index + this.separator.length)];\n  }\n\n  languageModel<KEY extends keyof PROVIDERS>(\n    id: `${KEY & string}${SEPARATOR}${string}`,\n  ): LanguageModelV2 {\n    const [providerId, modelId] = this.splitId(id, 'languageModel');\n    let model = this.getProvider(providerId, 'languageModel').languageModel?.(\n      modelId,\n    );\n\n    if (model == null) {\n      throw new NoSuchModelError({ modelId: id, modelType: 'languageModel' });\n    }\n\n    if (this.languageModelMiddleware != null) {\n      model = wrapLanguageModel({\n        model,\n        middleware: this.languageModelMiddleware,\n      });\n    }\n\n    return model;\n  }\n\n  textEmbeddingModel<KEY extends keyof PROVIDERS>(\n    id: `${KEY & string}${SEPARATOR}${string}`,\n  ): EmbeddingModelV2<string> {\n    const [providerId, modelId] = this.splitId(id, 'textEmbeddingModel');\n    const provider = this.getProvider(providerId, 'textEmbeddingModel');\n\n    const model = provider.textEmbeddingModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({\n        modelId: id,\n        modelType: 'textEmbeddingModel',\n      });\n    }\n\n    return model;\n  }\n\n  imageModel<KEY extends keyof PROVIDERS>(\n    id: `${KEY & string}${SEPARATOR}${string}`,\n  ): ImageModelV2 {\n    const [providerId, modelId] = this.splitId(id, 'imageModel');\n    const provider = this.getProvider(providerId, 'imageModel');\n\n    const model = provider.imageModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({ modelId: id, modelType: 'imageModel' });\n    }\n\n    return model;\n  }\n\n  transcriptionModel<KEY extends keyof PROVIDERS>(\n    id: `${KEY & string}${SEPARATOR}${string}`,\n  ): TranscriptionModelV2 {\n    const [providerId, modelId] = this.splitId(id, 'transcriptionModel');\n    const provider = this.getProvider(providerId, 'transcriptionModel');\n\n    const model = provider.transcriptionModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({\n        modelId: id,\n        modelType: 'transcriptionModel',\n      });\n    }\n\n    return model;\n  }\n\n  speechModel<KEY extends keyof PROVIDERS>(\n    id: `${KEY & string}${SEPARATOR}${string}`,\n  ): SpeechModelV2 {\n    const [providerId, modelId] = this.splitId(id, 'speechModel');\n    const provider = this.getProvider(providerId, 'speechModel');\n\n    const model = provider.speechModel?.(modelId);\n\n    if (model == null) {\n      throw new NoSuchModelError({ modelId: id, modelType: 'speechModel' });\n    }\n\n    return model;\n  }\n}\n", "import { JSONSchema7 } from '@ai-sdk/provider';\nimport {\n  dynamicTool,\n  jsonSchema,\n  Tool,\n  tool,\n  ToolCallOptions,\n} from '@ai-sdk/provider-utils';\nimport { z, ZodType } from 'zod/v4';\nimport { MCPClientError } from '../../error/mcp-client-error';\nimport {\n  JSONRPCError,\n  JSONRPCNotification,\n  JSONRPCRequest,\n  JSONRPCResponse,\n} from './json-rpc-message';\nimport {\n  createMcpTransport,\n  isCustomMcpTransport,\n  MCPTransport,\n  MCPTransportConfig,\n} from './mcp-transport';\nimport {\n  CallToolResult,\n  CallToolResultSchema,\n  Configuration as ClientConfiguration,\n  InitializeResultSchema,\n  LATEST_PROTOCOL_VERSION,\n  ListToolsResult,\n  ListToolsResultSchema,\n  McpToolSet,\n  Notification,\n  PaginatedRequest,\n  Request,\n  RequestOptions,\n  ServerCapabilities,\n  SUPPORTED_PROTOCOL_VERSIONS,\n  ToolSchemas,\n} from './types';\n\nconst CLIENT_VERSION = '1.0.0';\n\nexport interface MCPClientConfig {\n  /** Transport configuration for connecting to the MCP server */\n  transport: MCPTransportConfig | MCPTransport;\n  /** Optional callback for uncaught errors */\n  onUncaughtError?: (error: unknown) => void;\n  /** Optional client name, defaults to 'ai-sdk-mcp-client' */\n  name?: string;\n}\n\nexport async function createMCPClient(\n  config: MCPClientConfig,\n): Promise<MCPClient> {\n  const client = new DefaultMCPClient(config);\n  await client.init();\n  return client;\n}\n\nexport interface MCPClient {\n  tools<TOOL_SCHEMAS extends ToolSchemas = 'automatic'>(options?: {\n    schemas?: TOOL_SCHEMAS;\n  }): Promise<McpToolSet<TOOL_SCHEMAS>>;\n\n  close: () => Promise<void>;\n}\n\n/**\n * A lightweight MCP Client implementation\n *\n * The primary purpose of this client is tool conversion between MCP<>AI SDK\n * but can later be extended to support other MCP features\n *\n * Tool parameters are automatically inferred from the server's JSON schema\n * if not explicitly provided in the tools configuration\n *\n * This client is meant to be used to communicate with a single server. To communicate and fetch tools across multiple servers, it's recommended to create a new client instance per server.\n *\n * Not supported:\n * - Client options (e.g. sampling, roots) as they are not needed for tool conversion\n * - Accepting notifications\n * - Session management (when passing a sessionId to an instance of the Streamable HTTP transport)\n * - Resumable SSE streams\n */\nclass DefaultMCPClient implements MCPClient {\n  private transport: MCPTransport;\n  private onUncaughtError?: (error: unknown) => void;\n  private clientInfo: ClientConfiguration;\n  private requestMessageId = 0;\n  private responseHandlers: Map<\n    number,\n    (response: JSONRPCResponse | Error) => void\n  > = new Map();\n  private serverCapabilities: ServerCapabilities = {};\n  private isClosed = true;\n\n  constructor({\n    transport: transportConfig,\n    name = 'ai-sdk-mcp-client',\n    onUncaughtError,\n  }: MCPClientConfig) {\n    this.onUncaughtError = onUncaughtError;\n\n    if (isCustomMcpTransport(transportConfig)) {\n      this.transport = transportConfig;\n    } else {\n      this.transport = createMcpTransport(transportConfig);\n    }\n\n    this.transport.onclose = () => this.onClose();\n    this.transport.onerror = (error: Error) => this.onError(error);\n    this.transport.onmessage = message => {\n      if ('method' in message) {\n        // This lightweight client implementation does not support\n        // receiving notifications or requests from server.\n        // If we get an unsupported message, we can safely ignore it and pass to the onError handler:\n        this.onError(\n          new MCPClientError({\n            message: 'Unsupported message type',\n          }),\n        );\n        return;\n      }\n\n      this.onResponse(message);\n    };\n\n    this.clientInfo = {\n      name,\n      version: CLIENT_VERSION,\n    };\n  }\n\n  async init(): Promise<this> {\n    try {\n      await this.transport.start();\n      this.isClosed = false;\n\n      const result = await this.request({\n        request: {\n          method: 'initialize',\n          params: {\n            protocolVersion: LATEST_PROTOCOL_VERSION,\n            capabilities: {},\n            clientInfo: this.clientInfo,\n          },\n        },\n        resultSchema: InitializeResultSchema,\n      });\n\n      if (result === undefined) {\n        throw new MCPClientError({\n          message: 'Server sent invalid initialize result',\n        });\n      }\n\n      if (!SUPPORTED_PROTOCOL_VERSIONS.includes(result.protocolVersion)) {\n        throw new MCPClientError({\n          message: `Server's protocol version is not supported: ${result.protocolVersion}`,\n        });\n      }\n\n      this.serverCapabilities = result.capabilities;\n\n      // Complete initialization handshake:\n      await this.notification({\n        method: 'notifications/initialized',\n      });\n\n      return this;\n    } catch (error) {\n      await this.close();\n      throw error;\n    }\n  }\n\n  async close(): Promise<void> {\n    if (this.isClosed) return;\n    await this.transport?.close();\n    this.onClose();\n  }\n\n  private assertCapability(method: string): void {\n    switch (method) {\n      case 'initialize':\n        break;\n      case 'tools/list':\n      case 'tools/call':\n        if (!this.serverCapabilities.tools) {\n          throw new MCPClientError({\n            message: `Server does not support tools`,\n          });\n        }\n        break;\n      default:\n        throw new MCPClientError({\n          message: `Unsupported method: ${method}`,\n        });\n    }\n  }\n\n  private async request<T extends ZodType<object>>({\n    request,\n    resultSchema,\n    options,\n  }: {\n    request: Request;\n    resultSchema: T;\n    options?: RequestOptions;\n  }): Promise<z.infer<T>> {\n    return new Promise((resolve, reject) => {\n      if (this.isClosed) {\n        return reject(\n          new MCPClientError({\n            message: 'Attempted to send a request from a closed client',\n          }),\n        );\n      }\n\n      this.assertCapability(request.method);\n\n      const signal = options?.signal;\n      signal?.throwIfAborted();\n\n      const messageId = this.requestMessageId++;\n      const jsonrpcRequest: JSONRPCRequest = {\n        ...request,\n        jsonrpc: '2.0',\n        id: messageId,\n      };\n\n      const cleanup = () => {\n        this.responseHandlers.delete(messageId);\n      };\n\n      this.responseHandlers.set(messageId, response => {\n        if (signal?.aborted) {\n          return reject(\n            new MCPClientError({\n              message: 'Request was aborted',\n              cause: signal.reason,\n            }),\n          );\n        }\n\n        if (response instanceof Error) {\n          return reject(response);\n        }\n\n        try {\n          const result = resultSchema.parse(response.result);\n          resolve(result);\n        } catch (error) {\n          const parseError = new MCPClientError({\n            message: 'Failed to parse server response',\n            cause: error,\n          });\n          reject(parseError);\n        }\n      });\n\n      this.transport.send(jsonrpcRequest).catch(error => {\n        cleanup();\n        reject(error);\n      });\n    });\n  }\n\n  private async listTools({\n    params,\n    options,\n  }: {\n    params?: PaginatedRequest['params'];\n    options?: RequestOptions;\n  } = {}): Promise<ListToolsResult> {\n    try {\n      return this.request({\n        request: { method: 'tools/list', params },\n        resultSchema: ListToolsResultSchema,\n        options,\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private async callTool({\n    name,\n    args,\n    options,\n  }: {\n    name: string;\n    args: Record<string, unknown>;\n    options?: ToolCallOptions;\n  }): Promise<CallToolResult> {\n    try {\n      return this.request({\n        request: { method: 'tools/call', params: { name, arguments: args } },\n        resultSchema: CallToolResultSchema,\n        options: {\n          signal: options?.abortSignal,\n        },\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private async notification(notification: Notification): Promise<void> {\n    const jsonrpcNotification: JSONRPCNotification = {\n      ...notification,\n      jsonrpc: '2.0',\n    };\n    await this.transport.send(jsonrpcNotification);\n  }\n\n  /**\n   * Returns a set of AI SDK tools from the MCP server\n   * @returns A record of tool names to their implementations\n   */\n  async tools<TOOL_SCHEMAS extends ToolSchemas = 'automatic'>({\n    schemas = 'automatic',\n  }: {\n    schemas?: TOOL_SCHEMAS;\n  } = {}): Promise<McpToolSet<TOOL_SCHEMAS>> {\n    const tools: Record<string, Tool> = {};\n\n    try {\n      const listToolsResult = await this.listTools();\n\n      for (const { name, description, inputSchema } of listToolsResult.tools) {\n        if (schemas !== 'automatic' && !(name in schemas)) {\n          continue;\n        }\n\n        const self = this;\n\n        const execute = async (\n          args: any,\n          options: ToolCallOptions,\n        ): Promise<CallToolResult> => {\n          options?.abortSignal?.throwIfAborted();\n          return self.callTool({ name, args, options });\n        };\n\n        const toolWithExecute =\n          schemas === 'automatic'\n            ? dynamicTool({\n                description,\n                inputSchema: jsonSchema({\n                  ...inputSchema,\n                  properties: inputSchema.properties ?? {},\n                  additionalProperties: false,\n                } as JSONSchema7),\n                execute,\n              })\n            : tool({\n                description,\n                inputSchema: schemas[name].inputSchema,\n                execute,\n              });\n\n        tools[name] = toolWithExecute;\n      }\n\n      return tools as McpToolSet<TOOL_SCHEMAS>;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private onClose(): void {\n    if (this.isClosed) return;\n\n    this.isClosed = true;\n    const error = new MCPClientError({\n      message: 'Connection closed',\n    });\n\n    for (const handler of this.responseHandlers.values()) {\n      handler(error);\n    }\n\n    this.responseHandlers.clear();\n  }\n\n  private onError(error: unknown): void {\n    if (this.onUncaughtError) {\n      this.onUncaughtError(error);\n    }\n  }\n\n  private onResponse(response: JSONRPCResponse | JSONRPCError): void {\n    const messageId = Number(response.id);\n    const handler = this.responseHandlers.get(messageId);\n\n    if (handler === undefined) {\n      throw new MCPClientError({\n        message: `Protocol error: Received a response for an unknown message ID: ${JSON.stringify(\n          response,\n        )}`,\n      });\n    }\n\n    this.responseHandlers.delete(messageId);\n\n    handler(\n      'result' in response\n        ? response\n        : new MCPClientError({\n            message: response.error.message,\n            cause: response.error,\n          }),\n    );\n  }\n}\n", "import { EventSourceParserStream } from '@ai-sdk/provider-utils';\nimport { MCPClientError } from '../../error/mcp-client-error';\nimport { JSONRPCMessage, JSONRPCMessageSchema } from './json-rpc-message';\nimport { MCPTransport } from './mcp-transport';\n\nexport class SseMCPTransport implements MCPTransport {\n  private endpoint?: URL;\n  private abortController?: AbortController;\n  private url: URL;\n  private connected = false;\n  private sseConnection?: {\n    close: () => void;\n  };\n  private headers?: Record<string, string>;\n\n  onclose?: () => void;\n  onerror?: (error: unknown) => void;\n  onmessage?: (message: JSONRPCMessage) => void;\n\n  constructor({\n    url,\n    headers,\n  }: {\n    url: string;\n    headers?: Record<string, string>;\n  }) {\n    this.url = new URL(url);\n    this.headers = headers;\n  }\n\n  async start(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.connected) {\n        return resolve();\n      }\n\n      this.abortController = new AbortController();\n\n      const establishConnection = async () => {\n        try {\n          const headers = new Headers(this.headers);\n          headers.set('Accept', 'text/event-stream');\n          const response = await fetch(this.url.href, {\n            headers,\n            signal: this.abortController?.signal,\n          });\n\n          if (!response.ok || !response.body) {\n            const error = new MCPClientError({\n              message: `MCP SSE Transport Error: ${response.status} ${response.statusText}`,\n            });\n            this.onerror?.(error);\n            return reject(error);\n          }\n\n          const stream = response.body\n            .pipeThrough(new TextDecoderStream())\n            .pipeThrough(new EventSourceParserStream());\n\n          const reader = stream.getReader();\n\n          const processEvents = async () => {\n            try {\n              while (true) {\n                const { done, value } = await reader.read();\n\n                if (done) {\n                  if (this.connected) {\n                    this.connected = false;\n                    throw new MCPClientError({\n                      message:\n                        'MCP SSE Transport Error: Connection closed unexpectedly',\n                    });\n                  }\n                  return;\n                }\n\n                const { event, data } = value;\n\n                if (event === 'endpoint') {\n                  this.endpoint = new URL(data, this.url);\n\n                  if (this.endpoint.origin !== this.url.origin) {\n                    throw new MCPClientError({\n                      message: `MCP SSE Transport Error: Endpoint origin does not match connection origin: ${this.endpoint.origin}`,\n                    });\n                  }\n\n                  this.connected = true;\n                  resolve();\n                } else if (event === 'message') {\n                  try {\n                    const message = JSONRPCMessageSchema.parse(\n                      JSON.parse(data),\n                    );\n                    this.onmessage?.(message);\n                  } catch (error) {\n                    const e = new MCPClientError({\n                      message:\n                        'MCP SSE Transport Error: Failed to parse message',\n                      cause: error,\n                    });\n                    this.onerror?.(e);\n                    // We do not throw here so we continue processing events after reporting the error\n                  }\n                }\n              }\n            } catch (error) {\n              if (error instanceof Error && error.name === 'AbortError') {\n                return;\n              }\n\n              this.onerror?.(error);\n              reject(error);\n            }\n          };\n\n          this.sseConnection = {\n            close: () => reader.cancel(),\n          };\n\n          processEvents();\n        } catch (error) {\n          if (error instanceof Error && error.name === 'AbortError') {\n            return;\n          }\n\n          this.onerror?.(error);\n          reject(error);\n        }\n      };\n\n      establishConnection();\n    });\n  }\n\n  async close(): Promise<void> {\n    this.connected = false;\n    this.sseConnection?.close();\n    this.abortController?.abort();\n    this.onclose?.();\n  }\n\n  async send(message: JSONRPCMessage): Promise<void> {\n    if (!this.endpoint || !this.connected) {\n      throw new MCPClientError({\n        message: 'MCP SSE Transport Error: Not connected',\n      });\n    }\n\n    try {\n      const headers = new Headers(this.headers);\n      headers.set('Content-Type', 'application/json');\n      const init = {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(message),\n        signal: this.abortController?.signal,\n      };\n\n      const response = await fetch(this.endpoint, init);\n\n      if (!response.ok) {\n        const text = await response.text().catch(() => null);\n        const error = new MCPClientError({\n          message: `MCP SSE Transport Error: POSTing to endpoint (HTTP ${response.status}): ${text}`,\n        });\n        this.onerror?.(error);\n        return;\n      }\n    } catch (error) {\n      this.onerror?.(error);\n      return;\n    }\n  }\n}\n\nexport function deserializeMessage(line: string): JSONRPCMessage {\n  return JSONRPCMessageSchema.parse(JSON.parse(line));\n}\n", "import { z } from 'zod/v4';\nimport { BaseParamsSchema, RequestSchema, ResultSchema } from './types';\n\nconst JSONRPC_VERSION = '2.0';\n\nconst JSONRPCRequestSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: z.union([z.string(), z.number().int()]),\n  })\n  .merge(RequestSchema)\n  .strict();\n\nexport type JSONRPCRequest = z.infer<typeof JSONRPCRequestSchema>;\n\nconst JSONRPCResponseSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: z.union([z.string(), z.number().int()]),\n    result: ResultSchema,\n  })\n  .strict();\n\nexport type JSONRPCResponse = z.infer<typeof JSONRPCResponseSchema>;\n\nconst JSONRPCErrorSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n    id: z.union([z.string(), z.number().int()]),\n    error: z.object({\n      code: z.number().int(),\n      message: z.string(),\n      data: z.optional(z.unknown()),\n    }),\n  })\n  .strict();\n\nexport type JSONRPCError = z.infer<typeof JSONRPCErrorSchema>;\n\nconst JSONRPCNotificationSchema = z\n  .object({\n    jsonrpc: z.literal(JSONRPC_VERSION),\n  })\n  .merge(\n    z.object({\n      method: z.string(),\n      params: z.optional(BaseParamsSchema),\n    }),\n  )\n  .strict();\n\nexport type JSONRPCNotification = z.infer<typeof JSONRPCNotificationSchema>;\n\nexport const JSONRPCMessageSchema = z.union([\n  JSONRPCRequestSchema,\n  JSONRPCNotificationSchema,\n  JSONRPCResponseSchema,\n  JSONRPCErrorSchema,\n]);\n\nexport type JSONRPCMessage = z.infer<typeof JSONRPCMessageSchema>;\n", "import { z } from 'zod/v4';\nimport { JSONObject } from '@ai-sdk/provider';\nimport { FlexibleSchema, Tool } from '@ai-sdk/provider-utils';\n\nexport const LATEST_PROTOCOL_VERSION = '2025-06-18';\nexport const SUPPORTED_PROTOCOL_VERSIONS = [\n  LATEST_PROTOCOL_VERSION,\n  '2025-03-26',\n  '2024-11-05',\n];\n\nexport type ToolSchemas =\n  | Record<string, { inputSchema: FlexibleSchema<JSONObject | unknown> }>\n  | 'automatic'\n  | undefined;\n\nexport type McpToolSet<TOOL_SCHEMAS extends ToolSchemas = 'automatic'> =\n  TOOL_SCHEMAS extends Record<string, { inputSchema: FlexibleSchema<any> }>\n    ? {\n        [K in keyof TOOL_SCHEMAS]: TOOL_SCHEMAS[K] extends {\n          inputSchema: FlexibleSchema<infer INPUT>;\n        }\n          ? Tool<INPUT, CallToolResult> &\n              Required<Pick<Tool<INPUT, CallToolResult>, 'execute'>>\n          : never;\n      }\n    : McpToolSet<Record<string, { inputSchema: FlexibleSchema<unknown> }>>;\n\nconst ClientOrServerImplementationSchema = z.looseObject({\n  name: z.string(),\n  version: z.string(),\n});\n\nexport type Configuration = z.infer<typeof ClientOrServerImplementationSchema>;\n\nexport const BaseParamsSchema = z.looseObject({\n  _meta: z.optional(z.object({}).loose()),\n});\ntype BaseParams = z.infer<typeof BaseParamsSchema>;\nexport const ResultSchema = BaseParamsSchema;\n\nexport const RequestSchema = z.object({\n  method: z.string(),\n  params: z.optional(BaseParamsSchema),\n});\nexport type Request = z.infer<typeof RequestSchema>;\nexport type RequestOptions = {\n  signal?: AbortSignal;\n  timeout?: number;\n  maxTotalTimeout?: number;\n};\n\nexport type Notification = z.infer<typeof RequestSchema>;\n\nconst ServerCapabilitiesSchema = z.looseObject({\n  experimental: z.optional(z.object({}).loose()),\n  logging: z.optional(z.object({}).loose()),\n  prompts: z.optional(\n    z.looseObject({\n      listChanged: z.optional(z.boolean()),\n    }),\n  ),\n  resources: z.optional(\n    z.looseObject({\n      subscribe: z.optional(z.boolean()),\n      listChanged: z.optional(z.boolean()),\n    }),\n  ),\n  tools: z.optional(\n    z.looseObject({\n      listChanged: z.optional(z.boolean()),\n    }),\n  ),\n});\n\nexport type ServerCapabilities = z.infer<typeof ServerCapabilitiesSchema>;\n\nexport const InitializeResultSchema = ResultSchema.extend({\n  protocolVersion: z.string(),\n  capabilities: ServerCapabilitiesSchema,\n  serverInfo: ClientOrServerImplementationSchema,\n  instructions: z.optional(z.string()),\n});\nexport type InitializeResult = z.infer<typeof InitializeResultSchema>;\n\nexport type PaginatedRequest = Request & {\n  params?: BaseParams & {\n    cursor?: string;\n  };\n};\n\nconst PaginatedResultSchema = ResultSchema.extend({\n  nextCursor: z.optional(z.string()),\n});\n\nconst ToolSchema = z\n  .object({\n    name: z.string(),\n    description: z.optional(z.string()),\n    inputSchema: z\n      .object({\n        type: z.literal('object'),\n        properties: z.optional(z.object({}).loose()),\n      })\n      .loose(),\n  })\n  .loose();\nexport type MCPTool = z.infer<typeof ToolSchema>;\nexport const ListToolsResultSchema = PaginatedResultSchema.extend({\n  tools: z.array(ToolSchema),\n});\nexport type ListToolsResult = z.infer<typeof ListToolsResultSchema>;\n\nconst TextContentSchema = z\n  .object({\n    type: z.literal('text'),\n    text: z.string(),\n  })\n  .loose();\nconst ImageContentSchema = z\n  .object({\n    type: z.literal('image'),\n    data: z.base64(),\n    mimeType: z.string(),\n  })\n  .loose();\nconst ResourceContentsSchema = z\n  .object({\n    /**\n     * The URI of this resource.\n     */\n    uri: z.string(),\n    /**\n     * The MIME type of this resource, if known.\n     */\n    mimeType: z.optional(z.string()),\n  })\n  .loose();\nconst TextResourceContentsSchema = ResourceContentsSchema.extend({\n  text: z.string(),\n});\nconst BlobResourceContentsSchema = ResourceContentsSchema.extend({\n  blob: z.base64(),\n});\nconst EmbeddedResourceSchema = z\n  .object({\n    type: z.literal('resource'),\n    resource: z.union([TextResourceContentsSchema, BlobResourceContentsSchema]),\n  })\n  .loose();\n\nexport const CallToolResultSchema = ResultSchema.extend({\n  content: z.array(\n    z.union([TextContentSchema, ImageContentSchema, EmbeddedResourceSchema]),\n  ),\n  isError: z.boolean().default(false).optional(),\n}).or(\n  ResultSchema.extend({\n    toolResult: z.unknown(),\n  }),\n);\nexport type CallToolResult = z.infer<typeof CallToolResultSchema>;\n", "import { MCPClientError } from '../../error/mcp-client-error';\nimport { JSONRPCMessage } from './json-rpc-message';\nimport { SseMCPTransport } from './mcp-sse-transport';\n\n/**\n * Transport interface for MCP (Model Context Protocol) communication.\n * Maps to the `Transport` interface in the MCP spec.\n */\nexport interface MCPTransport {\n  /**\n   * Initialize and start the transport\n   */\n  start(): Promise<void>;\n\n  /**\n   * Send a JSON-RPC message through the transport\n   * @param message The JSON-RPC message to send\n   */\n  send(message: JSONRPCMessage): Promise<void>;\n\n  /**\n   * Clean up and close the transport\n   */\n  close(): Promise<void>;\n\n  /**\n   * Event handler for transport closure\n   */\n  onclose?: () => void;\n\n  /**\n   * Event handler for transport errors\n   */\n  onerror?: (error: Error) => void;\n\n  /**\n   * Event handler for received messages\n   */\n  onmessage?: (message: JSONRPCMessage) => void;\n}\n\nexport type MCPTransportConfig = {\n  type: 'sse';\n\n  /**\n   * The URL of the MCP server.\n   */\n  url: string;\n\n  /**\n   * Additional HTTP headers to be sent with requests.\n   */\n  headers?: Record<string, string>;\n};\n\nexport function createMcpTransport(config: MCPTransportConfig): MCPTransport {\n  if (config.type !== 'sse') {\n    throw new MCPClientError({\n      message:\n        'Unsupported or invalid transport configuration. If you are using a custom transport, make sure it implements the MCPTransport interface.',\n    });\n  }\n\n  return new SseMCPTransport(config);\n}\n\nexport function isCustomMcpTransport(\n  transport: MCPTransportConfig | MCPTransport,\n): transport is MCPTransport {\n  return (\n    'start' in transport &&\n    typeof transport.start === 'function' &&\n    'send' in transport &&\n    typeof transport.send === 'function' &&\n    'close' in transport &&\n    typeof transport.close === 'function'\n  );\n}\n", "import { AISDKError } from '@ai-sdk/provider';\nimport { TranscriptionModelResponseMetadata } from '../types/transcription-model-response-metadata';\n\n/**\nError that is thrown when no transcript was generated.\n */\nexport class NoTranscriptGeneratedError extends AISDKError {\n  readonly responses: Array<TranscriptionModelResponseMetadata>;\n\n  constructor(options: {\n    responses: Array<TranscriptionModelResponseMetadata>;\n  }) {\n    super({\n      name: 'AI_NoTranscriptGeneratedError',\n      message: 'No transcript generated.',\n    });\n\n    this.responses = options.responses;\n  }\n}\n", "import { JSONValue, TranscriptionModelV2 } from '@ai-sdk/provider';\nimport { ProviderOptions } from '@ai-sdk/provider-utils';\nimport { NoTranscriptGeneratedError } from '../error/no-transcript-generated-error';\nimport {\n  audioMediaTypeSignatures,\n  detectMediaType,\n} from '../util/detect-media-type';\nimport { download } from '../util/download';\nimport { prepareRetries } from '../util/prepare-retries';\nimport { UnsupportedModelVersionError } from '../error/unsupported-model-version-error';\nimport { DataContent } from '../prompt';\nimport { convertDataContentToUint8Array } from '../prompt/data-content';\nimport { TranscriptionWarning } from '../types/transcription-model';\nimport { TranscriptionModelResponseMetadata } from '../types/transcription-model-response-metadata';\nimport { TranscriptionResult } from './transcribe-result';\n\n/**\nGenerates transcripts using a transcription model.\n\n@param model - The transcription model to use.\n@param audio - The audio data to transcribe as DataContent (string | Uint8Array | ArrayBuffer | Buffer) or a URL.\n@param providerOptions - Additional provider-specific options that are passed through to the provider\nas body parameters.\n@param maxRetries - Maximum number of retries. Set to 0 to disable retries. Default: 2.\n@param abortSignal - An optional abort signal that can be used to cancel the call.\n@param headers - Additional HTTP headers to be sent with the request. Only applicable for HTTP-based providers.\n\n@returns A result object that contains the generated transcript.\n */\nexport async function transcribe({\n  model,\n  audio,\n  providerOptions = {},\n  maxRetries: maxRetriesArg,\n  abortSignal,\n  headers,\n}: {\n  /**\nThe transcription model to use.\n     */\n  model: TranscriptionModelV2;\n\n  /**\nThe audio data to transcribe.\n   */\n  audio: DataContent | URL;\n\n  /**\nAdditional provider-specific options that are passed through to the provider\nas body parameters.\n\nThe outer record is keyed by the provider name, and the inner\nrecord is keyed by the provider-specific metadata key.\n```ts\n{\n  \"openai\": {\n    \"temperature\": 0\n  }\n}\n```\n     */\n  providerOptions?: ProviderOptions;\n\n  /**\nMaximum number of retries per transcript model call. Set to 0 to disable retries.\n\n@default 2\n   */\n  maxRetries?: number;\n\n  /**\nAbort signal.\n */\n  abortSignal?: AbortSignal;\n\n  /**\nAdditional headers to include in the request.\nOnly applicable for HTTP-based providers.\n */\n  headers?: Record<string, string>;\n}): Promise<TranscriptionResult> {\n  if (model.specificationVersion !== 'v2') {\n    throw new UnsupportedModelVersionError({\n      version: model.specificationVersion,\n      provider: model.provider,\n      modelId: model.modelId,\n    });\n  }\n\n  const { retry } = prepareRetries({\n    maxRetries: maxRetriesArg,\n    abortSignal,\n  });\n\n  const audioData =\n    audio instanceof URL\n      ? (await download({ url: audio })).data\n      : convertDataContentToUint8Array(audio);\n\n  const result = await retry(() =>\n    model.doGenerate({\n      audio: audioData,\n      abortSignal,\n      headers,\n      providerOptions,\n      mediaType:\n        detectMediaType({\n          data: audioData,\n          signatures: audioMediaTypeSignatures,\n        }) ?? 'audio/wav',\n    }),\n  );\n\n  if (!result.text) {\n    throw new NoTranscriptGeneratedError({ responses: [result.response] });\n  }\n\n  return new DefaultTranscriptionResult({\n    text: result.text,\n    segments: result.segments,\n    language: result.language,\n    durationInSeconds: result.durationInSeconds,\n    warnings: result.warnings,\n    responses: [result.response],\n    providerMetadata: result.providerMetadata,\n  });\n}\n\nclass DefaultTranscriptionResult implements TranscriptionResult {\n  readonly text: string;\n  readonly segments: Array<{\n    text: string;\n    startSecond: number;\n    endSecond: number;\n  }>;\n  readonly language: string | undefined;\n  readonly durationInSeconds: number | undefined;\n  readonly warnings: Array<TranscriptionWarning>;\n  readonly responses: Array<TranscriptionModelResponseMetadata>;\n  readonly providerMetadata: Record<string, Record<string, JSONValue>>;\n\n  constructor(options: {\n    text: string;\n    segments: Array<{\n      text: string;\n      startSecond: number;\n      endSecond: number;\n    }>;\n    language: string | undefined;\n    durationInSeconds: number | undefined;\n    warnings: Array<TranscriptionWarning>;\n    responses: Array<TranscriptionModelResponseMetadata>;\n    providerMetadata: Record<string, Record<string, JSONValue>> | undefined;\n  }) {\n    this.text = options.text;\n    this.segments = options.segments;\n    this.language = options.language;\n    this.durationInSeconds = options.durationInSeconds;\n    this.warnings = options.warnings;\n    this.responses = options.responses;\n    this.providerMetadata = options.providerMetadata ?? {};\n  }\n}\n", "import { parseJsonEventStream, ParseResult } from '@ai-sdk/provider-utils';\nimport {\n  UIMessageChunk,\n  uiMessageChunkSchema,\n} from '../ui-message-stream/ui-message-chunks';\nimport { consumeStream } from '../util/consume-stream';\nimport { processTextStream } from './process-text-stream';\n\n// use function to allow for mocking in tests:\nconst getOriginalFetch = () => fetch;\n\nexport async function callCompletionApi({\n  api,\n  prompt,\n  credentials,\n  headers,\n  body,\n  streamProtocol = 'data',\n  setCompletion,\n  setLoading,\n  setError,\n  setAbortController,\n  onFinish,\n  onError,\n  fetch = getOriginalFetch(),\n}: {\n  api: string;\n  prompt: string;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  body: Record<string, any>;\n  streamProtocol: 'data' | 'text' | undefined;\n  setCompletion: (completion: string) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: Error | undefined) => void;\n  setAbortController: (abortController: AbortController | null) => void;\n  onFinish: ((prompt: string, completion: string) => void) | undefined;\n  onError: ((error: Error) => void) | undefined;\n  fetch: ReturnType<typeof getOriginalFetch> | undefined;\n}) {\n  try {\n    setLoading(true);\n    setError(undefined);\n\n    const abortController = new AbortController();\n    setAbortController(abortController);\n\n    // Empty the completion immediately.\n    setCompletion('');\n\n    const response = await fetch(api, {\n      method: 'POST',\n      body: JSON.stringify({\n        prompt,\n        ...body,\n      }),\n      credentials,\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      signal: abortController.signal,\n    }).catch(err => {\n      throw err;\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        (await response.text()) ?? 'Failed to fetch the chat response.',\n      );\n    }\n\n    if (!response.body) {\n      throw new Error('The response body is empty.');\n    }\n\n    let result = '';\n\n    switch (streamProtocol) {\n      case 'text': {\n        await processTextStream({\n          stream: response.body,\n          onTextPart: chunk => {\n            result += chunk;\n            setCompletion(result);\n          },\n        });\n        break;\n      }\n      case 'data': {\n        await consumeStream({\n          stream: parseJsonEventStream({\n            stream: response.body,\n            schema: uiMessageChunkSchema,\n          }).pipeThrough(\n            new TransformStream<ParseResult<UIMessageChunk>, UIMessageChunk>({\n              async transform(part) {\n                if (!part.success) {\n                  throw part.error;\n                }\n\n                const streamPart = part.value;\n                if (streamPart.type === 'text-delta') {\n                  result += streamPart.delta;\n                  setCompletion(result);\n                } else if (streamPart.type === 'error') {\n                  throw new Error(streamPart.errorText);\n                }\n              },\n            }),\n          ),\n          onError: error => {\n            throw error;\n          },\n        });\n        break;\n      }\n      default: {\n        const exhaustiveCheck: never = streamProtocol;\n        throw new Error(`Unknown stream protocol: ${exhaustiveCheck}`);\n      }\n    }\n\n    if (onFinish) {\n      onFinish(prompt, result);\n    }\n\n    setAbortController(null);\n    return result;\n  } catch (err) {\n    // Ignore abort errors as they are expected.\n    if ((err as any).name === 'AbortError') {\n      setAbortController(null);\n      return null;\n    }\n\n    if (err instanceof Error) {\n      if (onError) {\n        onError(err);\n      }\n    }\n\n    setError(err as Error);\n  } finally {\n    setLoading(false);\n  }\n}\n", "export async function processTextStream({\n  stream,\n  onTextPart,\n}: {\n  stream: ReadableStream<Uint8Array>;\n  onTextPart: (chunk: string) => Promise<void> | void;\n}): Promise<void> {\n  const reader = stream.pipeThrough(new TextDecoderStream()).getReader();\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) {\n      break;\n    }\n    await onTextPart(value);\n  }\n}\n", "import {\n  generateId as generateIdFunc,\n  IdGenerator,\n  StandardSchemaV1,\n  Validator,\n} from '@ai-sdk/provider-utils';\nimport { UIMessageChunk } from '../ui-message-stream/ui-message-chunks';\nimport { consumeStream } from '../util/consume-stream';\nimport { SerialJobExecutor } from '../util/serial-job-executor';\nimport { ChatTransport } from './chat-transport';\nimport { convertFileListToFileUIParts } from './convert-file-list-to-file-ui-parts';\nimport { DefaultChatTransport } from './default-chat-transport';\nimport {\n  createStreamingUIMessageState,\n  processUIMessageStream,\n  StreamingUIMessageState,\n} from './process-ui-message-stream';\nimport {\n  InferUIMessageToolCall,\n  isToolOrDynamicToolUIPart,\n  type DataUIPart,\n  type FileUIPart,\n  type InferUIMessageData,\n  type InferUIMessageMetadata,\n  type InferUIMessageTools,\n  type UIDataTypes,\n  type UIMessage,\n} from './ui-messages';\n\nexport type CreateUIMessage<UI_MESSAGE extends UIMessage> = Omit<\n  UI_MESSAGE,\n  'id' | 'role'\n> & {\n  id?: UI_MESSAGE['id'];\n  role?: UI_MESSAGE['role'];\n};\n\nexport type UIDataPartSchemas = Record<\n  string,\n  Validator<any> | StandardSchemaV1<any>\n>;\n\nexport type UIDataTypesToSchemas<T extends UIDataTypes> = {\n  [K in keyof T]: Validator<T[K]> | StandardSchemaV1<T[K]>;\n};\n\nexport type InferUIDataParts<T extends UIDataPartSchemas> = {\n  [K in keyof T]: T[K] extends Validator<infer U>\n    ? U\n    : T[K] extends StandardSchemaV1<infer U>\n      ? U\n      : unknown;\n};\n\nexport type ChatRequestOptions = {\n  /**\n  Additional headers that should be to be passed to the API endpoint.\n   */\n  headers?: Record<string, string> | Headers;\n\n  /**\n  Additional body JSON properties that should be sent to the API endpoint.\n   */\n  body?: object; // TODO JSONStringifyable\n\n  metadata?: unknown;\n};\n\nexport type ChatStatus = 'submitted' | 'streaming' | 'ready' | 'error';\n\ntype ActiveResponse<UI_MESSAGE extends UIMessage> = {\n  state: StreamingUIMessageState<UI_MESSAGE>;\n  abortController: AbortController;\n};\n\nexport interface ChatState<UI_MESSAGE extends UIMessage> {\n  status: ChatStatus;\n\n  error: Error | undefined;\n\n  messages: UI_MESSAGE[];\n  pushMessage: (message: UI_MESSAGE) => void;\n  popMessage: () => void;\n  replaceMessage: (index: number, message: UI_MESSAGE) => void;\n\n  snapshot: <T>(thing: T) => T;\n}\n\nexport type ChatOnErrorCallback = (error: Error) => void;\n\nexport type ChatOnToolCallCallback<UI_MESSAGE extends UIMessage = UIMessage> =\n  (options: {\n    toolCall: InferUIMessageToolCall<UI_MESSAGE>;\n  }) => void | PromiseLike<void>;\n\nexport type ChatOnDataCallback<UI_MESSAGE extends UIMessage> = (\n  dataPart: DataUIPart<InferUIMessageData<UI_MESSAGE>>,\n) => void;\n\nexport type ChatOnFinishCallback<UI_MESSAGE extends UIMessage> = (options: {\n  message: UI_MESSAGE;\n  messages: UI_MESSAGE[];\n}) => void;\n\nexport interface ChatInit<UI_MESSAGE extends UIMessage> {\n  /**\n   * A unique identifier for the chat. If not provided, a random one will be\n   * generated.\n   */\n  id?: string;\n\n  messageMetadataSchema?:\n    | Validator<InferUIMessageMetadata<UI_MESSAGE>>\n    | StandardSchemaV1<InferUIMessageMetadata<UI_MESSAGE>>;\n  dataPartSchemas?: UIDataTypesToSchemas<InferUIMessageData<UI_MESSAGE>>;\n\n  messages?: UI_MESSAGE[];\n\n  /**\n   * A way to provide a function that is going to be used for ids for messages and the chat.\n   * If not provided the default AI SDK `generateId` is used.\n   */\n  generateId?: IdGenerator;\n\n  transport?: ChatTransport<UI_MESSAGE>;\n\n  /**\n   * Callback function to be called when an error is encountered.\n   */\n  onError?: ChatOnErrorCallback;\n\n  /**\n  Optional callback function that is invoked when a tool call is received.\n  Intended for automatic client-side tool execution.\n\n  You can optionally return a result for the tool call,\n  either synchronously or asynchronously.\n     */\n  onToolCall?: ChatOnToolCallCallback<UI_MESSAGE>;\n  /**\n   * Optional callback function that is called when the assistant message is finished streaming.\n   *\n   * @param message The message that was streamed.\n   */\n  onFinish?: ChatOnFinishCallback<UI_MESSAGE>;\n\n  /**\n   * Optional callback function that is called when a data part is received.\n   *\n   * @param data The data part that was received.\n   */\n  onData?: ChatOnDataCallback<UI_MESSAGE>;\n\n  /**\n   * When provided, this function will be called when the stream is finished or a tool call is added\n   * to determine if the current messages should be resubmitted.\n   */\n  sendAutomaticallyWhen?: (options: {\n    messages: UI_MESSAGE[];\n  }) => boolean | PromiseLike<boolean>;\n}\n\nexport abstract class AbstractChat<UI_MESSAGE extends UIMessage> {\n  readonly id: string;\n  readonly generateId: IdGenerator;\n\n  protected state: ChatState<UI_MESSAGE>;\n\n  private messageMetadataSchema:\n    | Validator<InferUIMessageMetadata<UI_MESSAGE>>\n    | StandardSchemaV1<InferUIMessageMetadata<UI_MESSAGE>>\n    | undefined;\n  private dataPartSchemas:\n    | UIDataTypesToSchemas<InferUIMessageData<UI_MESSAGE>>\n    | undefined;\n  private readonly transport: ChatTransport<UI_MESSAGE>;\n  private onError?: ChatInit<UI_MESSAGE>['onError'];\n  private onToolCall?: ChatInit<UI_MESSAGE>['onToolCall'];\n  private onFinish?: ChatInit<UI_MESSAGE>['onFinish'];\n  private onData?: ChatInit<UI_MESSAGE>['onData'];\n  private sendAutomaticallyWhen?: ChatInit<UI_MESSAGE>['sendAutomaticallyWhen'];\n\n  private activeResponse: ActiveResponse<UI_MESSAGE> | undefined = undefined;\n  private jobExecutor = new SerialJobExecutor();\n\n  constructor({\n    generateId = generateIdFunc,\n    id = generateId(),\n    transport = new DefaultChatTransport(),\n    messageMetadataSchema,\n    dataPartSchemas,\n    state,\n    onError,\n    onToolCall,\n    onFinish,\n    onData,\n    sendAutomaticallyWhen,\n  }: Omit<ChatInit<UI_MESSAGE>, 'messages'> & {\n    state: ChatState<UI_MESSAGE>;\n  }) {\n    this.id = id;\n    this.transport = transport;\n    this.generateId = generateId;\n    this.messageMetadataSchema = messageMetadataSchema;\n    this.dataPartSchemas = dataPartSchemas;\n    this.state = state;\n    this.onError = onError;\n    this.onToolCall = onToolCall;\n    this.onFinish = onFinish;\n    this.onData = onData;\n    this.sendAutomaticallyWhen = sendAutomaticallyWhen;\n  }\n\n  /**\n   * Hook status:\n   *\n   * - `submitted`: The message has been sent to the API and we're awaiting the start of the response stream.\n   * - `streaming`: The response is actively streaming in from the API, receiving chunks of data.\n   * - `ready`: The full response has been received and processed; a new user message can be submitted.\n   * - `error`: An error occurred during the API request, preventing successful completion.\n   */\n  get status(): ChatStatus {\n    return this.state.status;\n  }\n\n  protected setStatus({\n    status,\n    error,\n  }: {\n    status: ChatStatus;\n    error?: Error;\n  }) {\n    if (this.status === status) return;\n\n    this.state.status = status;\n    this.state.error = error;\n  }\n\n  get error() {\n    return this.state.error;\n  }\n\n  get messages(): UI_MESSAGE[] {\n    return this.state.messages;\n  }\n\n  get lastMessage(): UI_MESSAGE | undefined {\n    return this.state.messages[this.state.messages.length - 1];\n  }\n\n  set messages(messages: UI_MESSAGE[]) {\n    this.state.messages = messages;\n  }\n\n  /**\n   * Appends or replaces a user message to the chat list. This triggers the API call to fetch\n   * the assistant's response.\n   *\n   * If a messageId is provided, the message will be replaced.\n   */\n  sendMessage = async (\n    message?:\n      | (CreateUIMessage<UI_MESSAGE> & {\n          text?: never;\n          files?: never;\n          messageId?: string;\n        })\n      | {\n          text: string;\n          files?: FileList | FileUIPart[];\n          metadata?: InferUIMessageMetadata<UI_MESSAGE>;\n          parts?: never;\n          messageId?: string;\n        }\n      | {\n          files: FileList | FileUIPart[];\n          metadata?: InferUIMessageMetadata<UI_MESSAGE>;\n          parts?: never;\n          messageId?: string;\n        },\n    options?: ChatRequestOptions,\n  ): Promise<void> => {\n    if (message == null) {\n      await this.makeRequest({\n        trigger: 'submit-message',\n        messageId: this.lastMessage?.id,\n        ...options,\n      });\n      return;\n    }\n\n    let uiMessage: CreateUIMessage<UI_MESSAGE>;\n\n    if ('text' in message || 'files' in message) {\n      const fileParts = Array.isArray(message.files)\n        ? message.files\n        : await convertFileListToFileUIParts(message.files);\n\n      uiMessage = {\n        parts: [\n          ...fileParts,\n          ...('text' in message && message.text != null\n            ? [{ type: 'text' as const, text: message.text }]\n            : []),\n        ],\n      } as UI_MESSAGE;\n    } else {\n      uiMessage = message;\n    }\n\n    if (message.messageId != null) {\n      const messageIndex = this.state.messages.findIndex(\n        m => m.id === message.messageId,\n      );\n\n      if (messageIndex === -1) {\n        throw new Error(`message with id ${message.messageId} not found`);\n      }\n\n      if (this.state.messages[messageIndex].role !== 'user') {\n        throw new Error(\n          `message with id ${message.messageId} is not a user message`,\n        );\n      }\n\n      // remove all messages after the message with the given id\n      this.state.messages = this.state.messages.slice(0, messageIndex + 1);\n\n      // update the message with the new content\n      this.state.replaceMessage(messageIndex, {\n        ...uiMessage,\n        id: message.messageId,\n        role: uiMessage.role ?? 'user',\n        metadata: message.metadata,\n      } as UI_MESSAGE);\n    } else {\n      this.state.pushMessage({\n        ...uiMessage,\n        id: uiMessage.id ?? this.generateId(),\n        role: uiMessage.role ?? 'user',\n        metadata: message.metadata,\n      } as UI_MESSAGE);\n    }\n\n    await this.makeRequest({\n      trigger: 'submit-message',\n      messageId: message.messageId,\n      ...options,\n    });\n  };\n\n  /**\n   * Regenerate the assistant message with the provided message id.\n   * If no message id is provided, the last assistant message will be regenerated.\n   */\n  regenerate = async ({\n    messageId,\n    ...options\n  }: {\n    messageId?: string;\n  } & ChatRequestOptions = {}): Promise<void> => {\n    const messageIndex =\n      messageId == null\n        ? this.state.messages.length - 1\n        : this.state.messages.findIndex(message => message.id === messageId);\n\n    if (messageIndex === -1) {\n      throw new Error(`message ${messageId} not found`);\n    }\n\n    // set the messages to the message before the assistant message\n    this.state.messages = this.state.messages.slice(\n      0,\n      // if the message is a user message, we need to include it in the request:\n      this.messages[messageIndex].role === 'assistant'\n        ? messageIndex\n        : messageIndex + 1,\n    );\n\n    await this.makeRequest({\n      trigger: 'regenerate-message',\n      messageId,\n      ...options,\n    });\n  };\n\n  /**\n   * Attempt to resume an ongoing streaming response.\n   */\n  resumeStream = async (options: ChatRequestOptions = {}): Promise<void> => {\n    await this.makeRequest({ trigger: 'resume-stream', ...options });\n  };\n\n  /**\n   * Clear the error state and set the status to ready if the chat is in an error state.\n   */\n  clearError = () => {\n    if (this.status === 'error') {\n      this.state.error = undefined;\n      this.setStatus({ status: 'ready' });\n    }\n  };\n\n  addToolResult = async <TOOL extends keyof InferUIMessageTools<UI_MESSAGE>>({\n    tool,\n    toolCallId,\n    output,\n  }: {\n    tool: TOOL;\n    toolCallId: string;\n    output: InferUIMessageTools<UI_MESSAGE>[TOOL]['output'];\n  }) =>\n    this.jobExecutor.run(async () => {\n      const messages = this.state.messages;\n      const lastMessage = messages[messages.length - 1];\n\n      this.state.replaceMessage(messages.length - 1, {\n        ...lastMessage,\n        parts: lastMessage.parts.map(part =>\n          isToolOrDynamicToolUIPart(part) && part.toolCallId === toolCallId\n            ? { ...part, state: 'output-available', output }\n            : part,\n        ),\n      });\n\n      // update the active response if it exists\n      if (this.activeResponse) {\n        this.activeResponse.state.message.parts =\n          this.activeResponse.state.message.parts.map(part =>\n            isToolOrDynamicToolUIPart(part) && part.toolCallId === toolCallId\n              ? {\n                  ...part,\n                  state: 'output-available',\n                  output,\n                  errorText: undefined,\n                }\n              : part,\n          );\n      }\n\n      // automatically send the message if the sendAutomaticallyWhen function returns true\n      if (\n        this.status !== 'streaming' &&\n        this.status !== 'submitted' &&\n        this.sendAutomaticallyWhen?.({ messages: this.state.messages })\n      ) {\n        // no await to avoid deadlocking\n        this.makeRequest({\n          trigger: 'submit-message',\n          messageId: this.lastMessage?.id,\n        });\n      }\n    });\n\n  /**\n   * Abort the current request immediately, keep the generated tokens if any.\n   */\n  stop = async () => {\n    if (this.status !== 'streaming' && this.status !== 'submitted') return;\n\n    if (this.activeResponse?.abortController) {\n      this.activeResponse.abortController.abort();\n    }\n  };\n\n  private async makeRequest({\n    trigger,\n    metadata,\n    headers,\n    body,\n    messageId,\n  }: {\n    trigger: 'submit-message' | 'resume-stream' | 'regenerate-message';\n    messageId?: string;\n  } & ChatRequestOptions) {\n    this.setStatus({ status: 'submitted', error: undefined });\n\n    const lastMessage = this.lastMessage;\n\n    try {\n      const activeResponse = {\n        state: createStreamingUIMessageState({\n          lastMessage: this.state.snapshot(lastMessage),\n          messageId: this.generateId(),\n        }),\n        abortController: new AbortController(),\n      } as ActiveResponse<UI_MESSAGE>;\n\n      this.activeResponse = activeResponse;\n\n      let stream: ReadableStream<UIMessageChunk>;\n\n      if (trigger === 'resume-stream') {\n        const reconnect = await this.transport.reconnectToStream({\n          chatId: this.id,\n          metadata,\n          headers,\n          body,\n        });\n\n        if (reconnect == null) {\n          this.setStatus({ status: 'ready' });\n          return; // no active stream found, so we do not resume\n        }\n\n        stream = reconnect;\n      } else {\n        stream = await this.transport.sendMessages({\n          chatId: this.id,\n          messages: this.state.messages,\n          abortSignal: activeResponse.abortController.signal,\n          metadata,\n          headers,\n          body,\n          trigger,\n          messageId,\n        });\n      }\n\n      const runUpdateMessageJob = (\n        job: (options: {\n          state: StreamingUIMessageState<UI_MESSAGE>;\n          write: () => void;\n        }) => Promise<void>,\n      ) =>\n        // serialize the job execution to avoid race conditions:\n        this.jobExecutor.run(() =>\n          job({\n            state: activeResponse.state,\n            write: () => {\n              // streaming is set on first write (before it should be \"submitted\")\n              this.setStatus({ status: 'streaming' });\n\n              const replaceLastMessage =\n                activeResponse.state.message.id === this.lastMessage?.id;\n\n              if (replaceLastMessage) {\n                this.state.replaceMessage(\n                  this.state.messages.length - 1,\n                  activeResponse.state.message,\n                );\n              } else {\n                this.state.pushMessage(activeResponse.state.message);\n              }\n            },\n          }),\n        );\n\n      await consumeStream({\n        stream: processUIMessageStream({\n          stream,\n          onToolCall: this.onToolCall,\n          onData: this.onData,\n          messageMetadataSchema: this.messageMetadataSchema,\n          dataPartSchemas: this.dataPartSchemas,\n          runUpdateMessageJob,\n          onError: error => {\n            throw error;\n          },\n        }),\n        onError: error => {\n          throw error;\n        },\n      });\n\n      this.onFinish?.({\n        message: activeResponse.state.message,\n        messages: this.state.messages,\n      });\n\n      this.setStatus({ status: 'ready' });\n    } catch (err) {\n      // Ignore abort errors as they are expected.\n      if ((err as any).name === 'AbortError') {\n        this.setStatus({ status: 'ready' });\n        return null;\n      }\n\n      if (this.onError && err instanceof Error) {\n        this.onError(err);\n      }\n\n      this.setStatus({ status: 'error', error: err as Error });\n    } finally {\n      this.activeResponse = undefined;\n    }\n\n    // automatically send the message if the sendAutomaticallyWhen function returns true\n    if (this.sendAutomaticallyWhen?.({ messages: this.state.messages })) {\n      await this.makeRequest({\n        trigger: 'submit-message',\n        messageId: this.lastMessage?.id,\n        metadata,\n        headers,\n        body,\n      });\n    }\n  }\n}\n", "import { FileUIPart } from './ui-messages';\n\nexport async function convertFileListToFileUIParts(\n  files: FileList | undefined,\n): Promise<Array<FileUIPart>> {\n  if (files == null) {\n    return [];\n  }\n\n  // React-native doesn't have a FileList global:\n  if (!globalThis.FileList || !(files instanceof globalThis.FileList)) {\n    throw new Error('FileList is not supported in the current environment');\n  }\n\n  return Promise.all(\n    Array.from(files).map(async file => {\n      const { name, type } = file;\n\n      const dataUrl = await new Promise<string>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = readerEvent => {\n          resolve(readerEvent.target?.result as string);\n        };\n        reader.onerror = error => reject(error);\n        reader.readAsDataURL(file);\n      });\n\n      return {\n        type: 'file',\n        mediaType: type,\n        filename: name,\n        url: dataUrl,\n      };\n    }),\n  );\n}\n", "import { parseJsonEventStream, ParseResult } from '@ai-sdk/provider-utils';\nimport {\n  UIMessageChunk,\n  uiMessageChunkSchema,\n} from '../ui-message-stream/ui-message-chunks';\nimport {\n  HttpChatTransport,\n  HttpChatTransportInitOptions,\n} from './http-chat-transport';\nimport { UIMessage } from './ui-messages';\n\nexport class DefaultChatTransport<\n  UI_MESSAGE extends UIMessage,\n> extends HttpChatTransport<UI_MESSAGE> {\n  constructor(options: HttpChatTransportInitOptions<UI_MESSAGE> = {}) {\n    super(options);\n  }\n\n  protected processResponseStream(\n    stream: ReadableStream<Uint8Array<ArrayBufferLike>>,\n  ): ReadableStream<UIMessageChunk> {\n    return parseJsonEventStream({\n      stream,\n      schema: uiMessageChunkSchema,\n    }).pipeThrough(\n      new TransformStream<ParseResult<UIMessageChunk>, UIMessageChunk>({\n        async transform(chunk, controller) {\n          if (!chunk.success) {\n            throw chunk.error;\n          }\n          controller.enqueue(chunk.value);\n        },\n      }),\n    );\n  }\n}\n", "import { FetchFunction, Resolvable, resolve } from '@ai-sdk/provider-utils';\nimport { UIMessageChunk } from '../ui-message-stream/ui-message-chunks';\nimport { ChatTransport } from './chat-transport';\nimport { UIMessage } from './ui-messages';\n\nexport type PrepareSendMessagesRequest<UI_MESSAGE extends UIMessage> = (\n  options: {\n    id: string;\n    messages: UI_MESSAGE[];\n    requestMetadata: unknown;\n    body: Record<string, any> | undefined;\n    credentials: RequestCredentials | undefined;\n    headers: HeadersInit | undefined;\n    api: string;\n  } & {\n    trigger: 'submit-message' | 'regenerate-message';\n    messageId: string | undefined;\n  },\n) =>\n  | {\n      body: object;\n      headers?: HeadersInit;\n      credentials?: RequestCredentials;\n      api?: string;\n    }\n  | PromiseLike<{\n      body: object;\n      headers?: HeadersInit;\n      credentials?: RequestCredentials;\n      api?: string;\n    }>;\n\nexport type PrepareReconnectToStreamRequest = (options: {\n  id: string;\n  requestMetadata: unknown;\n  body: Record<string, any> | undefined;\n  credentials: RequestCredentials | undefined;\n  headers: HeadersInit | undefined;\n  api: string;\n}) =>\n  | {\n      headers?: HeadersInit;\n      credentials?: RequestCredentials;\n      api?: string;\n    }\n  | PromiseLike<{\n      headers?: HeadersInit;\n      credentials?: RequestCredentials;\n      api?: string;\n    }>;\n\n/**\n * Options for the `HttpChatTransport` class.\n *\n * @param UI_MESSAGE - The type of message to be used in the chat.\n */\nexport type HttpChatTransportInitOptions<UI_MESSAGE extends UIMessage> = {\n  /**\n   * The API URL to be used for the chat transport.\n   * Defaults to '/api/chat'.\n   */\n  api?: string;\n\n  /**\n   * The credentials mode to be used for the fetch request.\n   * Possible values are: 'omit', 'same-origin', 'include'.\n   * Defaults to 'same-origin'.\n   */\n  credentials?: Resolvable<RequestCredentials>;\n\n  /**\n   * HTTP headers to be sent with the API request.\n   */\n  headers?: Resolvable<Record<string, string> | Headers>;\n\n  /**\n   * Extra body object to be sent with the API request.\n   * @example\n   * Send a `sessionId` to the API along with the messages.\n   * ```js\n   * useChat({\n   *   body: {\n   *     sessionId: '123',\n   *   }\n   * })\n   * ```\n   */\n  body?: Resolvable<object>;\n\n  /**\n  Custom fetch implementation. You can use it as a middleware to intercept requests,\n  or to provide a custom fetch implementation for e.g. testing.\n      */\n  fetch?: FetchFunction;\n\n  /**\n   * When a function is provided, it will be used\n   * to prepare the request body for the chat API. This can be useful for\n   * customizing the request body based on the messages and data in the chat.\n   *\n   * @param id The id of the chat.\n   * @param messages The current messages in the chat.\n   * @param requestBody The request body object passed in the chat request.\n   */\n  prepareSendMessagesRequest?: PrepareSendMessagesRequest<UI_MESSAGE>;\n\n  /**\n   * When a function is provided, it will be used\n   * to prepare the request body for the chat API. This can be useful for\n   * customizing the request body based on the messages and data in the chat.\n   *\n   * @param id The id of the chat.\n   * @param messages The current messages in the chat.\n   * @param requestBody The request body object passed in the chat request.\n   */\n  prepareReconnectToStreamRequest?: PrepareReconnectToStreamRequest;\n};\n\nexport abstract class HttpChatTransport<UI_MESSAGE extends UIMessage>\n  implements ChatTransport<UI_MESSAGE>\n{\n  protected api: string;\n  protected credentials: HttpChatTransportInitOptions<UI_MESSAGE>['credentials'];\n  protected headers: HttpChatTransportInitOptions<UI_MESSAGE>['headers'];\n  protected body: HttpChatTransportInitOptions<UI_MESSAGE>['body'];\n  protected fetch?: FetchFunction;\n  protected prepareSendMessagesRequest?: PrepareSendMessagesRequest<UI_MESSAGE>;\n  protected prepareReconnectToStreamRequest?: PrepareReconnectToStreamRequest;\n\n  constructor({\n    api = '/api/chat',\n    credentials,\n    headers,\n    body,\n    fetch,\n    prepareSendMessagesRequest,\n    prepareReconnectToStreamRequest,\n  }: HttpChatTransportInitOptions<UI_MESSAGE>) {\n    this.api = api;\n    this.credentials = credentials;\n    this.headers = headers;\n    this.body = body;\n    this.fetch = fetch;\n    this.prepareSendMessagesRequest = prepareSendMessagesRequest;\n    this.prepareReconnectToStreamRequest = prepareReconnectToStreamRequest;\n  }\n\n  async sendMessages({\n    abortSignal,\n    ...options\n  }: Parameters<ChatTransport<UI_MESSAGE>['sendMessages']>[0]) {\n    const resolvedBody = await resolve(this.body);\n    const resolvedHeaders = await resolve(this.headers);\n    const resolvedCredentials = await resolve(this.credentials);\n\n    const preparedRequest = await this.prepareSendMessagesRequest?.({\n      api: this.api,\n      id: options.chatId,\n      messages: options.messages,\n      body: { ...resolvedBody, ...options.body },\n      headers: { ...resolvedHeaders, ...options.headers },\n      credentials: resolvedCredentials,\n      requestMetadata: options.metadata,\n      trigger: options.trigger,\n      messageId: options.messageId,\n    });\n\n    const api = preparedRequest?.api ?? this.api;\n    const headers =\n      preparedRequest?.headers !== undefined\n        ? preparedRequest.headers\n        : { ...resolvedHeaders, ...options.headers };\n    const body =\n      preparedRequest?.body !== undefined\n        ? preparedRequest.body\n        : {\n            ...resolvedBody,\n            ...options.body,\n            id: options.chatId,\n            messages: options.messages,\n            trigger: options.trigger,\n            messageId: options.messageId,\n          };\n    const credentials = preparedRequest?.credentials ?? resolvedCredentials;\n\n    // avoid caching globalThis.fetch in case it is patched by other libraries\n    const fetch = this.fetch ?? globalThis.fetch;\n\n    const response = await fetch(api, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...headers,\n      },\n      body: JSON.stringify(body),\n      credentials,\n      signal: abortSignal,\n    });\n\n    if (!response.ok) {\n      throw new Error(\n        (await response.text()) ?? 'Failed to fetch the chat response.',\n      );\n    }\n\n    if (!response.body) {\n      throw new Error('The response body is empty.');\n    }\n\n    return this.processResponseStream(response.body);\n  }\n\n  async reconnectToStream(\n    options: Parameters<ChatTransport<UI_MESSAGE>['reconnectToStream']>[0],\n  ): Promise<ReadableStream<UIMessageChunk> | null> {\n    const resolvedBody = await resolve(this.body);\n    const resolvedHeaders = await resolve(this.headers);\n    const resolvedCredentials = await resolve(this.credentials);\n\n    const preparedRequest = await this.prepareReconnectToStreamRequest?.({\n      api: this.api,\n      id: options.chatId,\n      body: { ...resolvedBody, ...options.body },\n      headers: { ...resolvedHeaders, ...options.headers },\n      credentials: resolvedCredentials,\n      requestMetadata: options.metadata,\n    });\n\n    const api = preparedRequest?.api ?? `${this.api}/${options.chatId}/stream`;\n    const headers =\n      preparedRequest?.headers !== undefined\n        ? preparedRequest.headers\n        : { ...resolvedHeaders, ...options.headers };\n    const credentials = preparedRequest?.credentials ?? resolvedCredentials;\n\n    // avoid caching globalThis.fetch in case it is patched by other libraries\n    const fetch = this.fetch ?? globalThis.fetch;\n\n    const response = await fetch(api, {\n      method: 'GET',\n      headers,\n      credentials,\n    });\n\n    // no active stream found, so we do not resume\n    if (response.status === 204) {\n      return null;\n    }\n\n    if (!response.ok) {\n      throw new Error(\n        (await response.text()) ?? 'Failed to fetch the chat response.',\n      );\n    }\n\n    if (!response.body) {\n      throw new Error('The response body is empty.');\n    }\n\n    return this.processResponseStream(response.body);\n  }\n\n  protected abstract processResponseStream(\n    stream: ReadableStream<Uint8Array<ArrayBufferLike>>,\n  ): ReadableStream<UIMessageChunk>;\n}\n", "import {\n  AssistantContent,\n  ModelMessage,\n  ToolResultPart,\n} from '@ai-sdk/provider-utils';\nimport { ToolSet } from '../generate-text/tool-set';\nimport { createToolModelOutput } from '../prompt/create-tool-model-output';\nimport { MessageConversionError } from '../prompt/message-conversion-error';\nimport {\n  DynamicToolUIPart,\n  FileUIPart,\n  getToolName,\n  isToolOrDynamicToolUIPart,\n  isToolUIPart,\n  ReasoningUIPart,\n  TextUIPart,\n  ToolUIPart,\n  UIMessage,\n  UITools,\n} from './ui-messages';\n\n/**\nConverts an array of messages from useChat into an array of CoreMessages that can be used\nwith the AI core functions (e.g. `streamText`).\n\n@param messages - The messages to convert.\n@param options.tools - The tools to use.\n@param options.ignoreIncompleteToolCalls - Whether to ignore incomplete tool calls. Default is `false`.\n */\nexport function convertToModelMessages(\n  messages: Array<Omit<UIMessage, 'id'>>,\n  options?: {\n    tools?: ToolSet;\n    ignoreIncompleteToolCalls?: boolean;\n  },\n): ModelMessage[] {\n  const modelMessages: ModelMessage[] = [];\n\n  if (options?.ignoreIncompleteToolCalls) {\n    messages = messages.map(message => ({\n      ...message,\n      parts: message.parts.filter(\n        part =>\n          !isToolOrDynamicToolUIPart(part) ||\n          (part.state !== 'input-streaming' &&\n            part.state !== 'input-available'),\n      ),\n    }));\n  }\n\n  for (const message of messages) {\n    switch (message.role) {\n      case 'system': {\n        const textParts = message.parts.filter(part => part.type === 'text');\n\n        const providerMetadata = textParts.reduce((acc, part) => {\n          if (part.providerMetadata != null) {\n            return { ...acc, ...part.providerMetadata };\n          }\n          return acc;\n        }, {});\n\n        modelMessages.push({\n          role: 'system',\n          content: textParts.map(part => part.text).join(''),\n          ...(Object.keys(providerMetadata).length > 0\n            ? { providerOptions: providerMetadata }\n            : {}),\n        });\n        break;\n      }\n\n      case 'user': {\n        modelMessages.push({\n          role: 'user',\n          content: message.parts\n            .filter(\n              (part): part is TextUIPart | FileUIPart =>\n                part.type === 'text' || part.type === 'file',\n            )\n            .map(part => {\n              switch (part.type) {\n                case 'text':\n                  return {\n                    type: 'text' as const,\n                    text: part.text,\n                    ...(part.providerMetadata != null\n                      ? { providerOptions: part.providerMetadata }\n                      : {}),\n                  };\n                case 'file':\n                  return {\n                    type: 'file' as const,\n                    mediaType: part.mediaType,\n                    filename: part.filename,\n                    data: part.url,\n                    ...(part.providerMetadata != null\n                      ? { providerOptions: part.providerMetadata }\n                      : {}),\n                  };\n                default:\n                  return part;\n              }\n            }),\n        });\n\n        break;\n      }\n\n      case 'assistant': {\n        if (message.parts != null) {\n          let block: Array<\n            | TextUIPart\n            | ToolUIPart<UITools>\n            | ReasoningUIPart\n            | FileUIPart\n            | DynamicToolUIPart\n          > = [];\n\n          function processBlock() {\n            if (block.length === 0) {\n              return;\n            }\n\n            const content: AssistantContent = [];\n\n            for (const part of block) {\n              if (part.type === 'text') {\n                content.push({\n                  type: 'text' as const,\n                  text: part.text,\n                  ...(part.providerMetadata != null\n                    ? { providerOptions: part.providerMetadata }\n                    : {}),\n                });\n              } else if (part.type === 'file') {\n                content.push({\n                  type: 'file' as const,\n                  mediaType: part.mediaType,\n                  filename: part.filename,\n                  data: part.url,\n                });\n              } else if (part.type === 'reasoning') {\n                content.push({\n                  type: 'reasoning' as const,\n                  text: part.text,\n                  providerOptions: part.providerMetadata,\n                });\n              } else if (part.type === 'dynamic-tool') {\n                const toolName = part.toolName;\n\n                if (part.state !== 'input-streaming') {\n                  content.push({\n                    type: 'tool-call' as const,\n                    toolCallId: part.toolCallId,\n                    toolName,\n                    input: part.input,\n                    ...(part.callProviderMetadata != null\n                      ? { providerOptions: part.callProviderMetadata }\n                      : {}),\n                  });\n                }\n              } else if (isToolUIPart(part)) {\n                const toolName = getToolName(part);\n\n                if (part.state !== 'input-streaming') {\n                  content.push({\n                    type: 'tool-call' as const,\n                    toolCallId: part.toolCallId,\n                    toolName,\n                    input:\n                      part.state === 'output-error'\n                        ? (part.input ?? part.rawInput)\n                        : part.input,\n                    providerExecuted: part.providerExecuted,\n                    ...(part.callProviderMetadata != null\n                      ? { providerOptions: part.callProviderMetadata }\n                      : {}),\n                  });\n\n                  if (\n                    part.providerExecuted === true &&\n                    (part.state === 'output-available' ||\n                      part.state === 'output-error')\n                  ) {\n                    content.push({\n                      type: 'tool-result',\n                      toolCallId: part.toolCallId,\n                      toolName,\n                      output: createToolModelOutput({\n                        output:\n                          part.state === 'output-error'\n                            ? part.errorText\n                            : part.output,\n                        tool: options?.tools?.[toolName],\n                        errorMode:\n                          part.state === 'output-error' ? 'json' : 'none',\n                      }),\n                    });\n                  }\n                }\n              } else {\n                const _exhaustiveCheck: never = part;\n                throw new Error(`Unsupported part: ${_exhaustiveCheck}`);\n              }\n            }\n\n            modelMessages.push({\n              role: 'assistant',\n              content,\n            });\n\n            // check if there are tool invocations with results in the block\n            const toolParts = block.filter(\n              part =>\n                (isToolUIPart(part) && part.providerExecuted !== true) ||\n                part.type === 'dynamic-tool',\n            ) as (ToolUIPart<UITools> | DynamicToolUIPart)[];\n\n            // tool message with tool results\n            if (toolParts.length > 0) {\n              modelMessages.push({\n                role: 'tool',\n                content: toolParts\n                  .map((toolPart): ToolResultPart | null => {\n                    switch (toolPart.state) {\n                      case 'output-error':\n                      case 'output-available': {\n                        const toolName =\n                          toolPart.type === 'dynamic-tool'\n                            ? toolPart.toolName\n                            : getToolName(toolPart);\n\n                        return {\n                          type: 'tool-result',\n                          toolCallId: toolPart.toolCallId,\n                          toolName,\n                          output: createToolModelOutput({\n                            output:\n                              toolPart.state === 'output-error'\n                                ? toolPart.errorText\n                                : toolPart.output,\n                            tool: options?.tools?.[toolName],\n                            errorMode:\n                              toolPart.state === 'output-error'\n                                ? 'text'\n                                : 'none',\n                          }),\n                        };\n                      }\n                      default: {\n                        return null;\n                      }\n                    }\n                  })\n                  .filter(\n                    (output): output is NonNullable<typeof output> =>\n                      output != null,\n                  ),\n              });\n            }\n\n            // updates for next block\n            block = [];\n          }\n\n          for (const part of message.parts) {\n            if (\n              part.type === 'text' ||\n              part.type === 'reasoning' ||\n              part.type === 'file' ||\n              part.type === 'dynamic-tool' ||\n              isToolUIPart(part)\n            ) {\n              block.push(part);\n            } else if (part.type === 'step-start') {\n              processBlock();\n            }\n          }\n\n          processBlock();\n\n          break;\n        }\n\n        break;\n      }\n\n      default: {\n        const _exhaustiveCheck: never = message.role;\n        throw new MessageConversionError({\n          originalMessage: message,\n          message: `Unsupported role: ${_exhaustiveCheck}`,\n        });\n      }\n    }\n  }\n\n  return modelMessages;\n}\n\n/**\n@deprecated Use `convertToModelMessages` instead.\n */\n// TODO remove in AI SDK 6\nexport const convertToCoreMessages = convertToModelMessages;\n", "import { isToolOrDynamicToolUIPart, UIMessage } from './ui-messages';\n\n/**\nCheck if the message is an assistant message with completed tool calls.\nThe last step of the message must have at least one tool invocation and\nall tool invocations must have a result.\n */\nexport function lastAssistantMessageIsCompleteWithToolCalls({\n  messages,\n}: {\n  messages: UIMessage[];\n}): boolean {\n  const message = messages[messages.length - 1];\n\n  if (!message) {\n    return false;\n  }\n\n  if (message.role !== 'assistant') {\n    return false;\n  }\n\n  const lastStepStartIndex = message.parts.reduce((lastIndex, part, index) => {\n    return part.type === 'step-start' ? index : lastIndex;\n  }, -1);\n\n  const lastStepToolInvocations = message.parts\n    .slice(lastStepStartIndex + 1)\n    .filter(isToolOrDynamicToolUIPart);\n\n  return (\n    lastStepToolInvocations.length > 0 &&\n    lastStepToolInvocations.every(part => part.state === 'output-available')\n  );\n}\n", "import { UIMessageChunk } from '../ui-message-stream/ui-message-chunks';\n\nexport function transformTextToUiMessageStream({\n  stream,\n}: {\n  stream: ReadableStream<string>;\n}) {\n  return stream.pipeThrough(\n    new TransformStream<string, UIMessageChunk>({\n      start(controller) {\n        controller.enqueue({ type: 'start' });\n        controller.enqueue({ type: 'start-step' });\n        controller.enqueue({ type: 'text-start', id: 'text-1' });\n      },\n\n      async transform(part, controller) {\n        controller.enqueue({ type: 'text-delta', id: 'text-1', delta: part });\n      },\n\n      async flush(controller) {\n        controller.enqueue({ type: 'text-end', id: 'text-1' });\n        controller.enqueue({ type: 'finish-step' });\n        controller.enqueue({ type: 'finish' });\n      },\n    }),\n  );\n}\n", "import { UIMessageChunk } from '../ui-message-stream/ui-message-chunks';\nimport {\n  HttpChatTransport,\n  HttpChatTransportInitOptions,\n} from './http-chat-transport';\nimport { transformTextToUiMessageStream } from './transform-text-to-ui-message-stream';\nimport { UIMessage } from './ui-messages';\n\nexport class TextStreamChatTransport<\n  UI_MESSAGE extends UIMessage,\n> extends HttpChatTransport<UI_MESSAGE> {\n  constructor(options: HttpChatTransportInitOptions<UI_MESSAGE> = {}) {\n    super(options);\n  }\n\n  protected processResponseStream(\n    stream: ReadableStream<Uint8Array<ArrayBufferLike>>,\n  ): ReadableStream<UIMessageChunk> {\n    return transformTextToUiMessageStream({\n      stream: stream.pipeThrough(new TextDecoderStream()),\n    });\n  }\n}\n", "import { TypeValidationError } from '@ai-sdk/provider';\nimport {\n  StandardSchemaV1,\n  Tool,\n  validateTypes,\n  Validator,\n} from '@ai-sdk/provider-utils';\nimport { z } from 'zod/v4';\nimport { providerMetadataSchema } from '../types/provider-metadata';\nimport {\n  DataUIPart,\n  InferUIMessageData,\n  InferUIMessageTools,\n  ToolUIPart,\n  UIMessage,\n} from './ui-messages';\n\nconst textUIPartSchema = z.object({\n  type: z.literal('text'),\n  text: z.string(),\n  state: z.enum(['streaming', 'done']).optional(),\n  providerMetadata: providerMetadataSchema.optional(),\n});\n\nconst reasoningUIPartSchema = z.object({\n  type: z.literal('reasoning'),\n  text: z.string(),\n  state: z.enum(['streaming', 'done']).optional(),\n  providerMetadata: providerMetadataSchema.optional(),\n});\n\nconst sourceUrlUIPartSchema = z.object({\n  type: z.literal('source-url'),\n  sourceId: z.string(),\n  url: z.string(),\n  title: z.string().optional(),\n  providerMetadata: providerMetadataSchema.optional(),\n});\n\nconst sourceDocumentUIPartSchema = z.object({\n  type: z.literal('source-document'),\n  sourceId: z.string(),\n  mediaType: z.string(),\n  title: z.string(),\n  filename: z.string().optional(),\n  providerMetadata: providerMetadataSchema.optional(),\n});\n\nconst fileUIPartSchema = z.object({\n  type: z.literal('file'),\n  mediaType: z.string(),\n  filename: z.string().optional(),\n  url: z.string(),\n  providerMetadata: providerMetadataSchema.optional(),\n});\n\nconst stepStartUIPartSchema = z.object({\n  type: z.literal('step-start'),\n});\n\nconst dataUIPartSchema = z.object({\n  type: z.string().startsWith('data-'),\n  id: z.string().optional(),\n  data: z.unknown(),\n});\n\nconst dynamicToolUIPartSchemas = [\n  z.object({\n    type: z.literal('dynamic-tool'),\n    toolName: z.string(),\n    toolCallId: z.string(),\n    state: z.literal('input-streaming'),\n    input: z.unknown().optional(),\n    output: z.never().optional(),\n    errorText: z.never().optional(),\n  }),\n  z.object({\n    type: z.literal('dynamic-tool'),\n    toolName: z.string(),\n    toolCallId: z.string(),\n    state: z.literal('input-available'),\n    input: z.unknown(),\n    output: z.never().optional(),\n    errorText: z.never().optional(),\n    callProviderMetadata: providerMetadataSchema.optional(),\n  }),\n  z.object({\n    type: z.literal('dynamic-tool'),\n    toolName: z.string(),\n    toolCallId: z.string(),\n    state: z.literal('output-available'),\n    input: z.unknown(),\n    output: z.unknown(),\n    errorText: z.never().optional(),\n    callProviderMetadata: providerMetadataSchema.optional(),\n    preliminary: z.boolean().optional(),\n  }),\n  z.object({\n    type: z.literal('dynamic-tool'),\n    toolName: z.string(),\n    toolCallId: z.string(),\n    state: z.literal('output-error'),\n    input: z.unknown(),\n    output: z.never().optional(),\n    errorText: z.string(),\n    callProviderMetadata: providerMetadataSchema.optional(),\n  }),\n];\n\nconst toolUIPartSchemas = [\n  z.object({\n    type: z.string().startsWith('tool-'),\n    toolCallId: z.string(),\n    state: z.literal('input-streaming'),\n    input: z.unknown().optional(),\n    output: z.never().optional(),\n    errorText: z.never().optional(),\n  }),\n  z.object({\n    type: z.string().startsWith('tool-'),\n    toolCallId: z.string(),\n    state: z.literal('input-available'),\n    input: z.unknown(),\n    output: z.never().optional(),\n    errorText: z.never().optional(),\n    callProviderMetadata: providerMetadataSchema.optional(),\n  }),\n  z.object({\n    type: z.string().startsWith('tool-'),\n    toolCallId: z.string(),\n    state: z.literal('output-available'),\n    input: z.unknown(),\n    output: z.unknown(),\n    errorText: z.never().optional(),\n    callProviderMetadata: providerMetadataSchema.optional(),\n    preliminary: z.boolean().optional(),\n  }),\n  z.object({\n    type: z.string().startsWith('tool-'),\n    toolCallId: z.string(),\n    state: z.literal('output-error'),\n    input: z.unknown(),\n    output: z.never().optional(),\n    errorText: z.string(),\n    callProviderMetadata: providerMetadataSchema.optional(),\n  }),\n];\n\nconst uiMessageSchema = z.object({\n  id: z.string(),\n  role: z.enum(['system', 'user', 'assistant']),\n  metadata: z.unknown().optional(),\n  parts: z.array(\n    z.union([\n      textUIPartSchema,\n      reasoningUIPartSchema,\n      sourceUrlUIPartSchema,\n      sourceDocumentUIPartSchema,\n      fileUIPartSchema,\n      stepStartUIPartSchema,\n      dataUIPartSchema,\n      ...dynamicToolUIPartSchemas,\n      ...toolUIPartSchemas,\n    ]),\n  ),\n});\n\n/**\n * Validates a list of UI messages.\n *\n * Metadata, data parts, and generic tool call structures are only validated if\n * the corresponding schemas are provided. Otherwise, they are assumed to be\n * valid.\n */\nexport async function validateUIMessages<UI_MESSAGE extends UIMessage>({\n  messages,\n  metadataSchema,\n  dataSchemas,\n  tools,\n}: {\n  messages: unknown;\n  metadataSchema?:\n    | Validator<UIMessage['metadata']>\n    | StandardSchemaV1<unknown, UI_MESSAGE['metadata']>;\n  dataSchemas?: {\n    [NAME in keyof InferUIMessageData<UI_MESSAGE> & string]?:\n      | Validator<InferUIMessageData<UI_MESSAGE>[NAME]>\n      | StandardSchemaV1<unknown, InferUIMessageData<UI_MESSAGE>[NAME]>;\n  };\n  tools?: {\n    [NAME in keyof InferUIMessageTools<UI_MESSAGE> & string]?: Tool<\n      InferUIMessageTools<UI_MESSAGE>[NAME]['input'],\n      InferUIMessageTools<UI_MESSAGE>[NAME]['output']\n    >;\n  };\n}): Promise<Array<UI_MESSAGE>> {\n  const validatedMessages = await validateTypes({\n    value: messages,\n    schema: z.array(uiMessageSchema),\n  });\n\n  if (metadataSchema) {\n    for (const message of validatedMessages) {\n      await validateTypes({\n        value: message.metadata,\n        schema: metadataSchema,\n      });\n    }\n  }\n\n  if (dataSchemas) {\n    for (const message of validatedMessages) {\n      const dataParts = message.parts.filter(part =>\n        part.type.startsWith('data-'),\n      ) as DataUIPart<InferUIMessageData<UI_MESSAGE>>[];\n\n      for (const dataPart of dataParts) {\n        const dataName = dataPart.type.slice(5);\n        const dataSchema = dataSchemas[dataName];\n\n        if (!dataSchema) {\n          throw new TypeValidationError({\n            value: dataPart.data,\n            cause: `No data schema found for data part ${dataName}`,\n          });\n        }\n\n        await validateTypes({\n          value: dataPart.data,\n          schema: dataSchema,\n        });\n      }\n    }\n  }\n\n  if (tools) {\n    for (const message of validatedMessages) {\n      const toolParts = message.parts.filter(part =>\n        part.type.startsWith('tool-'),\n      ) as ToolUIPart<InferUIMessageTools<UI_MESSAGE>>[];\n\n      for (const toolPart of toolParts) {\n        const toolName = toolPart.type.slice(5);\n        const tool = tools[toolName];\n\n        if (!tool) {\n          throw new TypeValidationError({\n            value: toolPart.input,\n            cause: `No tool schema found for tool part ${toolName}`,\n          });\n        }\n\n        if (\n          toolPart.state === 'input-available' ||\n          toolPart.state === 'output-available' ||\n          toolPart.state === 'output-error'\n        ) {\n          await validateTypes({\n            value: toolPart.input,\n            schema: tool.inputSchema,\n          });\n        }\n\n        if (toolPart.state === 'output-available' && tool.outputSchema) {\n          await validateTypes({\n            value: toolPart.output,\n            schema: tool.outputSchema,\n          });\n        }\n      }\n    }\n  }\n\n  return validatedMessages as Array<UI_MESSAGE>;\n}\n", "import {\n  generateId as generateIdFunc,\n  getErrorMessage,\n  IdGenerator,\n} from '@ai-sdk/provider-utils';\nimport { UIMessage } from '../ui/ui-messages';\nimport { handleUIMessageStreamFinish } from './handle-ui-message-stream-finish';\nimport { InferUIMessageChunk } from './ui-message-chunks';\nimport { UIMessageStreamOnFinishCallback } from './ui-message-stream-on-finish-callback';\nimport { UIMessageStreamWriter } from './ui-message-stream-writer';\n\nexport function createUIMessageStream<UI_MESSAGE extends UIMessage>({\n  execute,\n  onError = getErrorMessage,\n  originalMessages,\n  onFinish,\n  generateId = generateIdFunc,\n}: {\n  execute: (options: {\n    writer: UIMessageStreamWriter<UI_MESSAGE>;\n  }) => Promise<void> | void;\n  onError?: (error: unknown) => string;\n\n  /**\n   * The original messages. If they are provided, persistence mode is assumed,\n   * and a message ID is provided for the response message.\n   */\n  originalMessages?: UI_MESSAGE[];\n\n  onFinish?: UIMessageStreamOnFinishCallback<UI_MESSAGE>;\n\n  generateId?: IdGenerator;\n}): ReadableStream<InferUIMessageChunk<UI_MESSAGE>> {\n  let controller!: ReadableStreamDefaultController<\n    InferUIMessageChunk<UI_MESSAGE>\n  >;\n\n  const ongoingStreamPromises: Promise<void>[] = [];\n\n  const stream = new ReadableStream({\n    start(controllerArg) {\n      controller = controllerArg;\n    },\n  });\n\n  function safeEnqueue(data: InferUIMessageChunk<UI_MESSAGE>) {\n    try {\n      controller.enqueue(data);\n    } catch (error) {\n      // suppress errors when the stream has been closed\n    }\n  }\n\n  try {\n    const result = execute({\n      writer: {\n        write(part: InferUIMessageChunk<UI_MESSAGE>) {\n          safeEnqueue(part);\n        },\n        merge(streamArg) {\n          ongoingStreamPromises.push(\n            (async () => {\n              const reader = streamArg.getReader();\n              while (true) {\n                const { done, value } = await reader.read();\n                if (done) break;\n                safeEnqueue(value);\n              }\n            })().catch(error => {\n              safeEnqueue({\n                type: 'error',\n                errorText: onError(error),\n              } as InferUIMessageChunk<UI_MESSAGE>);\n            }),\n          );\n        },\n        onError,\n      },\n    });\n\n    if (result) {\n      ongoingStreamPromises.push(\n        result.catch(error => {\n          safeEnqueue({\n            type: 'error',\n            errorText: onError(error),\n          } as InferUIMessageChunk<UI_MESSAGE>);\n        }),\n      );\n    }\n  } catch (error) {\n    safeEnqueue({\n      type: 'error',\n      errorText: onError(error),\n    } as InferUIMessageChunk<UI_MESSAGE>);\n  }\n\n  // Wait until all ongoing streams are done. This approach enables merging\n  // streams even after execute has returned, as long as there is still an\n  // open merged stream. This is important to e.g. forward new streams and\n  // from callbacks.\n  const waitForStreams: Promise<void> = new Promise(async resolve => {\n    while (ongoingStreamPromises.length > 0) {\n      await ongoingStreamPromises.shift();\n    }\n    resolve();\n  });\n\n  waitForStreams.finally(() => {\n    try {\n      controller.close();\n    } catch (error) {\n      // suppress errors when the stream has been closed\n    }\n  });\n\n  return handleUIMessageStreamFinish<UI_MESSAGE>({\n    stream,\n    messageId: generateId(),\n    originalMessages,\n    onFinish,\n    onError,\n  });\n}\n", "import { UIMessage } from '../ui/ui-messages';\nimport { UIMessageChunk } from './ui-message-chunks';\nimport {\n  createStreamingUIMessageState,\n  processUIMessageStream,\n  StreamingUIMessageState,\n} from '../ui/process-ui-message-stream';\nimport {\n  AsyncIterableStream,\n  createAsyncIterableStream,\n} from '../util/async-iterable-stream';\nimport { consumeStream } from '../util/consume-stream';\n\n/**\n * Transforms a stream of `UIMessageChunk`s into an `AsyncIterableStream` of `UIMessage`s.\n *\n * @param options.message - The last assistant message to use as a starting point when the conversation is resumed. Otherwise undefined.\n * @param options.stream - The stream of `UIMessageChunk`s to read.\n * @param options.terminateOnError - Whether to terminate the stream if an error occurs.\n * @param options.onError - A function that is called when an error occurs.\n *\n * @returns An `AsyncIterableStream` of `UIMessage`s. Each stream part is a different state of the same message\n * as it is being completed.\n */\nexport function readUIMessageStream<UI_MESSAGE extends UIMessage>({\n  message,\n  stream,\n  onError,\n  terminateOnError = false,\n}: {\n  message?: UI_MESSAGE;\n  stream: ReadableStream<UIMessageChunk>;\n  onError?: (error: unknown) => void;\n  terminateOnError?: boolean;\n}): AsyncIterableStream<UI_MESSAGE> {\n  let controller: ReadableStreamDefaultController<UI_MESSAGE> | undefined;\n  let hasErrored = false;\n\n  const outputStream = new ReadableStream<UI_MESSAGE>({\n    start(controllerParam) {\n      controller = controllerParam;\n    },\n  });\n\n  const state = createStreamingUIMessageState<UI_MESSAGE>({\n    messageId: message?.id ?? '',\n    lastMessage: message,\n  });\n\n  const handleError = (error: unknown) => {\n    onError?.(error);\n\n    if (!hasErrored && terminateOnError) {\n      hasErrored = true;\n      controller?.error(error);\n    }\n  };\n\n  consumeStream({\n    stream: processUIMessageStream({\n      stream,\n      runUpdateMessageJob(\n        job: (options: {\n          state: StreamingUIMessageState<UI_MESSAGE>;\n          write: () => void;\n        }) => Promise<void>,\n      ) {\n        return job({\n          state,\n          write: () => {\n            controller?.enqueue(structuredClone(state.message));\n          },\n        });\n      },\n      onError: handleError,\n    }),\n    onError: handleError,\n  }).finally(() => {\n    // Only close if no error occurred. Calling close() on an errored controller\n    // throws \"Invalid state: Controller is already closed\" TypeError.\n    if (!hasErrored) {\n      controller?.close();\n    }\n  });\n\n  return createAsyncIterableStream(outputStream);\n}\n", "import React, { useRef, useMemo, useCallback, useDebugValue } from 'react';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim/index.js';\nimport { UNDEFINED as UNDEFINED$1, OBJECT as OBJECT$1, SWRConfig as SWRConfig$1, defaultConfig, withArgs, SWRGlobalState, serialize as serialize$1, createCacheHelper, isUndefined as isUndefined$1, isPromiseLike, getTimestamp, isFunction as isFunction$1, revalidateEvents, internalMutate, useIsomorphicLayoutEffect, subscribeCallback, IS_SERVER, rAF, IS_REACT_LEGACY, mergeObjects } from '../_internal/index.mjs';\nexport { mutate, preload, useSWRConfig } from '../_internal/index.mjs';\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\nconst getTypeName = (value)=>OBJECT.prototype.toString.call(value);\nconst isObjectTypeName = (typeName, type)=>typeName === `[object ${type}]`;\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const typeName = getTypeName(arg);\n    const isDate = isObjectTypeName(typeName, 'Date');\n    const isRegex = isObjectTypeName(typeName, 'RegExp');\n    const isPlainObject = isObjectTypeName(typeName, 'Object');\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && !isRegex) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (Array.isArray(arg)) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (isPlainObject) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\nconst unstable_serialize = (key)=>serialize(key)[0];\n\n/// <reference types=\"react/experimental\" />\nconst use = React.use || // This extra generic is to avoid TypeScript mixing up the generic and JSX sytax\n// and emitting an error.\n// We assume that this is only for the `use(thenable)` case, not `use(context)`.\n// https://github.com/facebook/react/blob/aed00dacfb79d17c53218404c52b1c7aa59c4a89/packages/react-server/src/ReactFizzThenable.js#L45\n((thenable)=>{\n    switch(thenable.status){\n        case 'pending':\n            throw thenable;\n        case 'fulfilled':\n            return thenable.value;\n        case 'rejected':\n            throw thenable.reason;\n        default:\n            thenable.status = 'pending';\n            thenable.then((v)=>{\n                thenable.status = 'fulfilled';\n                thenable.value = v;\n            }, (e)=>{\n                thenable.status = 'rejected';\n                thenable.reason = e;\n            });\n            throw thenable;\n    }\n});\nconst WITH_DEDUPE = {\n    dedupe: true\n};\nconst resolvedUndef = Promise.resolve(UNDEFINED$1);\nconst useSWRHandler = (_key, fetcher, config)=>{\n    const { cache, compare, suspense, fallbackData, revalidateOnMount, revalidateIfStale, refreshInterval, refreshWhenHidden, refreshWhenOffline, keepPreviousData } = config;\n    const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n    // `key` is the identifier of the SWR internal state,\n    // `fnArg` is the argument/arguments parsed from the key, which will be passed\n    // to the fetcher.\n    // All of them are derived from `_key`.\n    const [key, fnArg] = serialize$1(_key);\n    // If it's the initial render of this hook.\n    const initialMountedRef = useRef(false);\n    // If the hook is unmounted already. This will be used to prevent some effects\n    // to be called after unmounting.\n    const unmountedRef = useRef(false);\n    // Refs to keep the key and config.\n    const keyRef = useRef(key);\n    const fetcherRef = useRef(fetcher);\n    const configRef = useRef(config);\n    const getConfig = ()=>configRef.current;\n    const isActive = ()=>getConfig().isVisible() && getConfig().isOnline();\n    const [getCache, setCache, subscribeCache, getInitialCache] = createCacheHelper(cache, key);\n    const stateDependencies = useRef({}).current;\n    // Resolve the fallback data from either the inline option, or the global provider.\n    // If it's a promise, we simply let React suspend and resolve it for us.\n    const fallback = isUndefined$1(fallbackData) ? isUndefined$1(config.fallback) ? UNDEFINED$1 : config.fallback[key] : fallbackData;\n    const isEqual = (prev, current)=>{\n        for(const _ in stateDependencies){\n            const t = _;\n            if (t === 'data') {\n                if (!compare(prev[t], current[t])) {\n                    if (!isUndefined$1(prev[t])) {\n                        return false;\n                    }\n                    if (!compare(returnedData, current[t])) {\n                        return false;\n                    }\n                }\n            } else {\n                if (current[t] !== prev[t]) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    const getSnapshot = useMemo(()=>{\n        const shouldStartRequest = (()=>{\n            if (!key) return false;\n            if (!fetcher) return false;\n            // If `revalidateOnMount` is set, we take the value directly.\n            if (!isUndefined$1(revalidateOnMount)) return revalidateOnMount;\n            // If it's paused, we skip revalidation.\n            if (getConfig().isPaused()) return false;\n            if (suspense) return false;\n            return revalidateIfStale !== false;\n        })();\n        // Get the cache and merge it with expected states.\n        const getSelectedCache = (state)=>{\n            // We only select the needed fields from the state.\n            const snapshot = mergeObjects(state);\n            delete snapshot._k;\n            if (!shouldStartRequest) {\n                return snapshot;\n            }\n            return {\n                isValidating: true,\n                isLoading: true,\n                ...snapshot\n            };\n        };\n        const cachedData = getCache();\n        const initialData = getInitialCache();\n        const clientSnapshot = getSelectedCache(cachedData);\n        const serverSnapshot = cachedData === initialData ? clientSnapshot : getSelectedCache(initialData);\n        // To make sure that we are returning the same object reference to avoid\n        // unnecessary re-renders, we keep the previous snapshot and use deep\n        // comparison to check if we need to return a new one.\n        let memorizedSnapshot = clientSnapshot;\n        return [\n            ()=>{\n                const newSnapshot = getSelectedCache(getCache());\n                const compareResult = isEqual(newSnapshot, memorizedSnapshot);\n                if (compareResult) {\n                    // Mentally, we should always return the `memorizedSnapshot` here\n                    // as there's no change between the new and old snapshots.\n                    // However, since the `isEqual` function only compares selected fields,\n                    // the values of the unselected fields might be changed. That's\n                    // simply because we didn't track them.\n                    // To support the case in https://github.com/vercel/swr/pull/2576,\n                    // we need to update these fields in the `memorizedSnapshot` too\n                    // with direct mutations to ensure the snapshot is always up-to-date\n                    // even for the unselected fields, but only trigger re-renders when\n                    // the selected fields are changed.\n                    memorizedSnapshot.data = newSnapshot.data;\n                    memorizedSnapshot.isLoading = newSnapshot.isLoading;\n                    memorizedSnapshot.isValidating = newSnapshot.isValidating;\n                    memorizedSnapshot.error = newSnapshot.error;\n                    return memorizedSnapshot;\n                } else {\n                    memorizedSnapshot = newSnapshot;\n                    return newSnapshot;\n                }\n            },\n            ()=>serverSnapshot\n        ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        cache,\n        key\n    ]);\n    // Get the current state that SWR should return.\n    const cached = useSyncExternalStore(useCallback((callback)=>subscribeCache(key, (current, prev)=>{\n            if (!isEqual(prev, current)) callback();\n        }), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        cache,\n        key\n    ]), getSnapshot[0], getSnapshot[1]);\n    const isInitialMount = !initialMountedRef.current;\n    const hasRevalidator = EVENT_REVALIDATORS[key] && EVENT_REVALIDATORS[key].length > 0;\n    const cachedData = cached.data;\n    const data = isUndefined$1(cachedData) ? fallback && isPromiseLike(fallback) ? use(fallback) : fallback : cachedData;\n    const error = cached.error;\n    // Use a ref to store previously returned data. Use the initial data as its initial value.\n    const laggyDataRef = useRef(data);\n    const returnedData = keepPreviousData ? isUndefined$1(cachedData) ? isUndefined$1(laggyDataRef.current) ? data : laggyDataRef.current : cachedData : data;\n    // - Suspense mode and there's stale data for the initial render.\n    // - Not suspense mode and there is no fallback data and `revalidateIfStale` is enabled.\n    // - `revalidateIfStale` is enabled but `data` is not defined.\n    const shouldDoInitialRevalidation = (()=>{\n        // if a key already has revalidators and also has error, we should not trigger revalidation\n        if (hasRevalidator && !isUndefined$1(error)) return false;\n        // If `revalidateOnMount` is set, we take the value directly.\n        if (isInitialMount && !isUndefined$1(revalidateOnMount)) return revalidateOnMount;\n        // If it's paused, we skip revalidation.\n        if (getConfig().isPaused()) return false;\n        // Under suspense mode, it will always fetch on render if there is no\n        // stale data so no need to revalidate immediately mount it again.\n        // If data exists, only revalidate if `revalidateIfStale` is true.\n        if (suspense) return isUndefined$1(data) ? false : revalidateIfStale;\n        // If there is no stale data, we need to revalidate when mount;\n        // If `revalidateIfStale` is set to true, we will always revalidate.\n        return isUndefined$1(data) || revalidateIfStale;\n    })();\n    // Resolve the default validating state:\n    // If it's able to validate, and it should revalidate when mount, this will be true.\n    const defaultValidatingState = !!(key && fetcher && isInitialMount && shouldDoInitialRevalidation);\n    const isValidating = isUndefined$1(cached.isValidating) ? defaultValidatingState : cached.isValidating;\n    const isLoading = isUndefined$1(cached.isLoading) ? defaultValidatingState : cached.isLoading;\n    // The revalidation function is a carefully crafted wrapper of the original\n    // `fetcher`, to correctly handle the many edge cases.\n    const revalidate = useCallback(async (revalidateOpts)=>{\n        const currentFetcher = fetcherRef.current;\n        if (!key || !currentFetcher || unmountedRef.current || getConfig().isPaused()) {\n            return false;\n        }\n        let newData;\n        let startAt;\n        let loading = true;\n        const opts = revalidateOpts || {};\n        // If there is no ongoing concurrent request, or `dedupe` is not set, a\n        // new request should be initiated.\n        const shouldStartNewRequest = !FETCH[key] || !opts.dedupe;\n        /*\n         For React 17\n         Do unmount check for calls:\n         If key has changed during the revalidation, or the component has been\n         unmounted, old dispatch and old event callbacks should not take any\n         effect\n\n        For React 18\n        only check if key has changed\n        https://github.com/reactwg/react-18/discussions/82\n      */ const callbackSafeguard = ()=>{\n            if (IS_REACT_LEGACY) {\n                return !unmountedRef.current && key === keyRef.current && initialMountedRef.current;\n            }\n            return key === keyRef.current;\n        };\n        // The final state object when the request finishes.\n        const finalState = {\n            isValidating: false,\n            isLoading: false\n        };\n        const finishRequestAndUpdateState = ()=>{\n            setCache(finalState);\n        };\n        const cleanupState = ()=>{\n            // Check if it's still the same request before deleting it.\n            const requestInfo = FETCH[key];\n            if (requestInfo && requestInfo[1] === startAt) {\n                delete FETCH[key];\n            }\n        };\n        // Start fetching. Change the `isValidating` state, update the cache.\n        const initialState = {\n            isValidating: true\n        };\n        // It is in the `isLoading` state, if and only if there is no cached data.\n        // This bypasses fallback data and laggy data.\n        if (isUndefined$1(getCache().data)) {\n            initialState.isLoading = true;\n        }\n        try {\n            if (shouldStartNewRequest) {\n                setCache(initialState);\n                // If no cache is being rendered currently (it shows a blank page),\n                // we trigger the loading slow event.\n                if (config.loadingTimeout && isUndefined$1(getCache().data)) {\n                    setTimeout(()=>{\n                        if (loading && callbackSafeguard()) {\n                            getConfig().onLoadingSlow(key, config);\n                        }\n                    }, config.loadingTimeout);\n                }\n                // Start the request and save the timestamp.\n                // Key must be truthy if entering here.\n                FETCH[key] = [\n                    currentFetcher(fnArg),\n                    getTimestamp()\n                ];\n            }\n            // Wait until the ongoing request is done. Deduplication is also\n            // considered here.\n            ;\n            [newData, startAt] = FETCH[key];\n            newData = await newData;\n            if (shouldStartNewRequest) {\n                // If the request isn't interrupted, clean it up after the\n                // deduplication interval.\n                setTimeout(cleanupState, config.dedupingInterval);\n            }\n            // If there're other ongoing request(s), started after the current one,\n            // we need to ignore the current one to avoid possible race conditions:\n            //   req1------------------>res1        (current one)\n            //        req2---------------->res2\n            // the request that fired later will always be kept.\n            // The timestamp maybe be `undefined` or a number\n            if (!FETCH[key] || FETCH[key][1] !== startAt) {\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Clear error.\n            finalState.error = UNDEFINED$1;\n            // If there're other mutations(s), that overlapped with the current revalidation:\n            // case 1:\n            //   req------------------>res\n            //       mutate------>end\n            // case 2:\n            //         req------------>res\n            //   mutate------>end\n            // case 3:\n            //   req------------------>res\n            //       mutate-------...---------->\n            // we have to ignore the revalidation result (res) because it's no longer fresh.\n            // meanwhile, a new revalidation should be triggered when the mutation ends.\n            const mutationInfo = MUTATION[key];\n            if (!isUndefined$1(mutationInfo) && // case 1\n            (startAt <= mutationInfo[0] || // case 2\n            startAt <= mutationInfo[1] || // case 3\n            mutationInfo[1] === 0)) {\n                finishRequestAndUpdateState();\n                if (shouldStartNewRequest) {\n                    if (callbackSafeguard()) {\n                        getConfig().onDiscarded(key);\n                    }\n                }\n                return false;\n            }\n            // Deep compare with the latest state to avoid extra re-renders.\n            // For local state, compare and assign.\n            const cacheData = getCache().data;\n            // Since the compare fn could be custom fn\n            // cacheData might be different from newData even when compare fn returns True\n            finalState.data = compare(cacheData, newData) ? cacheData : newData;\n            // Trigger the successful callback if it's the original request.\n            if (shouldStartNewRequest) {\n                if (callbackSafeguard()) {\n                    getConfig().onSuccess(newData, key, config);\n                }\n            }\n        } catch (err) {\n            cleanupState();\n            const currentConfig = getConfig();\n            const { shouldRetryOnError } = currentConfig;\n            // Not paused, we continue handling the error. Otherwise, discard it.\n            if (!currentConfig.isPaused()) {\n                // Get a new error, don't use deep comparison for errors.\n                finalState.error = err;\n                // Error event and retry logic. Only for the actual request, not\n                // deduped ones.\n                if (shouldStartNewRequest && callbackSafeguard()) {\n                    currentConfig.onError(err, key, currentConfig);\n                    if (shouldRetryOnError === true || isFunction$1(shouldRetryOnError) && shouldRetryOnError(err)) {\n                        if (!getConfig().revalidateOnFocus || !getConfig().revalidateOnReconnect || isActive()) {\n                            // If it's inactive, stop. It will auto-revalidate when\n                            // refocusing or reconnecting.\n                            // When retrying, deduplication is always enabled.\n                            currentConfig.onErrorRetry(err, key, currentConfig, (_opts)=>{\n                                const revalidators = EVENT_REVALIDATORS[key];\n                                if (revalidators && revalidators[0]) {\n                                    revalidators[0](revalidateEvents.ERROR_REVALIDATE_EVENT, _opts);\n                                }\n                            }, {\n                                retryCount: (opts.retryCount || 0) + 1,\n                                dedupe: true\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        // Mark loading as stopped.\n        loading = false;\n        // Update the current hook's state.\n        finishRequestAndUpdateState();\n        return true;\n    }, // `setState` is immutable, and `eventsCallback`, `fnArg`, and\n    // `keyValidating` are depending on `key`, so we can exclude them from\n    // the deps array.\n    //\n    // FIXME:\n    // `fn` and `config` might be changed during the lifecycle,\n    // but they might be changed every render like this.\n    // `useSWR('key', () => fetch('/api/'), { suspense: true })`\n    // So we omit the values from the deps array\n    // even though it might cause unexpected behaviors.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        key,\n        cache\n    ]);\n    // Similar to the global mutate but bound to the current cache and key.\n    // `cache` isn't allowed to change during the lifecycle.\n    const boundMutate = useCallback(// Use callback to make sure `keyRef.current` returns latest result every time\n    (...args)=>{\n        return internalMutate(cache, keyRef.current, ...args);\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    // The logic for updating refs.\n    useIsomorphicLayoutEffect(()=>{\n        fetcherRef.current = fetcher;\n        configRef.current = config;\n        // Handle laggy data updates. If there's cached data of the current key,\n        // it'll be the correct reference.\n        if (!isUndefined$1(cachedData)) {\n            laggyDataRef.current = cachedData;\n        }\n    });\n    // After mounted or key changed.\n    useIsomorphicLayoutEffect(()=>{\n        if (!key) return;\n        const softRevalidate = revalidate.bind(UNDEFINED$1, WITH_DEDUPE);\n        let nextFocusRevalidatedAt = 0;\n        if (getConfig().revalidateOnFocus) {\n            const initNow = Date.now();\n            nextFocusRevalidatedAt = initNow + getConfig().focusThrottleInterval;\n        }\n        // Expose revalidators to global event listeners. So we can trigger\n        // revalidation from the outside.\n        const onRevalidate = (type, opts = {})=>{\n            if (type == revalidateEvents.FOCUS_EVENT) {\n                const now = Date.now();\n                if (getConfig().revalidateOnFocus && now > nextFocusRevalidatedAt && isActive()) {\n                    nextFocusRevalidatedAt = now + getConfig().focusThrottleInterval;\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.RECONNECT_EVENT) {\n                if (getConfig().revalidateOnReconnect && isActive()) {\n                    softRevalidate();\n                }\n            } else if (type == revalidateEvents.MUTATE_EVENT) {\n                return revalidate();\n            } else if (type == revalidateEvents.ERROR_REVALIDATE_EVENT) {\n                return revalidate(opts);\n            }\n            return;\n        };\n        const unsubEvents = subscribeCallback(key, EVENT_REVALIDATORS, onRevalidate);\n        // Mark the component as mounted and update corresponding refs.\n        unmountedRef.current = false;\n        keyRef.current = key;\n        initialMountedRef.current = true;\n        // Keep the original key in the cache.\n        setCache({\n            _k: fnArg\n        });\n        // Trigger a revalidation\n        if (shouldDoInitialRevalidation) {\n            // Performance optimization: if a request is already in progress for this key,\n            // skip the revalidation to avoid redundant work\n            if (!FETCH[key]) {\n                if (isUndefined$1(data) || IS_SERVER) {\n                    // Revalidate immediately.\n                    softRevalidate();\n                } else {\n                    // Delay the revalidate if we have data to return so we won't block\n                    // rendering.\n                    rAF(softRevalidate);\n                }\n            }\n        }\n        return ()=>{\n            // Mark it as unmounted.\n            unmountedRef.current = true;\n            unsubEvents();\n        };\n    }, [\n        key\n    ]);\n    // Polling\n    useIsomorphicLayoutEffect(()=>{\n        let timer;\n        function next() {\n            // Use the passed interval\n            // ...or invoke the function with the updated data to get the interval\n            const interval = isFunction$1(refreshInterval) ? refreshInterval(getCache().data) : refreshInterval;\n            // We only start the next interval if `refreshInterval` is not 0, and:\n            // - `force` is true, which is the start of polling\n            // - or `timer` is not 0, which means the effect wasn't canceled\n            if (interval && timer !== -1) {\n                timer = setTimeout(execute, interval);\n            }\n        }\n        function execute() {\n            // Check if it's OK to execute:\n            // Only revalidate when the page is visible, online, and not errored.\n            if (!getCache().error && (refreshWhenHidden || getConfig().isVisible()) && (refreshWhenOffline || getConfig().isOnline())) {\n                revalidate(WITH_DEDUPE).then(next);\n            } else {\n                // Schedule the next interval to check again.\n                next();\n            }\n        }\n        next();\n        return ()=>{\n            if (timer) {\n                clearTimeout(timer);\n                timer = -1;\n            }\n        };\n    }, [\n        refreshInterval,\n        refreshWhenHidden,\n        refreshWhenOffline,\n        key\n    ]);\n    // Display debug info in React DevTools.\n    useDebugValue(returnedData);\n    // In Suspense mode, we can't return the empty `data` state.\n    // If there is an `error`, the `error` needs to be thrown to the error boundary.\n    // If there is no `error`, the `revalidation` promise needs to be thrown to\n    // the suspense boundary.\n    if (suspense) {\n        const hasKeyButNoData = key && isUndefined$1(data);\n        // SWR should throw when trying to use Suspense on the server with React 18,\n        // without providing any fallback data. This causes hydration errors. See:\n        // https://github.com/vercel/swr/issues/1832\n        if (!IS_REACT_LEGACY && IS_SERVER && hasKeyButNoData) {\n            throw new Error('Fallback data is required when using Suspense in SSR.');\n        }\n        // Always update fetcher and config refs even with the Suspense mode.\n        if (hasKeyButNoData) {\n            fetcherRef.current = fetcher;\n            configRef.current = config;\n            unmountedRef.current = false;\n        }\n        const req = PRELOAD[key];\n        const mutateReq = !isUndefined$1(req) && hasKeyButNoData ? boundMutate(req) : resolvedUndef;\n        use(mutateReq);\n        if (!isUndefined$1(error) && hasKeyButNoData) {\n            throw error;\n        }\n        const revalidation = hasKeyButNoData ? revalidate(WITH_DEDUPE) : resolvedUndef;\n        if (!isUndefined$1(returnedData) && hasKeyButNoData) {\n            // @ts-ignore modify react promise status\n            revalidation.status = 'fulfilled';\n            // @ts-ignore modify react promise value\n            revalidation.value = true;\n        }\n        use(revalidation);\n    }\n    const swrResponse = {\n        mutate: boundMutate,\n        get data () {\n            stateDependencies.data = true;\n            return returnedData;\n        },\n        get error () {\n            stateDependencies.error = true;\n            return error;\n        },\n        get isValidating () {\n            stateDependencies.isValidating = true;\n            return isValidating;\n        },\n        get isLoading () {\n            stateDependencies.isLoading = true;\n            return isLoading;\n        }\n    };\n    return swrResponse;\n};\nconst SWRConfig = OBJECT$1.defineProperty(SWRConfig$1, 'defaultValue', {\n    value: defaultConfig\n});\n/**\n * A hook to fetch data.\n *\n * @link https://swr.vercel.app\n * @example\n * ```jsx\n * import useSWR from 'swr'\n * function Profile() {\n *   const { data, error, isLoading } = useSWR('/api/user', fetcher)\n *   if (error) return <div>failed to load</div>\n *   if (isLoading) return <div>loading...</div>\n *   return <div>hello {data.name}!</div>\n * }\n * ```\n */ const useSWR = withArgs(useSWRHandler);\n\n// useSWR\n\nexport { SWRConfig, useSWR as default, unstable_serialize };\n", "'use client';\nimport React, { useEffect, useLayoutEffect, createContext, useContext, useMemo, useRef, createElement } from 'react';\nimport * as revalidateEvents from './events.mjs';\nimport { dequal } from 'dequal/lite';\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\n\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst isLegacyDeno = isWindowDefined && 'Deno' in window;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\n\nconst IS_REACT_LEGACY = !React.useId;\nconst IS_SERVER = !isWindowDefined || isLegacyDeno;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\nconst getTypeName = (value)=>OBJECT.prototype.toString.call(value);\nconst isObjectTypeName = (typeName, type)=>typeName === `[object ${type}]`;\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const typeName = getTypeName(arg);\n    const isDate = isObjectTypeName(typeName, 'Date');\n    const isRegex = isObjectTypeName(typeName, 'RegExp');\n    const isPlainObject = isObjectTypeName(typeName, 'Object');\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && !isRegex) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (Array.isArray(arg)) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (isPlainObject) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\n\nasync function internalMutate(...args) {\n    const [cache, _key, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key)) {\n        const keyFilter = _key;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (// Skip the special useSWRInfinite and useSWRSubscription keys.\n            !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const startRevalidate = ()=>{\n            const revalidators = EVENT_REVALIDATORS[key];\n            const revalidate = isFunction(options.revalidate) ? options.revalidate(get().data, _k) : options.revalidate !== false;\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](revalidateEvents.MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        let isError = false;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n                isError = true;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n                isError = true;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (isError) throw error;\n                return data;\n            } else if (isError && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data: committedData,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!isError) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    const populateCachedData = populateCache(data, committedData);\n                    set({\n                        data: populateCachedData,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                } else {\n                    // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                    set({\n                        data,\n                        error: UNDEFINED,\n                        _c: UNDEFINED\n                    });\n                }\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        Promise.resolve(startRevalidate()).then(()=>{\n            // The mutation and revalidation are ended, we can clear it since the data is\n            // not an optimistic value anymore.\n            set({\n                _c: UNDEFINED\n            });\n        });\n        // Throw error or return data\n        if (isError) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return data;\n    }\n}\n\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = Object.create(null);\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = Object.create(null);\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    Object.create(null),\n                    Object.create(null),\n                    Object.create(null),\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, revalidateEvents.FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, revalidateEvents.RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = dequal;\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, // use web preset by default\npreset);\n\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1, fallback: f1 } = a;\n        const { use: u2, fallback: f2 } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\n\nconst SWRConfigContext = createContext({});\nconst SWRConfig = (props)=>{\n    const { value } = props;\n    const parentConfig = useContext(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = useMemo(()=>isFunctionalConfig ? value(parentConfig) : value, [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = useMemo(()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = useRef(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect(()=>{\n        if (cacheContext) {\n            cacheContext[2] && cacheContext[2]();\n            return cacheContext[3];\n        }\n    }, []);\n    return createElement(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n\nexport { noop as A, isPromiseLike as B, IS_REACT_LEGACY as I, OBJECT as O, SWRConfigContext as S, UNDEFINED as U, isFunction as a, SWRGlobalState as b, cache as c, defaultConfig as d, isUndefined as e, mergeConfigs as f, SWRConfig as g, initCache as h, isWindowDefined as i, mutate as j, compare as k, stableHash as l, mergeObjects as m, internalMutate as n, getTimestamp as o, preset as p, defaultConfigOptions as q, IS_SERVER as r, serialize as s, rAF as t, useIsomorphicLayoutEffect as u, slowConnection as v, isDocumentDefined as w, isLegacyDeno as x, hasRequestAnimationFrame as y, createCacheHelper as z };\n", "const FOCUS_EVENT = 0;\nconst RECONNECT_EVENT = 1;\nconst MUTATE_EVENT = 2;\nconst ERROR_REVALIDATE_EVENT = 3;\n\nexport { ERROR_REVALIDATE_EVENT, FOCUS_EVENT, MUTATE_EVENT, RECONNECT_EVENT };\n", "var has = Object.prototype.hasOwnProperty;\n\nexport function dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n", "const INFINITE_PREFIX = '$inf$';\n\nexport { INFINITE_PREFIX };\n", "import { i as isWindowDefined, a as isFunction, S as SWRConfigContext, m as mergeObjects, d as defaultConfig, s as serialize, b as SWRGlobalState, c as cache, e as isUndefined, f as mergeConfigs } from './config-context-client-BoS53ST9.mjs';\nexport { I as IS_REACT_LEGACY, r as IS_SERVER, O as OBJECT, g as SWRConfig, U as UNDEFINED, k as compare, z as createCacheHelper, q as defaultConfigOptions, o as getTimestamp, y as hasRequestAnimationFrame, h as initCache, n as internalMutate, w as isDocumentDefined, x as isLegacyDeno, B as isPromiseLike, j as mutate, A as noop, p as preset, t as rAF, v as slowConnection, l as stableHash, u as useIsomorphicLayoutEffect } from './config-context-client-BoS53ST9.mjs';\nimport * as revalidateEvents from './events.mjs';\nexport { revalidateEvents };\nimport { INFINITE_PREFIX } from './constants.mjs';\nexport { INFINITE_PREFIX } from './constants.mjs';\nimport React, { useContext, useMemo } from 'react';\nexport * from './types.mjs';\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = React;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    const parentConfig = useContext(SWRConfigContext);\n    const mergedConfig = useMemo(()=>mergeObjects(defaultConfig, parentConfig), [\n        parentConfig\n    ]);\n    return mergedConfig;\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            if (key.startsWith(INFINITE_PREFIX)) {\n                // we want the infinite fetcher to be called.\n                // handling of the PRELOAD cache happens there.\n                return fetcher_(...args);\n            }\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\nexport { SWRGlobalState, cache, defaultConfig, isFunction, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, normalize, preload, serialize, subscribeCallback, useSWRConfig, withArgs, withMiddleware };\n", "import { getFetchClient } from '@strapi/admin/strapi-admin';\n\n/**\n * Centralized AI client utilities:\n * - Token retrieval via admin endpoint using getFetchClient\n * - In-memory + sessionStorage caching with near-expiry buffer\n * - Safe JSON parsing for error handling\n * - Single-retry policy on token invalidation\n */\n\nexport interface AITokenData {\n  token: string;\n  expiresAt: string;\n}\n\nlet aiTokenCache: AITokenData | null = null;\nconst SESSION_STORAGE_KEY = 'strapi-ai-token';\nconst EXPIRY_BUFFER_MS = 60 * 1000;\n\nconst parseExpiryMs = (expiresAt: string): number | null => {\n  const ms = Date.parse(expiresAt);\n  return Number.isFinite(ms) ? ms : null;\n};\n\ntype TokenState = 'valid' | 'stale' | 'expired';\n\nconst getTokenState = (\n  expiresAt: string,\n  bufferMs = EXPIRY_BUFFER_MS,\n  now = Date.now()\n): TokenState => {\n  const expMs = parseExpiryMs(expiresAt);\n  if (expMs === null) {\n    return 'expired';\n  }\n  if (expMs <= now) {\n    return 'expired';\n  }\n  if (expMs - bufferMs <= now) {\n    return 'stale';\n  }\n\n  return 'valid';\n};\n\nconst isTokenUsable = (expiresAt: string, bufferMs = EXPIRY_BUFFER_MS, now = Date.now()): boolean =>\n  getTokenState(expiresAt, bufferMs, now) === 'valid';\n\nexport const clearAIJwt = () => {\n  aiTokenCache = null;\n  sessionStorage.removeItem(SESSION_STORAGE_KEY);\n};\n\nconst readFromSession = (): AITokenData | null => {\n  try {\n    const raw = sessionStorage.getItem(SESSION_STORAGE_KEY);\n    if (!raw) {\n      return null;\n    }\n\n    const parsed = JSON.parse(raw) as AITokenData;\n    return parsed;\n  } catch {\n    return null;\n  }\n};\n\nconst writeToSession = (data: AITokenData) => {\n  sessionStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(data));\n};\n\nexport const getAIJwt = async (): Promise<AITokenData | null> => {\n  // Check memory cache\n  if (aiTokenCache && isTokenUsable(aiTokenCache.expiresAt)) {\n    return aiTokenCache;\n  }\n\n  // Check session storage\n  const fromSession = readFromSession();\n  if (fromSession && isTokenUsable(fromSession.expiresAt)) {\n    aiTokenCache = fromSession;\n\n    return aiTokenCache;\n  }\n\n  // Fetch from admin endpoint\n  try {\n    const { get } = getFetchClient();\n    const { data } = await get('/admin/ai-token');\n\n    const token = data?.token || data?.data?.token;\n    const expiresAt = data?.expiresAt || data?.data?.expiresAt;\n\n    if (token && expiresAt) {\n      aiTokenCache = { token, expiresAt };\n      writeToSession(aiTokenCache);\n\n      return aiTokenCache;\n    }\n    return null;\n  } catch {\n    return null;\n  }\n};\n\nexport const prefetchAIToken = async (): Promise<void> => {\n  try {\n    // If we already have a valid token (not expiring soon), do nothing\n    const existing = await getAIJwt();\n    if (existing) {\n      return;\n    }\n\n    // Attempt a fetch to populate cache\n    await getAIJwt();\n  } catch {\n    // no-op\n  }\n};\n\nexport const safeParseJson = async (response: Response): Promise<any> => {\n  try {\n    return await response.json();\n  } catch {\n    try {\n      const text = await response.text();\n\n      return { error: text };\n    } catch {\n      return undefined;\n    }\n  }\n};\n\nexport interface StrapiContextHeaders {\n  strapiVersion?: string | null;\n  projectId?: string | null;\n  userId?: string | null;\n}\n\nconst buildHeaders = (\n  token: string,\n  ctx?: StrapiContextHeaders,\n  extra?: HeadersInit\n): Record<string, string> => {\n  return {\n    Authorization: `Bearer ${token}`,\n    'X-Strapi-Version': ctx?.strapiVersion || 'latest',\n    'X-Strapi-User': ctx?.userId || 'unknown',\n    'X-Strapi-Project-Id': ctx?.projectId || 'unknown',\n    ...(extra as Record<string, string>),\n  };\n};\n\nconst shouldRetryForToken = (status: number, body: any): boolean => {\n  if (status === 401 || status === 403) {\n    return true;\n  }\n\n  const msg = (body?.error || '').toString().toLowerCase();\n  return msg.includes('expired') || msg.includes('invalid token');\n};\n\nexport interface FetchAIOptions extends RequestInit {\n  ctx?: StrapiContextHeaders;\n}\n\n/**\n * Generic fetch wrapper for AI endpoints with token injection and single retry on invalidation\n */\nexport const fetchAI = async (\n  input: RequestInfo | URL,\n  options: FetchAIOptions = {}\n): Promise<Response> => {\n  // Get token\n  const tokenData = await getAIJwt();\n\n  if (!tokenData?.token) {\n    const error = new Error(\n      'Could not authorize with AI Server. Please contact your administrator.'\n    );\n\n    throw error;\n  }\n\n  const make = async (token: string): Promise<Response> => {\n    const headers = buildHeaders(token, options.ctx, options.headers);\n    return fetch(input, {\n      ...options,\n      headers,\n    });\n  };\n\n  let response = await make(tokenData.token);\n\n  let body: unknown | undefined = undefined;\n  try {\n    body = await safeParseJson(response.clone());\n  } catch {\n    // no-op\n  }\n\n  if (shouldRetryForToken(response.status, body)) {\n    clearAIJwt();\n\n    const refreshed = await getAIJwt();\n\n    if (refreshed?.token && refreshed.token !== tokenData.token) {\n      response = await make(refreshed.token);\n    }\n  }\n\n  return response;\n};\n\n/**\n * Factory to provide a fetch implementation compatible with AI SDK useChat\n * that injects AI JWT + Strapi context headers and retries on token invalidation once.\n */\nexport const makeChatFetch = (ctx: StrapiContextHeaders) => {\n  return async (input: RequestInfo | URL, options: RequestInit = {}): Promise<Response> => {\n    return fetchAI(input, { ...options, ctx });\n  };\n};\n", "/* eslint-disable @typescript-eslint/no-namespace */\n\n/**\n * In charge of fetching data from Strapi AI endpoints\n */\n\nimport { useState } from 'react';\n\nimport { UIMessage, useChat } from '@ai-sdk/react';\nimport { useAppInfo } from '@strapi/admin/strapi-admin';\nimport { useGetAIUsageQuery } from '@strapi/admin/strapi-admin/ee';\nimport { DefaultChatTransport } from 'ai';\n\nimport { fetchAI, makeChatFetch, safeParseJson } from '../lib/aiClient';\nimport { STRAPI_AI_CHAT_URL, STRAPI_AI_URL } from '../lib/constants';\nimport { Attachment } from '../lib/types/attachments';\nimport { Schema } from '../lib/types/schema';\n\n/* -------------------------------------------------------------------------------------------------\n * Types\n * -----------------------------------------------------------------------------------------------*/\n/**\n * Chat title\n */\nexport namespace GenerateTitle {\n  export interface Request {\n    body: {\n      chatId: string;\n      message: string;\n    };\n  }\n  export interface Response {\n    data: {\n      title: string;\n    };\n    error?: string;\n  }\n}\n\n/**\n * Upload a project to the chat\n */\nexport namespace UploadProject {\n  export interface Request {\n    body: {\n      chatId: string;\n      name: string;\n      type: 'code';\n      files: {\n        path: string;\n        content: string;\n      }[];\n    };\n  }\n  export interface Response {\n    data: Attachment;\n    error?: string;\n  }\n}\n\n/**\n * Send chat feedback\n */\nexport type FeedbackReasonIds =\n  | 'invalid_schema'\n  | 'bad_recommendation'\n  | 'slow'\n  | 'instructions_ignored'\n  | 'being_lazy'\n  | 'other';\n\nnamespace SendFeedback {\n  export interface Request {\n    body: {\n      chatId: string;\n      type: 'upvote' | 'downvote';\n      feedback?: string;\n      reasons?: FeedbackReasonIds[];\n      messageId: string;\n      messages: UIMessage[];\n      schemas: Schema[];\n    };\n  }\n}\n\n/**\n * Upload media\n */\nexport namespace UploadMedia {\n  export interface Request {\n    body: {\n      url: string; // base64 image\n      filename: string;\n      chatId: string;\n    };\n  }\n  export interface Response {\n    data: Attachment;\n    error?: string;\n  }\n}\n\n/**\n * Collection of API endpoints and their corresponding request/response types\n */\ntype AIEndpoints = {\n  '/schemas/chat/generate-title': {\n    request: GenerateTitle.Request;\n    response: GenerateTitle.Response;\n  };\n  '/schemas/chat/attachment': {\n    request: UploadProject.Request;\n    response: UploadProject.Response;\n  };\n  '/schemas/chat/feedback': {\n    request: SendFeedback.Request;\n    response: void;\n  };\n  '/media/upload': {\n    request: UploadMedia.Request;\n    response: UploadMedia.Response;\n  };\n};\n\n// Helper type to extract the request type for a given endpoint\ntype RequestType<T extends keyof AIEndpoints> = AIEndpoints[T]['request'];\n\n// Helper type to extract the response type for a given endpoint\ntype ResponseType<T extends keyof AIEndpoints> = AIEndpoints[T]['response'];\n\n/* -------------------------------------------------------------------------------------------------\n * Hooks\n * -----------------------------------------------------------------------------------------------*/\n\nexport const TOO_MANY_REQUESTS_ERROR = 'Too many requests';\nexport const LICENSE_LIMIT_REACHED_ERROR = 'License limit';\nexport const LICENSE_LIMIT_EXCEEDED_ERROR = 'AI credit limit exceeded';\nexport const CHAT_TOO_LONG_ERROR = 'Chat too long';\nexport const ATTACHMENT_TOO_BIG_ERROR = 'Attachment too big';\nexport const ATTACHMENT_NOT_FOUND_ERROR = 'Attachment not found';\nexport const INVALID_REQUEST_ERROR = 'Invalid request';\n\n/**\n * Base hook factory for making type-safe API calls to Strapi AI endpoints.\n * Creates a hook specific to a single endpoint.\n */\nexport const createAIFetchHook = <T extends keyof AIEndpoints>(endpoint: T) => {\n  return () => {\n    const strapiVersion = useAppInfo('useAIFetch', (state) => state.strapiVersion);\n    const projectId = useAppInfo('useAIFetch', (state) => state.projectId);\n    const userId = useAppInfo('useAIFetch-user', (state) => state.userId);\n    const aiUsage = useGetAIUsageQuery(undefined, { refetchOnMountOrArgChange: true });\n\n    const [isPending, setIsPending] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    /**\n     * Make a type-safe API call to the specified Strapi AI endpoint with retry logic\n     */\n    const fetchData = async (\n      options: Omit<RequestInit, 'body'> & Partial<RequestType<T>> & { formData?: FormData } = {}\n    ): Promise<ResponseType<T> | null> => {\n      setIsPending(true);\n      setError(null);\n\n      try {\n        const fullUrl = `${STRAPI_AI_URL}${endpoint}`;\n        const isJson = !!options.body && !options.formData;\n\n        const response = await fetchAI(fullUrl, {\n          method: 'POST',\n          headers: isJson\n            ? { 'Content-Type': 'application/json', ...(options.headers || {}) }\n            : options.headers,\n          body: options.formData\n            ? options.formData\n            : isJson\n              ? JSON.stringify(options.body || {})\n              : undefined,\n          ctx: { strapiVersion, projectId, userId },\n        });\n        // refetch ai usage data on every successful request\n        aiUsage.refetch();\n\n        const body = await safeParseJson(response);\n\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        return body as ResponseType<T>;\n      } catch (err) {\n        setError(err instanceof Error ? err.message : `Failed to fetch data from ${endpoint}`);\n        return null;\n      } finally {\n        setIsPending(false);\n      }\n    };\n\n    return {\n      isPending,\n      error,\n      fetch: fetchData,\n    };\n  };\n};\n\n// Create specific hooks for each endpoint\nexport const useFetchGenerateTitle = createAIFetchHook('/schemas/chat/generate-title');\nexport const useFetchUploadProject = createAIFetchHook('/schemas/chat/attachment');\nexport const useFetchSendFeedback = createAIFetchHook('/schemas/chat/feedback');\nexport const useFetchUploadMedia = createAIFetchHook('/media/upload');\n\n/**\n * Hook wrapper for AI SDK's useChat with Strapi-specific configuration\n */\nexport const useAIChat: typeof useChat = (props) => {\n  const strapiVersion = useAppInfo('useAIChat', (state) => state.strapiVersion);\n  const projectId = useAppInfo('useAIFetch', (state) => state.projectId);\n  const userId = useAppInfo('useAIChat-user', (state) => state.userId);\n\n  const customFetch = makeChatFetch({ strapiVersion, projectId, userId });\n\n  return useChat({\n    ...props,\n    transport: new DefaultChatTransport({\n      api: STRAPI_AI_CHAT_URL,\n      fetch: customFetch,\n    }),\n  });\n};\n", "/**\n * Hook that requests a new title based on the first message\n */\nimport { useState, useCallback } from 'react';\n\nimport { useFetchGenerateTitle } from './useAIFetch';\n\nimport type { UIMessage } from '@ai-sdk/react';\n\ninterface UseChatTitleProps {\n  chatId: string;\n  messages: UIMessage[];\n}\n\nexport const useChatTitle = ({ chatId, messages }: UseChatTitleProps) => {\n  const [title, setTitle] = useState<string | undefined>(undefined);\n\n  // Use the endpoint-specific hook\n  const { fetch: fetchGenerateTitle, error, isPending: isGenerating } = useFetchGenerateTitle();\n\n  const generateTitle = useCallback(async () => {\n    const firstMessage = messages.at(0);\n\n    // Only generate title if there are messages and no title yet\n    if (!firstMessage || title || isGenerating || error) {\n      return;\n    }\n\n    const firstMessageContent = firstMessage.parts\n      .map((content) => (content.type === 'text' ? content.text : ''))\n      .join('\\n');\n\n    const result = await fetchGenerateTitle({\n      body: { chatId, message: firstMessageContent },\n    });\n\n    if (result?.data) {\n      setTitle(result.data.title);\n    }\n  }, [messages, title, isGenerating, error, fetchGenerateTitle, chatId]);\n\n  const resetTitle = useCallback(() => {\n    setTitle(undefined);\n  }, []);\n\n  return {\n    title,\n    isGenerating,\n    error,\n    generateTitle,\n    resetTitle,\n  };\n};\n", "import { useState, useEffect, useMemo } from 'react';\n\nimport { useDataManager } from '../../DataManager/useDataManager';\n\ninterface LastSeenSchema {\n  uid: string;\n  type: 'contentType' | 'component';\n  timestamp: number;\n}\n\nconst MAX_HISTORY_SIZE = 1; // Configurable max history size\n\n// Parse URL to extract content type or component information\nconst parseUrlForSchemaInfo = (): {\n  uid: string | null;\n  type: 'contentType' | 'component' | null;\n} => {\n  if (typeof window === 'undefined') {\n    return { uid: null, type: null };\n  }\n\n  const pathname = window.location.pathname;\n\n  // Content type URL pattern: /content-type-builder/content-types/[uid]\n  if (pathname.includes('/content-types/')) {\n    const contentTypeUid = pathname.split('/content-types/')[1];\n    if (contentTypeUid) {\n      return { uid: contentTypeUid, type: 'contentType' };\n    }\n  }\n\n  // Component URL pattern: /component-categories/[category]/[uid]\n  if (pathname.includes('/component-categories/')) {\n    const parts = pathname.split('/component-categories/')[1].split('/');\n    if (parts.length >= 2) {\n      const componentUid = parts[1];\n      return { uid: componentUid, type: 'component' };\n    }\n  }\n\n  return { uid: null, type: null };\n};\n\nexport const useLastSeenSchemas = () => {\n  // Raw tracked schemas (unfiltered)\n  const [rawSchemas, setRawSchemas] = useState<LastSeenSchema[]>([]);\n  const { components, contentTypes } = useDataManager();\n\n  // Update schema history when URL changes\n  useEffect(() => {\n    const handleUrlChange = () => {\n      const { uid, type } = parseUrlForSchemaInfo();\n      if (!uid || !type) return;\n\n      const newSchema: LastSeenSchema = {\n        uid,\n        type,\n        timestamp: Date.now(),\n      };\n\n      setRawSchemas((prevSchemas) => {\n        // Remove existing entry with the same UID if it exists\n        const filteredSchemas = prevSchemas.filter((schema) => schema.uid !== newSchema.uid);\n        // Add new schema to the beginning and limit size\n        return [newSchema, ...filteredSchemas].slice(0, MAX_HISTORY_SIZE);\n      });\n    };\n\n    // Check on initial load\n    handleUrlChange();\n\n    // Set up listeners for navigation\n    window.addEventListener('popstate', handleUrlChange);\n\n    // Custom event to detect SPA navigation\n    const detectRouteChange = () => {\n      let lastPathname = window.location.pathname;\n\n      const interval = setInterval(() => {\n        const currentPathname = window.location.pathname;\n        if (currentPathname !== lastPathname) {\n          lastPathname = currentPathname;\n          handleUrlChange();\n        }\n      }, 300);\n\n      return () => clearInterval(interval);\n    };\n\n    const cleanup = detectRouteChange();\n\n    return () => {\n      window.removeEventListener('popstate', handleUrlChange);\n      cleanup();\n    };\n  }, []);\n\n  // Filtered schemas - updated whenever components or contentTypes change\n  const lastSeenSchemas = useMemo(() => {\n    return rawSchemas.filter((schema) => {\n      if (schema.type === 'contentType') {\n        return Object.keys(contentTypes).some((uid) => uid === schema.uid);\n      }\n      if (schema.type === 'component') {\n        return Object.keys(components).some((uid) => uid === schema.uid);\n      }\n      return false;\n    });\n  }, [rawSchemas, components, contentTypes]);\n\n  // Function to clear history\n  const clearHistory = () => {\n    setRawSchemas([]);\n  };\n\n  return {\n    lastSeenSchemas,\n    clearHistory,\n  };\n};\n", "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\nimport { Schema } from '../../types/schema';\n\nimport type { ContentType, Component, AnyAttribute } from '../../../../../types';\n\nconst transformAttributesFromCTBToChat = (attributes: AnyAttribute[]) => {\n  return attributes.reduce(\n    (acc, attribute) => {\n      const { name, ...rest } = attribute;\n\n      return {\n        ...acc,\n        [name]: rest,\n      };\n    },\n    {} as Record<string, Omit<AnyAttribute, 'name'>>\n  );\n};\n\nexport const transformCTBToChat = (schema: ContentType | Component): Schema => {\n  if (schema.modelType === 'component') {\n    return {\n      category: schema.category,\n      kind: 'component',\n      action: 'create',\n      modelType: 'component',\n      description: schema.info.description,\n      name: schema.info.displayName,\n\n      uid: schema.uid as any,\n      attributes: transformAttributesFromCTBToChat(schema.attributes),\n      // @ts-expect-error - injected from previous ai messages\n      sources: schema.sources,\n    } as any;\n  }\n\n  return {\n    kind: schema.kind,\n    modelType: schema.modelType,\n    description: schema.info.description,\n    action: 'create',\n    name: schema.info.pluralName,\n    uid: schema.uid as any,\n    attributes: transformAttributesFromCTBToChat(schema.attributes),\n    // @ts-expect-error - injected from previous ai messages\n    sources: schema.sources,\n    options: {\n      draftAndPublish: schema.options?.draftAndPublish,\n      localized: false,\n    },\n  } as any;\n};\n", "import {\n  createContext,\n  useContext,\n  useState,\n  ReactNode,\n  Children,\n  isValidElement,\n  FormEvent,\n  useEffect,\n} from 'react';\n\nimport { Modal, Box, Button, Typography } from '@strapi/design-system';\n\n/* -------------------------------------------------------------------------------------------------\n * Context\n * -----------------------------------------------------------------------------------------------*/\n\ninterface StepModalContextType {\n  currentStep: number;\n  goToStep: (step: number) => void;\n  nextStep: () => Promise<boolean>;\n  prevStep: () => void;\n  isFirstStep: boolean;\n  isLastStep: boolean;\n  totalSteps: number;\n  isLoading: boolean;\n  error: Error | null;\n  setError: (error: Error | null) => void;\n}\n\nconst StepModalContext = createContext<StepModalContextType | null>(null);\n\nexport const useStepModal = () => {\n  const context = useContext(StepModalContext);\n  if (!context) {\n    throw new Error('useStepModal must be used within a StepModal');\n  }\n  return context;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * StepModal\n * -----------------------------------------------------------------------------------------------*/\n\ninterface StepModalProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  title?: string;\n  children: ReactNode;\n  onComplete?: () => void;\n  onCancel?: () => void;\n}\n\ninterface StepProps {\n  title?: string;\n  children: ReactNode;\n  nextLabel?: string;\n  cancelLabel?: string;\n  backLabel?: string;\n  disableNext?: boolean;\n  onNext?: () => Promise<boolean> | boolean;\n}\n\nconst StepModal = ({\n  open,\n  onOpenChange,\n  title,\n  children,\n  onComplete,\n  onCancel,\n}: StepModalProps) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const childrenArray = Children.toArray(children)\n    .filter((child): child is React.ReactElement => isValidElement(child))\n    .map((child) => child.props);\n\n  const totalSteps = childrenArray.length;\n  const isFirstStep = currentStep === 0;\n  const isLastStep = currentStep === totalSteps - 1;\n\n  // Reset states when modal opens/closes\n  useEffect(() => {\n    if (!open) {\n      // Reset states when modal is closed\n      setCurrentStep(0);\n      setIsLoading(false);\n      setError(null);\n    }\n  }, [open]);\n\n  const resetStates = () => {\n    setCurrentStep(0);\n    setIsLoading(false);\n    setError(null);\n  };\n\n  const handleCancel = () => {\n    onCancel?.();\n    resetStates();\n    onOpenChange(false);\n  };\n\n  const handleBack = () => {\n    setCurrentStep((prev) => Math.max(0, prev - 1));\n    setError(null);\n  };\n\n  const nextStep = async () => {\n    const currentStepProps = childrenArray[currentStep];\n\n    if (currentStepProps.onNext) {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        if (isLastStep) {\n          onComplete?.();\n          resetStates();\n          onOpenChange(false);\n        } else {\n          await currentStepProps.onNext();\n          setCurrentStep((prev) => prev + 1);\n        }\n        return true;\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error(String(err)));\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    } else {\n      // Default behavior: just move to next step\n      if (isLastStep) {\n        onComplete?.();\n        resetStates();\n        onOpenChange(false);\n      } else {\n        setCurrentStep((prev) => prev + 1);\n      }\n      return true;\n    }\n  };\n\n  // Handle form submission (triggered by Enter key)\n  const handleFormSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    if (!isLoading && !childrenArray[currentStep]?.disableNext) {\n      nextStep();\n    }\n  };\n\n  const contextValue = {\n    currentStep,\n    goToStep: setCurrentStep,\n    nextStep,\n    prevStep: handleBack,\n    isFirstStep,\n    isLastStep,\n    totalSteps,\n    isLoading,\n    error,\n    setError,\n  };\n\n  const currentChild = childrenArray[currentStep];\n\n  return (\n    <StepModalContext.Provider value={contextValue}>\n      {open && (\n        <Modal.Root open onOpenChange={handleCancel}>\n          <Modal.Content>\n            <Modal.Header>\n              <Typography variant=\"omega\" fontWeight=\"bold\">\n                {currentChild?.title || title}\n              </Typography>\n            </Modal.Header>\n\n            <form onSubmit={handleFormSubmit}>\n              <Modal.Body>\n                {Children.toArray(children)[currentStep]}\n\n                {error && (\n                  <Box\n                    marginTop={4}\n                    padding={3}\n                    background=\"danger100\"\n                    color=\"danger600\"\n                    borderRadius=\"4px\"\n                  >\n                    <Typography variant=\"pi\">{error.message}</Typography>\n                  </Box>\n                )}\n              </Modal.Body>\n\n              <Modal.Footer>\n                {isFirstStep ? (\n                  <Button variant=\"tertiary\" onClick={handleCancel} type=\"button\">\n                    {currentChild?.cancelLabel || 'Cancel'}\n                  </Button>\n                ) : (\n                  <Button variant=\"tertiary\" onClick={handleBack} type=\"button\">\n                    {currentChild?.backLabel || 'Back'}\n                  </Button>\n                )}\n\n                <Button\n                  variant=\"default\"\n                  type=\"submit\"\n                  disabled={isLoading || currentChild?.disableNext}\n                  loading={isLoading}\n                >\n                  {currentChild?.nextLabel || (isLastStep ? 'Complete' : 'Next')}\n                </Button>\n              </Modal.Footer>\n            </form>\n          </Modal.Content>\n        </Modal.Root>\n      )}\n    </StepModalContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Step\n * -----------------------------------------------------------------------------------------------*/\n\nconst Step = ({ children }: StepProps) => {\n  return <>{children}</>;\n};\n\nStepModal.Step = Step;\n\nexport { StepModal, Step };\n", "export const generateId = (size: number = 16) => {\n  return crypto.randomUUID().slice(0, size);\n};\n", "import { useCallback } from 'react';\n\nimport { useNotification } from '@strapi/admin/strapi-admin';\n\nimport { STRAPI_MAX_ATTACHMENT_SIZE, STRAPI_MAX_ATTACHMENTS } from '../lib/constants';\nimport { generateId } from '../lib/misc';\nimport { useStrapiChat } from '../providers/ChatProvider';\n\nimport { useFetchUploadMedia } from './useAIFetch';\n\nimport type { Attachment } from '../lib/types/attachments';\n\nexport function useAttachments() {\n  const { setAttachments, attachments, id: chatId } = useStrapiChat();\n  const { toggleNotification } = useNotification();\n\n  const { fetch: fetchUploadMedia } = useFetchUploadMedia();\n\n  /**\n   * Add an attachment directly\n   */\n  const addAttachments = useCallback(\n    (newAttachments: Attachment[]) => {\n      // TODO: Limits\n      if (!newAttachments) return;\n      setAttachments((prev: Attachment[]) => [...prev, ...newAttachments]);\n    },\n    [setAttachments]\n  );\n\n  /**\n   * Update an attachment\n   */\n  const updateAttachment = useCallback(\n    (attachment: { id: string } & Partial<Attachment>) => {\n      setAttachments((prev: Attachment[]) =>\n        prev.map((a) => (a.id === attachment.id ? { ...a, ...attachment } : a))\n      );\n    },\n    [setAttachments]\n  );\n\n  /**\n   * Remove an attachment\n   */\n  const removeAttachment = useCallback(\n    (attachment: Attachment) => {\n      setAttachments((prev: Attachment[]) => prev.filter((a) => a.id !== attachment.id));\n    },\n    [setAttachments]\n  );\n\n  /**\n   * Attach files to the chat\n   */\n  const attachFiles = useCallback(\n    async (newFiles: File[], description?: string) => {\n      // Attachment number limit\n      const attachmentCount = attachments?.length || 0;\n      const attachedFileCount = Array.from(newFiles).length;\n      let limitedFiles: File[] = newFiles;\n\n      if (attachmentCount + attachedFileCount > STRAPI_MAX_ATTACHMENTS) {\n        toggleNotification({\n          type: 'danger',\n          title: 'File limit reached: ',\n          message: `You can only upload up to ${STRAPI_MAX_ATTACHMENTS} files`,\n        });\n\n        // Prune the ones that would exceed the limit\n        const limit = STRAPI_MAX_ATTACHMENTS - attachmentCount;\n        limitedFiles = newFiles.slice(0, limit);\n      }\n\n      // Size limit\n      for (const file of limitedFiles) {\n        if (file.size > STRAPI_MAX_ATTACHMENT_SIZE) {\n          toggleNotification({\n            type: 'danger',\n            title: 'File too large: ',\n            message: 'One of the files is too large (15MB limit)',\n          });\n          // Remove from list\n          limitedFiles = limitedFiles.filter((f) => f !== file);\n        }\n      }\n\n      // Upload\n      for (const file of limitedFiles) {\n        const pendingAttachment: Attachment = {\n          id: generateId(),\n          type: 'file',\n          status: 'loading',\n          filename: file.name,\n          mediaType: file.type,\n          url: '',\n        };\n\n        // Store the attachment as loading\n        setAttachments((prev: Attachment[]) => [...prev, pendingAttachment]);\n\n        // Prepare form data\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('fileInfo', JSON.stringify({ name: file.name, chatId: chatId }));\n\n        // Upload file\n        fetchUploadMedia({ formData })\n          .then((result) => {\n            const attachment = result?.data;\n\n            // Remove attachment if there is an error\n            if (!result || result.error) {\n              toggleNotification({\n                type: 'danger',\n                title: 'Failed to upload file: ',\n                message: result?.error || 'Unknown error',\n                timeout: 5000,\n              });\n              removeAttachment(pendingAttachment);\n              return;\n            }\n\n            // Update the pending attachment\n            updateAttachment({\n              id: pendingAttachment.id,\n              url: attachment?.url || '',\n              status: 'ready',\n            });\n          })\n          .catch(() => removeAttachment(pendingAttachment));\n      }\n\n      if (description) {\n        toggleNotification({\n          title: 'Files attached',\n          message: description,\n        });\n      }\n    },\n    [\n      attachments,\n      setAttachments,\n      toggleNotification,\n      chatId,\n      fetchUploadMedia,\n      removeAttachment,\n      updateAttachment,\n    ]\n  );\n\n  /**\n   * Remove an attachment by index\n   */\n  const removeAttachmentByIndex = useCallback(\n    (index: number) => {\n      if (!attachments) return;\n      setAttachments(attachments.filter((_, i) => i !== index));\n    },\n    [setAttachments, attachments]\n  );\n\n  return { attachments, attachFiles, addAttachments, removeAttachment, removeAttachmentByIndex };\n}\n", "import { useState } from 'react';\n\nimport JSZip from 'jszip';\nimport micromatch from 'micromatch';\n\nimport { generateId } from '../lib/misc';\nimport { Attachment } from '../lib/types/attachments';\nimport { useStrapiChat } from '../providers/ChatProvider';\n\nimport { useFetchUploadProject } from './useAIFetch';\n\nexport interface ProjectFile {\n  path: string;\n  content: string;\n}\n\nconst ALLOWED_EXTENSIONS = ['.ts', '.tsx', '.js', '.jsx', '.md', '.json'];\nconst MAX_LINES_PER_FILE = 5000; // Maximum number of lines per file\n\n// Common patterns to ignore\nconst DEFAULT_IGNORE_PATTERNS = [\n  '**/node_modules/**',\n  '**/.git/**',\n  '**/.next/**',\n  '**/dist/**',\n  '**/build/**',\n  '**/.cache/**',\n  '**/coverage/**',\n  '**/test/**',\n  '**/__tests__/**',\n  '**/*.test.*',\n  '**/*.spec.*',\n];\n\nconst isAllowedFile = (filename: string, ignorePatterns: string[] = []) => {\n  // Check if file matches any ignore pattern\n  if (micromatch.isMatch(filename, [...DEFAULT_IGNORE_PATTERNS, ...ignorePatterns])) {\n    return false;\n  }\n\n  // Check if file has allowed extension\n  return ALLOWED_EXTENSIONS.some((ext) => filename.toLowerCase().endsWith(ext));\n};\n\n/**\n * Prunes file content if it exceeds MAX_LINES\n */\nconst pruneFileContent = (content: string): string => {\n  const lines = content.split('\\n');\n\n  if (lines.length <= MAX_LINES_PER_FILE) {\n    return content;\n  }\n\n  const truncated = lines.slice(0, MAX_LINES_PER_FILE).join('\\n');\n\n  return `${truncated}\\n\\n// ... [${lines.length - MAX_LINES_PER_FILE} lines truncated, file too long] ...\\n\\n`;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * File processing options\n * -----------------------------------------------------------------------------------------------*/\nexport interface ProcessOptions {\n  /**\n   * Additional glob patterns to ignore\n   */\n  ignorePatterns?: string[];\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Zip file processing\n * -----------------------------------------------------------------------------------------------*/\nexport async function openZipFile(\n  file: File,\n  options: ProcessOptions = {}\n): Promise<ProjectFile[]> {\n  const zip = new JSZip();\n  const contents = await zip.loadAsync(file);\n  const processedFiles: ProjectFile[] = [];\n\n  // Process all files in parallel\n  await Promise.all(\n    Object.keys(contents.files).map(async (filename) => {\n      const zipEntry = contents.files[filename];\n\n      // Skip directories and non-allowed files\n      if (zipEntry.dir || !isAllowedFile(filename, options.ignorePatterns)) {\n        return;\n      }\n\n      try {\n        const content = await zipEntry.async('string');\n        processedFiles.push({\n          path: filename,\n          content: pruneFileContent(content),\n        });\n      } catch (err) {\n        console.warn(`Failed to read file ${filename}:`, err);\n      }\n    })\n  );\n\n  // Sort files by path for consistency\n  return processedFiles.sort((a, b) => a.path.localeCompare(b.path));\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Folder processing\n * -----------------------------------------------------------------------------------------------*/\nexport async function processFolder(\n  files: FileList | File[],\n  options: ProcessOptions = {}\n): Promise<{ files: ProjectFile[]; projectName: string }> {\n  const processedFiles: ProjectFile[] = [];\n  let folderName = 'Project';\n\n  // Extract folder name from the first file's path\n  if (files.length > 0) {\n    const firstFile = files[0];\n    const folderPath = firstFile.webkitRelativePath || '';\n    const pathParts = folderPath.split('/');\n    if (pathParts.length > 0 && pathParts[0]) {\n      folderName = pathParts[0];\n    }\n  }\n\n  // Process all files in parallel\n  await Promise.all(\n    Array.from(files).map(async (file) => {\n      const filePath = file.webkitRelativePath || file.name;\n\n      // Skip non-allowed files\n      if (!isAllowedFile(filePath, options.ignorePatterns)) {\n        return;\n      }\n\n      try {\n        const content = await file.text();\n        processedFiles.push({\n          // Remove the root folder name from the path\n          path: filePath.includes('/') ? filePath.substring(filePath.indexOf('/') + 1) : filePath,\n          content: pruneFileContent(content),\n        });\n      } catch (err) {\n        console.warn(`Failed to read file ${filePath}:`, err);\n      }\n    })\n  );\n\n  // Sort files by path for consistency\n  return {\n    files: processedFiles.sort((a, b) => a.path.localeCompare(b.path)),\n    projectName: folderName,\n  };\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Zip file processing\n * -----------------------------------------------------------------------------------------------*/\nexport async function processZipFile(\n  file: File,\n  options: ProcessOptions = {}\n): Promise<{ files: ProjectFile[]; projectName: string }> {\n  const projectName = file.name.replace('.zip', '');\n  const files = await openZipFile(file, options);\n\n  return {\n    files,\n    projectName,\n  };\n}\n\n/* -------------------------------------------------------------------------------------------------\n * Upload files\n * -----------------------------------------------------------------------------------------------*/\n\ninterface UseCodeUploadOptions {\n  onSuccess?: (attachment: Attachment, projectName: string) => void;\n  onError?: (error: string) => void;\n}\n\nexport function useCodeUpload({ onSuccess, onError }: UseCodeUploadOptions = {}) {\n  const [error, setError] = useState<string | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const {\n    fetch: fetchUploadProject,\n    isPending: isFetching,\n    error: fetchError,\n  } = useFetchUploadProject();\n  const { id: chatId } = useStrapiChat();\n\n  /**\n   * Upload processed files to the server\n   */\n  const processFiles = async (projectName: string, processedFiles: ProjectFile[]) => {\n    // Upload to server\n    const result = await fetchUploadProject({\n      body: {\n        chatId,\n        name: projectName,\n        type: 'code',\n        files: processedFiles,\n      },\n    });\n\n    if (!result?.data) {\n      throw new Error('Failed to upload project');\n    }\n\n    return result.data;\n  };\n\n  const handleZipFile = async (file: File) => {\n    try {\n      setError(null);\n      setIsProcessing(true);\n\n      const { files: processedFiles, projectName } = await processZipFile(file, {\n        ignorePatterns: ['**/node_modules/**'],\n      });\n\n      const projectAttachment = await processFiles(projectName, processedFiles);\n\n      onSuccess?.({ ...projectAttachment, id: generateId(), status: 'ready' }, projectName);\n      return projectAttachment;\n    } catch (err) {\n      setError('Failed to process zip file');\n      onError?.('Failed to process zip file');\n      console.error('Error processing zip:', err);\n      throw err;\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleFolder = async (files: FileList | File[]) => {\n    try {\n      setError(null);\n      setIsProcessing(true);\n\n      const { files: processedFiles, projectName } = await processFolder(files, {\n        ignorePatterns: ['**/node_modules/**'],\n      });\n\n      const projectAttachment = await processFiles(projectName, processedFiles);\n\n      onSuccess?.({ ...projectAttachment, id: generateId(), status: 'ready' }, projectName);\n      return projectAttachment;\n    } catch (err) {\n      setError('Failed to process folder');\n      onError?.('Failed to process folder');\n      console.error('Error processing folder:', err);\n      throw err;\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return {\n    processZipFile: handleZipFile,\n    processFolder: handleFolder,\n    isLoading: isProcessing || isFetching,\n    error: fetchError || error,\n  };\n}\n", "import { useIntl } from 'react-intl';\n\nexport const useTranslations = () => {\n  const { formatMessage } = useIntl();\n\n  const t = (id: string, defaultMessage?: string) => {\n    return formatMessage({ id, defaultMessage });\n  };\n\n  return { t };\n};\n", "import { createContext, useContext, useRef, useState } from 'react';\n\nimport { Flex, Typography, Box } from '@strapi/design-system';\nimport { Folder, FileZip } from '@strapi/icons';\n\nimport { AttachmentPreview } from './components/Attachments/AttachmentPreview';\nimport { StepModal, useStepModal } from './components/StepModal';\nimport { useAttachments } from './hooks/useAttachments';\nimport { useCodeUpload } from './hooks/useCodeUpload';\nimport { useTranslations } from './hooks/useTranslations';\nimport { STRAPI_CODE_MIME_TYPE } from './lib/constants';\nimport { generateId } from './lib/misc';\nimport { Attachment } from './lib/types/attachments';\nimport { useStrapiChat } from './providers/ChatProvider';\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\ninterface UploadProjectContextType {\n  isCodeUploadOpen: boolean;\n  submitOnFinish: boolean;\n  openCodeUpload: (submitOnFinish?: boolean) => void;\n  closeCodeUpload: () => void;\n}\n\nconst UploadProjectContext = createContext<UploadProjectContextType>({\n  isCodeUploadOpen: false,\n  submitOnFinish: false,\n  openCodeUpload: () => {},\n  closeCodeUpload: () => {},\n});\n\nexport const useUploadProjectToChat = () => useContext(UploadProjectContext);\n\nexport const UploadProjectToChatProvider = ({ children }: { children: React.ReactNode }) => {\n  const [isCodeUploadOpen, setIsCodeUploadOpen] = useState(false);\n  const [submitOnFinish, setSubmitOnFinish] = useState(false);\n\n  const openCodeUpload = (submitOnFinish?: boolean) => {\n    setIsCodeUploadOpen(true);\n    setSubmitOnFinish(submitOnFinish ?? false);\n  };\n\n  const closeCodeUpload = () => setIsCodeUploadOpen(false);\n\n  return (\n    <UploadProjectContext.Provider\n      value={{ isCodeUploadOpen, submitOnFinish, openCodeUpload, closeCodeUpload }}\n    >\n      {isCodeUploadOpen && <UploadCodeModal />}\n      {children}\n    </UploadProjectContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Drop Zone\n * -----------------------------------------------------------------------------------------------*/\ninterface DropZoneProps {\n  importType: 'folder' | 'zip';\n  onAddFiles: (files: File[]) => void;\n  error?: string | null;\n}\n\nconst DropZone = ({ importType, onAddFiles, error }: DropZoneProps) => {\n  const [dragOver, setDragOver] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { t } = useTranslations();\n\n  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n  };\n\n  const handleDragEnter = (event: React.DragEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setDragOver(true);\n  };\n\n  const handleDragLeave = () => setDragOver(false);\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    inputRef.current?.click();\n  };\n\n  const handleChange = () => {\n    const files = inputRef.current?.files;\n    if (files) {\n      onAddFiles(Array.from(files));\n    }\n  };\n\n  /**\n   * Recursively reads a directory and its contents\n   */\n  const readDirectory = async (entry: FileSystemDirectoryEntry): Promise<File[]> => {\n    const reader = entry.createReader();\n    const getEntries = (): Promise<FileSystemEntry[]> => {\n      return new Promise((resolve, reject) => {\n        reader.readEntries(resolve, reject);\n      });\n    };\n\n    const files: File[] = [];\n    let entries: FileSystemEntry[] = [];\n\n    // Read entries in batches until no more entries are left\n    do {\n      entries = await getEntries();\n      for (const entry of entries) {\n        if (entry.isFile) {\n          const fileEntry = entry as FileSystemFileEntry;\n          const file = await new Promise<File>((resolve, reject) => {\n            fileEntry.file(resolve, reject);\n          });\n\n          // Store the full path including the directory structure\n          Object.defineProperty(file, 'webkitRelativePath', {\n            writable: true,\n            value: entry.fullPath.substring(1), // Remove leading slash\n          });\n\n          files.push(file);\n        } else if (entry.isDirectory) {\n          // Recursively process subdirectories\n          const dirEntry = entry as FileSystemDirectoryEntry;\n          const subFiles = await readDirectory(dirEntry);\n          files.push(...subFiles);\n        }\n      }\n    } while (entries.length > 0);\n\n    return files;\n  };\n\n  const handleDrop = async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setDragOver(false);\n\n    if (!e.dataTransfer?.items) {\n      return;\n    }\n\n    // For folder upload, process directories recursively\n    if (importType === 'folder') {\n      const items = e.dataTransfer.items;\n      const allFiles: File[] = [];\n\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        // Use webkitGetAsEntry to access the file system entry\n        const entry = item.webkitGetAsEntry?.();\n\n        if (entry) {\n          if (entry.isDirectory) {\n            const files = await readDirectory(entry as FileSystemDirectoryEntry);\n            allFiles.push(...files);\n          } else if (entry.isFile) {\n            const file = await new Promise<File>((resolve, reject) => {\n              (entry as FileSystemFileEntry).file(resolve, reject);\n            });\n            allFiles.push(file);\n          }\n        }\n      }\n\n      if (allFiles.length > 0) {\n        onAddFiles(allFiles);\n      }\n    } else {\n      // For zip files, just import them regularly\n      if (e.dataTransfer.files) {\n        onAddFiles(Array.from(e.dataTransfer.files));\n      }\n    }\n  };\n\n  return (\n    <Flex\n      position=\"relative\"\n      cursor=\"pointer\"\n      width=\"100%\"\n      height=\"100%\"\n      minHeight=\"140px\"\n      borderStyle=\"dashed\"\n      borderColor={dragOver ? 'primary500' : error ? 'danger600' : 'neutral200'}\n      background={dragOver ? 'primary100' : error ? 'danger100' : 'neutral100'}\n      hasRadius\n      padding={7}\n      justifyContent=\"center\"\n      direction=\"column\"\n      alignItems=\"center\"\n      gap={2}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      {importType === 'zip' ? (\n        <FileZip width={'24px'} height={'24px'} />\n      ) : (\n        <Folder width={'24px'} height={'24px'} />\n      )}\n      <Flex direction=\"column\" alignItems=\"center\" gap={2}>\n        <Typography variant=\"omega\" textColor=\"neutral600\" textAlign=\"center\">\n          {importType === 'zip'\n            ? t('chat.code-upload.drop-zone', 'Drop here a .zip file here or')\n            : t('chat.code-upload.drop-zone-folder', 'Drop here a folder here or')}{' '}\n          <Typography variant=\"omega\" textColor=\"primary600\" onClick={handleClick}>\n            {t('chat.code-upload.drop-zone-browse', 'browse files')}\n          </Typography>\n        </Typography>\n        {error && (\n          <Typography variant=\"pi\" textColor=\"danger600\">\n            {error}\n          </Typography>\n        )}\n      </Flex>\n      <Box\n        tag=\"input\"\n        position=\"absolute\"\n        left={0}\n        right={0}\n        bottom={0}\n        top={0}\n        width=\"100%\"\n        name=\"code\"\n        aria-label=\"Upload project\"\n        tabIndex={-1}\n        zIndex={1}\n        ref={inputRef}\n        onChange={handleChange}\n        style={{ opacity: 0, cursor: 'pointer' }}\n        type=\"file\"\n        {...(importType === 'zip'\n          ? { accept: '.zip', multiple: false }\n          : { multiple: true, webkitdirectory: '', directory: '' })}\n      />\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Step 1 - Upload Code\n * -----------------------------------------------------------------------------------------------*/\ninterface CodeUploadStepProps {\n  setFileName: (name: string | null) => void;\n  error: string | null;\n  processZipFile: (file: File) => void;\n  processFolder: (files: File[]) => Promise<Attachment>;\n}\n\nconst CodeUploadStep = ({\n  setFileName,\n  error,\n  processZipFile,\n  processFolder,\n}: CodeUploadStepProps) => {\n  const { t } = useTranslations();\n  const { nextStep } = useStepModal();\n\n  return (\n    <Flex direction=\"column\" gap={6} alignItems=\"start\" width=\"100%\">\n      <Flex direction=\"column\" gap={2} alignItems=\"start\">\n        <Typography variant=\"beta\">{t('chat.code-upload.title', 'Import code')}</Typography>\n        <Typography variant=\"omega\" textColor=\"neutral600\">\n          {t(\n            'chat.code-upload.description',\n            'Your app will be analyzed by AI. Make sure to remove all sensitive data before importation.'\n          )}\n        </Typography>\n      </Flex>\n\n      <Flex gap={3} width=\"100%\" wrap=\"wrap\">\n        <Box flex={1} minWidth=\"200px\">\n          <DropZone\n            importType=\"zip\"\n            onAddFiles={(files: FileList | File[]) => {\n              if (files.length > 0) {\n                const file = files[0];\n                setFileName(file.name.replace('.zip', ''));\n                nextStep();\n                processZipFile(file);\n              }\n            }}\n            error={error}\n          />\n        </Box>\n        <Box flex={1} minWidth=\"200px\">\n          <DropZone\n            importType=\"folder\"\n            onAddFiles={async (files: File[]) => {\n              if (files.length > 0) {\n                try {\n                  // Get the folder name from the first file's path\n                  const firstFile = files[0];\n                  const folderPath = firstFile.webkitRelativePath || '';\n                  const folderName = folderPath.split('/')[0] || 'Project';\n\n                  setFileName(folderName);\n                  nextStep();\n\n                  // Process the folder files\n                  await processFolder(files);\n                } catch (err) {\n                  console.error('Error processing folder:', err);\n                }\n              }\n            }}\n            error={error}\n          />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Step 2 - Confirmation\n * -----------------------------------------------------------------------------------------------*/\ninterface CodeConfirmationStepProps {\n  projectName: string | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst CodeConfirmationStep = ({ projectName, isLoading, error }: CodeConfirmationStepProps) => {\n  const { t } = useTranslations();\n\n  return (\n    <Flex direction=\"column\" gap={6} alignItems=\"start\" width=\"100%\">\n      <Flex direction=\"column\" gap={2} alignItems=\"start\">\n        <Typography variant=\"beta\">\n          {t('chat.code-upload.confirmation-title', 'Confirm Code Import')}\n        </Typography>\n        <Typography variant=\"omega\" textColor=\"neutral600\">\n          {t(\n            'chat.code-upload.confirmation-description',\n            'Your code is ready to be imported. Click finish to add it to your chat.'\n          )}\n        </Typography>\n      </Flex>\n\n      <Box width=\"100%\">\n        <AttachmentPreview\n          attachment={{\n            id: generateId(),\n            status: isLoading ? 'loading' : 'ready',\n            filename: projectName || '',\n            url: '',\n            type: 'file',\n            mediaType: STRAPI_CODE_MIME_TYPE,\n          }}\n          error={error}\n          minWidth=\"256px\"\n        />\n      </Box>\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Modal\n * -----------------------------------------------------------------------------------------------*/\nexport const UploadCodeModal = () => {\n  const [projectName, setProjectName] = useState<string | null>(null);\n  const [projectAttachment, setProjectAttachment] = useState<Attachment | null>(null);\n  const { t } = useTranslations();\n\n  // Attach files to the chat\n  const { addAttachments } = useAttachments();\n\n  const { processZipFile, processFolder, isLoading, error } = useCodeUpload({\n    onSuccess: (file) => setProjectAttachment(file),\n  });\n\n  const { isCodeUploadOpen, closeCodeUpload, submitOnFinish } = useUploadProjectToChat();\n  const { sendMessage, openChat, input, setInput } = useStrapiChat();\n\n  const handleCancel = () => {\n    setProjectName(null);\n    setProjectAttachment(null);\n    closeCodeUpload();\n  };\n\n  const handleComplete = async () => {\n    // Ensure chat is opened\n    openChat();\n\n    if (projectAttachment && submitOnFinish) {\n      sendMessage({\n        role: 'user',\n        parts: [\n          {\n            type: 'text',\n            text: 'Create schemas from my uploaded project',\n          },\n          projectAttachment,\n        ],\n      });\n    } else if (projectAttachment) {\n      // If input is empty, set a predefined message\n      if (!input) {\n        setInput('Create schemas from my uploaded project');\n      }\n      // Attach files to the chat input\n      addAttachments([projectAttachment]);\n    }\n\n    closeCodeUpload();\n  };\n\n  const validateUploadStep = () => {\n    return !!projectAttachment;\n  };\n\n  return (\n    <StepModal\n      open={isCodeUploadOpen}\n      onOpenChange={(isOpen) => {\n        if (!isOpen) handleCancel();\n      }}\n      title={t('chat.code-upload.header', 'Import code')}\n      onCancel={handleCancel}\n      onComplete={handleComplete}\n    >\n      <StepModal.Step\n        title={t('chat.code-upload.step1-title', 'Import code')}\n        nextLabel={t('chat.code-upload.continue-button', 'Continue')}\n        cancelLabel={t('common.cancel', 'Cancel')}\n        disableNext={!projectAttachment || isLoading}\n        onNext={validateUploadStep}\n      >\n        <CodeUploadStep\n          setFileName={setProjectName}\n          error={error}\n          processZipFile={processZipFile}\n          processFolder={processFolder}\n        />\n      </StepModal.Step>\n\n      <StepModal.Step\n        title={t('chat.code-upload.step2-title', 'Confirm')}\n        nextLabel={t('common.finish', 'Finish')}\n        backLabel={t('form.button.back', 'Back')}\n        disableNext={!projectAttachment || isLoading}\n      >\n        <CodeConfirmationStep projectName={projectName} isLoading={isLoading} error={error} />\n      </StepModal.Step>\n    </StepModal>\n  );\n};\n", "import {\n  Box,\n  Card,\n  CardBody,\n  CardCheckbox,\n  CardContent,\n  CardHeader,\n  CardAction,\n  CardTitle,\n  IconButton,\n} from '@strapi/design-system';\nimport { Expand } from '@strapi/icons';\nimport { styled } from 'styled-components';\n\nimport { ANIMATIONS } from './animations';\nimport { Base64Img } from './Base64Image';\nimport { FullScreenImage } from './FullScreenImage';\n\ninterface Base64ImageProps {\n  imageUrl: string;\n  imageName: string;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nconst ImageContainer = styled(Box)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 160px;\n  width: 100%;\n  border-radius: 4px 4px 0 0;\n  overflow: hidden;\n  cursor: pointer;\n`;\n\nconst StyledImg = styled(Base64Img)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n  // make it appear gracefully when first rendering\n  animation: ${ANIMATIONS.fadeIn} 0.3s ease;\n`;\n\nconst CardContainer = styled(Card)<{ $selected?: boolean }>`\n  height: 100%;\n  width: 100%;\n  ${({ $selected, theme }) =>\n    $selected\n      ? `\n      border: 2px solid ${theme.colors.primary600};\n      outline: 0px solid transparent;\n    `\n      : `\n      border: 2px solid transparent;\n      outline: 1px solid ${theme.colors.neutral200};\n    `}\n  transition: all 0.2s ease-in-out;\n`;\n\nexport const ImagePreview = ({\n  imageUrl,\n  imageName,\n  selected = false,\n  onSelect,\n}: Base64ImageProps) => {\n  return (\n    <FullScreenImage.Root src={imageUrl} alt={imageName}>\n      <CardContainer role=\"button\" $selected={selected}>\n        <CardHeader>\n          <CardCheckbox checked={selected} onCheckedChange={onSelect} />\n          <CardAction position=\"end\">\n            <FullScreenImage.Trigger>\n              <IconButton label=\"Preview\" type=\"button\">\n                <Expand />\n              </IconButton>\n            </FullScreenImage.Trigger>\n          </CardAction>\n          <ImageContainer onClick={onSelect}>\n            <StyledImg src={imageUrl} alt={imageName} />\n          </ImageContainer>\n        </CardHeader>\n\n        <CardBody>\n          <CardContent>\n            <CardTitle>{imageName}</CardTitle>\n          </CardContent>\n        </CardBody>\n      </CardContainer>\n    </FullScreenImage.Root>\n  );\n};\n", "import { useState } from 'react';\n\nimport type { Attachment } from '../lib/types/attachments';\n\n/**================================================================================\n * Constants\n *================================================================================*/\nexport const FIGMA_TOKEN_STORAGE_KEY = 'strapi-ai-figma-token';\n\n/**================================================================================\n * Types\n *================================================================================*/\nexport interface FigmaNodeData {\n  id: string;\n  name: string;\n  type: string;\n  children?: FigmaNodeData[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any; // For other properties that Figma nodes may have\n}\n\nexport interface FigmaFileData {\n  document: FigmaNodeData;\n  schemaVersion: number;\n  name: string;\n  lastModified: string;\n  thumbnailUrl: string;\n  version: string;\n  role: string;\n}\n\nexport interface FigmaImage extends Attachment {}\n\ninterface UseFigmaUploadOptions {\n  onSuccess?: (attachments: FigmaImage[]) => void;\n  onError?: (error: string) => void;\n}\n\n/**================================================================================\n * Token Storage Utils\n *================================================================================*/\n\n/**\n * Get Figma token from localStorage\n */\nexport const getFigmaToken = (): string => {\n  try {\n    return localStorage.getItem(FIGMA_TOKEN_STORAGE_KEY) || '';\n  } catch (error) {\n    console.error('Error accessing localStorage:', error);\n    return '';\n  }\n};\n\n/**\n * Save Figma token to localStorage\n */\nexport const saveFigmaToken = (token: string): void => {\n  try {\n    localStorage.setItem(FIGMA_TOKEN_STORAGE_KEY, token);\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n  }\n};\n\n/**\n * Check if Figma token exists in localStorage\n */\nexport const hasFigmaToken = (): boolean => {\n  return !!getFigmaToken();\n};\n\n/**================================================================================\n * Utils\n *================================================================================*/\n\n/**\n * Extract file key and node ID from Figma URL\n * @param figmaUrl - Figma URL (e.g., https://www.figma.com/file/KEY/Title)\n */\nconst extractNodeFromFigmaUrl = (figmaUrl: string) => {\n  const figmaUrlPattern = /figma\\.com\\/(?:file|design)\\/([a-zA-Z0-9]+)\\/.*[?&]node-id=([^&]+)/;\n  const match = figmaUrl.match(figmaUrlPattern);\n\n  if (!match) {\n    throw new Error('Invalid Figma URL');\n  }\n\n  const fileKey = match[1];\n  const nodeId = decodeURIComponent(match[2]).replace(/-/g, ':');\n\n  return { fileKey, nodeId };\n};\n\n/**\n * Get token and validate it's available\n * @throws Error if token is not available\n */\nconst getValidToken = (): string => {\n  const token = getFigmaToken();\n  if (!token) {\n    throw new Error('Figma API token is required');\n  }\n  return token;\n};\n\n/**\n * Fetch Figma file data using the API\n * @param fileKey - Figma file key\n * @param nodeId - Figma node ID\n */\nconst fetchFigmaNode = async (fileKey: string, nodeId: string): Promise<FigmaFileData> => {\n  const token = getValidToken();\n\n  try {\n    const apiUrl = `https://api.figma.com/v1/files/${fileKey}/nodes?ids=${nodeId}`;\n\n    const response = await fetch(apiUrl, {\n      headers: {\n        'X-Figma-Token': token,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Figma API error: ${response.status} ${response.statusText}`);\n    }\n\n    const nodes = await response.json();\n\n    return nodes.nodes[nodeId];\n  } catch (err) {\n    const errorMessage = err instanceof Error ? err.message : 'Failed to fetch Figma data';\n    throw new Error(errorMessage);\n  }\n};\n\n/**\n * Recursively searches the node tree for FRAME nodes.\n * It stops searching within a branch once a FRAME is found.\n * @param node - The current FigmaNodeData to inspect.\n */\ninterface FrameInfo {\n  id: string;\n  name: string;\n}\n\nconst findFramesInNode = (node: FigmaNodeData): FrameInfo[] => {\n  const frames: FrameInfo[] = [];\n  if (node.type === 'FRAME') {\n    frames.push({\n      id: node.id,\n      name: node.name,\n    });\n    return frames;\n  }\n\n  if (node.children && node.children.length > 0) {\n    for (const child of node.children) {\n      // Continue searching in children if the current node is not a FRAME\n      frames.push(...findFramesInNode(child));\n    }\n  }\n\n  return frames;\n};\n\n/**\n * Fetch images for specific nodes from the Figma API\n * @param fileKey - Figma file key\n * @param nodeIds - Array of node IDs to render\n */\nconst fetchFigmaNodeImages = async (\n  fileKey: string,\n  nodeIds: string[]\n): Promise<{ images: Record<string, string> }> => {\n  const token = getValidToken();\n\n  if (nodeIds.length === 0) {\n    return { images: {} };\n  }\n  try {\n    // Max 50 node IDs per request according to Figma API docs\n    // We might need to chunk requests if nodeIds is very large\n    const idsQueryParam = nodeIds.slice(0, 50).join(',');\n    const apiUrl = `https://api.figma.com/v1/images/${fileKey}?ids=${idsQueryParam}&format=png&scale=0.4`;\n\n    const response = await fetch(apiUrl, {\n      headers: { 'X-Figma-Token': token },\n    });\n\n    if (!response.ok) {\n      const errorData = await response.text();\n      throw new Error(\n        `Figma API image error: ${response.status} ${response.statusText} - ${errorData}`\n      );\n    }\n\n    const result = await response.json();\n    if (result.err) {\n      throw new Error(`Figma API image error: ${result.err}`);\n    }\n\n    return result as { images: Record<string, string> };\n  } catch (err) {\n    const errorMessage = err instanceof Error ? err.message : 'Failed to fetch Figma node images';\n    throw new Error(errorMessage);\n  }\n};\n\n/**================================================================================\n * Hooks\n *================================================================================*/\nexport function useFigmaUpload({ onSuccess, onError }: UseFigmaUploadOptions = {}) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  /**\n   * Main method to process a Figma URL\n   * @param figmaUrl - Figma URL to process\n   */\n  const processFigmaUrl = async (figmaUrl: string) => {\n    try {\n      // Check if token exists before proceeding\n      if (!hasFigmaToken()) {\n        const errorMessage = 'Figma API token is required';\n        setError(errorMessage);\n        onError?.(errorMessage);\n        throw new Error(errorMessage);\n      }\n\n      setIsLoading(true);\n      setError(null);\n\n      // 1. Extract file key from URL\n      const { fileKey, nodeId: selectedNode } = extractNodeFromFigmaUrl(figmaUrl);\n\n      // 2. Fetch base data from Figma API to get structure\n      const figmaData = await fetchFigmaNode(fileKey, selectedNode);\n      if (!figmaData.document) return;\n\n      // 3. Find frame nodes with their names\n      const frames = findFramesInNode(figmaData.document);\n      // Create a map of ID to name for later use\n      const frameNameMap = new Map(frames.map((frame) => [frame.id, frame.name]));\n      // Get just the IDs for the API call\n      const frameIds = frames.map((frame) => frame.id);\n\n      // 4. Fetch images for the identified nodes\n      const imageResponse = await fetchFigmaNodeImages(fileKey, frameIds);\n      const images = imageResponse.images;\n\n      // Use the name from our map instead of just the ID\n      const figmaImages = Object.entries(images).map(\n        ([id, url]) =>\n          ({\n            id,\n            type: 'file',\n            filename: frameNameMap.get(id),\n            mediaType: 'image/png',\n            url,\n            status: 'ready',\n          }) satisfies FigmaImage\n      );\n\n      onSuccess?.(figmaImages);\n      return figmaImages;\n    } catch (err) {\n      const errorMessage =\n        err instanceof Error ? err.message : 'Unknown error processing Figma URL';\n      setError(errorMessage);\n      onError?.(errorMessage);\n      console.error('Error processing Figma URL:', err);\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    processFigmaUrl,\n    isLoading: isLoading,\n    error: error,\n  };\n}\n", "import { createContext, useContext, useState } from 'react';\n\nimport { Flex, Typography, Box, TextInput, Grid, Button, Link } from '@strapi/design-system'; // Added Link\n\nimport { ImagePreview } from './components/ImagePreview';\nimport { StepModal, useStepModal } from './components/StepModal';\nimport { useAttachments } from './hooks/useAttachments';\nimport {\n  FigmaImage,\n  useFigmaUpload,\n  getFigmaToken,\n  saveFigmaToken,\n  hasFigmaToken,\n} from './hooks/useFigmaUpload';\nimport { useTranslations } from './hooks/useTranslations';\nimport { useStrapiChat } from './providers/ChatProvider';\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\ninterface UploadFigmaContextType {\n  isFigmaUploadOpen: boolean;\n  submitOnFinish: boolean;\n  openFigmaUpload: (submitOnFinish?: boolean) => void;\n  closeFigmaUpload: () => void;\n}\n\nconst UploadFigmaContext = createContext<UploadFigmaContextType>({\n  isFigmaUploadOpen: false,\n  submitOnFinish: false,\n  openFigmaUpload: () => {},\n  closeFigmaUpload: () => {},\n});\n\nexport const useUploadFigmaToChat = () => {\n  const context = useContext(UploadFigmaContext);\n  if (!context) {\n    throw new Error('useUploadFigmaToChat must be used within an UploadFigmaToChatProvider');\n  }\n  return context;\n};\n\nexport const UploadFigmaToChatProvider = ({ children }: { children: React.ReactNode }) => {\n  const [isFigmaUploadOpen, setIsFigmaUploadOpen] = useState(false); // Default to false\n  const [submitOnFinish, setSubmitOnFinish] = useState(false);\n\n  const openFigmaUpload = (submitOnFinishParam?: boolean) => {\n    setIsFigmaUploadOpen(true);\n    setSubmitOnFinish(submitOnFinishParam ?? false);\n  };\n\n  const closeFigmaUpload = () => setIsFigmaUploadOpen(false);\n\n  return (\n    <UploadFigmaContext.Provider\n      value={{ isFigmaUploadOpen, submitOnFinish, openFigmaUpload, closeFigmaUpload }}\n    >\n      {isFigmaUploadOpen && <UploadFigmaModal />}\n      {children}\n    </UploadFigmaContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Step 1 - Input Figma URL\n * -----------------------------------------------------------------------------------------------*/\n\ninterface FigmaUrlInputStepProps {\n  figmaUrl: string;\n  setFigmaUrl: (url: string) => void;\n  error: string | null; // Error state from useFigmaUpload\n}\n\nconst FigmaUrlInputStep = ({ figmaUrl, setFigmaUrl }: FigmaUrlInputStepProps) => {\n  const { t } = useTranslations();\n  const { isLoading } = useStepModal();\n  const [showingTokenInput, setShowingTokenInput] = useState(!hasFigmaToken());\n  const [figmaToken, setFigmaToken] = useState<string>(getFigmaToken);\n\n  // Handle saving token and returning to URL input\n  const handleSaveToken = () => {\n    if (figmaToken.trim()) {\n      saveFigmaToken(figmaToken);\n      setShowingTokenInput(false);\n    }\n  };\n\n  // If we need to show token step, render the token input\n  if (showingTokenInput) {\n    return (\n      <Flex direction=\"column\" gap={6} alignItems=\"start\">\n        <Flex direction=\"column\" gap={2} alignItems=\"start\">\n          <Typography variant=\"beta\">\n            {t('chat.figma-upload.token-title', 'Enter Figma API Token')}\n          </Typography>\n          <Typography variant=\"omega\" textColor=\"neutral600\">\n            {t(\n              'chat.figma-upload.token-description',\n              'To access your Figma designs, you need to provide a personal access token. This will be stored securely in your browser.'\n            )}\n          </Typography>\n          <Link\n            href=\"https://help.figma.com/hc/en-us/articles/8085703771159-Manage-personal-access-tokens\"\n            isExternal\n          >\n            {t('chat.figma-upload.token-help', 'How to get a Figma API token')}\n          </Link>\n        </Flex>\n\n        <Box width=\"100%\">\n          <TextInput\n            name=\"figma-token\"\n            placeholder={t('chat.figma-upload.token-placeholder', 'Enter Figma API token')}\n            aria-label={t('chat.figma-upload.token-placeholder', 'Enter Figma API token')}\n            value={figmaToken}\n            onChange={(e) => setFigmaToken(e.target.value)}\n            width=\"100%\"\n            disabled={isLoading}\n            type=\"password\"\n          />\n        </Box>\n\n        <Flex gap={2}>\n          <Button onClick={handleSaveToken} disabled={!figmaToken.trim()} variant=\"secondary\">\n            {t('chat.figma-upload.save-token', 'Save token')}\n          </Button>\n          <Button\n            onClick={() => setShowingTokenInput(false)}\n            variant=\"tertiary\"\n            disabled={!hasFigmaToken()}\n          >\n            {t('chat.figma-upload.cancel', 'Cancel')}\n          </Button>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  // Otherwise render the URL input\n  return (\n    <Flex direction=\"column\" gap={6} alignItems=\"start\">\n      <Flex direction=\"column\" gap={2} alignItems=\"start\" width=\"100%\">\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n          <Typography variant=\"beta\">\n            {t('chat.figma-upload.title', 'Import Figma Design')}\n          </Typography>\n          <Button onClick={() => setShowingTokenInput(true)} variant=\"tertiary\" size=\"S\">\n            {t('chat.figma-upload.edit-token', 'Edit API token')}\n          </Button>\n        </Flex>\n        <Typography variant=\"omega\" textColor=\"neutral600\">\n          {t(\n            'chat.figma-upload.description',\n            'Ask to turn your designs into schemas by attaching a link to one or multiple frames in your Figma files. (Max 15 frames)'\n          )}\n        </Typography>\n      </Flex>\n\n      <Box width=\"100%\">\n        <TextInput\n          name=\"figma-url\"\n          placeholder={t('chat.figma-upload.url-placeholder', 'Enter Figma URL')}\n          aria-label={t('chat.figma-upload.url-placeholder', 'Enter Figma URL')}\n          value={figmaUrl}\n          onChange={(e) => setFigmaUrl(e.target.value)}\n          width=\"100%\"\n          disabled={isLoading}\n        />\n      </Box>\n\n      {/* {error && (\n        <Box padding={3} background=\"danger100\" color=\"danger600\" borderRadius=\"4px\" width=\"100%\">\n          <Typography variant=\"pi\">{error}</Typography>\n        </Box>\n      )} */}\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Step 2 - Display Figma Images\n * -----------------------------------------------------------------------------------------------*/\n\ninterface FigmaImageDisplayStepProps {\n  images: FigmaImage[];\n  selectedImages: string[];\n  setSelectedImages: (images: string[]) => void;\n}\n\nconst FigmaImageDisplayStep = ({\n  images,\n  selectedImages,\n  setSelectedImages,\n}: FigmaImageDisplayStepProps) => {\n  const { t } = useTranslations();\n\n  // Handle select/deselect all\n  const toggleSelectAll = () => {\n    if (selectedImages.length === images.length) {\n      // Deselect all if all or max allowed are selected\n      setSelectedImages([]);\n    } else {\n      // Select all images up to the max limit\n      const allImageIds = images.map((img) => img.id);\n      setSelectedImages(allImageIds);\n    }\n  };\n\n  if (images.length === 0) {\n    return (\n      <Flex direction=\"column\" gap={4} alignItems=\"center\" padding={4}>\n        <Typography variant=\"omega\">\n          {t('chat.figma-upload.no-images', 'No frames found in the Figma file.')}\n        </Typography>\n      </Flex>\n    );\n  }\n\n  // Handle individual frame selection\n  const handleFrameSelection = (frameId: string) => {\n    const newSelection = selectedImages.includes(frameId)\n      ? selectedImages.filter((id) => id !== frameId)\n      : [...selectedImages, frameId];\n\n    setSelectedImages(newSelection);\n  };\n\n  return (\n    <Flex direction=\"column\" gap={4} alignItems=\"start\" width=\"100%\" height=\"min(45vh, 400px)\">\n      <Flex justifyContent=\"space-between\" width=\"100%\" alignItems=\"center\">\n        <Typography variant=\"beta\">\n          {t('chat.figma-upload.select-images', 'Select Frames to Import')}\n        </Typography>\n        <Flex gap={3} alignItems=\"center\">\n          <Typography>\n            {selectedImages.length} of {images.length} selected\n          </Typography>\n          <Button onClick={toggleSelectAll} type=\"button\" variant=\"secondary\">\n            {/* Determine if select all button should show \"Select All\" or \"Deselect All\" */}\n            {selectedImages.length === images.length\n              ? t('chat.figma-upload.deselect-all', 'Deselect All')\n              : t('chat.figma-upload.select-all', 'Select All')}\n          </Button>\n        </Flex>\n      </Flex>\n\n      <Box paddingRight={4} width=\"100%\" style={{ overflowY: 'auto' }}>\n        <Grid.Root gap={4}>\n          {images.map((frame, index) => {\n            const isSelected = selectedImages.includes(frame.id);\n            return (\n              <Grid.Item key={frame.id} col={6} padding={'1px'}>\n                <ImagePreview\n                  imageUrl={frame.url}\n                  imageName={frame.filename || `Frame ${index + 1}`}\n                  selected={isSelected}\n                  onSelect={() => handleFrameSelection(frame.id)}\n                />\n              </Grid.Item>\n            );\n          })}\n        </Grid.Root>\n      </Box>\n    </Flex>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Modal\n * -----------------------------------------------------------------------------------------------*/\nexport const UploadFigmaModal = () => {\n  const [figmaUrl, setFigmaUrl] = useState<string>('');\n  const [figmaImages, setFigmaImages] = useState<FigmaImage[]>([]);\n  const [selectedImages, setSelectedImages] = useState<string[]>([]);\n  const { t } = useTranslations();\n\n  const { addAttachments } = useAttachments();\n  const { isFigmaUploadOpen, closeFigmaUpload, submitOnFinish } = useUploadFigmaToChat();\n  const { input, setInput, setMessages, sendMessage, openChat } = useStrapiChat();\n  const { processFigmaUrl, isLoading, error } = useFigmaUpload({\n    onSuccess: (images) => {\n      setFigmaImages(images);\n      // Initialize with first 15 images selected\n      const initialSelection = images.slice(0, 15).map((img) => img.id);\n      setSelectedImages(initialSelection);\n    },\n  });\n\n  const handleImportStep = async () => {\n    await processFigmaUrl(figmaUrl);\n    return true;\n  };\n\n  // Validate if the URL is a valid Figma URL\n  const isValidFigmaUrl = (url: string) => {\n    if (!url) return false;\n    try {\n      const urlObj = new URL(url);\n      return urlObj.hostname === 'www.figma.com' || urlObj.hostname === 'figma.com';\n    } catch (e) {\n      return false;\n    }\n  };\n\n  const handleCancel = () => {\n    // Reset all state on cancel\n    setFigmaUrl('');\n    setFigmaImages([]);\n    setSelectedImages([]);\n    closeFigmaUpload();\n  };\n\n  const handleComplete = () => {\n    // Only attach the selected images\n    const selectedFigmaImages = figmaImages.filter((img) => selectedImages.includes(img.id));\n    if (selectedFigmaImages.length === 0) {\n      closeFigmaUpload();\n      return;\n    }\n\n    // Ensure chat is opened\n    openChat();\n\n    if (submitOnFinish) {\n      // Auto-submit a message to chat with attachments\n      sendMessage({\n        role: 'user',\n        parts: [\n          { type: 'text', text: 'Create schemas from the attached images' },\n          ...selectedFigmaImages,\n        ],\n      });\n\n      closeFigmaUpload();\n    } else {\n      // If input is empty, set a predefined message\n      if (!input) {\n        setInput('Create schemas from the attached images');\n      }\n      addAttachments(selectedFigmaImages);\n      closeFigmaUpload();\n    }\n  };\n\n  return (\n    <StepModal\n      open={isFigmaUploadOpen}\n      onOpenChange={(isOpen) => {\n        if (!isOpen) handleCancel();\n      }}\n      title={t('chat.figma-upload.header', 'Import from Figma')}\n      onCancel={handleCancel}\n      onComplete={handleComplete}\n    >\n      <StepModal.Step\n        title={t('chat.figma-upload.step1-title', 'Enter Figma URL')}\n        nextLabel={t('chat.figma-upload.import-button', 'Import')}\n        cancelLabel={t('form.button.cancel', 'Cancel')}\n        disableNext={!figmaUrl || isLoading || !isValidFigmaUrl(figmaUrl)}\n        onNext={handleImportStep}\n      >\n        <FigmaUrlInputStep figmaUrl={figmaUrl} setFigmaUrl={setFigmaUrl} error={error} />\n      </StepModal.Step>\n\n      <StepModal.Step\n        title={t('chat.figma-upload.step2-title', 'Preview Images')}\n        nextLabel={t('form.button.finish', 'Finish')}\n        backLabel={t('form.button.back', 'Back')}\n        disableNext={selectedImages.length === 0}\n      >\n        <FigmaImageDisplayStep\n          images={figmaImages}\n          selectedImages={selectedImages}\n          setSelectedImages={setSelectedImages}\n        />\n      </StepModal.Step>\n    </StepModal>\n  );\n};\n", "// eslint-disable-next-line @typescript-eslint/ban-ts-comment\nimport isEqual from 'lodash/isEqual';\nimport omit from 'lodash/omit';\nimport pluralize from 'pluralize';\n\nimport { Schema } from '../../types/schema';\n\nimport type { ContentType, Component, AnyAttribute } from '../../../../../types';\n\nconst ACTION_TO_STATUS: Record<Schema['action'], ContentType['status']> = {\n  create: 'NEW',\n  remove: 'REMOVED',\n  update: 'CHANGED',\n};\n\n/**\n * Creates a new attribute with the specified status\n */\nconst createAttributeWithStatus = (\n  name: string,\n  attributeData: Record<string, any>,\n  status: AnyAttribute['status']\n): AnyAttribute =>\n  ({\n    ...attributeData,\n    name,\n    status,\n  }) as AnyAttribute;\n\n/**\n * Determines the status of an attribute by comparing new and old versions\n */\nconst determineAttributeStatus = (\n  newAttr: Record<string, any>,\n  oldAttr?: AnyAttribute,\n  oldSchema?: ContentType | Component\n): AnyAttribute['status'] => {\n  if (!oldAttr) {\n    return 'NEW';\n  }\n\n  // If the schema was already new, don't mark attributes as changed, keep them as new.\n  if (oldSchema?.status === 'NEW') {\n    return 'NEW';\n  }\n\n  // Compare attributes without the status field to determine if they've changed\n  const newAttrWithoutStatus = omit(newAttr, ['status']);\n  const oldAttrWithoutStatus = omit(oldAttr, ['status']);\n\n  if (!isEqual(newAttrWithoutStatus, oldAttrWithoutStatus)) {\n    return 'CHANGED';\n  }\n\n  // If unchanged, keep the previous status\n  return oldAttr.status;\n};\n\n/**\n * Determines the status of a schema by comparing action and checking if oldSchema exists\n */\nconst transformStatusFromChatToCTB = (\n  schema: Schema,\n  oldSchema?: ContentType | Component\n): ContentType['status'] => {\n  // If schema has an action, use the mapped status\n  if (schema.action) {\n    return ACTION_TO_STATUS[schema.action];\n  }\n\n  // If oldSchema doesn't exist, it's a new schema\n  if (!oldSchema) {\n    return 'NEW';\n  }\n\n  // If no action is specified and oldSchema exists, keep the existing status\n  return oldSchema.status;\n};\n\n/**\n * Transform attributes from Chat format to CTB format\n * Also performs a diff to determine the status of each attribute\n */\nexport const transformAttributesFromChatToCTB = (\n  { action, attributes }: Schema,\n  oldSchema?: ContentType | Component\n): AnyAttribute[] => {\n  // If it's a new schema or no oldAttributes provided, all attributes are NEW\n  if (action === 'create' || !oldSchema) {\n    return Object.entries(attributes).map(([name, attribute]) =>\n      createAttributeWithStatus(name, attribute, 'NEW')\n    );\n  }\n\n  // Convert old attributes array to a lookup map for faster access\n  const oldAttributesMap = oldSchema.attributes.reduce(\n    (acc, attr) => ({ ...acc, [attr.name]: attr }),\n    {} as Record<string, AnyAttribute>\n  );\n\n  // Process current attributes (new and changed)\n  const processedAttributes = Object.entries(attributes).map(([name, attr]) => {\n    const oldAttr = oldAttributesMap[name];\n    const status = determineAttributeStatus({ ...attr, name }, oldAttr, oldSchema);\n\n    return createAttributeWithStatus(name, attr, status);\n  });\n\n  // No need to mark removed attributes if the old schema is new, just remove it from the list\n  // TODO: Else a validation error occurs on the backend side.\n  if (oldSchema?.status === 'NEW') {\n    return processedAttributes;\n  }\n\n  // Find removed attributes (exist in old but not in new)\n  const removedAttributes = Object.entries(oldAttributesMap)\n    .filter(([name]) => !attributes[name])\n    .map(([name, oldAttr]) => createAttributeWithStatus(name, oldAttr, 'REMOVED'));\n\n  // Combine both sets of attributes\n  return [...processedAttributes, ...removedAttributes];\n};\n\n/**\n * Transform schema format\n *  AI chat -> CTB\n *\n * The AI chat returns a simplified format, and this layer transforms it to be compatible with the CTB reducer.\n *\n * We need to keep track of which changes have been made\n */\nexport const transformChatToCTB = (\n  schema: Schema,\n  oldSchema?: ContentType | Component\n): ContentType | Component => {\n  const singularName = pluralize.singular(schema.name).toLowerCase().replace(/ /g, '-');\n  const pluralName = pluralize.plural(schema.name).toLowerCase().replace(/ /g, '-');\n\n  if (schema.modelType === 'component') {\n    return {\n      category: schema.category || 'default',\n      modelName: singularName,\n      attributes: transformAttributesFromChatToCTB(schema, oldSchema),\n      info: {\n        displayName: schema.name,\n        description: schema.description,\n        // TODO\n        // icon: schema.icon,\n      },\n      modelType: schema.modelType,\n      uid: schema.uid as any,\n      collectionName: pluralName,\n      status: transformStatusFromChatToCTB(schema, oldSchema),\n      globalId: singularName,\n    } satisfies Component;\n  }\n\n  return {\n    uid: schema.uid as any,\n    modelType: schema.modelType,\n    modelName: singularName,\n    kind: schema.kind!,\n    info: {\n      displayName: schema.name.charAt(0).toUpperCase() + schema.name.slice(1),\n      // Always keep the old by default\n      // @ts-expect-error - not in types\n      singularName: oldSchema?.info?.singularName || singularName,\n      // Always keep the old by default\n      // @ts-expect-error - not in types\n      pluralName: oldSchema?.info?.pluralName || pluralName,\n    },\n    collectionName: pluralName,\n    attributes: transformAttributesFromChatToCTB(schema, oldSchema),\n    options: {\n      draftAndPublish: schema.options?.draftAndPublish ?? false,\n    },\n    pluginOptions: {\n      i18n: {\n        localized: schema.options?.localized ?? false,\n      },\n    },\n    visible: true,\n    status: transformStatusFromChatToCTB(schema, oldSchema),\n    globalId: singularName,\n    restrictRelationsTo: null, // TODO: not sure what this is about\n  } satisfies ContentType;\n};\n", "import { createContext, useContext, ReactNode, useEffect, useState } from 'react';\n\nimport { GUIDED_TOUR_REQUIRED_ACTIONS, useGuidedTour } from '@strapi/admin/strapi-admin';\n\nimport { useDataManager } from '../../DataManager/useDataManager';\nimport { transformChatToCTB } from '../lib/transforms/schemas/toCTB';\nimport { SchemaChange } from '../lib/types/annotations';\nimport { AIMessage } from '../lib/types/messages';\n\nimport { useStrapiChat } from './ChatProvider';\n\ninterface SchemaContextType {\n  lastRevisedId: string | null;\n  setLastRevisedId: (id: string | null) => void;\n}\n\nconst SchemaContext = createContext<SchemaContextType | undefined>(undefined);\n\nconst TYPE_TO_ACTION: Record<string, 'add' | 'update' | 'delete'> = {\n  create: 'add',\n  update: 'update',\n  remove: 'delete',\n};\n\nfunction extractSchemaChangesFromMessage(message: AIMessage): SchemaChange[] {\n  if (message.role !== 'assistant') return [];\n\n  const changes: SchemaChange[] = [];\n\n  message.parts?.forEach((part, partIndex) => {\n    // We only care about the schema generation tool\n    if (part && typeof part === 'object' && part.type === 'tool-schemaGenerationTool') {\n      // Prefer validated schemas from output; ignore if there's an error or no output yet\n      const output = part.output as { schemas?: any[]; error?: unknown } | undefined;\n      if (!output || output.error || !Array.isArray(output.schemas)) return;\n\n      const baseId = part.toolCallId ?? `${message.id}-${partIndex}`;\n\n      output.schemas.forEach((schema, schemaIndex) => {\n        const revisionId = `${baseId}-${schema.uid ?? schema.name ?? schemaIndex}`;\n        const type = (schema.action as SchemaChange['type']) || 'update';\n        changes.push({ type, schema, revisionId });\n      });\n    }\n  });\n\n  return changes;\n}\n\nexport const SchemaChatProvider = ({ children }: { children: ReactNode }) => {\n  const [lastRevisedId, setLastRevisedId] = useState<string | null>(null);\n  const { messages, status } = useStrapiChat();\n  const { contentTypes, components, applyChange } = useDataManager();\n  const dispatch = useGuidedTour('SchemaChatProvider', (s) => s.dispatch);\n  const state = useGuidedTour('SchemaChatProvider', (s) => s.state);\n\n  useEffect(() => {\n    const latestMessage = messages[messages.length - 1];\n    if (!latestMessage) return;\n    if (latestMessage.role !== 'assistant') return;\n    // Wait until message streaming has finished\n    if (status !== 'ready') return;\n\n    // const schemaChanges = latestMessage.schemaChanges;\n    const schemaChanges = extractSchemaChangesFromMessage(latestMessage);\n\n    // Check if addField action is already completed\n    const isAddFieldCompleted = state.completedActions.includes(\n      GUIDED_TOUR_REQUIRED_ACTIONS.contentTypeBuilder.addField\n    );\n\n    schemaChanges.forEach((change: SchemaChange) => {\n      const oldSchema =\n        contentTypes[change.schema.uid as any] || components[change.schema.uid as any];\n      const newSchema = transformChatToCTB(change.schema, oldSchema);\n\n      // Check if any attributes/fields are being added to any schema (existing or new)\n      if (!isAddFieldCompleted && change.schema.attributes) {\n        // If a field is being added or updated, dispatch guided tour action to show Save tooltip\n        if (change.type !== 'remove' && Object.keys(change.schema.attributes).length > 0) {\n          dispatch({\n            type: 'set_completed_actions',\n            payload: [GUIDED_TOUR_REQUIRED_ACTIONS.contentTypeBuilder.addField],\n          });\n        }\n      }\n\n      applyChange({\n        action: TYPE_TO_ACTION[change.type]!,\n        schema: newSchema,\n      });\n    });\n    setLastRevisedId(latestMessage.id);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messages]);\n\n  return (\n    <SchemaContext.Provider value={{ lastRevisedId, setLastRevisedId }}>\n      {children}\n    </SchemaContext.Provider>\n  );\n};\n\nexport const useChatSchema = () => {\n  const context = useContext(SchemaContext);\n  if (context === undefined) {\n    throw new Error('useSchema must be used within a SchemaProvider');\n  }\n  return context;\n};\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  createContext,\n  useContext,\n  useMemo,\n  useState,\n  useEffect,\n  type ReactNode,\n  type ChangeEvent,\n} from 'react';\n\nimport { UIMessage, useChat } from '@ai-sdk/react';\nimport { useTracking } from '@strapi/admin/strapi-admin';\nimport { useAIAvailability } from '@strapi/admin/strapi-admin/ee';\n\nimport { useDataManager } from '../../DataManager/useDataManager';\nimport { FeedbackProvider } from '../FeedbackModal';\nimport { useAIChat } from '../hooks/useAIFetch';\nimport { useChatTitle } from '../hooks/useChatTitle';\nimport { useLastSeenSchemas } from '../hooks/useLastSeenSchemas';\nimport { transformCTBToChat } from '../lib/transforms/schemas/fromCTB';\nimport { Attachment } from '../lib/types/attachments';\nimport { Schema } from '../lib/types/schema';\nimport { UploadProjectToChatProvider } from '../UploadCodeModal';\nimport { UploadFigmaToChatProvider } from '../UploadFigmaModal';\n\nimport { SchemaChatProvider } from './SchemaProvider';\n\ninterface ChatContextType extends Omit<ReturnType<typeof useChat>, 'messages'> {\n  isChatEnabled: boolean;\n  title?: string;\n  messages: UIMessage[];\n  handleSubmit: (event: any) => void;\n  input: string;\n  setInput: React.Dispatch<React.SetStateAction<string>>;\n  handleInputChange: (e: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>) => void;\n  reset: () => void;\n  schemas: Schema[];\n  // Chat window\n  isChatOpen: boolean;\n  openChat: () => void;\n  closeChat: () => void;\n  // Attachments\n  attachments: Attachment[];\n  setAttachments: React.Dispatch<React.SetStateAction<Attachment[]>>;\n}\n\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\nconst generateRandomId = () => {\n  return Math.random().toString(36).substring(2, 15);\n};\n\nexport const BaseChatProvider = ({\n  children,\n  defaultOpen = false,\n}: {\n  children: ReactNode;\n  defaultOpen?: boolean;\n}) => {\n  const [chatId, setChatId] = useState<string | undefined>(generateRandomId());\n  const [isChatOpen, setIsChatOpen] = useState(defaultOpen);\n  const [openCount, setOpenCount] = useState(0);\n  const [input, setInput] = useState('');\n\n  // Files\n  const [attachments, setAttachments] = useState<Attachment[]>([]);\n\n  const { trackUsage } = useTracking();\n\n  // DataManager\n  const { components, contentTypes } = useDataManager();\n\n  // Last user seen schemas\n  const { lastSeenSchemas } = useLastSeenSchemas();\n\n  // Schemas to be sent to the chat\n  const schemas = useMemo(() => {\n    return [\n      ...Object.values(contentTypes)\n        .filter((schema) => schema.status !== 'REMOVED')\n        // Probably we should still keep this one, not sure\n        .filter((schema) => schema.uid !== 'plugin::users-permissions.user')\n        .filter((schema) => schema.visible)\n        .map(transformCTBToChat as any),\n      ...Object.values(components)\n        .filter((schema) => schema.status !== 'REMOVED')\n        .map(transformCTBToChat as any),\n    ] as Schema[];\n  }, [contentTypes, components]);\n\n  const {\n    id,\n    messages,\n    sendMessage: _sendMessage,\n    status,\n    stop,\n    ...chat\n  } = useAIChat({\n    id: chatId?.toString(),\n    experimental_throttle: 100,\n  });\n\n  /* -------------------------------------------------------------------------------------------------\n   * AI SDK chat overrides\n   * -----------------------------------------------------------------------------------------------*/\n\n  // NOTE: body is using state variables, so they can not be passed as a prop in useChat\n  const sendMessage: typeof _sendMessage = async (message, options) => {\n    if (status === 'streaming' || status === 'submitted') {\n      return;\n    }\n\n    return _sendMessage(message, {\n      ...options,\n      body: {\n        ...options?.body,\n        schemas,\n        metadata: {\n          lastSeenSchemas: lastSeenSchemas.map((schema) => schema.uid),\n        },\n      },\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (status === 'streaming' || status === 'submitted') {\n      return;\n    }\n\n    const readyAttachments = attachments.filter((a) => a.status !== 'loading');\n    if (input.trim().length === 0 && attachments.length === 0) {\n      return;\n    }\n\n    const files = readyAttachments.map(\n      (attachment) =>\n        ({\n          type: 'file',\n          filename: attachment.filename,\n          mediaType: attachment.mediaType,\n          url: attachment.url,\n        }) as const\n    );\n    sendMessage({ text: input, files });\n    setInput('');\n    setAttachments([]);\n  };\n\n  /* -------------------------------------------------------------------------------------------------\n   * Chat title\n   * -----------------------------------------------------------------------------------------------*/\n  const { title, generateTitle, resetTitle } = useChatTitle({ chatId: id, messages });\n\n  // Automatically generate title when we have at least 1 message (user query)\n  useEffect(() => {\n    if (messages.length >= 1 && !title) {\n      generateTitle();\n    }\n  }, [messages.length, title, generateTitle]);\n\n  useEffect(() => {\n    if (status === 'error') {\n      trackUsage('didAnswerMessage', {\n        successful: false,\n      });\n    } else if (\n      status === 'ready' &&\n      messages.length > 0 &&\n      messages[messages.length - 1]?.role === 'assistant'\n    ) {\n      trackUsage('didAnswerMessage', {\n        successful: true,\n      });\n    }\n  }, [status, messages, trackUsage]);\n\n  const isChatAvailable = useAIAvailability();\n\n  return (\n    <ChatContext.Provider\n      value={{\n        isChatEnabled: isChatAvailable,\n        id,\n        status,\n        stop,\n        sendMessage,\n        ...chat,\n        messages,\n        handleSubmit,\n        input,\n        setInput,\n        handleInputChange: (e) => setInput(e.target.value),\n        reset: () => {\n          stop();\n          setChatId(generateRandomId());\n          trackUsage('didStartNewChat');\n          resetTitle();\n        },\n        schemas,\n        // Chat\n        title,\n        isChatOpen,\n        openChat: () => {\n          setIsChatOpen(true);\n          // if this is the first open, it's a new chat\n          if (openCount === 0) {\n            trackUsage('didStartNewChat');\n          }\n          setOpenCount((prev) => prev + 1);\n        },\n        closeChat: () => setIsChatOpen(false),\n        // Attachments\n        attachments,\n        setAttachments,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatProvider = ({\n  children,\n  defaultOpen = false,\n}: {\n  children: React.ReactNode;\n  defaultOpen?: boolean;\n}) => {\n  return (\n    <BaseChatProvider defaultOpen={defaultOpen}>\n      <SchemaChatProvider>\n        <UploadProjectToChatProvider>\n          <UploadFigmaToChatProvider>\n            <FeedbackProvider>{children}</FeedbackProvider>\n          </UploadFigmaToChatProvider>\n        </UploadProjectToChatProvider>\n      </SchemaChatProvider>\n    </BaseChatProvider>\n  );\n};\n\nexport function useStrapiChat() {\n  const context = useContext(ChatContext);\n\n  if (process.env.NODE_ENV === 'development') {\n    // In development, provide a fallback to prevent crashes during hot reloading\n    // This allows the app to continue working during HMR updates\n    if (context === undefined) {\n      console.warn(\n        'useStrapiChat was called outside of ChatProvider. This is only allowed in development mode.'\n      );\n      return {} as ChatContextType;\n    }\n  } else if (context === undefined) {\n    throw new Error('useStrapiChat must be used within a ChatProvider');\n  }\n  return context;\n}\n", "import { useState } from 'react';\n\nimport { useNotification, useTracking } from '@strapi/admin/strapi-admin';\n\nimport { useStrapiChat } from '../providers/ChatProvider';\n\nimport { FeedbackReasonIds, useFetchSendFeedback } from './useAIFetch';\nimport { useTranslations } from './useTranslations';\n\nexport const useFeedback = () => {\n  const { fetch: sendFeedback, isPending, error } = useFetchSendFeedback();\n  const { id, messages, schemas } = useStrapiChat();\n  const { toggleNotification } = useNotification();\n  const { trackUsage } = useTracking();\n  const { t } = useTranslations();\n\n  // Keep track of messages that have received feedback\n  const [votedMessages, setVotedMessages] = useState<Record<string, 'upvote' | 'downvote'>>({});\n\n  const hasVoted = (messageId: string) => {\n    return !!votedMessages[messageId];\n  };\n\n  const upvoteMessage = (messageId: string) => {\n    // Prevent spamming upvote\n    if (hasVoted(messageId)) {\n      return Promise.resolve();\n    }\n\n    trackUsage('didVoteAnswer', {\n      value: 'positive',\n    });\n\n    toggleNotification({\n      type: 'success',\n      message: t('chat.feedback.submitted', 'Thank you for your feedback! '),\n    });\n\n    // Record this message as upvoted\n    setVotedMessages((prev) => ({ ...prev, [messageId]: 'upvote' }));\n\n    return sendFeedback({\n      body: {\n        type: 'upvote',\n        chatId: id,\n        messageId,\n        messages,\n        schemas,\n      },\n    });\n  };\n\n  const downvoteMessage = (messageId: string, feedback: string, reasons: FeedbackReasonIds[]) => {\n    trackUsage('didVoteAnswer', {\n      value: 'negative',\n    });\n\n    toggleNotification({\n      type: 'success',\n      message: t('chat.feedback.submitted', 'Thank you for your feedback! '),\n    });\n\n    return sendFeedback({\n      body: {\n        type: 'downvote',\n        chatId: id,\n        messageId,\n        messages,\n        feedback,\n        reasons,\n        schemas,\n      },\n    });\n  };\n\n  return { upvoteMessage, downvoteMessage, isPending, error };\n};\n", "import * as React from 'react';\nimport { createContext, useContext, useState } from 'react';\n\nimport { useNotification } from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Flex,\n  Typography,\n  Textarea,\n  Button,\n  Grid,\n  Checkbox,\n  Modal,\n} from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nimport { useFeedback } from './hooks/useFeedback';\nimport { useTranslations } from './hooks/useTranslations';\n\nimport type { FeedbackReasonIds } from './lib/types/feedback';\n\n/* -------------------------------------------------------------------------------------------------\n * Provider\n * -----------------------------------------------------------------------------------------------*/\ninterface FeedbackModalContextType {\n  isFeedbackModalOpen: boolean;\n  currentMessageId: string | null;\n  openFeedbackModal: (messageId: string) => void;\n  closeFeedbackModal: () => void;\n}\n\nconst FeedbackModalContext = createContext<FeedbackModalContextType>({\n  isFeedbackModalOpen: false,\n  currentMessageId: null,\n  openFeedbackModal: () => {},\n  closeFeedbackModal: () => {},\n});\n\nexport const useFeedbackModal = () => useContext(FeedbackModalContext);\n\nexport const FeedbackProvider = ({ children }: { children: React.ReactNode }) => {\n  const [isFeedbackModalOpen, setIsFeedbackModalOpen] = useState(false);\n  const [currentMessageId, setCurrentMessageId] = useState<string | null>(null);\n\n  const openFeedbackModal = (messageId: string) => {\n    setCurrentMessageId(messageId);\n    setIsFeedbackModalOpen(true);\n  };\n\n  const closeFeedbackModal = () => {\n    setIsFeedbackModalOpen(false);\n    setCurrentMessageId(null);\n  };\n\n  return (\n    <FeedbackModalContext.Provider\n      value={{ isFeedbackModalOpen, currentMessageId, openFeedbackModal, closeFeedbackModal }}\n    >\n      {isFeedbackModalOpen && currentMessageId && <FeedbackModal />}\n      {children}\n    </FeedbackModalContext.Provider>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Feedback Option\n * -----------------------------------------------------------------------------------------------*/\n\ninterface FeedbackOptionProps {\n  id: FeedbackReasonIds;\n  label: string;\n  selected: boolean;\n  onClick: (id: FeedbackReasonIds) => void;\n}\n\nconst FeedbackOptionWrapper = styled(Flex)`\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.neutral100};\n  }\n\n  &.selected {\n    background-color: ${({ theme }) => theme.colors.primary100};\n    border-color: ${({ theme }) => theme.colors.primary200};\n  }\n`;\n\nconst FeedbackOption: React.FC<FeedbackOptionProps> = ({ id, label, selected, onClick }) => {\n  return (\n    <FeedbackOptionWrapper\n      className={selected ? 'selected' : ''}\n      justifyContent=\"space-between\"\n      hasRadius\n      width=\"100%\"\n      cursor=\"pointer\"\n      borderColor=\"neutral200\"\n      padding={3}\n      gap={3}\n      onClick={() => onClick(id)}\n    >\n      <Typography variant=\"omega\" fontWeight=\"bold\">\n        {label}\n      </Typography>\n      <Checkbox\n        name={`feedback-${id}`}\n        value={id}\n        checked={selected}\n        onChange={() => onClick(id)}\n      />\n    </FeedbackOptionWrapper>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Modal\n * -----------------------------------------------------------------------------------------------*/\n\nexport const FeedbackModal: React.FC = () => {\n  const [feedbackText, setFeedbackText] = useState('');\n  const [selectedReasons, setSelectedReasons] = useState<FeedbackReasonIds[]>([]);\n\n  const { t } = useTranslations();\n  const { toggleNotification } = useNotification();\n  const { closeFeedbackModal, currentMessageId } = useFeedbackModal();\n  const { downvoteMessage, isPending } = useFeedback();\n\n  const feedbackReasons = [\n    {\n      id: 'invalid_schema',\n      label: t('chat.feedback.reason.invalid_schema', 'Invalid schema'),\n    },\n    {\n      id: 'bad_recommendation',\n      label: t('chat.feedback.reason.bad_recommendation', 'Bad recommendation'),\n    },\n    {\n      id: 'slow',\n      label: t('chat.feedback.reason.slow', 'Slow'),\n    },\n    {\n      id: 'instructions_ignored',\n      label: t('chat.feedback.reason.instructions_ignored', 'Instructions ignored'),\n    },\n    {\n      id: 'being_lazy',\n      label: t('chat.feedback.reason.being_lazy', 'Being lazy'),\n    },\n    {\n      id: 'other',\n      label: t('chat.feedback.reason.other', 'Other'),\n    },\n  ] satisfies { id: FeedbackReasonIds; label: string }[];\n\n  const handleReasonSelect = (id: FeedbackReasonIds) => {\n    setSelectedReasons((prevSelected) => {\n      // If already selected, remove it\n      if (prevSelected.includes(id)) {\n        return prevSelected.filter((reasonId) => reasonId !== id);\n      }\n      // Otherwise add it\n      return [...prevSelected, id];\n    });\n  };\n\n  const handleSubmitFeedback = async () => {\n    if (selectedReasons.length === 0) return;\n\n    try {\n      await downvoteMessage(currentMessageId as string, feedbackText, selectedReasons);\n\n      setFeedbackText('');\n      setSelectedReasons([]);\n      closeFeedbackModal();\n    } catch (error) {\n      toggleNotification({\n        type: 'danger',\n        message: t('chat.feedback.error', 'An error occurred while submitting your feedback'),\n      });\n    }\n  };\n\n  return (\n    <Modal.Root open onOpenChange={closeFeedbackModal}>\n      <Modal.Content>\n        <Modal.Header>\n          <Typography variant=\"omega\" fontWeight=\"bold\">\n            {t('chat.feedback.title', 'Give feedback')}\n          </Typography>\n        </Modal.Header>\n        <Modal.Body>\n          <Flex direction=\"column\" alignItems=\"start\" gap={6} width=\"100%\">\n            <Flex direction=\"column\" alignItems=\"start\" gap={2}>\n              <Typography variant=\"beta\" fontWeight=\"bold\">\n                {t('chat.feedback.title', 'Give feedback')}\n              </Typography>\n              <Typography variant=\"omega\">\n                {t(\n                  'chat.feedback.subtitle',\n                  'Provide additional feedback on this message. Select all that apply.'\n                )}\n              </Typography>\n            </Flex>\n            <Grid.Root width=\"100%\" gap={2}>\n              {feedbackReasons.map((reason) => (\n                <Grid.Item key={reason.id} col={6}>\n                  <FeedbackOption\n                    key={reason.id}\n                    id={reason.id}\n                    label={reason.label}\n                    selected={selectedReasons.includes(reason.id)}\n                    onClick={handleReasonSelect}\n                  />\n                </Grid.Item>\n              ))}\n            </Grid.Root>\n            <Flex direction=\"column\" gap={2} width=\"100%\" alignItems=\"start\">\n              <Typography variant=\"omega\">\n                {t('chat.feedback.comment.label', 'How can we improve? (optional)')}\n              </Typography>\n              <Box width=\"100%\">\n                <Textarea\n                  name=\"feedback\"\n                  placeholder={t('chat.feedback.placeholder', 'Your feedback...')}\n                  onChange={(e) => setFeedbackText(e.target.value)}\n                  value={feedbackText}\n                />\n              </Box>\n            </Flex>\n          </Flex>\n        </Modal.Body>\n        <Modal.Footer>\n          <Modal.Close>\n            <Button variant=\"tertiary\" onClick={closeFeedbackModal}>\n              {t('form.button.cancel', 'Cancel')}\n            </Button>\n          </Modal.Close>\n          <Button\n            onClick={handleSubmitFeedback}\n            loading={isPending}\n            disabled={selectedReasons.length === 0}\n          >\n            {t('form.button.submit', 'Submit')}\n          </Button>\n        </Modal.Footer>\n      </Modal.Content>\n    </Modal.Root>\n  );\n};\n", "import { useState, createContext, useContext, useRef, useLayoutEffect } from 'react';\n\nimport { Box } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\ninterface CollapsibleContextValue {\n  open: boolean;\n  toggle: () => void;\n}\n\nconst CollapsibleContext = createContext<CollapsibleContextValue | undefined>(undefined);\n\nexport const useCollapsible = () => {\n  const context = useContext(CollapsibleContext);\n  if (!context) {\n    throw new Error('Collapsible components must be wrapped in <Collapsible />');\n  }\n  return context;\n};\n\nconst AnimatedContent = styled(Box)`\n  overflow: hidden;\n  transition: height ${({ theme }) => theme.motion.timings['200']}\n    ${({ theme }) => theme.motion.easings.easeOutQuad};\n`;\n\nexport const Collapsible = ({\n  children,\n  defaultOpen = false,\n}: {\n  children: React.ReactNode;\n  defaultOpen?: boolean;\n}) => {\n  const [open, setOpen] = useState(defaultOpen);\n  return (\n    <CollapsibleContext.Provider value={{ open, toggle: () => setOpen((prev) => !prev) }}>\n      {children}\n    </CollapsibleContext.Provider>\n  );\n};\n\nexport const CollapsibleTrigger = ({\n  children,\n}: {\n  children: React.ReactNode | ((props: { open: boolean }) => React.ReactNode);\n}) => {\n  const { toggle, open } = useCollapsible();\n  return (\n    <Box onClick={toggle} style={{ cursor: 'pointer' }}>\n      {typeof children === 'function' ? children({ open }) : children}\n    </Box>\n  );\n};\n\nexport const CollapsibleContent = ({ children }: { children: React.ReactNode }) => {\n  const { open } = useCollapsible();\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = useState<number>(0);\n\n  useLayoutEffect(() => {\n    if (contentRef.current) {\n      const contentHeight = contentRef.current.scrollHeight;\n      setHeight(contentHeight);\n    }\n  }, [children]);\n\n  return (\n    <AnimatedContent\n      ref={contentRef}\n      role=\"region\"\n      aria-hidden={!open}\n      style={{\n        height: open ? `${height}px` : 0,\n        visibility: height === 0 ? 'hidden' : 'visible',\n      }}\n    >\n      {children}\n    </AnimatedContent>\n  );\n};\n", "import { Typography, Flex, Box, Link } from '@strapi/design-system';\nimport { Check, Loader, Cross, ChevronDown } from '@strapi/icons';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { styled, keyframes } from 'styled-components';\n\nimport { MarkerContent } from '../../lib/types/messages';\nimport { Collapsible, CollapsibleTrigger, CollapsibleContent } from '../Collapsible';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst SpinningLoader = styled(Loader)`\n  animation: ${rotate} 1s linear infinite;\n`;\n\nconst RotatingIcon = styled(Box)<{ $open: boolean }>`\n  transform: rotate(${({ $open }) => ($open ? '180deg' : '0deg')});\n  transition: transform ${({ theme }) => theme.motion.timings['200']}\n    ${({ theme }) => theme.motion.easings.easeOutQuad};\n`;\n\nconst Status = ({ status }: { status: string }) => {\n  switch (status) {\n    case 'update':\n      return (\n        <Typography fontWeight=\"semiBold\" textColor=\"warning500\">\n          M\n        </Typography>\n      );\n    case 'remove':\n      return (\n        <Typography fontWeight=\"semiBold\" textColor=\"danger500\">\n          D\n        </Typography>\n      );\n    case 'create':\n      return (\n        <Typography fontWeight=\"semiBold\" textColor=\"success500\">\n          N\n        </Typography>\n      );\n    default:\n      return null;\n  }\n};\n\nexport const Marker = ({ title, steps, state }: MarkerContent) => {\n  const getStateIcon = () => {\n    switch (state) {\n      case 'success':\n        return <Check fill=\"success500\" />;\n      case 'loading':\n        return <SpinningLoader />;\n      case 'error':\n        return <Cross fill=\"danger500\" />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box\n      borderWidth=\"1px\"\n      borderColor=\"neutral200\"\n      borderStyle=\"solid\"\n      hasRadius\n      marginBottom={3}\n      width={'336px'}\n    >\n      <Collapsible defaultOpen={false}>\n        <CollapsibleTrigger>\n          {({ open }) => (\n            <Box\n              padding={3}\n              borderColor=\"neutral200\"\n              borderWidth={open ? '0 0 1px 0' : '0'}\n              borderStyle=\"solid\"\n            >\n              <Flex gap={2} alignItems=\"center\">\n                {getStateIcon()}\n                <Typography>{title}</Typography>\n                <Flex marginLeft=\"auto\">\n                  <RotatingIcon as={ChevronDown} $open={open} />\n                </Flex>\n              </Flex>\n            </Box>\n          )}\n        </CollapsibleTrigger>\n        <CollapsibleContent>\n          <Flex gap={3} padding={3} direction=\"column\">\n            {steps.map((step) => (\n              <Flex\n                key={step.id}\n                gap={2}\n                justifyContent=\"space-between\"\n                width=\"100%\"\n                padding={[0, 1]}\n              >\n                {/* <Typography>{step.description}</Typography> */}\n                {step.link ? (\n                  <Link tag={RouterLink} to={step.link}>\n                    <Typography>{step.description}</Typography>\n                  </Link>\n                ) : (\n                  <Typography>{step.description}</Typography>\n                )}\n                <Status status={step.status} />\n              </Flex>\n            ))}\n          </Flex>\n        </CollapsibleContent>\n      </Collapsible>\n    </Box>\n  );\n};\n", "import { Typography, Box, IconButton, Flex } from '@strapi/design-system';\nimport { ThumbUp, ThumbDown } from '@strapi/icons';\nimport Markdown from 'react-markdown';\nimport { styled } from 'styled-components';\n\nimport { useFeedbackModal } from '../../FeedbackModal';\nimport { useFeedback } from '../../hooks/useFeedback';\nimport {\n  AIMessage,\n  type UserMessage as UserMessageType,\n  AssistantMessage as AssistantMessageType,\n  type MarkerContent as MarkerContentType,\n} from '../../lib/types/messages';\nimport { AnimatedBox } from '../AnimatedBox';\nimport { AttachmentPreview } from '../Attachments/AttachmentPreview';\n\nimport { Marker } from './Marker';\n\nconst MarkdownStyles = styled(Typography)`\n  max-width: 65ch;\n  margin: 0 auto;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 1.25em;\n    margin-bottom: 0.5em;\n    font-weight: bold;\n  }\n\n  p {\n    margin-bottom: 1em;\n  }\n\n  ul,\n  ol {\n    padding-left: 1.5em; /* indentation for bullet points */\n    margin-bottom: 1em;\n  }\n\n  li {\n    margin-bottom: 0.5em;\n    list-style-type: disc; /* or whatever style you prefer */\n  }\n\n  strong {\n    font-weight: bold;\n  }\n\n  /* code blocks, blockquotes, etc. */\n  code {\n    background-color: ${({ theme }) => theme.colors.neutral100};\n    padding: 0.2em 0.4em;\n    border-radius: ${({ theme }) => theme.borderRadius};\n    border-color: ${({ theme }) => theme.colors.neutral150};\n    border-style: solid;\n    font-family: 'SF Mono', SFMono-Regular, ui-monospace, 'DejaVu Sans Mono', Menlo, Consolas,\n      monospace;\n  }\n\n  /* links */\n  a {\n    color: ${({ theme }) => theme.colors.primary500};\n    background-color: ${({ theme }) => theme.colors.neutral100};\n    padding: 0.2em 0.4em;\n    border-radius: ${({ theme }) => theme.borderRadius};\n    border-color: ${({ theme }) => theme.colors.neutral150};\n    border-style: solid;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\n// ---------------------------\n// Tool: schemaGenerationTool helpers\n// ---------------------------\n\ntype SchemaToolSchema = {\n  action?: 'create' | 'update' | 'remove';\n  uid?: string;\n  name?: string;\n  category?: string;\n  kind?: 'collectionType' | 'singleType' | 'component';\n  modelType?: 'component' | 'collectionType' | 'singleType';\n};\n\ntype SchemaToolPart = {\n  type: 'tool-schemaGenerationTool';\n  input?: { schemas?: SchemaToolSchema[] };\n  output?: { schemas?: SchemaToolSchema[]; error?: unknown };\n  toolCallId?: string;\n};\n\nconst isSchemaToolPart = (part: any): part is SchemaToolPart =>\n  part && typeof part === 'object' && part.type === 'tool-schemaGenerationTool';\n\nconst capitalize = (s?: string) => (s ? s.charAt(0).toUpperCase() + s.slice(1) : '');\n\nconst getSchemaLink = (schema: SchemaToolSchema): string | undefined => {\n  const isComponent = (schema.kind ?? schema.modelType) === 'component';\n  if (!schema.uid) return undefined;\n  return isComponent\n    ? `/plugins/content-type-builder/component-categories/${schema.category ?? ''}/${schema.uid}`\n    : `/plugins/content-type-builder/content-types/${schema.uid}`;\n};\n\nconst toMarkerFromSchemaTool = (part: SchemaToolPart): MarkerContentType => {\n  const outSchemas = part.output?.schemas ?? [];\n  const inSchemas = part.input?.schemas ?? [];\n\n  const schemas = (outSchemas.length ? outSchemas : inSchemas) as SchemaToolSchema[];\n  const numSchemas = schemas.length;\n\n  const state: 'loading' | 'success' | 'error' = part.output\n    ? part.output.error\n      ? 'error'\n      : 'success'\n    : 'loading';\n\n  const steps = schemas.map((schema, index) => ({\n    id: `${part.toolCallId ?? 'schemaGenerationTool'}-${schema.uid ?? schema.name ?? index}`,\n    description: capitalize(schema.name ?? schema.uid ?? 'Schema'),\n    status:\n      schema.action === 'create' || schema.action === 'update' || schema.action === 'remove'\n        ? schema.action\n        : ('update' as const),\n    link: getSchemaLink(schema),\n  }));\n\n  const title =\n    state === 'success'\n      ? `Updated ${numSchemas} schema${numSchemas === 1 ? '' : 's'}`\n      : state === 'error'\n        ? `Failed to update schema${numSchemas === 1 ? '' : 's'}`\n        : 'Updating schemas';\n\n  return {\n    type: 'marker',\n    title,\n    state,\n    steps,\n  };\n};\n\nconst MessageContent = ({\n  part,\n}: {\n  part: AIMessage['parts'][number];\n  status?: 'loading' | 'success' | 'error';\n}) => {\n  if (part.type === 'text') {\n    return (\n      <MarkdownStyles>\n        <Markdown\n          components={{\n            a: ({ node, ...props }) => <a target=\"_blank\" rel=\"noopener noreferrer\" {...props} />,\n          }}\n        >\n          {part.text}\n        </Markdown>\n      </MarkdownStyles>\n    );\n  }\n\n  if (isSchemaToolPart(part)) {\n    const marker = toMarkerFromSchemaTool(part);\n    return <Marker {...marker} />;\n  }\n\n  return null;\n};\n\nconst UserMessage = ({ message }: { message: UserMessageType }) => {\n  const hasText = message.parts.some(\n    (content) => content.type === 'text' && content.text.trim() !== ''\n  );\n  const attachments = message.parts.filter((content) => content.type === 'file');\n\n  return (\n    <AnimatedBox\n      as={Flex}\n      direction=\"column\"\n      alignItems=\"flex-end\"\n      style={{ alignSelf: 'flex-end' }}\n      gap={2}\n      maxWidth=\"80%\"\n    >\n      {hasText ? (\n        <Box background=\"neutral150\" borderStyle=\"none\" padding={['10px', '16px']} hasRadius>\n          {message.parts.map((content, index) => {\n            if (content.type !== 'text') return null;\n            return <Typography key={index}>{content.text}</Typography>;\n          })}\n        </Box>\n      ) : null}\n\n      {/* Attachments */}\n      {attachments.map((attachment, idx) => (\n        <AttachmentPreview\n          key={`${attachment.type === 'file' ? attachment.filename : attachment.type}-${idx}`}\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          attachment={{ ...attachment, status: 'ready' } as any}\n        />\n      ))}\n    </AnimatedBox>\n  );\n};\n\nconst AssistantMessage = ({\n  message,\n  isLoading,\n}: {\n  message: AssistantMessageType;\n  isLoading?: boolean;\n}) => {\n  const { upvoteMessage } = useFeedback();\n  const { openFeedbackModal } = useFeedbackModal();\n\n  return (\n    <Box style={{ alignSelf: 'flex-start' }} maxWidth=\"90%\">\n      {message.parts.map((content, index) => (\n        <MessageContent key={index} part={content} />\n      ))}\n      {isLoading ? (\n        <Flex gap={1}>\n          <IconButton\n            label=\"Upvote\"\n            size=\"XS\"\n            variant=\"ghost\"\n            onClick={() => upvoteMessage(message.id)}\n          >\n            <ThumbUp />\n          </IconButton>\n          <IconButton\n            label=\"Downvote\"\n            size=\"XS\"\n            variant=\"ghost\"\n            // For downvoting, user must provide specific feedback\n            onClick={() => openFeedbackModal(message.id)}\n          >\n            <ThumbDown />\n          </IconButton>\n        </Flex>\n      ) : null}\n    </Box>\n  );\n};\n\nexport const ChatMessage = ({\n  message,\n  isLoading,\n}: {\n  message: AIMessage;\n  isLoading?: boolean;\n}) => {\n  /**\n   * IMPORTANT: Messages are rendered using react-markdown (heavy compute)\n   * Component re-renders on each message update, but AI SDK v5 provides\n   * throttling (experimental_throttle: 100ms) which batches updates and reduces\n   * re-render frequency during streaming.\n   */\n  if (message.role === 'user') {\n    return <UserMessage message={message as UserMessageType} />;\n  }\n  return <AssistantMessage message={message as AssistantMessageType} />;\n};\n", "import { useRef, useEffect, useState } from 'react';\n\nimport { Box } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\ninterface TextAreaProps {\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onSubmit?: (e: React.FormEvent<HTMLFormElement>) => void;\n  placeholder?: string;\n}\n\nconst TextAreaElement = styled(Box).attrs({ as: 'textarea' })`\n  border: none;\n  resize: none;\n  background: transparent;\n  outline: none !important;\n  width: 100%;\n  min-height: 44px;\n  max-height: 160px;\n  line-height: ${({ theme }) => theme.lineHeights[4]};\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  color: ${({ theme }) => theme.colors.neutral800};\n  padding-bottom: ${({ theme }) => theme.spaces[1]};\n  overflow-y: auto;\n\n  /* Show partial lines when content exceeds visible area */\n  height: ${({ rows, theme }) =>\n    rows === 5\n      ? `calc(${rows} * ${theme.lineHeights[4]} * 1em + 0.7em)`\n      : `calc(${rows} * ${theme.lineHeights[4]} * 1em)`};\n\n  &:disabled,\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.neutral600};\n  }\n`;\n\nexport const ResizableTextArea = ({ value, onChange, onSubmit, placeholder }: TextAreaProps) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const [rows, setRows] = useState(1);\n\n  const calculateRows = (text: string) => {\n    if (!text) return 1;\n    // Count newlines in the text\n    const lineCount = (text.match(/\\n/g) || []).length + 1;\n    // Limit to a maximum of 5 rows\n    return Math.min(lineCount, 5);\n  };\n\n  // Update rows when value changes\n  useEffect(() => {\n    setRows(calculateRows(value));\n  }, [value]);\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (!textareaRef.current?.value.trim()) {\n      return;\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && onSubmit) {\n      e.preventDefault();\n      onSubmit(e as unknown as React.FormEvent<HTMLFormElement>);\n      // Ensure focus is maintained after submission using a small delay\n      // This helps ensure the focus happens after any other effects from submission\n      setTimeout(() => {\n        textareaRef.current?.focus();\n      }, 10);\n    }\n  };\n\n  useEffect(() => {\n    textareaRef.current?.focus();\n  }, [textareaRef]);\n\n  return (\n    <TextAreaElement\n      ref={textareaRef}\n      value={value}\n      onChange={onChange}\n      onKeyDown={handleKeyDown}\n      placeholder={placeholder}\n      rows={rows}\n    />\n  );\n};\n", "import * as React from 'react';\n\nimport { Menu, useComposedRefs } from '@strapi/design-system';\n\n/* -------------------------------------------------------------------------------------------------\n * SimpleMenu\n * -----------------------------------------------------------------------------------------------*/\n\ntype SimpleMenuProps = Menu.TriggerProps &\n  Pick<Menu.ContentProps, 'popoverPlacement' | 'intersectionId'> & {\n    children?: React.ReactNode;\n    onOpen?: () => void;\n    onClose?: () => void;\n  };\n\nconst SimpleMenu = React.forwardRef<HTMLButtonElement, SimpleMenuProps>(\n  ({ children, onOpen, onClose, popoverPlacement, ...props }, forwardedRef) => {\n    const triggerRef = React.useRef<HTMLButtonElement>(null);\n    const composedRef = useComposedRefs(forwardedRef, triggerRef);\n\n    const handleOpenChange = (isOpen: boolean) => {\n      if (isOpen && typeof onOpen === 'function') {\n        onOpen();\n      } else if (!isOpen && typeof onClose === 'function') {\n        onClose();\n      }\n    };\n\n    return (\n      <Menu.Root onOpenChange={handleOpenChange}>\n        <Menu.Trigger ref={composedRef} {...props}>\n          {props.label}\n        </Menu.Trigger>\n        <Menu.Content zIndex={10000} popoverPlacement={popoverPlacement}>\n          {children}\n        </Menu.Content>\n      </Menu.Root>\n    );\n  }\n);\n\nconst MenuItem = Menu.Item;\ntype MenuItemProps = Menu.ItemProps;\n\nexport { SimpleMenu, MenuItem, Menu };\nexport type { SimpleMenuProps, MenuItemProps };\n", "import { useEffect, useRef, useState } from 'react';\n\nimport { tours, useTracking, useGuidedTour, useAppInfo } from '@strapi/admin/strapi-admin';\nimport { Flex, IconButton, Button, Typography, Box } from '@strapi/design-system';\nimport { Sparkle, ArrowUp, Plus, Paperclip, Upload, Code } from '@strapi/icons';\nimport { styled } from 'styled-components';\n\nimport { Alert } from './components/Alert';\nimport { AnimatedBox } from './components/AnimatedBox';\nimport { AttachmentPreview } from './components/Attachments/AttachmentPreview';\nimport { Dropzone } from './components/Dropzone';\nimport { Panel } from './components/FloatingPanel';\nimport { FigmaIcon } from './components/icons/FigmaIcon';\nimport { StopIcon } from './components/icons/StopIcon';\nimport { Input } from './components/Input';\nimport { ChatMessage } from './components/Messages/Message';\nimport { ResizableTextArea } from './components/ResizableTextArea';\nimport { MenuItem, SimpleMenu } from './components/SimpleMenu';\nimport {\n  CHAT_TOO_LONG_ERROR,\n  LICENSE_LIMIT_REACHED_ERROR,\n  TOO_MANY_REQUESTS_ERROR,\n  LICENSE_LIMIT_EXCEEDED_ERROR,\n} from './hooks/useAIFetch';\nimport { useAttachments } from './hooks/useAttachments';\nimport { useTranslations } from './hooks/useTranslations';\nimport { AIMessage } from './lib/types/messages';\nimport { useStrapiChat } from './providers/ChatProvider';\nimport { useUploadProjectToChat } from './UploadCodeModal';\nimport { useUploadFigmaToChat } from './UploadFigmaModal';\n\n/* -------------------------------------------------------------------------------------------------\n * Chat Message Suggestions\n * -----------------------------------------------------------------------------------------------*/\nconst ResponsiveFlex = styled(Flex)`\n  @media (max-height: 500px) {\n    display: none;\n  }\n`;\n\nconst ChatSuggestions = () => {\n  const { sendMessage } = useStrapiChat();\n  const { t } = useTranslations();\n  const { trackUsage } = useTracking();\n\n  const SUGGESTIONS = [\n    t('chat.input.defaults.generate', 'Generate a product schema'),\n    t('chat.input.defaults.ctb', 'Tell me about the Content-Type Builder'),\n    t('chat.input.defaults.strapi', 'Tell me about Strapi'),\n  ] as const;\n\n  const SUGGESTION_TO_PROMPT_TYPE = {\n    [t('chat.input.defaults.generate', 'Generate a product schema')]: 'generate-product-schema',\n    [t('chat.input.defaults.ctb', 'Tell me about the Content-Type Builder')]:\n      'tell-me-about-the-content-type-builder',\n    [t('chat.input.defaults.strapi', 'Tell me about Strapi')]: 'tell-me-about-strapi',\n  } as const;\n\n  const suggestionsTitle = t('chat.input.defaults.title', 'How can I help you?');\n\n  return (\n    <AnimatedBox>\n      <ResponsiveFlex direction=\"column\" alignItems={'flex-start'} gap={3}>\n        <Typography variant=\"omega\" fontWeight=\"bold\">\n          {suggestionsTitle}\n        </Typography>\n        <Flex direction=\"column\" alignItems={'flex-start'} gap={2}>\n          {SUGGESTIONS.map((suggestion) => (\n            <Button\n              key={suggestion}\n              startIcon={<Sparkle fill=\"neutral500\" />}\n              size=\"M\"\n              variant=\"tertiary\"\n              onClick={() => {\n                trackUsage('didUsePresetPrompt', {\n                  promptType: SUGGESTION_TO_PROMPT_TYPE[suggestion],\n                });\n\n                sendMessage({ text: suggestion });\n              }}\n            >\n              <Typography fontWeight=\"regular\">{suggestion}</Typography>\n            </Button>\n          ))}\n        </Flex>\n      </ResponsiveFlex>\n    </AnimatedBox>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Chat Errors\n * -----------------------------------------------------------------------------------------------*/\nconst getErrorMessage = (err: Error) => {\n  try {\n    const error = JSON.parse(err.message);\n    return error.error;\n  } catch (e) {\n    return err;\n  }\n};\n\nconst ChatError = () => {\n  const { error } = useStrapiChat();\n  const { t } = useTranslations();\n\n  const defaultErrorMessage = t('chat.messages.error', 'Something went wrong.');\n  const tooManyRequestsMessage = t(\n    'chat.messages.too-many-requests',\n    'Too many requests, please try again later.'\n  );\n  const licenseLimitReachedMessage = t(\n    'chat.messages.license-limit-reached',\n    'License limit reached, please try again tomorrow.'\n  );\n  const licenseLimitExceededMessage = t(\n    'chat.messages.license-limit-exceeded',\n    'AI credit limit exceeded.'\n  );\n  const chatTooLongError = t(\n    'chat.messages.too-long-error',\n    'This conversation reached its maximum length. Start a new conversation'\n  );\n\n  if (!error) return null;\n\n  const errorMessage = getErrorMessage(error);\n  if (!errorMessage || typeof errorMessage !== 'string') {\n    return null;\n  }\n\n  if (errorMessage === TOO_MANY_REQUESTS_ERROR) {\n    return <Alert title={tooManyRequestsMessage} variant=\"warning\" />;\n  }\n\n  if (errorMessage === LICENSE_LIMIT_REACHED_ERROR) {\n    return <Alert title={licenseLimitReachedMessage} variant=\"warning\" />;\n  }\n\n  if (errorMessage.split('.')[0] === LICENSE_LIMIT_EXCEEDED_ERROR) {\n    return <Alert title={licenseLimitExceededMessage} variant=\"danger\" />;\n  }\n\n  if (errorMessage === CHAT_TOO_LONG_ERROR) {\n    return <Alert title={chatTooLongError} variant=\"danger\" />;\n  }\n\n  return <Alert title={defaultErrorMessage} variant=\"danger\" />;\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Chat Messages\n * -----------------------------------------------------------------------------------------------*/\nconst ChatContent: React.FC<{\n  messages: AIMessage[];\n}> = ({ messages }) => {\n  const messageEndRef = useRef<HTMLDivElement>(null);\n  const { status } = useStrapiChat();\n\n  // Scroll to the bottom of the chat when new messages arrive\n  useEffect(() => {\n    // Add a small delay to ensure all message content is fully rendered\n    // including conditionally rendered elements like feedback buttons\n    const scrollTimeout = setTimeout(() => {\n      messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }, 20);\n\n    return () => clearTimeout(scrollTimeout);\n  }, [messages, status]);\n\n  return (\n    <>\n      <Flex direction=\"column\" gap={5}>\n        {messages.map((message, idx) => (\n          <ChatMessage\n            key={message.id}\n            message={message}\n            // Chat loading and message is the last one\n            isLoading={\n              (status === 'streaming' || status === 'submitted') && idx === messages.length - 1\n            }\n          />\n        ))}\n        {status === 'error' && <ChatError />}\n      </Flex>\n      <div ref={messageEndRef} />\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Attachments\n * -----------------------------------------------------------------------------------------------*/\nconst ChatAttachmentList = () => {\n  const { attachments, removeAttachmentByIndex } = useAttachments();\n\n  if (!attachments.length) return null;\n\n  return (\n    <Input.Attachments>\n      {attachments.map((attachment, index) => (\n        <Box key={attachment.filename} maxWidth={'250px'}>\n          <AttachmentPreview\n            attachment={attachment}\n            onRemove={() => removeAttachmentByIndex(index)}\n          />\n        </Box>\n      ))}\n    </Input.Attachments>\n  );\n};\n\nconst ChatAttachmentMenu = () => {\n  const { attachFiles } = useAttachments();\n  const { openCodeUpload } = useUploadProjectToChat();\n  const { openFigmaUpload } = useUploadFigmaToChat();\n  const { t } = useTranslations();\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const uploadLabel = t('chat.tooltips.upload-attachments', 'Upload attachments');\n  const importCodeText = t('chat.attachments.menu.import-code', 'Import code');\n  const attachImageText = t('chat.attachments.menu.attach-image', 'Attach image');\n  const importFigmaText = t('chat.attachments.menu.import-figma', 'Import from Figma');\n\n  return (\n    <SimpleMenu\n      label={uploadLabel}\n      icon={<Paperclip />}\n      tag={IconButton}\n      popoverPlacement=\"top-end\"\n    >\n      <MenuItem startIcon={<Code />} onSelect={() => openCodeUpload()}>\n        {importCodeText}\n      </MenuItem>\n\n      <MenuItem startIcon={<FigmaIcon />} onSelect={() => openFigmaUpload()}>\n        {importFigmaText}\n      </MenuItem>\n\n      <input type=\"file\" accept=\"image/*\" multiple hidden ref={fileInputRef} />\n      <MenuItem\n        startIcon={<Upload />}\n        onSelect={() => {\n          const fileInput = fileInputRef.current;\n          if (!fileInput) return;\n          fileInput.onchange = (e) => {\n            const target = e.target as HTMLInputElement;\n            if (target.files && target.files.length > 0) {\n              attachFiles(Array.from(target.files));\n            }\n          };\n\n          fileInput.click();\n        }}\n      >\n        {attachImageText}\n      </MenuItem>\n    </SimpleMenu>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Input\n * -----------------------------------------------------------------------------------------------*/\n\nconst LoadingDots = ({ children }: { children: string }) => {\n  const [dots, setDots] = useState('');\n\n  useEffect(() => {\n    const dotStates = ['', '.', '..', '...'];\n    let currentIndex = 0;\n\n    const interval = setInterval(() => {\n      currentIndex = (currentIndex + 1) % dotStates.length;\n      setDots(dotStates[currentIndex]);\n    }, 400); // Change every 400ms\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <Typography variant=\"pi\" textColor=\"neutral600\">\n      {children}\n      {dots}\n    </Typography>\n  );\n};\n\nconst ChatInput = (props: React.FormHTMLAttributes<HTMLFormElement>) => {\n  const { input, handleSubmit, handleInputChange, messages, status, stop, attachments } =\n    useStrapiChat();\n  const { t } = useTranslations();\n\n  const isLoading = status === 'streaming' || status === 'submitted';\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} {...props}>\n        <Input.Root isLoading={isLoading} gap={4}>\n          <Input.Header minHeight={0}>\n            {messages.length === 0 && (\n              <Input.HeaderItem>\n                <ChatSuggestions />\n              </Input.HeaderItem>\n            )}\n            {isLoading && (\n              <Input.HeaderItem>\n                <LoadingDots>{t('chat.input.thinking', 'Strapi AI is thinking')}</LoadingDots>\n              </Input.HeaderItem>\n            )}\n          </Input.Header>\n          <Input.Content>\n            <Dropzone.Area />\n            <ChatAttachmentList />\n            <Box paddingBottom={3}>\n              <ResizableTextArea\n                value={input}\n                onChange={handleInputChange}\n                onSubmit={handleSubmit}\n                placeholder={t('chat.input.placeholder', 'Ask Strapi AI...')}\n              />\n            </Box>\n            <Input.Actions>\n              <ChatAttachmentMenu />\n\n              {isLoading ? (\n                <IconButton\n                  label={t('chat.tooltips.stop-generation', 'Stop')}\n                  type=\"button\"\n                  variant=\"default\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    stop();\n                  }}\n                >\n                  <StopIcon />\n                </IconButton>\n              ) : (\n                <IconButton\n                  label={t('chat.tooltips.send-message', 'Send')}\n                  variant=\"default\"\n                  // allow sending an empty message if there are attachments\n                  disabled={input.trim().length === 0 && attachments.length === 0}\n                >\n                  <ArrowUp />\n                </IconButton>\n              )}\n            </Input.Actions>\n          </Input.Content>\n        </Input.Root>\n      </form>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * Chat\n * -----------------------------------------------------------------------------------------------*/\n\nconst Chat = () => {\n  const { title, messages, isChatOpen, isChatEnabled, openChat, closeChat, reset } =\n    useStrapiChat();\n  const { attachFiles } = useAttachments();\n  const { t } = useTranslations();\n  const state = useGuidedTour('Chat', (s) => s.state);\n  const currentEnvironment = useAppInfo('Chat', (state) => state.currentEnvironment);\n\n  // Disable AI Chat in production mode\n  const isProduction = currentEnvironment === 'production';\n\n  // Auto-open chat when AIChat guided tour step is active\n  useEffect(() => {\n    const isAIChatStepActive =\n      state.enabled &&\n      state.tours.contentTypeBuilder?.currentStep === 1 && // AIChat is step 1 in contentTypeBuilderStepsAI\n      !state.tours.contentTypeBuilder?.isCompleted;\n\n    if (isAIChatStepActive && !isChatOpen && openChat) {\n      openChat();\n    }\n  }, [\n    state.tours.contentTypeBuilder?.currentStep,\n    state.tours.contentTypeBuilder?.isCompleted,\n    state.enabled,\n    isChatOpen,\n    openChat,\n  ]);\n\n  // Labels\n  const openChatLabel = t('chat.tooltips.open-chat', 'Open chat');\n  const closeChatLabel = t('chat.tooltips.close-chat', 'Close chat');\n  const createChatLabel = t('chat.tooltips.create-chat', 'New conversation');\n  const defaultTitle = t('chat.header.default-title', 'New conversation');\n  const mistakesDisclaimer = t(\n    'chat.input.strapi-ai-can-make-errors',\n    'Strapi AI can make mistakes.'\n  );\n\n  // Don't render the chat at all in production mode or if chat is not enabled\n  if (!isChatEnabled || isProduction) {\n    return null;\n  }\n\n  return (\n    <Dropzone.Root\n      onAddFiles={(files) => {\n        attachFiles(files);\n      }}\n    >\n      <Panel.Root\n        size=\"md\"\n        position=\"bottom-right\"\n        isOpen={isChatOpen}\n        onToggle={isChatOpen ? closeChat : openChat}\n        toggleIcon={\n          <IconButton\n            onClick={isChatOpen ? closeChat : openChat}\n            label={isChatOpen ? closeChatLabel : openChatLabel}\n            variant=\"default\"\n          >\n            <Sparkle />\n          </IconButton>\n        }\n      >\n        <Panel.Header>\n          <Typography tag=\"h3\" variant=\"omega\" fontWeight=\"bold\">\n            {title || defaultTitle}\n          </Typography>\n          <Flex gap={0}>\n            <IconButton label={createChatLabel} variant=\"ghost\" onClick={reset}>\n              <Plus />\n            </IconButton>\n            <Panel.Close label={closeChatLabel} />\n          </Flex>\n        </Panel.Header>\n\n        <Panel.Body>\n          <tours.contentTypeBuilder.AIChat>\n            {!messages.length ? (\n              <Typography variant=\"pi\" textColor=\"neutral600\">\n                {mistakesDisclaimer}\n              </Typography>\n            ) : null}\n            <ChatContent messages={messages} />\n          </tours.contentTypeBuilder.AIChat>\n        </Panel.Body>\n\n        <Panel.Footer>\n          <ChatInput />\n        </Panel.Footer>\n      </Panel.Root>\n    </Dropzone.Root>\n  );\n};\n\nexport { Chat };\n", "import { useState } from 'react';\n\nimport { useTracking } from '@strapi/admin/strapi-admin';\nimport { useCollator, useFilter } from '@strapi/design-system';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\n\nimport { pluginId } from '../../pluginId';\nimport { getTrad } from '../../utils/getTrad';\nimport { useDataManager } from '../DataManager/useDataManager';\nimport { useFormModalNavigation } from '../FormModalNavigation/useFormModalNavigation';\n\nimport type { Status } from '../../types';\n\ntype Link = {\n  name: string;\n  to: string;\n  status: Status;\n  title: string;\n};\n\ntype SubSection = {\n  name: string;\n  title: string;\n  links: Link[];\n};\n\ntype MenuSection = {\n  name: string;\n  title: {\n    id: string;\n    defaultMessage: string;\n  };\n  customLink?: {\n    id: string;\n    defaultMessage: string;\n    onClick: () => void;\n  };\n  links: Array<SubSection | Link>;\n  linksCount?: number;\n};\n\ntype Menu = MenuSection[];\n\nexport const useContentTypeBuilderMenu = () => {\n  const { componentsGroupedByCategory, isInDevelopmentMode, sortedContentTypesList } =\n    useDataManager();\n  const { trackUsage } = useTracking();\n  const [searchValue, setSearchValue] = useState('');\n  const { onOpenModalCreateSchema } = useFormModalNavigation();\n  const { locale } = useIntl();\n\n  const { startsWith } = useFilter(locale, {\n    sensitivity: 'base',\n  });\n\n  const formatter = useCollator(locale, {\n    sensitivity: 'base',\n  });\n\n  const handleClickOpenModalCreateCollectionType = () => {\n    trackUsage(`willCreateContentType`);\n\n    const nextState = {\n      modalType: 'contentType',\n      kind: 'collectionType',\n      actionType: 'create',\n      forTarget: 'contentType',\n    };\n\n    onOpenModalCreateSchema(nextState);\n  };\n\n  const handleClickOpenModalCreateSingleType = () => {\n    trackUsage(`willCreateSingleType`);\n\n    const nextState = {\n      modalType: 'contentType',\n      kind: 'singleType',\n      actionType: 'create',\n      forTarget: 'contentType',\n    };\n\n    onOpenModalCreateSchema(nextState);\n  };\n\n  const handleClickOpenModalCreateComponent = () => {\n    trackUsage('willCreateComponent');\n\n    const nextState = {\n      modalType: 'component',\n      kind: null,\n      actionType: 'create',\n      forTarget: 'component',\n    };\n\n    onOpenModalCreateSchema(nextState);\n  };\n\n  const componentsData = Object.entries(componentsGroupedByCategory)\n    .map(([category, components]) => ({\n      name: category,\n      title: upperFirst(category),\n      links: components\n        .map((component) => ({\n          name: component.uid,\n          to: `/plugins/${pluginId}/component-categories/${category}/${component.uid}`,\n          title: component.info.displayName,\n          status: component.status,\n        }))\n        .sort((a, b) => formatter.compare(a.title, b.title)),\n    }))\n    .sort((a, b) => formatter.compare(a.title, b.title));\n\n  const displayedContentTypes = sortedContentTypesList\n    .filter((obj) => obj.visible)\n    .map((info) => ({\n      kind: info.kind,\n      name: info.name,\n      to: info.to,\n      title: info.title,\n      status: info.status,\n    }));\n\n  const data: Menu = [\n    {\n      name: 'models',\n      title: {\n        id: `${getTrad('menu.section.models.name')}`,\n        defaultMessage: 'Collection Types',\n      },\n      customLink: isInDevelopmentMode\n        ? {\n            id: `${getTrad('button.model.create')}`,\n            defaultMessage: 'Create new collection type',\n            onClick: handleClickOpenModalCreateCollectionType,\n          }\n        : undefined,\n      links: displayedContentTypes.filter((contentType) => contentType.kind === 'collectionType'),\n    },\n    {\n      name: 'singleTypes',\n      title: {\n        id: `${getTrad('menu.section.single-types.name')}`,\n        defaultMessage: 'Single Types',\n      },\n      customLink: isInDevelopmentMode\n        ? {\n            id: `${getTrad('button.single-types.create')}`,\n            defaultMessage: 'Create new single type',\n            onClick: handleClickOpenModalCreateSingleType,\n          }\n        : undefined,\n      links: displayedContentTypes.filter((singleType) => singleType.kind === 'singleType'),\n    },\n    {\n      name: 'components',\n      title: {\n        id: `${getTrad('menu.section.components.name')}`,\n        defaultMessage: 'Components',\n      },\n      customLink: isInDevelopmentMode\n        ? {\n            id: `${getTrad('button.component.create')}`,\n            defaultMessage: 'Create a new component',\n            onClick: handleClickOpenModalCreateComponent,\n          }\n        : undefined,\n      links: componentsData,\n    },\n  ].map((section) => {\n    const hasChild = section.links.some((l) => 'links' in l && Array.isArray(l.links));\n\n    if (hasChild) {\n      let filteredLinksCount = 0;\n\n      return {\n        ...section,\n        links: section.links.reduce((acc, link) => {\n          const filteredLinks =\n            'links' in link ? link.links.filter((link) => startsWith(link.title, searchValue)) : [];\n\n          if (filteredLinks.length === 0) {\n            return acc;\n          }\n\n          filteredLinksCount += filteredLinks.length;\n\n          acc.push({\n            ...link,\n            links: filteredLinks.sort((a, b) => formatter.compare(a.title, b.title)),\n          });\n\n          return acc;\n        }, [] as SubSection[]),\n        linksCount: filteredLinksCount,\n      };\n    }\n\n    const filteredLinks = section.links\n      .filter((link) => startsWith(link.title, searchValue))\n      .sort((a, b) => formatter.compare(a.title, b.title));\n\n    return {\n      ...section,\n      links: filteredLinks,\n      linksCount: filteredLinks.length,\n    };\n  });\n\n  return {\n    menu: data,\n    search: {\n      value: searchValue,\n      onChange: setSearchValue,\n      clear: () => setSearchValue(''),\n    },\n  };\n};\n", "import { Fragment, useState, useEffect } from 'react';\n\nimport { ConfirmDialog, SubNav, tours } from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Searchbar,\n  Button,\n  Flex,\n  Typography,\n  Divider,\n  Menu,\n  VisuallyHidden,\n  Dialog,\n} from '@strapi/design-system';\nimport { ArrowClockwise, Cross, More } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { getTrad } from '../../utils/getTrad';\nimport { useDataManager } from '../DataManager/useDataManager';\nimport { Status } from '../Status';\n\nimport { useContentTypeBuilderMenu } from './useContentTypeBuilderMenu';\n\nconst ArrowCounterClockwise = styled(ArrowClockwise)`\n  transform: scaleX(-1);\n`;\n\nconst DiscardAllMenuItem = styled(Menu.Item)`\n  color: ${({ theme }) => theme.colors.danger600};\n\n  &:hover {\n    background: ${({ theme, disabled }) => !disabled && theme.colors.danger100};\n  }\n`;\n\nexport const ContentTypeBuilderNav = () => {\n  const { menu, search } = useContentTypeBuilderMenu();\n  const { saveSchema, isModified, history, isInDevelopmentMode } = useDataManager();\n\n  const { formatMessage } = useIntl();\n\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const [discardConfirmationModalIsOpen, setDiscardConfirmationModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    if (!isInDevelopmentMode) {\n      return;\n    }\n\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (e.ctrlKey || e.metaKey) {\n        if (e.key === 'Enter') {\n          if (isModified) {\n            e.preventDefault();\n            saveSchema();\n          }\n        } else if (e.key === 'z' && !e.shiftKey) {\n          e.preventDefault(); // Prevent browser default undo (e.g., in input fields)\n          history.undo();\n        } else if (e.key === 'y' || (e.shiftKey && e.key === 'z') || e.key === 'Z') {\n          e.preventDefault(); // Prevent browser default redo (e.g., in input fields)\n          history.redo();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  });\n\n  const discardHandler = () => {\n    setDiscardConfirmationModalIsOpen(true);\n  };\n\n  const discardChanges = () => {\n    setMenuIsOpen(false);\n    setDiscardConfirmationModalIsOpen(false);\n    history.discardAllChanges();\n  };\n\n  const undoHandler = () => {\n    history.undo();\n  };\n\n  const redoHandler = () => {\n    history.redo();\n  };\n\n  const pluginName = formatMessage({\n    id: getTrad('plugin.name'),\n    defaultMessage: 'Content-Type Builder',\n  });\n\n  return (\n    <SubNav.Main aria-label={pluginName}>\n      <SubNav.Header label={pluginName} />\n      <Divider background=\"neutral150\" />\n      <SubNav.Content>\n        <Flex padding={5} gap={3} direction={'column'} alignItems={'stretch'}>\n          <tours.contentTypeBuilder.Save>\n            <Flex gap={2}>\n              <Button\n                flex={1}\n                onClick={(e) => {\n                  e.preventDefault();\n                  saveSchema();\n                }}\n                type=\"submit\"\n                disabled={!isModified || !isInDevelopmentMode}\n                fullWidth\n                size=\"S\"\n              >\n                {formatMessage({\n                  id: 'global.save',\n                  defaultMessage: 'Save',\n                })}\n              </Button>\n              <Menu.Root open={menuIsOpen} onOpenChange={setMenuIsOpen}>\n                <Menu.Trigger\n                  size=\"S\"\n                  endIcon={null}\n                  paddingTop=\"4px\"\n                  paddingLeft=\"7px\"\n                  paddingRight=\"7px\"\n                  variant=\"tertiary\"\n                >\n                  <More fill=\"neutral500\" aria-hidden focusable={false} />\n                  <VisuallyHidden tag=\"span\">\n                    {formatMessage({\n                      id: 'global.more.actions',\n                      defaultMessage: 'More actions',\n                    })}\n                  </VisuallyHidden>\n                </Menu.Trigger>\n                <Menu.Content zIndex={1}>\n                  <Menu.Item\n                    disabled={!history.canUndo || !isInDevelopmentMode}\n                    onSelect={undoHandler}\n                    startIcon={<ArrowCounterClockwise />}\n                  >\n                    {formatMessage({\n                      id: 'global.last-change.undo',\n                      defaultMessage: 'Undo last change',\n                    })}\n                  </Menu.Item>\n                  <Menu.Item\n                    disabled={!history.canRedo || !isInDevelopmentMode}\n                    onSelect={redoHandler}\n                    startIcon={<ArrowClockwise />}\n                  >\n                    {formatMessage({\n                      id: 'global.last-change.redo',\n                      defaultMessage: 'Redo last change',\n                    })}\n                  </Menu.Item>\n                  <Menu.Separator />\n                  <DiscardAllMenuItem\n                    disabled={!history.canDiscardAll || !isInDevelopmentMode}\n                    onSelect={discardHandler}\n                  >\n                    <Flex gap={2}>\n                      <Cross />\n                      <Typography>\n                        {formatMessage({\n                          id: 'global.last-changes.discard',\n                          defaultMessage: 'Discard last changes',\n                        })}\n                      </Typography>\n                    </Flex>\n                  </DiscardAllMenuItem>\n                </Menu.Content>\n              </Menu.Root>\n            </Flex>\n          </tours.contentTypeBuilder.Save>\n\n          <Searchbar\n            value={search.value}\n            onChange={(e) => search.onChange(e.target.value)}\n            onClear={() => search.onChange('')}\n            placeholder={formatMessage({\n              id: getTrad('search.placeholder'),\n              defaultMessage: 'Search',\n            })}\n            size=\"S\"\n            // eslint-disable-next-line react/no-children-prop\n            children={undefined}\n            name={'search_contentType'}\n            clearLabel={formatMessage({ id: 'clearLabel', defaultMessage: 'Clear' })}\n            aria-label={formatMessage({\n              id: getTrad('search.placeholder'),\n              defaultMessage: 'Search',\n            })}\n          />\n        </Flex>\n        <SubNav.Sections>\n          {menu.map((section) => (\n            <Fragment key={section.name}>\n              <SubNav.Section\n                label={formatMessage({\n                  id: section.title.id,\n                  defaultMessage: section.title.defaultMessage,\n                })}\n                link={\n                  section.customLink && {\n                    label: formatMessage({\n                      id: section.customLink?.id,\n                      defaultMessage: section.customLink?.defaultMessage,\n                    }),\n                    onClick: section.customLink?.onClick,\n                  }\n                }\n                sectionId={section.name}\n              >\n                {section.links.map((link) => {\n                  const linkLabel = formatMessage({ id: link.name, defaultMessage: link.title });\n\n                  if ('links' in link) {\n                    return (\n                      <SubNav.SubSection key={link.name} label={link.title}>\n                        {link.links.map((subLink) => {\n                          const label = formatMessage({\n                            id: subLink.name,\n                            defaultMessage: subLink.title,\n                          });\n\n                          return (\n                            <SubNav.Link\n                              to={subLink.to}\n                              key={subLink.name}\n                              label={label}\n                              endAction={\n                                <Box tag=\"span\" textAlign=\"center\" width={'24px'}>\n                                  <Status status={subLink.status} />\n                                </Box>\n                              }\n                            />\n                          );\n                        })}\n                      </SubNav.SubSection>\n                    );\n                  }\n\n                  return (\n                    <SubNav.Link\n                      to={link.to}\n                      key={link.name}\n                      label={linkLabel}\n                      endAction={\n                        <Box tag=\"span\" textAlign=\"center\" width={'24px'}>\n                          <Status status={link.status} />\n                        </Box>\n                      }\n                    />\n                  );\n                })}\n              </SubNav.Section>\n            </Fragment>\n          ))}\n        </SubNav.Sections>\n      </SubNav.Content>\n      <Dialog.Root\n        open={discardConfirmationModalIsOpen}\n        onOpenChange={setDiscardConfirmationModalIsOpen}\n      >\n        <ConfirmDialog onConfirm={discardChanges}>\n          {formatMessage({\n            id: getTrad('popUpWarning.discardAll.message'),\n            defaultMessage: 'Are you sure you want to discard all changes?',\n          })}\n        </ConfirmDialog>\n      </Dialog.Root>\n    </SubNav.Main>\n  );\n};\n", "import { useFetchClient } from '@strapi/admin/strapi-admin';\n\nconst TIMEOUT = 'timeout';\n\nconst timeout = 30 * 1000;\n\nexport const useServerRestartWatcher = () => {\n  const { get } = useFetchClient();\n\n  const serverRestartWatcher = async (initTime?: number) => {\n    const startTime = initTime ?? Date.now();\n\n    if (Date.now() - startTime > timeout) {\n      throw new Error(TIMEOUT);\n    }\n\n    try {\n      const res = await get(`/content-type-builder/update-schema-status`);\n\n      if (res?.data?.data?.isUpdating === true) {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            return serverRestartWatcher(startTime).then(resolve);\n          }, 200);\n        });\n      }\n    } catch (err) {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          return serverRestartWatcher(startTime).then(resolve);\n        }, 200);\n      });\n    }\n  };\n\n  return serverRestartWatcher;\n};\n", "import camelCase from 'lodash/camelCase';\nimport omit from 'lodash/omit';\nimport sortBy from 'lodash/sortBy';\n\nimport { pluginId } from '../../../pluginId';\n\nimport type {\n  Component,\n  Components,\n  ContentTypes,\n  ContentType,\n  AnyAttribute,\n} from '../../../types';\nimport type { UID } from '@strapi/types';\n\nconst sortContentType = (types: ContentTypes) => {\n  return sortBy(\n    Object.keys(types)\n      .map((uid) => ({\n        visible: types[uid].visible,\n        name: uid as UID.ContentType,\n        title: types[uid].info.displayName,\n        plugin: types[uid].plugin,\n        uid: uid as UID.ContentType,\n        to: `/plugins/${pluginId}/content-types/${uid}`,\n        kind: types[uid].kind,\n        restrictRelationsTo: types[uid].restrictRelationsTo,\n        status: types[uid].status,\n      }))\n      .filter((obj) => obj !== null),\n    (obj) => camelCase(obj.title)\n  );\n};\n\ntype TrackingEventProperties = {\n  newContentTypes: number;\n  editedContentTypes: number;\n  deletedContentTypes: number;\n  newComponents: number;\n  editedComponents: number;\n  deletedComponents: number;\n  newFields: number;\n  editedFields: number;\n  deletedFields: number;\n};\n\nconst stateToRequestData = ({\n  components,\n  contentTypes,\n}: {\n  components: Components;\n  contentTypes: ContentTypes;\n}) => {\n  const trackingEventProperties: TrackingEventProperties = {\n    newContentTypes: 0,\n    editedContentTypes: 0,\n    deletedContentTypes: 0,\n    newComponents: 0,\n    editedComponents: 0,\n    deletedComponents: 0,\n    newFields: 0,\n    editedFields: 0,\n    deletedFields: 0,\n  };\n\n  const formattedComponents = Object.values(components)\n    .filter((compo) => {\n      return ['NEW', 'CHANGED', 'REMOVED'].includes(compo.status);\n    })\n    .map((component) => {\n      const requestFormattedComponent = formatTypeForRequest(component);\n\n      const eventAction = requestFormattedComponent.action as 'create' | 'update' | 'delete';\n      updateEventCounts(\n        { ...component, action: eventAction },\n        trackingEventProperties,\n        'component'\n      );\n\n      return requestFormattedComponent;\n    });\n\n  const formattedContentTypes = Object.values(contentTypes)\n    .filter((contentType) => {\n      return ['NEW', 'CHANGED', 'REMOVED'].includes(contentType.status);\n    })\n    .map((contentType) => {\n      const requestFormattedContentType = formatTypeForRequest(contentType);\n\n      const eventAction = requestFormattedContentType.action as 'create' | 'update' | 'delete';\n      updateEventCounts(\n        { ...contentType, action: eventAction },\n        trackingEventProperties,\n        'contentType'\n      );\n\n      return requestFormattedContentType;\n    });\n\n  return {\n    requestData: {\n      components: formattedComponents,\n      contentTypes: formattedContentTypes,\n    },\n    trackingEventProperties,\n  };\n};\n\nconst removeNullKeys = (obj: Record<string, unknown>) => {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([_, value]) => {\n      if (Array.isArray(value)) {\n        return value.length > 0;\n      }\n      if (typeof value === 'object' && value !== null) {\n        return Object.keys(value).length > 0;\n      }\n      return value !== null && value !== undefined;\n    })\n  );\n};\n\nconst formatAttribute = (attr: AnyAttribute) => {\n  if ('customField' in attr) {\n    return { ...attr, type: 'customField' };\n  }\n\n  if ('targetAttribute' in attr) {\n    return {\n      ...attr,\n      targetAttribute: attr.targetAttribute === '-' ? null : attr.targetAttribute,\n      // Explicitly preserve conditions for relations\n      ...(attr.conditions && { conditions: attr.conditions }),\n    };\n  }\n\n  return attr;\n};\n\nconst formatTypeForRequest = (type: ContentType | Component) => {\n  let action;\n  // should we do a diff with the initial data instead of trusting the state status ??\n  switch (type.status) {\n    case 'NEW':\n      action = 'create';\n      break;\n    case 'CHANGED':\n      action = 'update';\n      break;\n    case 'REMOVED':\n      return { action: 'delete', uid: type.uid };\n    default:\n      throw new Error('Invalid status');\n  }\n\n  return {\n    action,\n    uid: type.uid,\n    category: 'category' in type ? type.category : undefined,\n    ...omit(type, ['info', 'options', 'visible', 'uid', 'restrictRelationsTo']),\n    ...type.options,\n    ...type.info,\n    attributes: type.attributes.map((attr) => {\n      let action;\n\n      switch (attr.status) {\n        // NOTE: we want to always send the full data to preserve the order\n\n        case 'NEW':\n          action = 'create';\n          break;\n        case 'REMOVED':\n          return { action: 'delete', name: attr.name };\n        case 'UNCHANGED':\n        case 'CHANGED':\n        default:\n          action = 'update';\n      }\n\n      return {\n        action,\n        name: attr.name,\n        properties: removeNullKeys(omit(formatAttribute(attr), ['status', 'name'])),\n      };\n    }),\n  };\n};\n\nconst updateEventCounts = (\n  type: (ContentType | Component) & { action?: 'create' | 'update' | 'delete' },\n  counts: TrackingEventProperties,\n  entityType: 'component' | 'contentType'\n) => {\n  if (!type || typeof type.action !== 'string') {\n    return;\n  }\n\n  const isContentType = entityType === 'contentType';\n\n  switch (type.action) {\n    case 'create':\n      if (isContentType) {\n        counts.newContentTypes++;\n      } else {\n        counts.newComponents++;\n      }\n      break;\n    case 'update':\n      if (isContentType) {\n        counts.editedContentTypes++;\n      } else {\n        counts.editedComponents++;\n      }\n      break;\n    case 'delete':\n      if (isContentType) {\n        counts.deletedContentTypes++;\n      } else {\n        counts.deletedComponents++;\n      }\n      break;\n    default:\n      break;\n  }\n\n  if (Array.isArray(type.attributes)) {\n    if (type.action === 'delete') {\n      counts.deletedFields += type.attributes.length;\n    } else {\n      type.attributes.forEach((attribute) => {\n        if (!attribute || typeof attribute.status !== 'string') {\n          return;\n        }\n\n        switch (attribute.status) {\n          case 'NEW':\n            counts.newFields++;\n            break;\n          case 'CHANGED':\n            counts.editedFields++;\n            break;\n          case 'REMOVED':\n            counts.deletedFields++;\n            break;\n          case 'UNCHANGED':\n          default:\n            break;\n        }\n      });\n    }\n  }\n};\n\nexport { stateToRequestData, sortContentType };\n", "import get from 'lodash/get';\n\nimport type { AnyAttribute, Component, Components } from '../../../types';\nimport type { UID } from '@strapi/types';\n\ntype ChildComponent = {\n  component: UID.Component;\n};\n\nexport type ComponentWithChildren = {\n  component: UID.Component;\n  childComponents: ChildComponent[];\n};\n\nconst retrieveComponentsThatHaveComponents = (allComponents: Components) => {\n  const componentsThatHaveNestedComponents = Object.keys(allComponents).reduce(\n    (acc: ComponentWithChildren[], current) => {\n      const currentComponent = get(allComponents, [current]);\n\n      const compoWithChildren = getComponentWithChildComponents(currentComponent);\n      if (compoWithChildren.childComponents.length > 0) {\n        acc.push(compoWithChildren);\n      }\n\n      return acc;\n    },\n    []\n  );\n\n  return componentsThatHaveNestedComponents;\n};\n\nconst getComponentWithChildComponents = (component: Component): ComponentWithChildren => {\n  return {\n    component: component.uid,\n    childComponents: component.attributes\n      .filter(\n        (attribute: AnyAttribute): attribute is AnyAttribute & { component: UID.Component } => {\n          const { type } = attribute;\n\n          return type === 'component';\n        }\n      )\n      .map((attribute) => {\n        return {\n          component: attribute.component,\n        } as ChildComponent;\n      }),\n  };\n};\n\nexport { getComponentWithChildComponents, retrieveComponentsThatHaveComponents };\n", "import type { Components, Component } from '../../../types';\nimport type { UID } from '@strapi/types';\n\nexport type NestedComponent = {\n  component: UID.Component;\n  uidsOfAllParents?: UID.Component[];\n  parentCompoUid?: UID.Component;\n};\n\nexport const retrieveNestedComponents = (appComponents: Components): NestedComponent[] => {\n  const nestedComponents = Object.keys(appComponents).reduce((acc: NestedComponent[], current) => {\n    const componentAttributes = appComponents?.[current]?.attributes ?? [];\n    const currentComponentNestedCompos = getComponentsNestedWithinComponent(\n      componentAttributes,\n      current as UID.Component\n    );\n    return [...acc, ...currentComponentNestedCompos];\n  }, []);\n\n  return mergeComponents(nestedComponents);\n};\n\nconst getComponentsNestedWithinComponent = (\n  componentAttributes: Component['attributes'],\n  parentCompoUid: UID.Component\n) => {\n  return componentAttributes.reduce((acc: NestedComponent[], current) => {\n    const { type } = current;\n\n    if (type === 'component') {\n      acc.push({\n        component: current.component,\n        parentCompoUid,\n      });\n    }\n\n    return acc;\n  }, []);\n};\n\n// Merge duplicate components\nconst mergeComponents = (originalComponents: NestedComponent[]): NestedComponent[] => {\n  const componentMap = new Map();\n  // Populate the map with component and its parents\n  originalComponents.forEach(({ component, parentCompoUid }) => {\n    if (!componentMap.has(component)) {\n      componentMap.set(component, new Set());\n    }\n    componentMap.get(component).add(parentCompoUid);\n  });\n\n  // Convert the map to the desired array format\n  const transformedComponents: NestedComponent[] = Array.from(componentMap.entries()).map(\n    ([component, parentCompoUidSet]) => ({\n      component,\n      uidsOfAllParents: Array.from(parentCompoUidSet),\n    })\n  );\n\n  return transformedComponents;\n};\n", "import get from 'lodash/get';\n\nimport { makeUnique } from '../../../utils/makeUnique';\n\nexport const retrieveSpecificInfoFromComponents = (allComponents: any, keysToRetrieve: any) => {\n  const allData = Object.keys(allComponents).map((compo) => {\n    return get(allComponents, [compo, ...keysToRetrieve], '');\n  });\n\n  return makeUnique(allData);\n};\n", "import * as React from 'react';\n\nimport {\n  useTracking,\n  useStrapiApp,\n  useNotification,\n  useAppInfo,\n  useFetchClient,\n  useAuth,\n  adminApi,\n  useGuidedTour,\n  GUIDED_TOUR_REQUIRED_ACTIONS,\n} from '@strapi/admin/strapi-admin';\nimport groupBy from 'lodash/groupBy';\nimport isEqual from 'lodash/isEqual';\nimport mapValues from 'lodash/mapValues';\nimport { useIntl } from 'react-intl';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getTrad } from '../../utils/getTrad';\nimport { useAutoReloadOverlayBlocker } from '../AutoReloadOverlayBlocker';\nimport { useFormModalNavigation } from '../FormModalNavigation/useFormModalNavigation';\n\nimport { DataManagerContext, type DataManagerContextValue } from './DataManagerContext';\nimport { actions, initialState, type State } from './reducer';\nimport { useServerRestartWatcher } from './useServerRestartWatcher';\nimport { sortContentType, stateToRequestData } from './utils/cleanData';\nimport { retrieveComponentsThatHaveComponents } from './utils/retrieveComponentsThatHaveComponents';\nimport { retrieveNestedComponents } from './utils/retrieveNestedComponents';\nimport { retrieveSpecificInfoFromComponents } from './utils/retrieveSpecificInfoFromComponents';\n\nimport type { ContentTypes, ContentType, Components } from '../../types';\nimport type { FormAPI } from '../../utils/formAPI';\nimport type { Internal } from '@strapi/types';\n\ninterface DataManagerProviderProps {\n  children: React.ReactNode;\n}\n\nconst selectState = (state: Record<string, unknown>) =>\n  (state['content-type-builder_dataManagerProvider'] || initialState) as State;\n\nconst DataManagerProvider = ({ children }: DataManagerProviderProps) => {\n  const dispatch = useDispatch();\n  const state = useSelector(selectState);\n  const dispatchGuidedTour = useGuidedTour('DataManagerProvider', (s) => s.dispatch);\n\n  const {\n    components,\n    contentTypes,\n    reservedNames,\n    initialComponents,\n    initialContentTypes,\n    isLoading,\n  } = state.current;\n\n  const { toggleNotification } = useNotification();\n  const { lockAppWithAutoreload, unlockAppWithAutoreload } = useAutoReloadOverlayBlocker();\n  const serverRestartWatcher = useServerRestartWatcher();\n\n  const getPlugin = useStrapiApp('DataManagerProvider', (state) => state.getPlugin);\n  const plugin = getPlugin('content-type-builder');\n  const autoReload = useAppInfo('DataManagerProvider', (state) => state.autoReload);\n  const { formatMessage } = useIntl();\n  const { trackUsage } = useTracking();\n  const refetchPermissions = useAuth('DataManagerProvider', (state) => state.refetchPermissions);\n  const { onCloseModal } = useFormModalNavigation();\n\n  const [isSaving, setIsSaving] = React.useState(false);\n\n  const isModified = React.useMemo(() => {\n    return !(isEqual(components, initialComponents) && isEqual(contentTypes, initialContentTypes));\n  }, [components, contentTypes, initialComponents, initialContentTypes]);\n\n  const fetchClient = useFetchClient();\n\n  const isInDevelopmentMode = autoReload;\n\n  const getDataRef = React.useRef<any>();\n\n  getDataRef.current = async () => {\n    try {\n      const [schemaResponse, reservedNamesResponse] = await Promise.all([\n        fetchClient.get(`/content-type-builder/schema`),\n        fetchClient.get(`/content-type-builder/reserved-names`),\n      ]);\n\n      const { components, contentTypes } = schemaResponse.data.data;\n\n      dispatch(\n        actions.init({\n          components: mapValues(components, (component) => ({\n            ...component,\n            status: 'UNCHANGED',\n          })) as Components,\n          contentTypes: mapValues(contentTypes, (contentType) => ({\n            ...contentType,\n            status: 'UNCHANGED',\n          })) as ContentTypes,\n          reservedNames: reservedNamesResponse.data,\n        })\n      );\n\n      dispatch(actions.clearHistory());\n    } catch (err) {\n      console.error({ err });\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    getDataRef.current();\n\n    return () => {\n      // Reload the plugin so the cycle is new again\n      dispatch(actions.reloadPlugin());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  React.useEffect(() => {\n    if (!autoReload) {\n      toggleNotification({\n        type: 'info',\n        message: formatMessage({ id: getTrad('notification.info.autoreaload-disable') }),\n      });\n    }\n  }, [autoReload, toggleNotification, formatMessage]);\n\n  const getAllComponentsThatHaveAComponentInTheirAttributes = (components: Components) => {\n    const composWithCompos = retrieveComponentsThatHaveComponents(components);\n\n    return composWithCompos;\n  };\n\n  const getAllNestedComponents = (components: Components) => {\n    const appNestedCompo = retrieveNestedComponents(components);\n\n    return appNestedCompo;\n  };\n\n  const updatePermissions = async () => {\n    await refetchPermissions();\n  };\n\n  const saveSchema = async () => {\n    setIsSaving(true);\n\n    const PluginForms = plugin?.apis?.forms as FormAPI;\n\n    const mutatedCTs = Object.entries(state.current.contentTypes).reduce(\n      (acc, [uid, contentType]) => {\n        acc[uid] = PluginForms.mutateContentTypeSchema(\n          contentType,\n          initialContentTypes[uid]\n        ) as ContentType;\n\n        return acc;\n      },\n      {} as ContentTypes\n    );\n\n    const { requestData, trackingEventProperties } = stateToRequestData({\n      components: state.current.components,\n      contentTypes: mutatedCTs,\n    });\n\n    const isSendingContentTypes = Object.keys(state.current.contentTypes).length > 0;\n\n    lockAppWithAutoreload();\n\n    try {\n      await fetchClient.post(`/content-type-builder/update-schema`, { data: requestData });\n\n      if (isSendingContentTypes) {\n        trackUsage('didCreateGuidedTourCollectionType');\n      }\n\n      // Make sure the server has restarted\n      await serverRestartWatcher();\n      // refetch and update initial state after the data has been saved\n      await getDataRef.current();\n      // Update the app's permissions\n      await updatePermissions();\n    } catch (err) {\n      console.error({ err });\n      toggleNotification({\n        type: 'danger',\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\n      });\n\n      trackUsage('didUpdateCTBSchema', { ...trackingEventProperties, success: false });\n    } finally {\n      setIsSaving(false);\n      unlockAppWithAutoreload();\n\n      dispatch(adminApi.util.invalidateTags(['GuidedTourMeta', 'HomepageKeyStatistics']));\n      dispatchGuidedTour({\n        type: 'set_completed_actions',\n        payload: [GUIDED_TOUR_REQUIRED_ACTIONS.contentTypeBuilder.createSchema],\n      });\n\n      trackUsage('didUpdateCTBSchema', { ...trackingEventProperties, success: true });\n    }\n  };\n\n  const componentsThatHaveOtherComponentInTheirAttributes = React.useMemo(() => {\n    return getAllComponentsThatHaveAComponentInTheirAttributes(components);\n  }, [components]);\n\n  const nestedComponents = React.useMemo(() => {\n    return getAllNestedComponents(components);\n  }, [components]);\n\n  const allComponentsCategories = React.useMemo(() => {\n    return retrieveSpecificInfoFromComponents(components, ['category']);\n  }, [components]);\n\n  const componentsGroupedByCategory = React.useMemo(() => {\n    return groupBy(components, 'category');\n  }, [components]);\n\n  const sortedContentTypesList = React.useMemo(() => {\n    return sortContentType(contentTypes);\n  }, [contentTypes]);\n\n  const context: DataManagerContextValue = {\n    componentsThatHaveOtherComponentInTheirAttributes,\n    nestedComponents,\n    saveSchema,\n    reservedNames,\n    components,\n    contentTypes,\n    initialComponents,\n    initialContentTypes,\n    isSaving,\n    isModified,\n    isInDevelopmentMode,\n    allComponentsCategories,\n    componentsGroupedByCategory,\n    sortedContentTypesList,\n    isLoading,\n    addAttribute(payload) {\n      dispatch(actions.addAttribute(payload));\n    },\n    editAttribute(payload) {\n      dispatch(actions.editAttribute(payload));\n    },\n    addCustomFieldAttribute(payload) {\n      dispatch(actions.addCustomFieldAttribute(payload));\n    },\n    editCustomFieldAttribute(payload) {\n      dispatch(actions.editCustomFieldAttribute(payload));\n    },\n    addCreatedComponentToDynamicZone(payload) {\n      dispatch(actions.addCreatedComponentToDynamicZone(payload));\n    },\n    createSchema(payload) {\n      dispatch(actions.createSchema(payload));\n    },\n    createComponentSchema({ data, uid, componentCategory }) {\n      dispatch(actions.createComponentSchema({ data, uid, componentCategory }));\n    },\n    changeDynamicZoneComponents({ forTarget, targetUid, dynamicZoneTarget, newComponents }) {\n      dispatch(\n        actions.changeDynamicZoneComponents({\n          forTarget,\n          targetUid,\n          dynamicZoneTarget,\n          newComponents,\n        })\n      );\n    },\n    removeAttribute(payload) {\n      if (payload.forTarget === 'contentType') {\n        trackUsage('willDeleteFieldOfContentType');\n      }\n\n      dispatch(actions.removeField(payload));\n    },\n    removeComponentFromDynamicZone(payload) {\n      dispatch(actions.removeComponentFromDynamicZone(payload));\n    },\n    deleteComponent(uid: Internal.UID.Component) {\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad(`popUpWarning.bodyMessage.component.delete`),\n        })\n      );\n\n      if (userConfirm) {\n        onCloseModal();\n\n        dispatch(actions.deleteComponent(uid));\n      }\n    },\n    deleteContentType(uid: Internal.UID.ContentType) {\n      const userConfirm = window.confirm(\n        formatMessage({\n          id: getTrad(`popUpWarning.bodyMessage.contentType.delete`),\n        })\n      );\n\n      if (userConfirm) {\n        onCloseModal();\n\n        dispatch(actions.deleteContentType(uid));\n      }\n    },\n\n    updateComponentSchema({ data, componentUID }) {\n      dispatch(\n        actions.updateComponentSchema({\n          data,\n          uid: componentUID,\n        })\n      );\n    },\n\n    updateComponentUid({ componentUID, newComponentUID }) {\n      dispatch(\n        actions.updateComponentUid({\n          uid: componentUID,\n          newComponentUID,\n        })\n      );\n    },\n\n    updateSchema(args) {\n      dispatch(actions.updateSchema(args));\n    },\n\n    moveAttribute(args) {\n      dispatch(actions.moveAttribute(args));\n    },\n\n    applyChange(args) {\n      dispatch(actions.applyChange(args));\n    },\n\n    history: {\n      undo() {\n        dispatch(actions.undo());\n      },\n\n      redo() {\n        dispatch(actions.redo());\n      },\n\n      discardAllChanges() {\n        dispatch(actions.discardAll());\n      },\n\n      canUndo: state.past.length > 0,\n      canRedo: state.future.length > 0,\n      canDiscardAll: isModified,\n    },\n  };\n\n  return <DataManagerContext.Provider value={context}>{children}</DataManagerContext.Provider>;\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default DataManagerProvider;\n", "import { useEffect } from 'react';\n\nimport { ConfirmDialog } from '@strapi/admin/strapi-admin';\nimport { Dialog } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\nimport { useBlocker } from 'react-router-dom';\n\nimport { useDataManager } from '../components/DataManager/useDataManager';\nimport { getTrad } from '../utils/getTrad';\n\nexport const ExitPrompt = () => {\n  const { formatMessage } = useIntl();\n  const { isModified, isSaving } = useDataManager();\n\n  const confirmationMessage = formatMessage({\n    id: getTrad('prompt.unsaved'),\n    defaultMessage: 'Are you sure you want to leave? All your modifications will be lost.',\n  });\n\n  const blocker = useBlocker((ctx) => {\n    return (\n      ctx.currentLocation.pathname.startsWith('/plugins/content-type-builder/') &&\n      !ctx.nextLocation.pathname.startsWith('/plugins/content-type-builder/') &&\n      isModified\n    );\n  });\n\n  useEffect(() => {\n    const handleBeforeUnload = (event: BeforeUnloadEvent) => {\n      if (isModified && !isSaving) {\n        event.preventDefault();\n        event.returnValue = '';\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => window.removeEventListener('beforeunload', handleBeforeUnload);\n  }, [confirmationMessage, isModified, isSaving]);\n\n  if (blocker.state === 'blocked') {\n    return (\n      <Dialog.Root open onOpenChange={() => blocker.reset()}>\n        <ConfirmDialog onConfirm={() => blocker.proceed()}>{confirmationMessage}</ConfirmDialog>\n      </Dialog.Root>\n    );\n  }\n\n  return null;\n};\n", "import type { ContentType } from '../types';\n\nexport const isAllowedContentTypesForRelations = (\n  contentType: Partial<Pick<ContentType, 'kind' | 'restrictRelationsTo'>>\n) => {\n  return (\n    contentType.kind === 'collectionType' &&\n    (contentType.restrictRelationsTo === null ||\n      (Array.isArray(contentType.restrictRelationsTo) &&\n        contentType.restrictRelationsTo.length > 0))\n  );\n};\n", "import { AnyAttribute } from '../types';\n\nexport const findAttribute = (attributes: AnyAttribute[], attributeToFind: string) => {\n  return attributes.find(({ name }) => name === attributeToFind);\n};\n", "import type { MessageDescriptor, PrimitiveType } from 'react-intl';\nimport type { ValidationError } from 'yup';\n\ninterface TranslationMessage extends MessageDescriptor {\n  values?: Record<string, PrimitiveType>;\n}\n\nconst extractValuesFromYupError = (\n  errorType?: string | undefined,\n  errorParams?: Record<string, any> | undefined\n) => {\n  if (!errorType || !errorParams) {\n    return {};\n  }\n\n  return {\n    [errorType]: errorParams[errorType],\n  };\n};\n\nconst getYupInnerErrors = (error: ValidationError) =>\n  (error?.inner || []).reduce<Record<string, TranslationMessage>>((acc, currentError) => {\n    if (currentError.path) {\n      acc[currentError.path.split('[').join('.').split(']').join('')] = {\n        id: currentError.message,\n        defaultMessage: currentError.message,\n        values: extractValuesFromYupError(currentError?.type, currentError?.params),\n      };\n    }\n\n    return acc;\n  }, {});\n\nexport { getYupInnerErrors };\n", "import { Field, MultiSelectNested } from '@strapi/design-system';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\n\nimport { IntlLabel } from '../types';\n\ninterface AllowedTypesSelectProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: any) => void;\n  value?: any;\n}\n\nconst options = [\n  {\n    label: 'All',\n    children: [\n      { label: 'images (JPEG, PNG, GIF, SVG, TIFF, ICO, DVU)', value: 'images' },\n      { label: 'videos (MPEG, MP4, Quicktime, WMV, AVI, FLV)', value: 'videos' },\n      { label: 'audios (MP3, WAV, OGG)', value: 'audios' },\n      { label: 'files (CSV, ZIP, PDF, Excel, JSON, ...)', value: 'files' },\n    ],\n  },\n];\n\nexport const AllowedTypesSelect = ({\n  intlLabel,\n  name,\n  onChange,\n  value = null,\n}: AllowedTypesSelectProps) => {\n  const { formatMessage } = useIntl();\n\n  /* eslint-disable indent */\n  const displayedValue =\n    value === null || value?.length === 0\n      ? formatMessage({ id: 'global.none', defaultMessage: 'None' })\n      : [...value]\n          .sort()\n          .map((v) => upperFirst(v))\n          .join(', ');\n\n  /* eslint-enable indent */\n\n  const label = intlLabel.id\n    ? formatMessage({ id: intlLabel.id, defaultMessage: intlLabel.defaultMessage })\n    : name;\n\n  return (\n    <Field.Root name={name}>\n      <Field.Label>{label}</Field.Label>\n      <MultiSelectNested\n        customizeContent={() => displayedValue}\n        onChange={(values: any[]) => {\n          if (values.length > 0) {\n            onChange({ target: { name, value: values, type: 'allowed-types-select' } });\n          } else {\n            onChange({ target: { name, value: null, type: 'allowed-types-select' } });\n          }\n        }}\n        options={options}\n        value={value || []}\n      />\n    </Field.Root>\n  );\n};\n", "import { Box } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nexport const OptionBoxWrapper = styled(Box)`\n  width: 100%;\n  height: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.neutral200};\n  text-align: left;\n  &:hover {\n    cursor: pointer;\n    background: ${({ theme }) => theme.colors.primary100};\n    border: 1px solid ${({ theme }) => theme.colors.primary200};\n  }\n`;\n", "/**\n *\n * AttributeOption\n *\n */\n\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { Sparkle } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../../utils/getTrad';\nimport { AttributeIcon, IconByType } from '../AttributeIcon';\nimport { useFormModalNavigation } from '../FormModalNavigation/useFormModalNavigation';\n\nimport { OptionBoxWrapper } from './OptionBoxWrapper';\n\nconst newAttributes: string[] = [];\n\nconst NewBadge = () => (\n  <Flex grow={1} justifyContent=\"flex-end\">\n    <Flex gap={1} hasRadius background=\"alternative100\" padding={`0.2rem 0.4rem`}>\n      <Sparkle width={`1rem`} height={`1rem`} fill=\"alternative600\" />\n      <Typography textColor=\"alternative600\" variant=\"sigma\">\n        New\n      </Typography>\n    </Flex>\n  </Flex>\n);\n\ntype AttributeOptionProps = {\n  type: IconByType;\n};\n\nexport const AttributeOption = ({ type = 'text' }: AttributeOptionProps) => {\n  const { formatMessage } = useIntl();\n\n  const { onClickSelectField } = useFormModalNavigation();\n\n  const handleClick = () => {\n    const step = type === 'component' ? '1' : null;\n\n    onClickSelectField({\n      attributeType: type,\n      step,\n    });\n  };\n\n  return (\n    <OptionBoxWrapper padding={4} tag=\"button\" hasRadius type=\"button\" onClick={handleClick}>\n      <Flex>\n        <AttributeIcon type={type} />\n        <Box paddingLeft={4} width=\"100%\">\n          <Flex justifyContent=\"space-between\">\n            <Typography fontWeight=\"bold\" textColor=\"neutral800\">\n              {formatMessage({ id: getTrad(`attribute.${type}`), defaultMessage: type })}\n            </Typography>\n            {newAttributes.includes(type) && <NewBadge />}\n          </Flex>\n          <Flex>\n            <Typography variant=\"pi\" textColor=\"neutral600\">\n              {formatMessage({\n                id: getTrad(`attribute.${type}.description`),\n                defaultMessage: 'A type for modeling data',\n              })}\n            </Typography>\n          </Flex>\n        </Box>\n      </Flex>\n    </OptionBoxWrapper>\n  );\n};\n", "import { Flex, Grid, KeyboardNavigable } from '@strapi/design-system';\n\nimport { IconByType } from '../AttributeIcon';\n\nimport { AttributeOption } from './AttributeOption';\n\ntype AttributeListProps = {\n  attributes: IconByType[][];\n};\n\nexport const AttributeList = ({ attributes }: AttributeListProps) => (\n  <KeyboardNavigable tagName=\"button\">\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={8}>\n      {attributes.map((attributeRow, index) => {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Grid.Root key={index} gap={3}>\n            {attributeRow.map((attribute) => (\n              <Grid.Item key={attribute} col={6} direction=\"column\" alignItems=\"stretch\">\n                <AttributeOption type={attribute} />\n              </Grid.Item>\n            ))}\n          </Grid.Root>\n        );\n      })}\n    </Flex>\n  </KeyboardNavigable>\n);\n", "import * as React from 'react';\n\nimport { StrapiAppContextValue } from '@strapi/admin/strapi-admin';\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { AttributeIcon, IconByType } from '../AttributeIcon';\nimport { useFormModalNavigation } from '../FormModalNavigation/useFormModalNavigation';\n\nimport { OptionBoxWrapper } from './OptionBoxWrapper';\n\nexport type CustomFieldOption = {\n  name: string;\n  type: IconByType;\n  icon: React.ComponentType;\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n  };\n  intlDescription: {\n    id: string;\n    defaultMessage: string;\n  };\n};\n\ntype CustomFieldOptionProps = {\n  customFieldUid: string;\n  customField: NonNullable<ReturnType<StrapiAppContextValue['customFields']['get']>>;\n};\n\nexport const CustomFieldOption = ({ customFieldUid, customField }: CustomFieldOptionProps) => {\n  const { type, intlLabel, intlDescription } = customField;\n  const { formatMessage } = useIntl();\n\n  const { onClickSelectCustomField } = useFormModalNavigation();\n\n  const handleClick = () => {\n    onClickSelectCustomField({\n      attributeType: type,\n      customFieldUid,\n    });\n  };\n\n  return (\n    <OptionBoxWrapper padding={4} tag=\"button\" hasRadius type=\"button\" onClick={handleClick}>\n      <Flex>\n        <AttributeIcon type={type} customField={customFieldUid} />\n        <Box paddingLeft={4}>\n          <Flex>\n            <Typography fontWeight=\"bold\" textColor=\"neutral800\">\n              {formatMessage(intlLabel)}\n            </Typography>\n          </Flex>\n          <Flex>\n            <Typography variant=\"pi\" textColor=\"neutral600\">\n              {formatMessage(intlDescription)}\n            </Typography>\n          </Flex>\n        </Box>\n      </Flex>\n    </OptionBoxWrapper>\n  );\n};\n", "import { Box, Flex, Typography, LinkButton } from '@strapi/design-system';\nimport { Plus } from '@strapi/icons';\nimport { EmptyDocuments } from '@strapi/icons/symbols';\nimport * as qs from 'qs';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { getTrad } from '../../utils';\n\nconst EmptyCard = styled(Box)`\n  background: ${({ theme }) =>\n    `linear-gradient(180deg, rgba(234, 234, 239, 0) 0%, ${theme.colors.neutral150} 100%)`};\n  opacity: 0.33;\n`;\n\nexport const EmptyCardGrid = () => {\n  return (\n    <Flex wrap=\"wrap\" gap={4}>\n      {[...Array(4)].map((_, idx) => {\n        return (\n          <EmptyCard\n            // eslint-disable-next-line react/no-array-index-key\n            key={`empty-card-${idx}`}\n            height=\"138px\"\n            width=\"375px\"\n            hasRadius\n          />\n        );\n      })}\n    </Flex>\n  );\n};\n\nexport const EmptyAttributes = () => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Box position=\"relative\">\n      <EmptyCardGrid />\n      <Box position=\"absolute\" top={6} width=\"100%\">\n        <Flex alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\n          <EmptyDocuments width=\"160px\" height=\"88px\" />\n          <Box paddingTop={6} paddingBottom={4}>\n            <Box textAlign=\"center\">\n              <Typography variant=\"delta\" tag=\"p\" textColor=\"neutral600\">\n                {formatMessage({\n                  id: getTrad('modalForm.empty.heading'),\n                  defaultMessage: 'Nothing in here yet.',\n                })}\n              </Typography>\n              <Box paddingTop={4}>\n                <Typography variant=\"delta\" tag=\"p\" textColor=\"neutral600\">\n                  {formatMessage({\n                    id: getTrad('modalForm.empty.sub-heading'),\n                    defaultMessage:\n                      'Find what you are looking for through a wide range of extensions.',\n                  })}\n                </Typography>\n              </Box>\n            </Box>\n          </Box>\n          <LinkButton\n            tag={Link}\n            to={`/marketplace?${qs.stringify({ categories: ['Custom fields'] })}`}\n            variant=\"secondary\"\n            startIcon={<Plus />}\n          >\n            {formatMessage({\n              id: getTrad('modalForm.empty.button'),\n              defaultMessage: 'Add custom fields',\n            })}\n          </LinkButton>\n        </Flex>\n      </Box>\n    </Box>\n  );\n};\n", "import { useStrapiApp } from '@strapi/admin/strapi-admin';\nimport { Flex, Grid, KeyboardNavigable, Link } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../../utils';\n\nimport { CustomFieldOption } from './CustomFieldOption';\nimport { EmptyAttributes } from './EmptyAttributes';\n\nexport const CustomFieldsList = () => {\n  const { formatMessage } = useIntl();\n  const getAllCustomFields = useStrapiApp('CustomFieldsList', (state) => state.customFields.getAll);\n  // TODO change this once useCustomFields is typed (helper-plugin types are solved)\n  const registeredCustomFields = Object.entries(getAllCustomFields());\n\n  if (!registeredCustomFields.length) {\n    return <EmptyAttributes />;\n  }\n\n  // Sort the array alphabetically by customField name\n  const sortedCustomFields = registeredCustomFields.sort((a, b) =>\n    a[1].name > b[1].name ? 1 : -1\n  );\n\n  return (\n    <KeyboardNavigable tagName=\"button\">\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={3}>\n        <Grid.Root gap={3}>\n          {sortedCustomFields.map(([uid, customField]) => (\n            <Grid.Item key={uid} col={6} direction=\"column\" alignItems=\"stretch\">\n              <CustomFieldOption key={uid} customFieldUid={uid} customField={customField} />\n            </Grid.Item>\n          ))}\n        </Grid.Root>\n        <Link\n          href=\"https://docs.strapi.io/developer-docs/latest/development/custom-fields.html\"\n          isExternal\n        >\n          {formatMessage({\n            id: getTrad('modalForm.tabs.custom.howToLink'),\n            defaultMessage: 'How to add custom fields',\n          })}\n        </Link>\n      </Flex>\n    </KeyboardNavigable>\n  );\n};\n", "/**\n *\n * AttributeOptions\n *\n */\n\nimport { Divider, Flex, Modal, Tabs, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../../utils';\nimport { IconByType } from '../AttributeIcon';\n\nimport { AttributeList } from './AttributeList';\nimport { CustomFieldsList } from './CustomFieldsList';\n\ntype AttributeOptionsProps = {\n  attributes: IconByType[][];\n  forTarget: string;\n  kind: string;\n};\n\nexport const AttributeOptions = ({ attributes, forTarget, kind }: AttributeOptionsProps) => {\n  const { formatMessage } = useIntl();\n\n  const defaultTabId = getTrad('modalForm.tabs.default');\n  const customTabId = getTrad('modalForm.tabs.custom');\n\n  const titleIdSuffix = forTarget.includes('component') ? 'component' : kind;\n  const titleId = getTrad(`modalForm.sub-header.chooseAttribute.${titleIdSuffix}`);\n\n  return (\n    <Modal.Body>\n      <Tabs.Root variant=\"simple\" defaultValue=\"default\">\n        <Flex justifyContent=\"space-between\">\n          <Typography variant=\"beta\" tag=\"h2\">\n            {formatMessage({ id: titleId, defaultMessage: 'Select a field' })}\n          </Typography>\n          <Tabs.List>\n            <Tabs.Trigger value=\"default\">\n              {formatMessage({ id: defaultTabId, defaultMessage: 'Default' })}\n            </Tabs.Trigger>\n            <Tabs.Trigger value=\"custom\">\n              {formatMessage({ id: customTabId, defaultMessage: 'Custom' })}\n            </Tabs.Trigger>\n          </Tabs.List>\n        </Flex>\n        <Divider marginBottom={6} />\n        <Tabs.Content value=\"default\">\n          <AttributeList attributes={attributes} />\n        </Tabs.Content>\n        <Tabs.Content value=\"custom\">\n          <CustomFieldsList />\n        </Tabs.Content>\n      </Tabs.Root>\n    </Modal.Body>\n  );\n};\n", "import { Field, SingleSelect, SingleSelectOption } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { IntlLabel } from '../types';\n\ninterface Metadata {\n  intlLabel: IntlLabel;\n  disabled?: boolean;\n  hidden?: boolean;\n}\n\ninterface Option {\n  metadatas: Metadata;\n  key: string | number;\n  value: string | number;\n}\n\ninterface BooleanDefaultValueSelectProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: any) => void;\n  options: Option[];\n  value?: any;\n}\n\nexport const BooleanDefaultValueSelect = ({\n  intlLabel,\n  name,\n  options,\n  onChange,\n  value = null,\n}: BooleanDefaultValueSelectProps) => {\n  const { formatMessage } = useIntl();\n  const label = intlLabel.id\n    ? formatMessage(\n        { id: intlLabel.id, defaultMessage: intlLabel.defaultMessage },\n        { ...intlLabel.values }\n      )\n    : name;\n\n  const handleChange = (value: any) => {\n    let nextValue: boolean | string = '';\n\n    if (value === 'true') {\n      nextValue = true;\n    }\n\n    if (value === 'false') {\n      nextValue = false;\n    }\n\n    onChange({ target: { name, value: nextValue, type: 'select-default-boolean' } });\n  };\n\n  return (\n    <Field.Root name={name}>\n      <Field.Label>{label}</Field.Label>\n      <SingleSelect onChange={handleChange} value={(value === null ? '' : value).toString()}>\n        {options.map(({ metadatas: { intlLabel, disabled, hidden }, key, value }) => {\n          return (\n            <SingleSelectOption key={key} value={value} disabled={disabled} hidden={hidden}>\n              {/* No need to translate the options */}\n              {intlLabel.defaultMessage}\n            </SingleSelectOption>\n          );\n        })}\n      </SingleSelect>\n    </Field.Root>\n  );\n};\n", "import { Flex, inputFocusStyle } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nconst Wrapper = styled(Flex)`\n  position: relative;\n  align-items: stretch;\n\n  label {\n    max-width: 50%;\n    cursor: pointer;\n    user-select: none;\n    flex: 1;\n\n    ${inputFocusStyle() as any}\n  }\n\n  input {\n    position: absolute;\n    opacity: 0;\n  }\n\n  .option {\n    height: 100%;\n    will-change: transform, opacity;\n    background: ${({ theme }) => theme.colors.neutral0};\n    border: 1px solid ${({ theme }) => theme.colors.neutral200};\n    border-radius: ${({ theme }) => theme.borderRadius};\n\n    .checkmark {\n      position: relative;\n      display: block;\n      will-change: transform;\n      background: ${({ theme }) => theme.colors.neutral0};\n      width: ${({ theme }) => theme.spaces[5]};\n      height: ${({ theme }) => theme.spaces[5]};\n      border: solid 1px ${({ theme }) => theme.colors.neutral300};\n      border-radius: 50%;\n\n      &:before,\n      &:after {\n        content: '';\n        display: block;\n        border-radius: 50%;\n        width: ${({ theme }) => theme.spaces[3]};\n        height: ${({ theme }) => theme.spaces[3]};\n        position: absolute;\n        top: 3px;\n        left: 3px;\n      }\n\n      &:after {\n        transform: scale(0);\n        transition: inherit;\n        will-change: transform;\n      }\n    }\n  }\n\n  .container input:checked ~ div {\n    background: ${({ theme }) => theme.colors.primary100};\n    color: ${({ theme }) => theme.colors.primary600};\n    .checkmark {\n      border: solid 1px ${({ theme }) => theme.colors.primary600};\n      &::after {\n        background: ${({ theme }) => theme.colors.primary600};\n        transform: scale(1);\n      }\n    }\n  }\n`;\n\nexport { Wrapper };\n", "import { Box, Flex, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { Wrapper } from './Styles';\n\nimport type { IntlLabel } from '../../types';\n\ninterface Radio {\n  title: IntlLabel;\n  description: IntlLabel;\n  value: any;\n}\n\ninterface CustomRadioGroupProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: any) => void;\n  radios?: Radio[];\n  value?: string | boolean;\n}\n\nexport const CustomRadioGroup = ({\n  intlLabel,\n  name,\n  onChange,\n  radios = [],\n  value,\n}: CustomRadioGroupProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n      <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"neutral800\" htmlFor={name} tag=\"label\">\n        {formatMessage(intlLabel)}\n      </Typography>\n      <Wrapper gap={4} alignItems=\"stretch\">\n        {radios.map((radio) => {\n          return (\n            <label htmlFor={radio.value.toString()} key={radio.value} className=\"container\">\n              <input\n                id={radio.value.toString()}\n                name={name}\n                className=\"option-input\"\n                checked={radio.value === value}\n                value={radio.value}\n                key={radio.value}\n                onChange={onChange}\n                type=\"radio\"\n              />\n              <Box className=\"option\" padding={4}>\n                <Flex>\n                  <Box paddingRight={4}>\n                    <span className=\"checkmark\" />\n                  </Box>\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n                    <Typography fontWeight=\"bold\">{formatMessage(radio.title)}</Typography>\n                    <Typography variant=\"pi\" textColor=\"neutral600\">\n                      {formatMessage(radio.description)}\n                    </Typography>\n                  </Flex>\n                </Flex>\n              </Box>\n            </label>\n          );\n        })}\n      </Wrapper>\n    </Flex>\n  );\n};\n", "import * as React from 'react';\n\nimport { IntlLabel } from '../types';\n\nimport { CustomRadioGroup } from './CustomRadioGroup';\n\ninterface BooleanRadioGroupProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: any) => void;\n}\n\nexport const BooleanRadioGroup = ({\n  onChange,\n  name,\n  intlLabel,\n  ...rest\n}: BooleanRadioGroupProps) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = e.target.value !== 'false';\n\n    onChange({ target: { name, value: checked, type: 'boolean-radio-group' } });\n  };\n\n  return <CustomRadioGroup {...rest} name={name} onChange={handleChange} intlLabel={intlLabel} />;\n};\n", "import { Box, Checkbox, Field, Flex, NumberInput, TextInput } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { IntlLabel } from '../types';\n\ninterface CheckboxWithNumberFieldProps {\n  error?: string;\n  intlLabel: IntlLabel;\n  modifiedData: Record<string, any>;\n  name: string;\n  onChange: (value: any) => void;\n  value?: any;\n}\n\nexport const CheckboxWithNumberField = ({\n  error,\n  intlLabel,\n  modifiedData,\n  name,\n  onChange,\n  value = null,\n}: CheckboxWithNumberFieldProps) => {\n  const { formatMessage } = useIntl();\n  const label = intlLabel.id\n    ? formatMessage(\n        { id: intlLabel.id, defaultMessage: intlLabel.defaultMessage },\n        { ...intlLabel.values }\n      )\n    : name;\n\n  const type = modifiedData.type === 'biginteger' ? 'text' : 'number';\n\n  const disabled = !modifiedData.type;\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n\n  return (\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n      <Checkbox\n        id={name}\n        name={name}\n        onCheckedChange={(value) => {\n          const initValue = type === 'text' ? '0' : 0;\n          const nextValue = value ? initValue : null;\n\n          onChange({ target: { name, value: nextValue } });\n        }}\n        checked={value !== null}\n      >\n        {label}\n      </Checkbox>\n      {value !== null && (\n        <Box paddingLeft={6} style={{ maxWidth: '200px' }}>\n          {type === 'text' ? (\n            <Field.Root error={errorMessage} name={name}>\n              <TextInput\n                aria-label={label}\n                disabled={disabled}\n                onChange={onChange}\n                value={value === null ? '' : value}\n              />\n              <Field.Error />\n            </Field.Root>\n          ) : (\n            <Field.Root error={errorMessage} name={name}>\n              <NumberInput\n                aria-label={label}\n                disabled={disabled}\n                onValueChange={(value: any) => {\n                  onChange({ target: { name, value: value ?? 0, type } });\n                }}\n                value={value || 0}\n              />\n              <Field.Error />\n            </Field.Root>\n          )}\n        </Box>\n      )}\n    </Flex>\n  );\n};\n", "import { useNotification } from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils';\n\nimport { CustomRadioGroup } from './CustomRadioGroup';\n\nimport type { IntlLabel } from '../types';\n\ninterface Radio {\n  title: IntlLabel;\n  description: IntlLabel;\n  value: any;\n}\n\ninterface ContentTypeRadioGroupProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: any) => void;\n  radios?: Radio[];\n  value?: string | boolean;\n}\n\nexport const ContentTypeRadioGroup = ({ onChange, ...rest }: ContentTypeRadioGroupProps) => {\n  const { formatMessage } = useIntl();\n  const { toggleNotification } = useNotification();\n\n  const handleChange = (e: any) => {\n    toggleNotification({\n      type: 'info',\n      message: formatMessage({\n        id: getTrad('contentType.kind.change.warning'),\n        defaultMessage:\n          'You just changed the kind of a content type: API will be reset (routes, controllers, and services will be overwritten).',\n      }),\n    });\n\n    onChange(e);\n  };\n\n  return <CustomRadioGroup {...rest} onChange={handleChange} />;\n};\n", "/**\n *\n * DraftAndPublishToggle\n *\n */\n\nimport { useState } from 'react';\n\nimport { ConfirmDialog } from '@strapi/admin/strapi-admin';\nimport { Button, Checkbox, CheckboxProps, Dialog, Field } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils';\n\nimport type { IntlLabel } from '../types';\n\ninterface Description {\n  id: string;\n  defaultMessage: string;\n  values?: Record<string, any>;\n}\n\ninterface DraftAndPublishToggleProps {\n  description?: Description;\n  disabled?: boolean;\n  intlLabel: IntlLabel;\n  isCreating: boolean;\n  name: string;\n  onChange: (value: { target: { name: string; value: boolean } }) => void;\n  value?: boolean;\n}\n\nexport const DraftAndPublishToggle = ({\n  description,\n  disabled = false,\n  intlLabel,\n  isCreating,\n  name,\n  onChange,\n  value = false,\n}: DraftAndPublishToggleProps) => {\n  const { formatMessage } = useIntl();\n  const [showWarning, setShowWarning] = useState(false);\n  const label = intlLabel.id\n    ? formatMessage(\n        { id: intlLabel.id, defaultMessage: intlLabel.defaultMessage },\n        { ...intlLabel.values }\n      )\n    : name;\n\n  const hint = description\n    ? formatMessage(\n        { id: description.id, defaultMessage: description.defaultMessage },\n        { ...description.values }\n      )\n    : '';\n\n  const handleConfirm = () => {\n    onChange({ target: { name, value: false } });\n\n    setShowWarning(false);\n  };\n\n  const handleChange: CheckboxProps['onCheckedChange'] = (checked) => {\n    if (!checked && !isCreating) {\n      setShowWarning(true);\n\n      return;\n    }\n\n    onChange({ target: { name, value: !!checked } });\n  };\n\n  return (\n    <>\n      <Field.Root hint={hint} name={name}>\n        <Checkbox checked={value} disabled={disabled} onCheckedChange={handleChange}>\n          {label}\n        </Checkbox>\n        <Field.Hint />\n      </Field.Root>\n\n      <Dialog.Root open={showWarning} onOpenChange={(isOpen) => setShowWarning(isOpen)}>\n        <ConfirmDialog\n          endAction={\n            <Button onClick={handleConfirm} variant=\"danger\" width=\"100%\" justifyContent=\"center\">\n              {formatMessage({\n                id: getTrad('popUpWarning.draft-publish.button.confirm'),\n                defaultMessage: 'Yes, disable',\n              })}\n            </Button>\n          }\n        >\n          {formatMessage({\n            id: getTrad('popUpWarning.draft-publish.message'),\n            defaultMessage: 'If you disable the draft & publish, your drafts will be deleted.',\n          })}\n        </ConfirmDialog>\n      </Dialog.Root>\n    </>\n  );\n};\n", "/**\n *\n * FormModalEndActions\n *\n */\n\nimport { SyntheticEvent } from 'react';\n\nimport { Button, Flex } from '@strapi/design-system';\nimport { Plus } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils';\n\ntype FormModalEndActionsProps = {\n  deleteComponent: () => void;\n  deleteContentType: () => void;\n  isAttributeModal: boolean;\n  isCustomFieldModal: boolean;\n  isComponentAttribute: boolean;\n  isComponentModal: boolean;\n  isComponentToDzModal: boolean;\n  isContentTypeModal: boolean;\n  isCreatingComponent: boolean;\n  isCreatingComponentAttribute: boolean;\n  isCreatingComponentInDz: boolean;\n  isCreatingComponentWhileAddingAField: boolean;\n  isCreatingContentType: boolean;\n  isCreatingDz: boolean;\n  isDzAttribute: boolean;\n  isEditingAttribute: boolean;\n  isInFirstComponentStep: boolean;\n  onSubmitAddComponentAttribute: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitAddComponentToDz: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitCreateContentType: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitCreateComponent: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitCreateDz: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitEditAttribute: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitEditComponent: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitEditContentType: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitEditCustomFieldAttribute: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onSubmitEditDz: (e: SyntheticEvent, shouldContinue: boolean) => void;\n  onClickFinish: () => void;\n};\n\nexport const FormModalEndActions = ({\n  deleteComponent,\n  deleteContentType,\n  isAttributeModal,\n  isCustomFieldModal,\n  isComponentAttribute,\n  isComponentToDzModal,\n  isContentTypeModal,\n  isCreatingComponent,\n  isCreatingComponentAttribute,\n  isCreatingComponentInDz,\n  isCreatingComponentWhileAddingAField,\n  isCreatingContentType,\n  isCreatingDz,\n  isComponentModal,\n  isDzAttribute,\n  isEditingAttribute,\n  isInFirstComponentStep,\n  onSubmitAddComponentAttribute,\n  onSubmitAddComponentToDz,\n  onSubmitCreateContentType,\n  onSubmitCreateComponent,\n  onSubmitCreateDz,\n  onSubmitEditAttribute,\n  onSubmitEditComponent,\n  onSubmitEditContentType,\n  onSubmitEditCustomFieldAttribute,\n  onSubmitEditDz,\n  onClickFinish,\n}: FormModalEndActionsProps) => {\n  const { formatMessage } = useIntl();\n\n  if (isComponentToDzModal) {\n    if (isCreatingComponentInDz) {\n      return (\n        <Button\n          variant=\"secondary\"\n          type=\"submit\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onSubmitAddComponentToDz(e, true);\n          }}\n          startIcon={<Plus />}\n        >\n          {formatMessage({\n            id: getTrad('form.button.add-first-field-to-created-component'),\n            defaultMessage: 'Add first field to the component',\n          })}\n        </Button>\n      );\n    }\n\n    return (\n      <Button\n        variant=\"default\"\n        type=\"submit\"\n        onClick={(e: SyntheticEvent) => {\n          e.preventDefault();\n\n          onSubmitAddComponentToDz(e, false);\n        }}\n      >\n        {formatMessage({\n          id: 'global.finish',\n          defaultMessage: 'Finish',\n        })}\n      </Button>\n    );\n  }\n\n  if (isAttributeModal && isDzAttribute && !isCreatingDz) {\n    return (\n      <Button\n        variant=\"default\"\n        type=\"submit\"\n        onClick={(e: SyntheticEvent) => {\n          e.preventDefault();\n\n          onClickFinish();\n          onSubmitEditDz(e, false);\n        }}\n      >\n        {formatMessage({\n          id: 'global.finish',\n          defaultMessage: 'Finish',\n        })}\n      </Button>\n    );\n  }\n\n  if (isAttributeModal && isDzAttribute && isCreatingDz) {\n    return (\n      <>\n        <Button\n          variant=\"secondary\"\n          type=\"submit\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onSubmitCreateDz(e, true);\n          }}\n          startIcon={<Plus />}\n        >\n          {formatMessage({\n            id: getTrad('form.button.add-components-to-dynamiczone'),\n            defaultMessage: 'Add components to the zone',\n          })}\n        </Button>\n        {/* // TO FIX fix doesnt close the modal */}\n        {/* <Button\n          variant=\"default\"\n          type=\"button\"\n          onClick={e => {\n            e.preventDefault();\n\n            onSubmitCreateDz(e, false);\n          }}\n        >\n          {formatMessage({\n            id: 'global.finish',\n            defaultMessage: 'Finish',\n          })}\n        </Button> */}\n      </>\n    );\n  }\n\n  if (isAttributeModal && isComponentAttribute) {\n    if (isInFirstComponentStep) {\n      return (\n        <Button\n          variant=\"secondary\"\n          type=\"submit\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onSubmitAddComponentAttribute(e, true);\n          }}\n        >\n          {isCreatingComponentAttribute\n            ? formatMessage({\n                id: getTrad('form.button.configure-component'),\n                defaultMessage: 'Configure the component',\n              })\n            : formatMessage({\n                id: getTrad('form.button.select-component'),\n                defaultMessage: 'Configure the component',\n              })}\n        </Button>\n      );\n    }\n\n    return (\n      <Flex gap={2}>\n        <Button\n          variant=\"secondary\"\n          type=\"submit\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onSubmitAddComponentAttribute(e, true);\n          }}\n          startIcon={<Plus />}\n        >\n          {isCreatingComponentWhileAddingAField\n            ? formatMessage({\n                id: getTrad('form.button.add-first-field-to-created-component'),\n                defaultMessage: 'Add first field to the component',\n              })\n            : formatMessage({\n                id: getTrad('form.button.add-field'),\n                defaultMessage: 'Add another field',\n              })}\n        </Button>\n        <Button\n          variant=\"default\"\n          type=\"button\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onClickFinish();\n            onSubmitAddComponentAttribute(e, false);\n          }}\n        >\n          {formatMessage({\n            id: 'global.finish',\n            defaultMessage: 'Finish',\n          })}\n        </Button>\n      </Flex>\n    );\n  }\n\n  if (isAttributeModal && !isComponentAttribute && !isDzAttribute) {\n    return (\n      <Flex gap={2}>\n        <Button\n          type={isEditingAttribute ? 'button' : 'submit'}\n          variant=\"secondary\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onSubmitEditAttribute(e, true);\n          }}\n          startIcon={<Plus />}\n        >\n          {formatMessage({\n            id: getTrad('form.button.add-field'),\n            defaultMessage: 'Add another field',\n          })}\n        </Button>\n        <Button\n          type={isEditingAttribute ? 'submit' : 'button'}\n          variant=\"default\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onClickFinish();\n            onSubmitEditAttribute(e, false);\n          }}\n        >\n          {formatMessage({\n            id: 'global.finish',\n            defaultMessage: 'Finish',\n          })}\n        </Button>\n      </Flex>\n    );\n  }\n\n  if (isContentTypeModal) {\n    return (\n      <Flex gap={2}>\n        {!isCreatingContentType && (\n          <>\n            <Button\n              type=\"button\"\n              variant=\"danger\"\n              onClick={(e: SyntheticEvent) => {\n                e.preventDefault();\n                deleteContentType();\n              }}\n            >\n              {formatMessage({\n                id: 'global.delete',\n                defaultMessage: 'Delete',\n              })}\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"default\"\n              onClick={(e: SyntheticEvent) => {\n                e.preventDefault();\n\n                onSubmitEditContentType(e, false);\n              }}\n            >\n              {formatMessage({\n                id: 'global.finish',\n                defaultMessage: 'Finish',\n              })}\n            </Button>\n          </>\n        )}\n        {isCreatingContentType && (\n          <Button\n            type=\"submit\"\n            variant=\"secondary\"\n            onClick={(e: SyntheticEvent) => {\n              e.preventDefault();\n\n              onSubmitCreateContentType(e, true);\n            }}\n          >\n            {formatMessage({\n              id: 'global.continue',\n              defaultMessage: 'Continue',\n            })}\n          </Button>\n        )}\n      </Flex>\n    );\n  }\n\n  if (isComponentModal) {\n    return (\n      <Flex gap={2}>\n        {!isCreatingComponent && (\n          <>\n            <Button\n              type=\"button\"\n              variant=\"danger\"\n              onClick={(e: SyntheticEvent) => {\n                e.preventDefault();\n                deleteComponent();\n              }}\n            >\n              {formatMessage({\n                id: 'global.delete',\n                defaultMessage: 'Delete',\n              })}\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"default\"\n              onClick={(e: SyntheticEvent) => {\n                e.preventDefault();\n\n                onSubmitEditComponent(e, false);\n              }}\n            >\n              {formatMessage({\n                id: 'global.finish',\n                defaultMessage: 'Finish',\n              })}\n            </Button>\n          </>\n        )}\n        {isCreatingComponent && (\n          <Button\n            type=\"submit\"\n            variant=\"secondary\"\n            onClick={(e: SyntheticEvent) => {\n              e.preventDefault();\n\n              onSubmitCreateComponent(e, true);\n            }}\n          >\n            {formatMessage({\n              id: 'global.continue',\n              defaultMessage: 'Continue',\n            })}\n          </Button>\n        )}\n      </Flex>\n    );\n  }\n\n  if (isCustomFieldModal) {\n    return (\n      <Flex gap={2}>\n        <Button\n          type={isEditingAttribute ? 'button' : 'submit'}\n          variant=\"secondary\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onSubmitEditCustomFieldAttribute(e, true);\n          }}\n          startIcon={<Plus />}\n        >\n          {formatMessage({\n            id: getTrad('form.button.add-field'),\n            defaultMessage: 'Add another field',\n          })}\n        </Button>\n        <Button\n          type={isEditingAttribute ? 'submit' : 'button'}\n          variant=\"default\"\n          onClick={(e: SyntheticEvent) => {\n            e.preventDefault();\n\n            onClickFinish();\n            onSubmitEditCustomFieldAttribute(e, false);\n          }}\n        >\n          {formatMessage({\n            id: 'global.finish',\n            defaultMessage: 'Finish',\n          })}\n        </Button>\n      </Flex>\n    );\n  }\n\n  return null;\n};\n", "/**\n *\n * FormModalHeader\n *\n */\nimport { Box, Flex, Breadcrumbs, Crumb, Link, Modal } from '@strapi/design-system';\nimport { ArrowLeft } from '@strapi/icons';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils';\n\nimport { AttributeIcon, IconByType } from './AttributeIcon';\nimport { useDataManager } from './DataManager/useDataManager';\nimport { useFormModalNavigation } from './FormModalNavigation/useFormModalNavigation';\n\nimport type { Internal } from '@strapi/types';\n\ninterface Header {\n  label: string;\n  info?: { category: string; name: string };\n}\n\ntype BaseProps = {\n  actionType?: string | null;\n  attributeName: string;\n  attributeType: IconByType;\n  contentTypeKind: IconByType;\n  dynamicZoneTarget: string;\n  modalType: string | null;\n  customFieldUid?: string | null;\n  showBackLink?: boolean;\n};\n\ntype FormModalHeaderProps = BaseProps &\n  (\n    | { forTarget: 'component'; targetUid: Internal.UID.Component }\n    | { forTarget: 'contentType'; targetUid: Internal.UID.ContentType }\n  );\n\nexport const FormModalHeader = ({\n  actionType = null,\n  attributeName,\n  attributeType,\n  contentTypeKind,\n  dynamicZoneTarget,\n  forTarget,\n  modalType = null,\n  targetUid,\n  customFieldUid = null,\n  showBackLink = false,\n}: FormModalHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const { components, contentTypes } = useDataManager();\n  const { onOpenModalAddField } = useFormModalNavigation();\n\n  let icon: IconByType = 'component';\n  let headers: Header[] = [];\n\n  const type = forTarget === 'component' ? components[targetUid] : contentTypes[targetUid];\n\n  const displayName = type?.info.displayName;\n\n  if (modalType === 'contentType') {\n    icon = contentTypeKind;\n  }\n\n  if (['component'].includes(modalType || '')) {\n    icon = 'component';\n  }\n\n  const isCreatingMainSchema = ['component', 'contentType'].includes(modalType || '');\n\n  if (isCreatingMainSchema) {\n    let headerId = getTrad(`modalForm.component.header-${actionType}`);\n\n    if (modalType === 'contentType') {\n      headerId = getTrad(`modalForm.${contentTypeKind}.header-create`);\n    }\n\n    if (actionType === 'edit') {\n      headerId = getTrad(`modalForm.header-edit`);\n    }\n\n    return (\n      <Modal.Header>\n        <Flex>\n          <Box>\n            <AttributeIcon type={icon} />\n          </Box>\n          <Box paddingLeft={3}>\n            <Modal.Title>{formatMessage({ id: headerId }, { name: displayName })}</Modal.Title>\n          </Box>\n        </Flex>\n      </Modal.Header>\n    );\n  }\n\n  headers = [\n    {\n      label: displayName,\n      info: {\n        category: ('category' in type && type?.category) || '',\n        name: type?.info?.displayName,\n      },\n    },\n  ];\n\n  if (modalType === 'chooseAttribute') {\n    icon = forTarget === 'component' ? 'component' : 'kind' in type ? type.kind : '';\n  }\n\n  if (modalType === 'addComponentToDynamicZone') {\n    icon = 'dynamiczone';\n    headers.push({ label: dynamicZoneTarget });\n  }\n\n  if (modalType === 'attribute' || modalType === 'customField') {\n    icon = attributeType;\n    headers.push({ label: attributeName });\n  }\n\n  return (\n    <Modal.Header>\n      <Flex gap={3}>\n        {showBackLink && (\n          // This is a workaround and should use the LinkButton with a variant that currently doesn't exist\n          <Link\n            aria-label={formatMessage({\n              id: getTrad('modalForm.header.back'),\n              defaultMessage: 'Back',\n            })}\n            startIcon={<ArrowLeft />}\n            onClick={() => onOpenModalAddField({ forTarget, targetUid })}\n            href=\"#back\"\n            isExternal={false}\n          />\n        )}\n        <AttributeIcon type={icon} customField={customFieldUid} />\n\n        <Breadcrumbs label={headers.map(({ label }) => label).join(',')}>\n          {headers.map(({ label, info }, index, arr) => {\n            label = upperFirst(label);\n\n            if (!label) {\n              return null;\n            }\n\n            const key = `${label}.${index}`;\n\n            if (info?.category) {\n              label = `${label} (${upperFirst(info.category)} - ${upperFirst(info.name)})`;\n            }\n\n            return (\n              <Crumb isCurrent={index === arr.length - 1} key={key}>\n                {label}\n              </Crumb>\n            );\n          })}\n        </Breadcrumbs>\n      </Flex>\n    </Modal.Header>\n  );\n};\n", "import { StrapiAppContextValue } from '@strapi/admin/strapi-admin';\nimport { Flex, Typography } from '@strapi/design-system';\nimport upperFirst from 'lodash/upperFirst';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils';\n\nimport type { Struct } from '@strapi/types';\n\ntype ModalTitleProps = {\n  forTarget?: Struct.ModelType;\n  step?: string;\n  kind?: string;\n  modalType?: string;\n  actionType?: string;\n};\n\nexport const getModalTitleSubHeader = ({\n  modalType,\n  forTarget,\n  kind,\n  actionType,\n  step,\n}: ModalTitleProps) => {\n  switch (modalType) {\n    case 'chooseAttribute':\n      return getTrad(\n        `modalForm.sub-header.chooseAttribute.${\n          forTarget?.includes('component') ? 'component' : kind || 'collectionType'\n        }`\n      );\n    case 'attribute': {\n      return getTrad(\n        `modalForm.sub-header.attribute.${actionType}${\n          step !== 'null' && step !== null && actionType !== 'edit' ? '.step' : ''\n        }`\n      );\n    }\n    case 'customField': {\n      return getTrad(`modalForm.sub-header.attribute.${actionType}`);\n    }\n    case 'addComponentToDynamicZone':\n      return getTrad('modalForm.sub-header.addComponentToDynamicZone');\n    default:\n      return getTrad('configurations');\n  }\n};\n\ntype FormModalSubHeaderProps = {\n  actionType: string;\n  modalType: string;\n  forTarget: Struct.ModelType;\n  kind?: string;\n  step?: string;\n  attributeType: string;\n  attributeName: string;\n  customField?: ReturnType<StrapiAppContextValue['customFields']['get']>;\n};\n\nexport const FormModalSubHeader = ({\n  actionType,\n  modalType,\n  forTarget,\n  kind,\n  step,\n  attributeType,\n  attributeName,\n  customField,\n}: FormModalSubHeaderProps) => {\n  const { formatMessage } = useIntl();\n  const intlLabel =\n    modalType === 'customField'\n      ? customField?.intlLabel\n      : { id: getTrad(`attribute.${attributeType}`) };\n\n  return (\n    <Flex direction=\"column\" alignItems=\"flex-start\" paddingBottom={1} gap={1}>\n      <Typography tag=\"h2\" variant=\"beta\">\n        {formatMessage(\n          {\n            id: getModalTitleSubHeader({\n              actionType,\n              forTarget,\n              kind,\n              step,\n              modalType,\n            }),\n            defaultMessage: 'Add new field',\n          },\n          {\n            type: intlLabel ? upperFirst(formatMessage(intlLabel)) : '',\n            name: upperFirst(attributeName),\n            step,\n          }\n        )}\n      </Typography>\n      <Typography variant=\"pi\" textColor=\"neutral600\">\n        {formatMessage({\n          id: getTrad(`attribute.${attributeType}.description`),\n          defaultMessage: 'A type for modeling data',\n        })}\n      </Typography>\n    </Flex>\n  );\n};\n", "import { useEffect, useRef, useState } from 'react';\n\nimport {\n  Box,\n  Field,\n  Flex,\n  IconButton,\n  inputFocusStyle,\n  Searchbar,\n  Tooltip,\n  Typography,\n  VisuallyHidden,\n} from '@strapi/design-system';\nimport { Search, Trash } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { getTrad } from '../../utils';\n\nimport { COMPONENT_ICONS } from './constants';\n\nimport type { IntlLabel } from '../../types';\n\nconst IconPickerWrapper = styled(Flex)`\n  label {\n    ${inputFocusStyle() as any}\n    border-radius: ${({ theme }) => theme.borderRadius};\n    border: 1px solid ${({ theme }) => theme.colors.neutral100};\n  }\n`;\n\ntype Icons = keyof typeof COMPONENT_ICONS;\n\ninterface IconPickProps {\n  iconKey: Icons;\n  name: string;\n  onChange: (value: any) => void;\n  isSelected: boolean;\n  ariaLabel: string;\n}\n\nconst IconPick = ({ iconKey, name, onChange, isSelected, ariaLabel }: IconPickProps) => {\n  const Icon = COMPONENT_ICONS[iconKey];\n\n  return (\n    <Field.Root name={name} required={false}>\n      <Field.Label>\n        <VisuallyHidden>\n          {ariaLabel}\n          <Field.Input\n            type=\"radio\"\n            checked={isSelected}\n            onChange={onChange}\n            value={iconKey}\n            aria-checked={isSelected}\n          />\n        </VisuallyHidden>\n        <Tooltip label={iconKey}>\n          <Flex\n            padding={2}\n            cursor=\"pointer\"\n            hasRadius\n            background={isSelected ? 'primary200' : undefined}\n          >\n            <Icon width={'2rem'} height={'2rem'} fill={isSelected ? 'primary600' : 'neutral300'} />\n          </Flex>\n        </Tooltip>\n      </Field.Label>\n    </Field.Root>\n  );\n};\n\nexport interface IconPickerProps {\n  intlLabel: IntlLabel;\n  name: string;\n  onChange: (value: { target: { name: string; value: string } }) => void;\n  value?: string;\n}\n\nexport const IconPicker = ({ intlLabel, name, onChange, value = '' }: IconPickerProps) => {\n  const { formatMessage } = useIntl();\n  const [showSearch, setShowSearch] = useState(false);\n  const [search, setSearch] = useState('');\n  const allIcons = Object.keys(COMPONENT_ICONS) as Icons[];\n  const [icons, setIcons] = useState(allIcons);\n  const searchIconRef = useRef(null);\n  const searchBarRef = useRef(null);\n\n  const toggleSearch = () => {\n    setShowSearch(!showSearch);\n  };\n\n  const onChangeSearch = ({ target: { value } }: { target: { value: string } }) => {\n    setSearch(value);\n    setIcons(() => allIcons.filter((icon) => icon.toLowerCase().includes(value.toLowerCase())));\n  };\n\n  const onClearSearch = () => {\n    toggleSearch();\n    setSearch('');\n    setIcons(allIcons);\n  };\n\n  const removeIconSelected = () => {\n    onChange({ target: { name, value: '' } });\n  };\n\n  useEffect(() => {\n    if (showSearch) {\n      (searchBarRef.current as unknown as HTMLInputElement)?.focus();\n    }\n  }, [showSearch]);\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" paddingBottom={2}>\n        <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"neutral800\" tag=\"label\">\n          {formatMessage(intlLabel)}\n        </Typography>\n        <Flex gap={1}>\n          {showSearch ? (\n            <Searchbar\n              ref={searchBarRef}\n              name=\"searchbar\"\n              placeholder={formatMessage({\n                id: getTrad('ComponentIconPicker.search.placeholder'),\n                defaultMessage: 'Search for an icon',\n              })}\n              onBlur={() => {\n                if (!search) {\n                  toggleSearch();\n                }\n              }}\n              onChange={onChangeSearch}\n              value={search}\n              onClear={onClearSearch}\n              clearLabel={formatMessage({\n                id: getTrad('IconPicker.search.clear.label'),\n                defaultMessage: 'Clear the icon search',\n              })}\n            >\n              {formatMessage({\n                id: getTrad('IconPicker.search.placeholder.label'),\n                defaultMessage: 'Search for an icon',\n              })}\n            </Searchbar>\n          ) : (\n            <IconButton\n              ref={searchIconRef}\n              onClick={toggleSearch}\n              withTooltip={false}\n              label={formatMessage({\n                id: getTrad('IconPicker.search.button.label'),\n                defaultMessage: 'Search icon button',\n              })}\n              variant=\"ghost\"\n            >\n              <Search />\n            </IconButton>\n          )}\n          {value && (\n            <Tooltip\n              label={formatMessage({\n                id: getTrad('IconPicker.remove.tooltip'),\n                defaultMessage: 'Remove the selected icon',\n              })}\n            >\n              <IconButton\n                onClick={removeIconSelected}\n                withTooltip={false}\n                label={formatMessage({\n                  id: getTrad('IconPicker.remove.button'),\n                  defaultMessage: 'Remove the selected icon',\n                })}\n                variant=\"ghost\"\n              >\n                <Trash />\n              </IconButton>\n            </Tooltip>\n          )}\n        </Flex>\n      </Flex>\n      <IconPickerWrapper\n        position=\"relative\"\n        padding={1}\n        background=\"neutral100\"\n        hasRadius\n        wrap=\"wrap\"\n        gap={2}\n        maxHeight=\"126px\"\n        overflow=\"auto\"\n        textAlign=\"center\"\n      >\n        {icons.length > 0 ? (\n          icons.map((iconKey) => (\n            <IconPick\n              key={iconKey}\n              iconKey={iconKey}\n              name={name}\n              onChange={onChange}\n              isSelected={iconKey === value}\n              ariaLabel={formatMessage(\n                {\n                  id: getTrad('IconPicker.icon.label'),\n                  defaultMessage: 'Select {icon} icon',\n                },\n                { icon: iconKey }\n              )}\n            />\n          ))\n        ) : (\n          <Box padding={4} grow={2}>\n            <Typography variant=\"delta\" textColor=\"neutral600\" textAlign=\"center\">\n              {formatMessage({\n                id: getTrad('IconPicker.emptyState.label'),\n                defaultMessage: 'No icon found',\n              })}\n            </Typography>\n          </Box>\n        )}\n      </IconPickerWrapper>\n    </>\n  );\n};\n", "import { useEffect, useRef } from 'react';\n\nimport { Field, TextInput } from '@strapi/design-system';\nimport pluralize from 'pluralize';\nimport { useIntl } from 'react-intl';\n\nimport { nameToSlug } from '../utils/nameToSlug';\n\nimport type { IntlLabel } from '../types';\n\ninterface Description {\n  id: string;\n  defaultMessage: string;\n  values?: Record<string, any>;\n}\n\ninterface PluralNameProps {\n  description?: Description;\n  error?: string;\n  intlLabel: IntlLabel;\n  modifiedData: Record<string, any>;\n  name: string;\n  onChange: (value: { target: { name: string; value: string } }) => void;\n  value?: string;\n}\n\nexport const PluralName = ({\n  description,\n  error,\n  intlLabel,\n  modifiedData,\n  name,\n  onChange,\n  value,\n}: PluralNameProps) => {\n  const { formatMessage } = useIntl();\n  const onChangeRef = useRef(onChange);\n  const displayName = modifiedData?.displayName || '';\n  const previousDisplayName = useRef(displayName);\n  const previousValue = useRef(value);\n\n  useEffect(() => {\n    if (displayName && displayName !== previousDisplayName.current) {\n      const baseValue = nameToSlug(displayName);\n      let newValue = baseValue;\n\n      try {\n        newValue = pluralize(baseValue, 2);\n      } catch (err) {\n        // If pluralize fails, use the base value\n      }\n\n      onChangeRef.current({ target: { name, value: newValue } });\n      previousValue.current = newValue;\n      previousDisplayName.current = displayName;\n    } else if (!displayName) {\n      onChangeRef.current({ target: { name, value: '' } });\n      previousValue.current = '';\n      previousDisplayName.current = '';\n    }\n  }, [displayName, name, value]);\n\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n  const hint = description\n    ? formatMessage(\n        { id: description.id, defaultMessage: description.defaultMessage },\n        { ...description.values }\n      )\n    : '';\n  const label = formatMessage(intlLabel);\n\n  return (\n    <Field.Root error={errorMessage} hint={hint} name={name}>\n      <Field.Label>{label}</Field.Label>\n      <TextInput onChange={onChange} value={value || ''} />\n      <Field.Error />\n    </Field.Root>\n  );\n};\n", "export const parseDateValue = (value: unknown): Date | undefined => {\n  if (value instanceof Date && isValidDate(value)) {\n    return value;\n  }\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    const date = new Date(value);\n    if (isValidDate(date)) {\n      return date;\n    }\n  }\n};\n\nconst isValidDate = (date: Date): boolean => !isNaN(date.getTime());\n", "type TimeChangeHandler = (params: {\n  target: { name: string; value: string | undefined; type: string };\n}) => void;\n\ntype TimeChangeParams = {\n  value?: string;\n  onChange: TimeChangeHandler;\n  name: string;\n  type: string;\n};\n\n// The backend sends a value which has the following format: '00:45:00.000'\n// but the time picker only supports hours & minutes so we need to mutate the value\nconst removeSeconds = (time: string): string => {\n  const [hours, minutes] = time.split(':');\n  return `${hours}:${minutes}`;\n};\n\n// we need to send back the value with the same '00:45:00.000' format\nconst addSecondsAndMilliseconds = (time: string): string => {\n  return time.split(':').length === 2 ? `${time}:00.000` : time;\n};\n\nconst formatTimeForInput = (value?: string): string | undefined => {\n  if (!value) return;\n  return value.split(':').length > 2 ? removeSeconds(value) : value;\n};\n\nconst formatTimeForOutput = (value?: string): string | undefined => {\n  if (!value) return undefined;\n  return addSecondsAndMilliseconds(value);\n};\n\nexport const handleTimeChange = ({ value }: TimeChangeParams): string | undefined => {\n  const formattedInputTime = formatTimeForInput(value);\n\n  return formattedInputTime;\n};\n\nexport const handleTimeChangeEvent = (\n  onChange: TimeChangeHandler,\n  name: string,\n  type: string,\n  time?: string\n): void => {\n  const formattedOutputTime = formatTimeForOutput(time);\n\n  onChange({\n    target: {\n      name,\n      value: formattedOutputTime,\n      type,\n    },\n  });\n};\n", "/**\n * TODO: we should be using the FormRenderer from the admin to do this,\n * but the CTB has no tests or types, so we can't refactor it safely.\n * So we're just adding this to the tech debt.\n */\n\nimport * as React from 'react';\n\nimport {\n  Checkbox,\n  DatePicker,\n  DateTimePicker,\n  Field,\n  JSONInput,\n  NumberInput,\n  SingleSelect,\n  SingleSelectOption,\n  Textarea,\n  TextInput,\n  TimePicker,\n  Toggle,\n} from '@strapi/design-system';\nimport { Eye, EyeStriked } from '@strapi/icons';\nimport formatISO from 'date-fns/formatISO';\nimport isEqual from 'lodash/isEqual';\nimport { type MessageDescriptor, type PrimitiveType, useIntl } from 'react-intl';\n\nimport { parseDateValue } from '../utils/parseDateValue';\nimport { handleTimeChange, handleTimeChangeEvent } from '../utils/timeFormat';\n\nimport type { Schema } from '@strapi/types';\n\ninterface TranslationMessage extends MessageDescriptor {\n  values?: Record<string, PrimitiveType>;\n}\n\ninterface InputOption {\n  metadatas: {\n    intlLabel: TranslationMessage;\n    disabled: boolean;\n    hidden: boolean;\n  };\n  key: string;\n  value: string;\n}\n\ninterface CustomInputProps<\n  TAttribute extends Schema.Attribute.AnyAttribute = Schema.Attribute.AnyAttribute,\n> {\n  attribute?: TAttribute;\n  autoComplete?: string;\n  description?: TranslationMessage;\n  disabled?: boolean;\n  error?: string;\n  hint?: string | React.JSX.Element | (string | React.JSX.Element)[];\n  intlLabel: TranslationMessage;\n  labelAction?: React.ReactNode;\n  name: string;\n  onChange: (\n    payload: {\n      target: {\n        name: string;\n        value: Schema.Attribute.Value<TAttribute>;\n        type?: string;\n      };\n    },\n    shouldSetInitialValue?: boolean\n  ) => void;\n  onDelete?: () => void;\n  options?: InputOption[];\n  placeholder?: TranslationMessage;\n  required?: boolean;\n  step?: number;\n  type: string;\n  value?: Schema.Attribute.Value<TAttribute>;\n  autoFocus?: boolean;\n  attributeName?: string;\n  conditionFields?: Record<string, boolean>;\n}\n\ninterface GenericInputProps<\n  TAttribute extends Schema.Attribute.AnyAttribute = Schema.Attribute.AnyAttribute,\n> {\n  attribute?: TAttribute;\n  autoComplete?: string;\n  customInputs?: Record<string, React.ComponentType<CustomInputProps<TAttribute>>>;\n  description?: TranslationMessage;\n  disabled?: boolean;\n  error?: string | TranslationMessage;\n  intlLabel: TranslationMessage;\n  labelAction?: React.ReactNode;\n  name: string;\n  onChange: (\n    payload: {\n      target: {\n        name: string;\n        value: Schema.Attribute.Value<TAttribute>;\n        type?: string;\n      };\n    },\n    shouldSetInitialValue?: boolean\n  ) => void;\n  onDelete?: () => void;\n  options?: InputOption[];\n  placeholder?: TranslationMessage;\n  required?: boolean;\n  step?: number;\n  type: string;\n  // TODO: The value depends on the input type, too complicated to handle all cases here\n  value?: Schema.Attribute.Value<TAttribute>;\n  isNullable?: boolean;\n  autoFocus?: boolean;\n  attributeName?: string;\n  conditionFields?: Record<string, boolean>;\n}\n\nconst GenericInput = ({\n  autoComplete,\n  customInputs,\n  description,\n  disabled,\n  intlLabel,\n  labelAction,\n  error,\n  name,\n  onChange,\n  onDelete,\n  options = [],\n  placeholder,\n  required,\n  step,\n  type,\n  value: defaultValue,\n  isNullable,\n  autoFocus,\n  attribute,\n  attributeName,\n  conditionFields,\n  ...rest\n}: GenericInputProps) => {\n  const { formatMessage } = useIntl();\n\n  // TODO: Workaround to get the field hint values if they exist on the type\n  const getFieldHintValue = (\n    attribute?: Schema.Attribute.AnyAttribute,\n    key?: keyof FieldSchema\n  ) => {\n    if (!attribute) return;\n\n    if (key === 'minLength' && key in attribute) {\n      return attribute[key];\n    }\n\n    if (key === 'maxLength' && key in attribute) {\n      return attribute[key];\n    }\n\n    if (key === 'max' && key in attribute) {\n      return attribute[key];\n    }\n\n    if (key === 'min' && key in attribute) {\n      return attribute[key];\n    }\n  };\n\n  const { hint } = useFieldHint({\n    description,\n    fieldSchema: {\n      minLength: getFieldHintValue(attribute, 'minLength'),\n      maxLength: getFieldHintValue(attribute, 'maxLength'),\n      max: getFieldHintValue(attribute, 'max'),\n      min: getFieldHintValue(attribute, 'min'),\n    },\n    type: attribute?.type || type,\n  });\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const CustomInput = customInputs ? customInputs[type] : null;\n\n  // the API always returns null, which throws an error in React,\n  // therefore we cast this case to undefined\n  const value = defaultValue ?? undefined;\n\n  /*\n   TODO: ideally we should pass in `defaultValue` and `value` for\n   inputs, in order to make them controlled components. This variable\n   acts as a fallback for now, to prevent React errors in devopment mode\n\n   See: https://github.com/strapi/strapi/pull/12861\n  */\n  const valueWithEmptyStringFallback = value ?? '';\n\n  function getErrorMessage(error: string | TranslationMessage | undefined) {\n    if (!error) {\n      return null;\n    }\n\n    if (typeof error === 'string') {\n      return formatMessage({ id: error, defaultMessage: error });\n    }\n\n    const values = {\n      ...error.values,\n    };\n\n    return formatMessage(\n      {\n        id: error.id,\n        defaultMessage: error?.defaultMessage ?? error.id,\n      },\n      values\n    );\n  }\n\n  const errorMessage = getErrorMessage(error) ?? undefined;\n\n  if (CustomInput) {\n    return (\n      <CustomInput\n        {...rest}\n        attribute={attribute}\n        description={description}\n        hint={hint}\n        disabled={disabled}\n        intlLabel={intlLabel}\n        labelAction={labelAction}\n        error={errorMessage || ''}\n        name={name}\n        onChange={onChange}\n        onDelete={onDelete}\n        options={options}\n        required={required}\n        placeholder={placeholder}\n        type={type}\n        value={value}\n        autoFocus={autoFocus}\n        attributeName={attributeName}\n        conditionFields={conditionFields}\n      />\n    );\n  }\n\n  const label = intlLabel.id\n    ? formatMessage(\n        { id: intlLabel.id, defaultMessage: intlLabel.defaultMessage },\n        { ...intlLabel.values }\n      )\n    : name;\n\n  const formattedPlaceholder = placeholder\n    ? formatMessage(\n        { id: placeholder.id, defaultMessage: placeholder.defaultMessage },\n        { ...placeholder.values }\n      )\n    : '';\n\n  const getComponent = () => {\n    switch (type) {\n      case 'json': {\n        return (\n          <JSONInput\n            value={value}\n            disabled={disabled}\n            onChange={(json) => {\n              // Default to null when the field is not required and there is no input value\n              const value =\n                attribute && 'required' in attribute && !attribute?.required && !json.length\n                  ? null\n                  : json;\n              onChange({ target: { name, value } }, false);\n            }}\n            minHeight=\"25.2rem\"\n            maxHeight=\"50.4rem\"\n          />\n        );\n      }\n      case 'bool': {\n        return (\n          <Toggle\n            checked={defaultValue === null ? null : defaultValue || false}\n            disabled={disabled}\n            offLabel={formatMessage({\n              id: 'app.components.ToggleCheckbox.off-label',\n              defaultMessage: 'False',\n            })}\n            onLabel={formatMessage({\n              id: 'app.components.ToggleCheckbox.on-label',\n              defaultMessage: 'True',\n            })}\n            onChange={(e) => {\n              onChange({ target: { name, value: e.target.checked } });\n            }}\n          />\n        );\n      }\n      case 'checkbox': {\n        return (\n          <Checkbox\n            disabled={disabled}\n            onCheckedChange={(value) => {\n              onChange({ target: { name, value } });\n            }}\n            checked={Boolean(value)}\n          >\n            {label}\n          </Checkbox>\n        );\n      }\n      case 'datetime': {\n        const dateValue = parseDateValue(value);\n        return (\n          <DateTimePicker\n            clearLabel={formatMessage({ id: 'clearLabel', defaultMessage: 'Clear' })}\n            disabled={disabled}\n            onChange={(date) => {\n              // check if date is not null or undefined\n              const formattedDate = date ? date.toISOString() : null;\n\n              onChange({ target: { name, value: formattedDate, type } });\n            }}\n            onClear={() => onChange({ target: { name, value: null, type } })}\n            placeholder={formattedPlaceholder}\n            value={dateValue}\n          />\n        );\n      }\n      case 'date': {\n        const dateValue = parseDateValue(value);\n        return (\n          <DatePicker\n            clearLabel={formatMessage({ id: 'clearLabel', defaultMessage: 'Clear' })}\n            disabled={disabled}\n            onChange={(date) => {\n              onChange({\n                target: {\n                  name,\n                  value: date ? formatISO(date, { representation: 'date' }) : null,\n                  type,\n                },\n              });\n            }}\n            onClear={() => onChange({ target: { name, value: null, type } })}\n            placeholder={formattedPlaceholder}\n            value={dateValue}\n          />\n        );\n      }\n      case 'number': {\n        return (\n          <NumberInput\n            disabled={disabled}\n            onValueChange={(value) => {\n              onChange({ target: { name, value, type } });\n            }}\n            placeholder={formattedPlaceholder}\n            step={step}\n            value={value}\n            autoFocus={autoFocus}\n          />\n        );\n      }\n      case 'email': {\n        return (\n          <TextInput\n            autoComplete={autoComplete}\n            disabled={disabled}\n            onChange={(e) => {\n              onChange({ target: { name, value: e.target.value, type } });\n            }}\n            placeholder={formattedPlaceholder}\n            type=\"email\"\n            value={valueWithEmptyStringFallback}\n            autoFocus={autoFocus}\n          />\n        );\n      }\n      case 'timestamp':\n      case 'text':\n      case 'string': {\n        return (\n          <TextInput\n            autoComplete={autoComplete}\n            disabled={disabled}\n            onChange={(e) => {\n              onChange({ target: { name, value: e.target.value, type } });\n            }}\n            placeholder={formattedPlaceholder}\n            type=\"text\"\n            value={valueWithEmptyStringFallback}\n            autoFocus={autoFocus}\n          />\n        );\n      }\n      case 'password': {\n        return (\n          <TextInput\n            autoComplete={autoComplete}\n            disabled={disabled}\n            endAction={\n              <button\n                aria-label={formatMessage({\n                  id: 'Auth.form.password.show-password',\n                  defaultMessage: 'Show password',\n                })}\n                onClick={() => {\n                  setShowPassword((prev) => !prev);\n                }}\n                style={{\n                  border: 'none',\n                  padding: 0,\n                  background: 'transparent',\n                }}\n                type=\"button\"\n              >\n                {showPassword ? <Eye fill=\"neutral500\" /> : <EyeStriked fill=\"neutral500\" />}\n              </button>\n            }\n            onChange={(e) => {\n              onChange({ target: { name, value: e.target.value, type } });\n            }}\n            placeholder={formattedPlaceholder}\n            type={showPassword ? 'text' : 'password'}\n            value={valueWithEmptyStringFallback}\n          />\n        );\n      }\n      case 'select': {\n        return (\n          <SingleSelect\n            disabled={disabled}\n            onChange={(value) => {\n              onChange({ target: { name, value, type: 'select' } });\n            }}\n            placeholder={formattedPlaceholder}\n            value={value}\n          >\n            {options.map(({ metadatas: { intlLabel, disabled, hidden }, key, value }) => {\n              return (\n                <SingleSelectOption key={key} value={value} disabled={disabled} hidden={hidden}>\n                  {formatMessage(intlLabel)}\n                </SingleSelectOption>\n              );\n            })}\n          </SingleSelect>\n        );\n      }\n      case 'textarea': {\n        return (\n          <Textarea\n            disabled={disabled}\n            onChange={(event) => onChange({ target: { name, value: event.target.value, type } })}\n            placeholder={formattedPlaceholder}\n            value={valueWithEmptyStringFallback}\n          />\n        );\n      }\n      case 'time': {\n        const formattedValue = handleTimeChange({ value, onChange, name, type });\n\n        return (\n          <TimePicker\n            clearLabel={formatMessage({ id: 'clearLabel', defaultMessage: 'Clear' })}\n            disabled={disabled}\n            onChange={(time) => handleTimeChangeEvent(onChange, name, type, time)}\n            onClear={() => handleTimeChangeEvent(onChange, name, type, undefined)}\n            value={formattedValue}\n          />\n        );\n      }\n      default: {\n        /**\n         * If there's no component for the given type, we return a disabled text input\n         * showing a \"Not supported\" title to illustrate the issue.\n         */\n        return <TextInput disabled placeholder=\"Not supported\" type=\"text\" value=\"\" />;\n      }\n    }\n  };\n\n  return (\n    <Field.Root error={errorMessage} name={name} hint={hint} required={required}>\n      {type !== 'checkbox' ? <Field.Label action={labelAction}>{label}</Field.Label> : null}\n      {getComponent()}\n      <Field.Error />\n      <Field.Hint />\n    </Field.Root>\n  );\n};\n\ntype FieldSchema = {\n  minLength?: number | string;\n  maxLength?: number | string;\n  max?: number | string;\n  min?: number | string;\n};\ninterface UseFieldHintProps {\n  description?: MessageDescriptor & { values?: Record<string, PrimitiveType> };\n  fieldSchema?: FieldSchema;\n  type?: string;\n}\n\n/**\n * @description\n * A hook for generating the hint for a field\n */\nconst useFieldHint = ({ description, fieldSchema, type }: UseFieldHintProps) => {\n  const { formatMessage } = useIntl();\n\n  const buildDescription = () =>\n    description?.id\n      ? formatMessage(\n          { id: description.id, defaultMessage: description.defaultMessage },\n          { ...description.values }\n        )\n      : '';\n\n  const buildHint = () => {\n    const { maximum, minimum } = getMinMax(fieldSchema);\n    const units = getFieldUnits({\n      type,\n      minimum,\n      maximum,\n    });\n\n    const minIsNumber = typeof minimum === 'number';\n    const maxIsNumber = typeof maximum === 'number';\n    const hasMinAndMax = maxIsNumber && minIsNumber;\n    const hasMinOrMax = maxIsNumber || minIsNumber;\n\n    if (!description?.id && !hasMinOrMax) {\n      return '';\n    }\n\n    return formatMessage(\n      {\n        id: 'content-manager.form.Input.hint.text',\n        defaultMessage:\n          '{min, select, undefined {} other {min. {min}}}{divider}{max, select, undefined {} other {max. {max}}}{unit}{br}{description}',\n      },\n      {\n        min: minimum,\n        max: maximum,\n        description: buildDescription(),\n        unit: units?.message && hasMinOrMax ? formatMessage(units.message, units.values) : null,\n        divider: hasMinAndMax\n          ? formatMessage({\n              id: 'content-manager.form.Input.hint.minMaxDivider',\n              defaultMessage: ' / ',\n            })\n          : null,\n        br: hasMinOrMax ? <br /> : null,\n      }\n    );\n  };\n\n  return { hint: buildHint() };\n};\n\nconst getFieldUnits = ({\n  type,\n  minimum,\n  maximum,\n}: {\n  type?: string;\n  minimum?: number;\n  maximum?: number;\n}) => {\n  if (type && ['biginteger', 'integer', 'number'].includes(type)) {\n    return {};\n  }\n  const maxValue = Math.max(minimum || 0, maximum || 0);\n\n  return {\n    message: {\n      id: 'content-manager.form.Input.hint.character.unit',\n      defaultMessage: '{maxValue, plural, one { character} other { characters}}',\n    },\n    values: {\n      maxValue,\n    },\n  };\n};\n\nconst getMinMax = (fieldSchema?: FieldSchema) => {\n  if (!fieldSchema) {\n    return { maximum: undefined, minimum: undefined };\n  }\n\n  const { minLength, maxLength, max, min } = fieldSchema;\n\n  let minimum;\n  let maximum;\n\n  const parsedMin = Number(min);\n  const parsedMinLength = Number(minLength);\n\n  if (!Number.isNaN(parsedMin)) {\n    minimum = parsedMin;\n  } else if (!Number.isNaN(parsedMinLength)) {\n    minimum = parsedMinLength;\n  }\n\n  const parsedMax = Number(max);\n  const parsedMaxLength = Number(maxLength);\n\n  if (!Number.isNaN(parsedMax)) {\n    maximum = parsedMax;\n  } else if (!Number.isNaN(parsedMaxLength)) {\n    maximum = parsedMaxLength;\n  }\n\n  return { maximum, minimum };\n};\n\n/**\n * we've memoized this component because we use a context to store all the data in our form in the content-manager.\n * This then causes _every_ component to re-render because there are no selects incurring performance issues\n * in content-types as the content-type gets more complicated.\n */\nconst MemoizedGenericInput = React.memo(GenericInput, isEqual);\n\nexport type { GenericInputProps, CustomInputProps };\nexport { MemoizedGenericInput as GenericInput };\n", "import { Menu } from '@strapi/design-system';\nimport { useDispatch } from 'react-redux';\nimport { styled } from 'styled-components';\n\nimport { isAllowedContentTypesForRelations } from '../../../../utils';\nimport { useDataManager } from '../../../DataManager/useDataManager';\nimport { actions } from '../../../FormModal/reducer';\n\nimport type { Internal, Schema } from '@strapi/types';\ninterface RelationTargetPickerProps {\n  oneThatIsCreatingARelationWithAnother: string;\n  target: Internal.UID.ContentType;\n}\n\ntype SelectOpts = {\n  uid: string;\n  plugin?: string;\n  title: string;\n  restrictRelationsTo: Schema.Attribute.RelationKind.Any[] | null;\n};\n\nexport const RelationTargetPicker = ({\n  oneThatIsCreatingARelationWithAnother,\n  target,\n}: RelationTargetPickerProps) => {\n  const { contentTypes, sortedContentTypesList } = useDataManager();\n  const dispatch = useDispatch();\n  // TODO: replace with an obj { relation: 'x', bidirctional: true|false }\n  const allowedContentTypesForRelation = sortedContentTypesList.filter(\n    isAllowedContentTypesForRelations\n  );\n\n  const type = contentTypes[target];\n\n  if (!type) {\n    return null;\n  }\n\n  const handleSelect =\n    ({ uid, plugin, title, restrictRelationsTo }: SelectOpts) =>\n    () => {\n      const selectedContentTypeFriendlyName = plugin ? `${plugin}_${title}` : title;\n\n      dispatch(\n        actions.onChangeRelationTarget({\n          target: {\n            value: uid,\n            oneThatIsCreatingARelationWithAnother,\n            selectedContentTypeFriendlyName,\n            targetContentTypeAllowedRelations: restrictRelationsTo,\n          },\n        })\n      );\n    };\n\n  /**\n   * TODO: This should be a Select but the design doesn't match the\n   * styles of the select component and there isn't the ability to\n   * change it correctly.\n   */\n  return (\n    <Menu.Root>\n      <MenuTrigger>{`${type.info.displayName} ${type.plugin ? `(from: ${type.plugin})` : ''}`}</MenuTrigger>\n      <Menu.Content zIndex=\"popover\">\n        {allowedContentTypesForRelation.map(({ uid, title, restrictRelationsTo, plugin }) => (\n          <Menu.Item key={uid} onSelect={handleSelect({ uid, plugin, title, restrictRelationsTo })}>\n            {title}&nbsp;\n            {plugin && <>(from: {plugin})</>}\n          </Menu.Item>\n        ))}\n      </Menu.Content>\n    </Menu.Root>\n  );\n};\n\nconst MenuTrigger = styled(Menu.Trigger)`\n  max-width: 16.8rem;\n  span {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n", "import { Box, Divider, Flex, Typography } from '@strapi/design-system';\n\nimport { getTrad } from '../../../utils/getTrad';\nimport { GenericInput } from '../../GenericInputs';\n\nimport { RelationTargetPicker } from './RelationTargetPicker/RelationTargetPicker';\n\nimport type { Internal } from '@strapi/types';\n\ninterface RelationFormBoxProps {\n  disabled?: boolean;\n  error?: Record<string, any>;\n  header?: string;\n  isMain?: boolean;\n  name: string;\n  onChange: (value: any) => void;\n  oneThatIsCreatingARelationWithAnother?: string;\n  target?: Internal.UID.ContentType;\n  value?: string;\n}\n\nexport const RelationFormBox = ({\n  disabled = false,\n  error,\n  header,\n  isMain = false,\n  name,\n  onChange,\n  oneThatIsCreatingARelationWithAnother = '',\n  target,\n  value = '',\n}: RelationFormBoxProps) => {\n  return (\n    <Box background=\"neutral100\" hasRadius borderColor=\"neutral200\">\n      <Flex paddingTop={isMain ? 4 : 1} paddingBottom={isMain ? 3 : 1} justifyContent=\"center\">\n        {isMain ? (\n          <Typography variant=\"pi\" fontWeight=\"bold\" textColor=\"neutral800\">\n            {header}\n          </Typography>\n        ) : (\n          <RelationTargetPicker\n            target={target!}\n            oneThatIsCreatingARelationWithAnother={oneThatIsCreatingARelationWithAnother}\n          />\n        )}\n      </Flex>\n      <Divider background=\"neutral200\" />\n      <Box padding={4}>\n        <GenericInput\n          disabled={disabled}\n          error={error?.id || null}\n          intlLabel={{\n            id: getTrad('form.attribute.item.defineRelation.fieldName'),\n            defaultMessage: 'Field name',\n          }}\n          name={name}\n          onChange={onChange}\n          type=\"text\"\n          value={value}\n        />\n      </Box>\n    </Box>\n  );\n};\n", "import { Box, BoxComponent, Flex, FlexComponent } from '@strapi/design-system';\nimport { styled } from 'styled-components';\n\nconst Wrapper = styled<BoxComponent>(Box)`\n  position: relative;\n  width: 100%;\n  &::before {\n    content: '';\n    position: absolute;\n    top: calc(50% - 0px);\n    height: 2px;\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.primary600};\n    z-index: 0;\n  }\n`;\n\nconst IconWrapper = styled<BoxComponent<'button'>>(Box)<{ $isSelected: boolean }>`\n  background: ${({ theme, $isSelected }) => theme.colors[$isSelected ? 'primary100' : 'neutral0']};\n  border: 1px solid\n    ${({ theme, $isSelected }) => theme.colors[$isSelected ? 'primary700' : 'neutral200']};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  z-index: 1;\n  flex: 0 0 2.4rem;\n  svg {\n    width: 2.4rem;\n    height: 2.4rem;\n    max-width: unset;\n    path {\n      fill: ${({ theme, $isSelected }) => theme.colors[$isSelected ? 'primary700' : 'neutral500']};\n    }\n  }\n  cursor: pointer;\n  &:disabled {\n    cursor: not-allowed;\n    background: ${({ theme }) => theme.colors.neutral150};\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.neutral300};\n      }\n    }\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InfosWrapper = styled<FlexComponent>(Flex)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n\nexport { IconWrapper, InfosWrapper, Wrapper };\n", "import { Flex, KeyboardNavigable, Typography } from '@strapi/design-system';\nimport {\n  ManyToMany,\n  ManyToOne,\n  ManyWays as ManyWay,\n  OneToMany,\n  OneToOne,\n  OneWay,\n} from '@strapi/icons';\nimport get from 'lodash/get';\nimport truncate from 'lodash/truncate';\nimport pluralize from 'pluralize';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport { getTrad } from '../../../utils/getTrad';\nimport { useDataManager } from '../../DataManager/useDataManager';\nimport { actions } from '../../FormModal/reducer';\n\nimport { IconWrapper, InfosWrapper, Wrapper } from './Components';\n\nconst relations = {\n  oneWay: OneWay,\n  oneToOne: OneToOne,\n  oneToMany: OneToMany,\n  manyToOne: ManyToOne,\n  manyToMany: ManyToMany,\n  manyWay: ManyWay,\n};\n\ntype RelationType = keyof typeof relations;\n\ninterface RelationNaturePickerProps {\n  naturePickerType: string;\n  oneThatIsCreatingARelationWithAnother: string;\n  relationType: string;\n  target: string;\n  targetUid: string;\n}\n\nconst ctRelations = ['oneWay', 'oneToOne', 'oneToMany', 'manyToOne', 'manyToMany', 'manyWay'];\nconst componentRelations = ['oneWay', 'manyWay'];\n\nexport const RelationNaturePicker = ({\n  naturePickerType,\n  oneThatIsCreatingARelationWithAnother,\n  relationType,\n  target,\n  targetUid,\n}: RelationNaturePickerProps) => {\n  const dispatch = useDispatch();\n  const { formatMessage } = useIntl();\n\n  const { contentTypes } = useDataManager();\n\n  const dataType =\n    naturePickerType === 'component' ? 'component' : get(contentTypes, [targetUid, 'kind'], '');\n\n  const relationsType = (\n    dataType === 'collectionType' ? ctRelations : componentRelations\n  ) as RelationType[];\n\n  const areDisplayedNamesInverted = relationType === 'manyToOne';\n  const targetLabel = get(contentTypes, [target, 'info', 'displayName'], 'unknown');\n  const leftTarget = areDisplayedNamesInverted\n    ? targetLabel\n    : oneThatIsCreatingARelationWithAnother;\n  const rightTarget = areDisplayedNamesInverted\n    ? oneThatIsCreatingARelationWithAnother\n    : targetLabel;\n  const leftDisplayedValue = pluralize(leftTarget, relationType === 'manyToMany' ? 2 : 1);\n  const restrictedRelations = get(contentTypes, [target, 'restrictRelationsTo'], null);\n\n  const rightDisplayedValue = pluralize(\n    rightTarget,\n    ['manyToMany', 'oneToMany', 'manyToOne', 'manyWay'].includes(relationType) ? 2 : 1\n  );\n\n  if (!relationType) {\n    return null;\n  }\n\n  return (\n    <Flex style={{ flex: 1 }}>\n      <Wrapper>\n        <Flex paddingLeft={9} paddingRight={9} paddingTop={1} justifyContent=\"center\">\n          <KeyboardNavigable tagName=\"button\">\n            <Flex gap={3}>\n              {relationsType.map((relation) => {\n                const Asset = relations[relation];\n                const isEnabled =\n                  restrictedRelations === null || restrictedRelations.includes(relation);\n\n                return (\n                  <IconWrapper\n                    tag=\"button\"\n                    $isSelected={relationType === relation}\n                    disabled={!isEnabled}\n                    key={relation}\n                    onClick={() => {\n                      if (isEnabled) {\n                        dispatch(\n                          actions.onChangeRelationType({\n                            target: {\n                              oneThatIsCreatingARelationWithAnother,\n                              value: relation,\n                            },\n                          })\n                        );\n                      }\n                    }}\n                    padding={2}\n                    type=\"button\"\n                    aria-label={formatMessage({ id: getTrad(`relation.${relation}`) })}\n                    aria-pressed={relationType === relation}\n                    data-relation-type={relation}\n                  >\n                    <Asset key={relation} aria-hidden=\"true\" />\n                  </IconWrapper>\n                );\n              })}\n            </Flex>\n          </KeyboardNavigable>\n        </Flex>\n      </Wrapper>\n      <InfosWrapper justifyContent=\"center\">\n        <Typography>{truncate(leftDisplayedValue, { length: 24 })}&nbsp;</Typography>\n        <Typography textColor=\"primary600\">\n          {formatMessage({ id: getTrad(`relation.${relationType}`) })}&nbsp;\n        </Typography>\n        <Typography>{truncate(rightDisplayedValue, { length: 24 })}</Typography>\n      </InfosWrapper>\n    </Flex>\n  );\n};\n", "import { Flex } from '@strapi/design-system';\n\nimport { getRelationType } from '../../utils/getRelationType';\n\nimport { RelationFormBox } from './RelationField/RelationField';\nimport { RelationNaturePicker } from './RelationNaturePicker/RelationNaturePicker';\n\ninterface RelationProps {\n  formErrors: Record<string, any>;\n  mainBoxHeader: string;\n  modifiedData: Record<string, any>;\n  onChange: (value: any) => void;\n  naturePickerType: string;\n  targetUid: string;\n}\n\nexport const Relation = ({\n  formErrors,\n  mainBoxHeader,\n  modifiedData,\n  naturePickerType,\n  onChange,\n  targetUid,\n}: RelationProps) => {\n  const relationType = getRelationType(modifiedData.relation, modifiedData.targetAttribute);\n\n  return (\n    <Flex style={{ position: 'relative' }}>\n      <RelationFormBox\n        isMain\n        header={mainBoxHeader}\n        error={formErrors?.name || null}\n        name=\"name\"\n        onChange={onChange}\n        value={modifiedData?.name || ''}\n      />\n      <RelationNaturePicker\n        naturePickerType={naturePickerType}\n        oneThatIsCreatingARelationWithAnother={mainBoxHeader}\n        relationType={relationType!}\n        target={modifiedData.target}\n        targetUid={targetUid}\n      />\n      <RelationFormBox\n        disabled={['oneWay', 'manyWay'].includes(relationType!)}\n        error={formErrors?.targetAttribute || null}\n        name=\"targetAttribute\"\n        onChange={onChange}\n        oneThatIsCreatingARelationWithAnother={mainBoxHeader}\n        target={modifiedData.target}\n        value={modifiedData?.targetAttribute || ''}\n      />\n    </Flex>\n  );\n};\n", "import { useState } from 'react';\n\nimport { ComboboxOption, Combobox, Field } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { useDataManager } from './DataManager/useDataManager';\n\ninterface SelectCategoryProps {\n  error?: string | null;\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n    values?: Record<string, any>;\n  };\n  name: string;\n  onChange: (value: { target: { name: string; value: any; type: string } }) => void;\n  value?: string;\n  isCreating?: boolean;\n  dynamicZoneTarget?: string | null;\n}\n\nexport const SelectCategory = ({\n  error = null,\n  intlLabel,\n  name,\n  onChange,\n  value = undefined,\n  isCreating,\n  dynamicZoneTarget,\n}: SelectCategoryProps) => {\n  const { formatMessage } = useIntl();\n  const { allComponentsCategories } = useDataManager();\n  const [categories, setCategories] = useState(allComponentsCategories);\n\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n  const label = formatMessage(intlLabel);\n\n  const handleChange = (value: any) => {\n    onChange({ target: { name, value, type: 'select-category' } });\n  };\n\n  const handleCreateOption = (value: any) => {\n    setCategories((prev) => [...prev, value]);\n    handleChange(value);\n  };\n\n  return (\n    <Field.Root error={errorMessage} name={name}>\n      <Field.Label>{label}</Field.Label>\n      <Combobox\n        // TODO: re-enable category edits, renaming categories of already existing components currently breaks other functionality\n        // See https://github.com/strapi/strapi/issues/20356\n        disabled={!isCreating && !dynamicZoneTarget}\n        onChange={handleChange}\n        onCreateOption={handleCreateOption}\n        value={value}\n        creatable\n      >\n        {categories.map((category) => (\n          <ComboboxOption key={category} value={category}>\n            {category}\n          </ComboboxOption>\n        ))}\n      </Combobox>\n      <Field.Error />\n    </Field.Root>\n  );\n};\n", "import type { ComponentWithChildren } from '../components/DataManager/utils/retrieveComponentsThatHaveComponents';\nimport type { NestedComponent } from '../components/DataManager/utils/retrieveNestedComponents';\nimport type { Internal } from '@strapi/types';\n\nconst findComponent = <T extends { component: Internal.UID.Component }>(\n  componentUid: Internal.UID.Schema,\n  components: Array<T>\n) => {\n  return components.find((c) => c.component === componentUid);\n};\n\n/**\n * Recursively calculates the maximum depth of nested child components\n * for a given component UID.\n *\n * @param componentUid - The UID of the component to start from.\n * @param components - The array of all components with their child components.\n * @param currentDepth - The current depth of the recursion. Defaults to 0.\n * @returns The maximum depth of the nested child components.\n */\nexport const getChildrenMaxDepth = (\n  componentUid: Internal.UID.Component,\n  components: Array<ComponentWithChildren>,\n  currentDepth = 0\n) => {\n  const component = findComponent(componentUid, components);\n\n  // If the component doesn't exist or has no child components, return the current depth.\n  if (!component || !component.childComponents || component.childComponents.length === 0) {\n    return currentDepth;\n  }\n\n  let maxDepth = currentDepth;\n\n  // Iterate through each child component to calculate their respective depths.\n  component.childComponents.forEach((child) => {\n    // Recursively calculate the depth of the child component.\n    const depth = getChildrenMaxDepth(child.component, components, currentDepth + 1);\n    // Update the maximum depth if the child's depth is greater.\n    if (depth > maxDepth) {\n      maxDepth = depth;\n    }\n  });\n\n  return maxDepth;\n};\n\n/**\n * Calculates the depth of a component within a nested component tree.\n * Depth is defined as the level at which the component is nested.\n * For example, a component at Depth 3 is the third nested component.\n *\n * @param component - The UID of the component to find the depth for.\n * @param components - The array of all nested components.\n * @returns The depth level of the component within the nested tree.\n */\nexport const getComponentDepth = (\n  component: Internal.UID.Schema,\n  components: Array<NestedComponent>\n) => {\n  /**\n   * Helper function to recursively calculate the depth of a component.\n   *\n   * @param currentComponent - The current component being inspected.\n   * @param currentLevel - The current level of depth in the tree.\n   * @returns An array of depth levels found for the component.\n   */\n  const getDepth = (currentComponent: NestedComponent, currentLevel: number): Array<number> => {\n    const levels = [];\n    levels.push(currentLevel);\n\n    // If the component has no parent UIDs, return the current levels\n    if (!currentComponent.uidsOfAllParents) {\n      return levels;\n    }\n\n    // Iterate over each parent UID to calculate their respective depths\n    for (const parentUid of currentComponent.uidsOfAllParents) {\n      const parentComponent = findComponent(parentUid, components);\n      if (parentComponent) {\n        levels.push(...getDepth(parentComponent, currentLevel + 1));\n      }\n    }\n\n    return levels;\n  };\n\n  const nestedCompo = findComponent(component, components);\n  // return depth 0 if component is not nested\n  if (!nestedCompo) {\n    return 0;\n  }\n  const compoDepth = Math.max(...getDepth(nestedCompo, 1));\n  return compoDepth;\n};\n", "import { SingleSelectOption, SingleSelect, Field } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { MAX_COMPONENT_DEPTH } from '../constants';\nimport { getChildrenMaxDepth, getComponentDepth } from '../utils/getMaxDepth';\n\nimport { useDataManager } from './DataManager/useDataManager';\n\nimport type { Internal } from '@strapi/types';\ninterface Option {\n  uid: string;\n  label: string;\n  categoryName: string;\n}\n\ninterface SelectComponentProps {\n  componentToCreate?: Record<string, any> | null;\n  error?: string | null;\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n    values?: Record<string, any>;\n  };\n  isAddingAComponentToAnotherComponent: boolean;\n  isCreating: boolean;\n  isCreatingComponentWhileAddingAField: boolean;\n  name: string;\n  onChange: (value: any) => void;\n  targetUid: Internal.UID.Schema;\n  value: string;\n  forTarget: string;\n}\n\nexport const SelectComponent = ({\n  error = null,\n  intlLabel,\n  isAddingAComponentToAnotherComponent,\n  isCreating,\n  isCreatingComponentWhileAddingAField,\n  componentToCreate,\n  name,\n  onChange,\n  targetUid,\n  forTarget,\n  value,\n}: SelectComponentProps) => {\n  const { formatMessage } = useIntl();\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n  const label = formatMessage(intlLabel);\n\n  const {\n    componentsGroupedByCategory,\n    componentsThatHaveOtherComponentInTheirAttributes,\n    nestedComponents,\n  } = useDataManager();\n\n  const isTargetAComponent = forTarget === 'component';\n\n  let options: Option[] = Object.entries(componentsGroupedByCategory).reduce(\n    (acc: Option[], current) => {\n      const [categoryName, components] = current;\n      const compos = components.map((component) => {\n        return {\n          uid: component.uid,\n          label: component.info.displayName,\n          categoryName,\n        };\n      });\n\n      return [...acc, ...compos];\n    },\n    []\n  );\n\n  if (isAddingAComponentToAnotherComponent) {\n    options = options.filter(({ uid }: any) => {\n      const maxDepth = getChildrenMaxDepth(uid, componentsThatHaveOtherComponentInTheirAttributes);\n      const componentDepth = getComponentDepth(targetUid, nestedComponents);\n      const totalDepth = maxDepth + componentDepth;\n      return totalDepth <= MAX_COMPONENT_DEPTH;\n    });\n  }\n\n  if (isTargetAComponent) {\n    options = options.filter((option) => {\n      return option.uid !== targetUid;\n    });\n  }\n\n  if (isCreatingComponentWhileAddingAField) {\n    options = [\n      {\n        uid: value,\n        label: componentToCreate?.displayName,\n        categoryName: componentToCreate?.category,\n      },\n    ];\n  }\n\n  return (\n    <Field.Root error={errorMessage} name={name}>\n      <Field.Label>{label}</Field.Label>\n      <SingleSelect\n        disabled={isCreatingComponentWhileAddingAField || !isCreating}\n        onChange={(value: any) => {\n          onChange({ target: { name, value, type: 'select-category' } });\n        }}\n        value={value || ''}\n      >\n        {options.map((option) => {\n          return (\n            <SingleSelectOption key={option.uid} value={option.uid}>\n              {`${option.categoryName} - ${option.label}`}\n            </SingleSelectOption>\n          );\n        })}\n      </SingleSelect>\n      <Field.Error />\n    </Field.Root>\n  );\n};\n", "import { Field, MultiSelectNested } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { getTrad } from '../utils';\nimport { findAttribute } from '../utils/findAttribute';\n\nimport { useDataManager } from './DataManager/useDataManager';\n\nimport type { Component } from '../types';\nimport type { Internal } from '@strapi/types';\n\ntype SelectComponentsProps = {\n  dynamicZoneTarget: string;\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n    values?: object;\n  };\n  name: string;\n  onChange: (value: {\n    target: {\n      name: string;\n      value: string[];\n      type?: string;\n    };\n  }) => void;\n  value: string[];\n  targetUid: Internal.UID.ContentType;\n};\n\nexport const SelectComponents = ({\n  dynamicZoneTarget,\n  intlLabel,\n  name,\n  onChange,\n  value,\n  targetUid,\n}: SelectComponentsProps) => {\n  const { formatMessage } = useIntl();\n  const { componentsGroupedByCategory, contentTypes } = useDataManager();\n  const dzSchema = findAttribute(contentTypes[targetUid].attributes, dynamicZoneTarget);\n\n  if (!dzSchema) {\n    return null;\n  }\n\n  const alreadyUsedComponents = 'components' in dzSchema ? dzSchema?.components : [];\n\n  const filteredComponentsGroupedByCategory = Object.keys(componentsGroupedByCategory).reduce(\n    (acc, current) => {\n      const filteredComponents = componentsGroupedByCategory[current].filter(({ uid }) => {\n        return !alreadyUsedComponents.includes(uid);\n      });\n\n      if (filteredComponents.length > 0) {\n        acc[current] = filteredComponents;\n      }\n\n      return acc;\n    },\n    {} as Record<string, Component[]>\n  );\n  const options = Object.entries(filteredComponentsGroupedByCategory).reduce(\n    (acc, current) => {\n      const [categoryName, components] = current;\n      const section = {\n        label: categoryName,\n        children: components.map(({ uid, info: { displayName } }) => {\n          return { label: displayName, value: uid };\n        }),\n      };\n\n      acc.push(section);\n\n      return acc;\n    },\n    [] as Array<{ label: string; children: Array<{ label: string; value: string }> }>\n  );\n\n  const displayedValue = formatMessage(\n    {\n      id: getTrad('components.SelectComponents.displayed-value'),\n      defaultMessage:\n        '{number, plural, =0 {# components} one {# component} other {# components}} selected',\n    },\n    { number: value?.length ?? 0 }\n  );\n\n  return (\n    <Field.Root name={name}>\n      <Field.Label>{formatMessage(intlLabel)}</Field.Label>\n      <MultiSelectNested\n        id=\"select1\"\n        customizeContent={() => displayedValue}\n        onChange={(values) => {\n          onChange({ target: { name, value: values, type: 'select-components' } });\n        }}\n        options={options}\n        value={value || []}\n      />\n    </Field.Root>\n  );\n};\n", "import { Field, SingleSelect, SingleSelectOption } from '@strapi/design-system';\nimport { PrimitiveType, useIntl } from 'react-intl';\n\ntype SelectDateTypeProps = {\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n    values?: object;\n  };\n  error?: string;\n  modifiedData: {\n    default: number;\n    max: number;\n    min: number;\n  };\n  name: string;\n  onChange: (value: {\n    target: {\n      name: string;\n      value: string | number | null;\n      type?: string;\n    };\n  }) => void;\n  options: Array<{\n    metadatas: {\n      intlLabel: {\n        id: string;\n        defaultMessage: string;\n        values: Record<string, PrimitiveType> | undefined;\n      };\n      disabled?: boolean;\n      hidden?: boolean;\n    };\n    key: string | number;\n    value: string | number;\n  }>;\n  value?: string;\n};\n\nexport const SelectDateType = ({\n  intlLabel,\n  error = undefined,\n  modifiedData,\n  name,\n  onChange,\n  options,\n  value = '',\n}: SelectDateTypeProps) => {\n  const { formatMessage } = useIntl();\n  const label = formatMessage(intlLabel);\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n\n  const handleChange = (nextValue: string | number) => {\n    onChange({ target: { name, value: nextValue, type: 'select' } });\n\n    if (!value) {\n      return;\n    }\n\n    if (modifiedData.default !== undefined && modifiedData.default !== null) {\n      onChange({ target: { name: 'default', value: null } });\n    }\n  };\n\n  return (\n    <Field.Root error={errorMessage} name={name}>\n      <Field.Label>{label}</Field.Label>\n      <SingleSelect onChange={handleChange} value={value || ''}>\n        {options.map(({ metadatas: { intlLabel, disabled, hidden }, key, value }) => {\n          return (\n            <SingleSelectOption key={key} value={value} disabled={disabled} hidden={hidden}>\n              {formatMessage(\n                { id: intlLabel.id, defaultMessage: intlLabel.defaultMessage },\n                intlLabel.values\n              )}\n            </SingleSelectOption>\n          );\n        })}\n      </SingleSelect>\n      <Field.Error />\n    </Field.Root>\n  );\n};\n", "import { SingleSelectOption, SingleSelect, Field } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\ntype SelectNumberProps = {\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n    values?: object;\n  };\n  error?: string;\n  modifiedData: {\n    default: number;\n    max: number;\n    min: number;\n  };\n  name: string;\n  onChange: (value: {\n    target: {\n      name: string;\n      value: string | number | null;\n      type?: string;\n    };\n  }) => void;\n  options: Array<{\n    metadatas: {\n      intlLabel: {\n        id: string;\n        defaultMessage: string;\n      };\n      disabled?: boolean;\n      hidden?: boolean;\n    };\n    key: string | number;\n    value: string | number;\n  }>;\n  value?: string;\n};\n\nexport const SelectNumber = ({\n  intlLabel,\n  error = undefined,\n  modifiedData,\n  name,\n  onChange,\n  options,\n  value = '',\n}: SelectNumberProps) => {\n  const { formatMessage } = useIntl();\n  const label = formatMessage(intlLabel);\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n\n  const handleChange = (nextValue: string | number) => {\n    onChange({ target: { name, value: nextValue, type: 'select' } });\n\n    if (!value) {\n      return;\n    }\n\n    if (nextValue === 'biginteger' && value !== 'biginteger') {\n      if (modifiedData.default !== undefined && modifiedData.default !== null) {\n        onChange({ target: { name: 'default', value: null } });\n      }\n\n      if (modifiedData.max !== undefined && modifiedData.max !== null) {\n        onChange({ target: { name: 'max', value: null } });\n      }\n\n      if (modifiedData.min !== undefined && modifiedData.min !== null) {\n        onChange({ target: { name: 'min', value: null } });\n      }\n    }\n\n    if (\n      typeof nextValue === 'string' &&\n      ['decimal', 'float', 'integer'].includes(nextValue) &&\n      value === 'biginteger'\n    ) {\n      if (modifiedData.default !== undefined && modifiedData.default !== null) {\n        onChange({ target: { name: 'default', value: null } });\n      }\n\n      if (modifiedData.max !== undefined && modifiedData.max !== null) {\n        onChange({ target: { name: 'max', value: null } });\n      }\n\n      if (modifiedData.min !== undefined && modifiedData.min !== null) {\n        onChange({ target: { name: 'min', value: null } });\n      }\n    }\n  };\n\n  return (\n    <Field.Root error={errorMessage} name={name}>\n      <Field.Label>{label}</Field.Label>\n      <SingleSelect onChange={handleChange} value={value || ''}>\n        {options.map(({ metadatas: { intlLabel, disabled, hidden }, key, value }) => {\n          return (\n            <SingleSelectOption key={key} value={value} disabled={disabled} hidden={hidden}>\n              {formatMessage(intlLabel)}\n            </SingleSelectOption>\n          );\n        })}\n      </SingleSelect>\n      <Field.Error />\n    </Field.Root>\n  );\n};\n", "import { useEffect, useRef } from 'react';\n\nimport { Field, TextInput } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { nameToSlug } from '../utils/nameToSlug';\n\nimport type { IntlLabel } from '../types';\n\ninterface SingularNameProps {\n  description?: IntlLabel | null;\n  error?: string | null;\n  intlLabel: IntlLabel;\n  modifiedData: Record<string, any>;\n  name: string;\n  onChange: (value: { target: { name: string; value: string } }) => void;\n  value?: string | null;\n}\n\nexport const SingularName = ({\n  description = null,\n  error = null,\n  intlLabel,\n  modifiedData,\n  name,\n  onChange,\n  value = null,\n}: SingularNameProps) => {\n  const { formatMessage } = useIntl();\n  const onChangeRef = useRef(onChange);\n  const previousValue = useRef(value);\n  const previousDisplayName = useRef(modifiedData?.displayName || '');\n  const displayName = modifiedData?.displayName || '';\n\n  useEffect(() => {\n    if (displayName && displayName !== previousDisplayName.current) {\n      const newValue = nameToSlug(displayName);\n      onChangeRef.current({ target: { name, value: newValue } });\n      previousValue.current = newValue;\n      previousDisplayName.current = displayName;\n    } else if (!displayName) {\n      onChangeRef.current({ target: { name, value: '' } });\n      previousValue.current = '';\n      previousDisplayName.current = '';\n    }\n  }, [displayName, name, value]);\n\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n  const hint = description\n    ? formatMessage(\n        { id: description.id, defaultMessage: description.defaultMessage },\n        { ...description.values }\n      )\n    : '';\n  const label = formatMessage(intlLabel);\n\n  return (\n    <Field.Root error={errorMessage} hint={hint} name={name}>\n      <Field.Label>{label}</Field.Label>\n      <TextInput onChange={onChange} value={value || ''} />\n      <Field.Error />\n      <Field.Hint />\n    </Field.Root>\n  );\n};\n", "import { Box, Grid, Typography, Button, Tooltip } from '@strapi/design-system';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\n\nimport { formatCondition, getAvailableConditionFields } from '../utils/conditions';\n\nimport { GenericInput } from './GenericInputs';\n\ninterface TabFormProps {\n  form: Array<Record<string, any>>;\n  formErrors: Record<string, any>;\n  genericInputProps: Record<string, any>;\n  modifiedData: Record<string, any>;\n  onChange: (value: any) => void;\n}\n\n/* eslint-disable react/no-array-index-key */\nexport const TabForm = ({\n  form,\n  formErrors,\n  genericInputProps,\n  modifiedData,\n  onChange,\n}: TabFormProps) => {\n  const { formatMessage } = useIntl();\n\n  return (\n    <>\n      {form.map((section, sectionIndex) => {\n        // Don't display an empty section\n        if (section.items.length === 0) {\n          return null;\n        }\n        return (\n          <Box key={sectionIndex}>\n            {section.sectionTitle && (\n              <Box paddingBottom={4}>\n                <Typography variant=\"delta\" tag=\"h3\">\n                  {formatMessage(section.sectionTitle)}\n                </Typography>\n              </Box>\n            )}\n            {section.intlLabel && (\n              <Typography variant=\"pi\" textColor=\"neutral600\">\n                {formatMessage(section.intlLabel)}\n              </Typography>\n            )}\n\n            <Grid.Root gap={4}>\n              {section.items.map((input: any, i: number) => {\n                const key = `${sectionIndex}.${i}`;\n\n                /**\n                 * Use undefined as the default value because not every input wants a string e.g. Date pickers\n                 */\n                const value = get(modifiedData, input.name, undefined);\n\n                // When extending the yup schema of an existing field (like in https://github.com/strapi/strapi/blob/293ff3b8f9559236609d123a2774e3be05ce8274/packages/strapi-plugin-i18n/admin/src/index.js#L52)\n                // and triggering a yup validation error in the UI (missing a required field for example)\n                // We got an object that looks like: formErrors = { \"pluginOptions.i18n.localized\": {...} }\n                // In order to deal with this error, we can't rely on lodash.get to resolve this key\n                // - lodash will try to access {pluginOptions: {i18n: {localized: true}}})\n                // - and we just want to access { \"pluginOptions.i18n.localized\": {...} }\n                // NOTE: this is a hack\n                const pluginOptionError = Object.keys(formErrors).find((key) => key === input.name);\n\n                // Retrieve the error for a specific input\n                const errorId = pluginOptionError\n                  ? formErrors[pluginOptionError].id\n                  : get(\n                      formErrors,\n                      [\n                        ...input.name\n                          .split('.')\n                          // The filter here is used when creating a component\n                          // in the component step 1 modal\n                          // Since the component info is stored in the\n                          // componentToCreate object we can access the error\n                          // By removing the key\n                          .filter((key: string) => key !== 'componentToCreate'),\n                        'id',\n                      ],\n                      null\n                    );\n\n                if (input.type === 'pushRight') {\n                  return (\n                    <Grid.Item\n                      col={input.size || 6}\n                      key={input.name || key}\n                      direction=\"column\"\n                      alignItems=\"stretch\"\n                    >\n                      <div />\n                    </Grid.Item>\n                  );\n                }\n\n                // Special handling for 'condition-form'\n                if (input.type === 'condition-form') {\n                  const currentCondition = get(modifiedData, input.name);\n\n                  // Get all attributes from the content type schema\n                  const contentTypeAttributes =\n                    genericInputProps.contentTypeSchema?.attributes || [];\n\n                  if (!genericInputProps.contentTypeSchema) {\n                    console.warn('contentTypeSchema is undefined, skipping condition form');\n                    return null;\n                  }\n\n                  // Filter for boolean and enumeration fields only, excluding the current field\n                  const availableFields = getAvailableConditionFields(\n                    contentTypeAttributes,\n                    modifiedData.name\n                  );\n\n                  const noFieldsMessage = formatMessage({\n                    id: 'form.attribute.condition.no-fields',\n                    defaultMessage:\n                      'No boolean or enumeration fields available to set conditions on.',\n                  });\n\n                  return (\n                    <Grid.Item\n                      col={input.size || 12}\n                      key={input.name || key}\n                      direction=\"column\"\n                      alignItems=\"stretch\"\n                    >\n                      {!currentCondition || Object.keys(currentCondition).length === 0 ? (\n                        <Box>\n                          {currentCondition && Object.keys(currentCondition).length > 0 && (\n                            <Typography variant=\"sigma\" textColor=\"neutral800\" marginBottom={2}>\n                              {formatCondition(\n                                currentCondition,\n                                availableFields,\n                                genericInputProps.attributeName || modifiedData.name\n                              )}\n                            </Typography>\n                          )}\n                          <Tooltip label={noFieldsMessage}>\n                            <Button\n                              marginTop={\n                                currentCondition && Object.keys(currentCondition).length > 0 ? 0 : 4\n                              }\n                              fullWidth={true}\n                              variant=\"secondary\"\n                              onClick={() => {\n                                onChange({\n                                  target: {\n                                    name: input.name,\n                                    value: { visible: { '==': [{ var: '' }, ''] } },\n                                  },\n                                });\n                              }}\n                              startIcon={<span aria-hidden>＋</span>}\n                              disabled={availableFields.length === 0}\n                            >\n                              {formatMessage({\n                                id: 'form.attribute.condition.apply',\n                                defaultMessage: 'Apply condition',\n                              })}\n                            </Button>\n                          </Tooltip>\n                        </Box>\n                      ) : (\n                        <GenericInput\n                          {...input}\n                          {...genericInputProps}\n                          error={errorId}\n                          onChange={onChange}\n                          value={value}\n                          autoFocus={i === 0}\n                          attributeName={modifiedData.name}\n                          conditionFields={availableFields}\n                          onDelete={() => {\n                            onChange({\n                              target: {\n                                name: input.name,\n                              },\n                            });\n                          }}\n                        />\n                      )}\n                    </Grid.Item>\n                  );\n                }\n\n                // Default rendering for all other input types\n                return (\n                  <Grid.Item\n                    col={input.size || 6}\n                    key={input.name || key}\n                    direction=\"column\"\n                    alignItems=\"stretch\"\n                  >\n                    <GenericInput\n                      {...input}\n                      {...genericInputProps}\n                      error={errorId}\n                      onChange={onChange}\n                      value={value}\n                      autoFocus={i === 0}\n                    />\n                  </Grid.Item>\n                );\n              })}\n            </Grid.Root>\n          </Box>\n        );\n      })}\n    </>\n  );\n};\n", "import { ReactNode, ChangeEvent } from 'react';\n\nimport { Field, Textarea } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport type { IntlLabel } from '../types';\n\ninterface TextareaEnumProps {\n  description?: IntlLabel | null;\n  disabled?: boolean;\n  error?: string;\n  intlLabel: IntlLabel;\n  labelAction?: ReactNode;\n  name: string;\n  onChange: (value: { target: { name: string; value: string | string[] } }) => void;\n  placeholder?: IntlLabel | null;\n  value: string | string[] | undefined;\n}\n\nexport const TextareaEnum = ({\n  description = null,\n  disabled = false,\n  error = '',\n  intlLabel,\n  labelAction,\n  name,\n  onChange,\n  placeholder = null,\n  value = '',\n}: TextareaEnumProps) => {\n  const { formatMessage } = useIntl();\n  const errorMessage = error ? formatMessage({ id: error, defaultMessage: error }) : '';\n  const hint = description\n    ? formatMessage(\n        { id: description.id, defaultMessage: description.defaultMessage },\n        { ...description.values }\n      )\n    : '';\n  const label = formatMessage(intlLabel);\n  const formattedPlaceholder = placeholder\n    ? formatMessage(\n        { id: placeholder.id, defaultMessage: placeholder.defaultMessage },\n        { ...placeholder.values }\n      )\n    : '';\n\n  const inputValue = Array.isArray(value) ? value.join('\\n') : '';\n\n  const handleChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    const arrayValue = e.target.value.split('\\n');\n\n    onChange({ target: { name, value: arrayValue } });\n  };\n\n  return (\n    <Field.Root error={errorMessage} hint={hint} name={name}>\n      <Field.Label action={labelAction}>{label}</Field.Label>\n      <Textarea\n        disabled={disabled}\n        onChange={handleChange}\n        placeholder={formattedPlaceholder}\n        value={inputValue}\n      />\n      <Field.Error />\n      <Field.Hint />\n    </Field.Root>\n  );\n};\n", "import { Button, Tooltip } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\ninterface ApplyConditionButtonProps {\n  disabled?: boolean;\n  tooltipMessage?: string;\n  onClick?: () => void;\n  marginTop?: number;\n}\n\nexport const ApplyConditionButton = ({\n  disabled,\n  tooltipMessage,\n  onClick,\n  marginTop = 4,\n}: ApplyConditionButtonProps) => {\n  const { formatMessage } = useIntl();\n\n  const button = (\n    <Button\n      marginTop={marginTop}\n      fullWidth={true}\n      variant=\"secondary\"\n      disabled={disabled}\n      onClick={onClick}\n      startIcon={<span aria-hidden>＋</span>}\n    >\n      {formatMessage({\n        id: 'form.attribute.condition.apply',\n        defaultMessage: 'Apply condition',\n      })}\n    </Button>\n  );\n\n  if (tooltipMessage) {\n    return <Tooltip description={tooltipMessage}>{button}</Tooltip>;\n  }\n\n  return button;\n};\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport { createRulesEngine, ConfirmDialog, type Condition } from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Flex,\n  IconButton,\n  Typography,\n  Field,\n  SingleSelect,\n  SingleSelectOption,\n  Dialog,\n} from '@strapi/design-system';\nimport { Trash } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\nimport * as yup from 'yup';\n\nimport { AttributeIcon } from '../../../components/AttributeIcon';\nimport { getTrad } from '../../../utils/getTrad';\nimport { ApplyConditionButton } from '../../ApplyConditionButton';\n\nconst SmallAttributeIcon = styled(AttributeIcon)`\n  width: 16px !important;\n  height: 16px !important;\n  svg {\n    width: 16px !important;\n    height: 16px !important;\n  }\n`;\n\ninterface ConditionFormProps {\n  name: string;\n  value: any;\n  onChange: (e: { target: { name: string; value: any } }) => void;\n  onDelete: () => void;\n  attributeName?: string;\n  conditionFields?: Array<{\n    name: string;\n    type: string;\n    enum?: string[];\n  }>;\n  allAttributes?: Array<{\n    name: string;\n    type: string;\n  }>;\n}\n\ninterface JsonLogicValue {\n  visible?: {\n    [key: string]: [{ var: string }, any];\n  };\n}\n\ninterface LocalValue {\n  dependsOn: string;\n  operator: 'is' | 'isNot';\n  value: string | boolean;\n  action: 'show' | 'hide';\n}\n\nconst convertFromJsonLogic = (jsonLogic: JsonLogicValue): LocalValue => {\n  if (!jsonLogic?.visible) {\n    return {\n      dependsOn: '',\n      operator: 'is',\n      value: '',\n      action: 'show',\n    };\n  }\n\n  const [[operator, conditions]] = Object.entries(jsonLogic.visible);\n  const [fieldVar, value] = conditions as [{ var: string }, any];\n\n  // Assume 'visible' implies 'show' for now; adjust if backend uses 'hidden' key\n  return {\n    dependsOn: fieldVar.var,\n    operator: operator === '==' ? 'is' : 'isNot',\n    value: value,\n    action: 'show', // Default to 'show' for 'visible'; adjust based on backend logic\n  };\n};\n\nconst convertToJsonLogic = (value: LocalValue): JsonLogicValue | null => {\n  if (!value.dependsOn) {\n    return null;\n  }\n\n  const rulesEngine = createRulesEngine();\n  const condition: Condition = {\n    dependsOn: value.dependsOn,\n    operator: value.operator,\n    value: value.value,\n  };\n\n  try {\n    rulesEngine.validate(condition);\n    // Determine JSON Logic operator based on operator and action\n    const operator =\n      (value.operator === 'is' && value.action === 'show') ||\n      (value.operator === 'isNot' && value.action === 'hide')\n        ? '=='\n        : '!=';\n    return {\n      visible: {\n        [operator]: [{ var: value.dependsOn }, value.value],\n      },\n    };\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const ConditionForm = ({\n  name,\n  value,\n  onChange,\n  onDelete,\n  attributeName,\n  conditionFields = [],\n}: ConditionFormProps) => {\n  const { formatMessage } = useIntl();\n  const [localValue, setLocalValue] = React.useState<LocalValue>(convertFromJsonLogic(value));\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const hasCondition = Boolean(value?.visible);\n\n  // Add safety check for conditionFields\n  if (!Array.isArray(conditionFields)) {\n    conditionFields = [];\n  }\n\n  const selectedField = conditionFields.find((field) => field.name === localValue.dependsOn);\n  const isEnumField = selectedField?.type === 'enumeration';\n\n  // Helper to update localValue and propagate JSON Logic\n  const updateCondition = (updatedValue: LocalValue) => {\n    setLocalValue(updatedValue);\n    const rulesEngine = createRulesEngine();\n    const condition: Condition = {\n      dependsOn: updatedValue.dependsOn,\n      operator: updatedValue.operator,\n      value: updatedValue.value,\n    };\n    try {\n      rulesEngine.validate(condition);\n      const operator =\n        (updatedValue.operator === 'is' && updatedValue.action === 'show') ||\n        (updatedValue.operator === 'isNot' && updatedValue.action === 'hide')\n          ? '=='\n          : '!=';\n      const jsonLogic = updatedValue.dependsOn\n        ? {\n            visible: {\n              [operator]: [{ var: updatedValue.dependsOn }, updatedValue.value],\n            },\n          }\n        : null;\n      if (jsonLogic) {\n        onChange({\n          target: {\n            name,\n            value: jsonLogic,\n          },\n        });\n      }\n    } catch {\n      // Optionally, show an error to the user\n    }\n  };\n\n  const handleApplyCondition = () => {\n    const initialValue: LocalValue = {\n      dependsOn: '',\n      operator: 'is',\n      value: '',\n      action: 'show',\n    };\n    setLocalValue(initialValue);\n    onChange({\n      target: {\n        name,\n        value: convertToJsonLogic(initialValue),\n      },\n    });\n  };\n\n  const handleDelete = () => {\n    setLocalValue({\n      dependsOn: '',\n      operator: 'is',\n      value: '',\n      action: 'show',\n    });\n    onChange({\n      target: {\n        name,\n        value: null,\n      },\n    });\n    onDelete();\n    setShowConfirmDialog(false);\n  };\n\n  const handleFieldChange = (fieldName: string | number) => {\n    const newValue = fieldName?.toString() || '';\n    const field = conditionFields.find((f) => f.name === newValue);\n    const isNewFieldEnum = field?.type === 'enumeration';\n    const updatedValue: LocalValue = {\n      ...localValue,\n      dependsOn: newValue,\n      value: newValue ? (isNewFieldEnum ? '' : false) : localValue.value,\n    };\n    updateCondition(updatedValue);\n  };\n\n  const handleOperatorChange = (operator: string | number) => {\n    const newValue = operator?.toString() || 'is';\n    const updatedValue: LocalValue = {\n      ...localValue,\n      operator: newValue as 'is' | 'isNot',\n    };\n    updateCondition(updatedValue);\n  };\n\n  const handleValueChange = (newValue: string | number) => {\n    const value = isEnumField ? newValue?.toString() : newValue?.toString() === 'true';\n    const updatedValue: LocalValue = { ...localValue, value };\n    updateCondition(updatedValue);\n  };\n\n  const handleActionChange = (action: string | number) => {\n    const newValue = action?.toString() || 'show';\n    const updatedValue: LocalValue = {\n      ...localValue,\n      action: newValue as 'show' | 'hide',\n    };\n    updateCondition(updatedValue);\n  };\n\n  if (!hasCondition) {\n    return (\n      <Box padding={4} margin={4} hasRadius background=\"neutral0\" borderColor=\"neutral200\">\n        <ApplyConditionButton onClick={handleApplyCondition} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box marginTop={2}>\n      <Box\n        background=\"neutral0\"\n        hasRadius\n        borderColor=\"neutral200\"\n        borderWidth={0.5}\n        borderStyle=\"solid\"\n      >\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" padding={4}>\n          <Typography variant=\"sigma\" textColor=\"neutral800\">\n            {formatMessage(\n              {\n                id: getTrad('form.attribute.condition.title'),\n                defaultMessage: 'Condition for {name}',\n              },\n              {\n                name: <strong>{attributeName}</strong>,\n              }\n            )}\n          </Typography>\n          <Dialog.Root open={showConfirmDialog} onOpenChange={setShowConfirmDialog}>\n            <Dialog.Trigger>\n              <IconButton label=\"Delete\">\n                <Trash />\n              </IconButton>\n            </Dialog.Trigger>\n            <ConfirmDialog onConfirm={handleDelete}>\n              {formatMessage({\n                id: getTrad('popUpWarning.bodyMessage.delete-condition'),\n                defaultMessage: 'Are you sure you want to delete this condition?',\n              })}\n            </ConfirmDialog>\n          </Dialog.Root>\n        </Flex>\n\n        <Box background=\"neutral100\" padding={4}>\n          <Box paddingBottom={2}>\n            <Typography\n              variant=\"sigma\"\n              textColor=\"neutral600\"\n              style={{ textTransform: 'uppercase', letterSpacing: 1 }}\n            >\n              {formatMessage({ id: getTrad('form.attribute.condition.if'), defaultMessage: 'IF' })}\n            </Typography>\n          </Box>\n          <Flex gap={4}>\n            <Box minWidth={0} flex={1}>\n              <Field.Root name={`${name}.field`}>\n                <SingleSelect\n                  value={localValue.dependsOn}\n                  onChange={handleFieldChange}\n                  placeholder={formatMessage({\n                    id: getTrad('form.attribute.condition.field'),\n                    defaultMessage: 'field',\n                  })}\n                >\n                  {conditionFields.map((field) => (\n                    <SingleSelectOption key={field.name} value={field.name}>\n                      <Flex gap={2} alignItems=\"center\">\n                        <SmallAttributeIcon type={field.type} />\n                        <span>{field.name}</span>\n                      </Flex>\n                    </SingleSelectOption>\n                  ))}\n                </SingleSelect>\n              </Field.Root>\n            </Box>\n            <Box minWidth={0} flex={1}>\n              <Field.Root name={`${name}.operator`}>\n                <SingleSelect\n                  value={localValue.operator}\n                  onChange={handleOperatorChange}\n                  disabled={!localValue.dependsOn}\n                  placeholder={formatMessage({\n                    id: getTrad('form.attribute.condition.operator'),\n                    defaultMessage: 'condition',\n                  })}\n                >\n                  <SingleSelectOption value=\"is\">\n                    {formatMessage({\n                      id: getTrad('form.attribute.condition.operator.is'),\n                      defaultMessage: 'is',\n                    })}\n                  </SingleSelectOption>\n                  <SingleSelectOption value=\"isNot\">\n                    {formatMessage({\n                      id: getTrad('form.attribute.condition.operator.isNot'),\n                      defaultMessage: 'is not',\n                    })}\n                  </SingleSelectOption>\n                </SingleSelect>\n              </Field.Root>\n            </Box>\n\n            <Box minWidth={0} flex={1}>\n              <Field.Root name={`${name}.value`}>\n                <SingleSelect\n                  value={localValue.value?.toString() || ''}\n                  onChange={handleValueChange}\n                  disabled={!localValue.dependsOn}\n                  placeholder={formatMessage({\n                    id: getTrad('form.attribute.condition.value'),\n                    defaultMessage: 'value',\n                  })}\n                >\n                  {isEnumField && selectedField?.enum ? (\n                    selectedField.enum.map((enumValue) => (\n                      <SingleSelectOption key={enumValue} value={enumValue}>\n                        {enumValue}\n                      </SingleSelectOption>\n                    ))\n                  ) : (\n                    <>\n                      <SingleSelectOption value=\"true\">\n                        {formatMessage({\n                          id: getTrad('form.attribute.condition.value.true'),\n                          defaultMessage: 'true',\n                        })}\n                      </SingleSelectOption>\n                      <SingleSelectOption value=\"false\">\n                        {formatMessage({\n                          id: getTrad('form.attribute.condition.value.false'),\n                          defaultMessage: 'false',\n                        })}\n                      </SingleSelectOption>\n                    </>\n                  )}\n                </SingleSelect>\n              </Field.Root>\n            </Box>\n          </Flex>\n        </Box>\n\n        <Box background=\"neutral100\" padding={4}>\n          <Box paddingBottom={4}>\n            <Typography\n              variant=\"sigma\"\n              textColor=\"neutral600\"\n              style={{ textTransform: 'uppercase', letterSpacing: 1 }}\n            >\n              {formatMessage({\n                id: getTrad('form.attribute.condition.then'),\n                defaultMessage: 'THEN',\n              })}\n            </Typography>\n          </Box>\n          <Box paddingBottom={4}>\n            <Field.Root name={`${name}.action`}>\n              <SingleSelect\n                value={localValue.action}\n                onChange={handleActionChange}\n                placeholder={formatMessage({\n                  id: getTrad('form.attribute.condition.action'),\n                  defaultMessage: 'action',\n                })}\n              >\n                <SingleSelectOption value=\"show\">\n                  Show <span style={{ fontWeight: 'bold' }}>{attributeName || name}</span>\n                </SingleSelectOption>\n                <SingleSelectOption value=\"hide\">\n                  Hide <span style={{ fontWeight: 'bold' }}>{attributeName || name}</span>\n                </SingleSelectOption>\n              </SingleSelect>\n            </Field.Root>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n", "import { getTrad } from '../../../utils/getTrad';\n\nexport const nameField = {\n  name: 'name',\n  type: 'text',\n  intlLabel: {\n    id: 'global.name',\n    defaultMessage: 'Name',\n  },\n  description: {\n    id: getTrad('modalForm.attribute.form.base.name.description'),\n    defaultMessage: 'No space is allowed for the name of the attribute',\n  },\n  // validations: {\n  //   required: true,\n  // },\n};\n", "import { nameField } from './nameField';\n\nexport const commonBaseForm = {\n  sections: [{ sectionTitle: null, items: [nameField] }],\n};\n", "import { getTrad } from '../../../utils/getTrad';\n\nexport const componentForm = {\n  base(prefix = '') {\n    const sections = [\n      {\n        sectionTitle: null,\n        items: [\n          {\n            name: `${prefix}displayName`,\n            type: 'text',\n            intlLabel: {\n              id: getTrad('contentType.displayName.label'),\n              defaultMessage: 'Display Name',\n            },\n          },\n          {\n            name: `${prefix}category`,\n            type: 'select-category',\n            intlLabel: {\n              id: getTrad('modalForm.components.create-component.category.label'),\n              defaultMessage: 'Select a category or enter a name to create a new one',\n            },\n          },\n        ],\n      },\n      {\n        sectionTitle: null,\n        items: [\n          {\n            name: `${prefix}icon`,\n            type: 'icon-picker',\n            size: 12,\n            intlLabel: {\n              id: getTrad('modalForm.components.icon.label'),\n              defaultMessage: 'Icon',\n            },\n          },\n        ],\n      },\n    ];\n\n    return sections;\n  },\n  advanced() {\n    const sections: Array<unknown> = [];\n\n    return sections;\n  },\n};\n", "import { getTrad } from '../../../utils/getTrad';\n\nexport const attributeOptions = {\n  default: {\n    name: 'default',\n    type: 'text',\n    intlLabel: {\n      id: getTrad('form.attribute.settings.default'),\n      defaultMessage: 'Default value',\n    },\n  },\n  max: {\n    name: 'max',\n    type: 'checkbox-with-number-field',\n    intlLabel: {\n      id: getTrad('form.attribute.item.maximum'),\n      defaultMessage: 'Maximum value',\n    },\n  },\n  maxLength: {\n    name: 'maxLength',\n    type: 'checkbox-with-number-field',\n    intlLabel: {\n      id: getTrad('form.attribute.item.maximumLength'),\n      defaultMessage: 'Maximum length',\n    },\n  },\n  min: {\n    name: 'min',\n    type: 'checkbox-with-number-field',\n    intlLabel: {\n      id: getTrad('form.attribute.item.minimum'),\n      defaultMessage: 'Minimum value',\n    },\n  },\n  minLength: {\n    name: 'minLength',\n    type: 'checkbox-with-number-field',\n    intlLabel: {\n      id: getTrad('form.attribute.item.minimumLength'),\n      defaultMessage: 'Minimum length',\n    },\n  },\n  private: {\n    name: 'private',\n    type: 'checkbox',\n    intlLabel: {\n      id: getTrad('form.attribute.item.privateField'),\n      defaultMessage: 'Private field',\n    },\n    description: {\n      id: getTrad('form.attribute.item.privateField.description'),\n      defaultMessage: 'This field will not show up in the API response',\n    },\n  },\n  regex: {\n    intlLabel: {\n      id: getTrad('form.attribute.item.text.regex'),\n      defaultMessage: 'RegExp pattern',\n    },\n    name: 'regex',\n    type: 'text',\n    description: {\n      id: getTrad('form.attribute.item.text.regex.description'),\n      defaultMessage: 'The text of the regular expression',\n    },\n  },\n  required: {\n    name: 'required',\n    type: 'checkbox',\n    intlLabel: {\n      id: getTrad('form.attribute.item.requiredField'),\n      defaultMessage: 'Required field',\n    },\n    description: {\n      id: getTrad('form.attribute.item.requiredField.description'),\n      defaultMessage: \"You won't be able to create an entry if this field is empty\",\n    },\n  },\n  unique: {\n    name: 'unique',\n    type: 'checkbox',\n    intlLabel: {\n      id: getTrad('form.attribute.item.uniqueField'),\n      defaultMessage: 'Unique field',\n    },\n    description: {\n      id: getTrad('form.attribute.item.uniqueField.description'),\n      defaultMessage:\n        \"You won't be able to create an entry if there is an existing entry with identical content\",\n    },\n  },\n};\n", "import { getTrad } from '../../../utils/getTrad';\nimport { componentForm } from '../component/componentForm';\n\nimport { attributeOptions } from './attributeOptions';\n\ntype DataType = 'biginteger' | 'string' | 'integer' | 'float' | 'decimal';\n\nconst conditionSection = {\n  sectionTitle: {\n    id: getTrad('form.attribute.condition.title'),\n    defaultMessage: 'Condition',\n  },\n  intlLabel: {\n    id: getTrad('form.attribute.condition.description'),\n    defaultMessage:\n      'Toggle field settings depending on the value of another boolean or enumeration field.',\n  },\n  items: [\n    {\n      name: 'conditions',\n      type: 'condition-form',\n      intlLabel: {\n        id: getTrad('form.attribute.condition.label'),\n        defaultMessage: 'Conditions',\n      },\n      validations: {\n        required: true,\n      },\n    },\n  ],\n};\n\nexport const advancedForm = {\n  blocks() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  boolean() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              autoFocus: true,\n              type: 'select-default-boolean',\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              name: 'default',\n              options: [\n                {\n                  value: 'true',\n                  key: 'true',\n                  metadatas: { intlLabel: { id: 'true', defaultMessage: 'true' } },\n                },\n                {\n                  value: '',\n                  key: 'null',\n                  metadatas: { intlLabel: { id: 'null', defaultMessage: 'null' } },\n                },\n                {\n                  value: 'false',\n                  key: 'false',\n                  metadatas: { intlLabel: { id: 'false', defaultMessage: 'false' } },\n                },\n              ],\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  component({ repeatable }: { repeatable: boolean }, step: string) {\n    if (step === '1') {\n      return { sections: componentForm.advanced() };\n    }\n\n    if (repeatable) {\n      const minComponentsAttribute = {\n        ...attributeOptions.min,\n        intlLabel: {\n          id: getTrad('form.attribute.item.minimumComponents'),\n          defaultMessage: 'Minimum components',\n        },\n      };\n      const maxComponentsAttribute = {\n        ...attributeOptions.max,\n        intlLabel: {\n          id: getTrad('form.attribute.item.maximumComponents'),\n          defaultMessage: 'Maximum components',\n        },\n      };\n      return {\n        sections: [\n          {\n            sectionTitle: {\n              id: 'global.settings',\n              defaultMessage: 'Settings',\n            },\n            items: [\n              attributeOptions.required,\n              attributeOptions.private,\n              minComponentsAttribute,\n              maxComponentsAttribute,\n            ],\n          },\n          conditionSection,\n        ],\n      };\n    }\n\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  date({ type }: { type: string }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              ...attributeOptions.default,\n              type: type || 'date',\n              value: null,\n              withDefaultValue: false,\n              disabled: !type,\n              autoFocus: false,\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.unique, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  dynamiczone() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.max, attributeOptions.min],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  email() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              ...attributeOptions.default,\n              type: 'email',\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  enumeration(data: { enum: Array<string> }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              name: 'default',\n              type: 'select',\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              validations: {},\n              options: [\n                {\n                  key: '__null_reset_value__',\n                  value: '',\n                  metadatas: {\n                    intlLabel: {\n                      id: 'components.InputSelect.option.placeholder',\n                      defaultMessage: 'Choose here',\n                    },\n                  },\n                },\n                ...(data.enum || [])\n                  .filter((value, index) => data.enum.indexOf(value) === index && value)\n                  .map((value) => {\n                    return {\n                      key: value,\n                      value,\n                      metadatas: {\n                        intlLabel: { id: `${value}.no-override`, defaultMessage: value },\n                      },\n                    };\n                  }),\n              ],\n            },\n            {\n              intlLabel: {\n                id: getTrad('form.attribute.item.enumeration.graphql'),\n                defaultMessage: 'Name override for GraphQL',\n              },\n              name: 'enumName',\n              type: 'text',\n              validations: {},\n              description: {\n                id: getTrad('form.attribute.item.enumeration.graphql.description'),\n                defaultMessage: 'Allows you to override the default generated name for GraphQL',\n              },\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  json() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  media() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: {\n                id: getTrad('form.attribute.media.allowed-types'),\n                defaultMessage: 'Select allowed types of media',\n              },\n              name: 'allowedTypes',\n              type: 'allowed-types-select',\n              size: 7,\n              value: '',\n              validations: {},\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.required, attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  number(data: { type: DataType }) {\n    const inputStep = data.type === 'decimal' || data.type === 'float' ? 'any' : 1;\n\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              autoFocus: true,\n              name: 'default',\n              type: data.type === 'biginteger' ? 'text' : 'number',\n              step: inputStep,\n              intlLabel: {\n                id: getTrad('form.attribute.settings.default'),\n                defaultMessage: 'Default value',\n              },\n              validations: {},\n            },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.max,\n            attributeOptions.min,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  password() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default] },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  relation() {\n    return {\n      sections: [\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [attributeOptions.private],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  richtext() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default] },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  text() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [attributeOptions.default, attributeOptions.regex] },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.unique,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n  uid(data: { targetField: string }) {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            { ...attributeOptions.default, disabled: Boolean(data.targetField), type: 'text' },\n          ],\n        },\n        {\n          sectionTitle: {\n            id: 'global.settings',\n            defaultMessage: 'Settings',\n          },\n          items: [\n            attributeOptions.required,\n            attributeOptions.maxLength,\n            attributeOptions.minLength,\n            attributeOptions.private,\n            attributeOptions.regex,\n          ],\n        },\n        conditionSection,\n      ],\n    };\n  },\n};\n", "import { getTrad } from '../../../utils/getTrad';\n\nexport const componentField = {\n  intlLabel: {\n    id: 'global.type',\n    defaultMessage: 'Type',\n  },\n  name: 'createComponent',\n  type: 'boolean-radio-group',\n  size: 12,\n  radios: [\n    {\n      title: {\n        id: getTrad('form.attribute.component.option.create'),\n        defaultMessage: 'Create a new component',\n      },\n      description: {\n        id: getTrad('form.attribute.component.option.create.description'),\n        defaultMessage:\n          'A component is shared across types and components, it will be available and accessible everywhere.',\n      },\n      value: true,\n    },\n    {\n      title: {\n        id: getTrad('form.attribute.component.option.reuse-existing'),\n        defaultMessage: 'Use an existing component',\n      },\n      description: {\n        id: getTrad('form.attribute.component.option.reuse-existing.description'),\n        defaultMessage:\n          'Reuse a component already created to keep your data consistent across content-types.',\n      },\n      value: false,\n    },\n  ],\n};\n", "import { getTrad } from '../../../utils/getTrad';\nimport { componentField } from '../component/componentField';\nimport { componentForm } from '../component/componentForm';\n\nimport { nameField } from './nameField';\n\nexport const baseForm = {\n  component(data: { createComponent: boolean }, step: string) {\n    if (step === '1') {\n      const itemsToConcat =\n        data.createComponent === true ? componentForm.base('componentToCreate.') : [];\n\n      return {\n        sections: [{ sectionTitle: null, items: [componentField] }, ...itemsToConcat],\n      };\n    }\n\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            nameField,\n            {\n              name: 'component',\n              type: 'select-component',\n              intlLabel: {\n                id: getTrad('modalForm.attributes.select-component'),\n                defaultMessage: 'Select a component',\n              },\n              isMultiple: false,\n            },\n          ],\n        },\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: {\n                id: 'global.type',\n                defaultMessage: 'Type',\n              },\n              name: 'repeatable',\n              type: 'boolean-radio-group',\n              size: 12,\n              radios: [\n                {\n                  title: {\n                    id: getTrad('form.attribute.component.option.repeatable'),\n                    defaultMessage: 'Repeatable component',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.component.option.repeatable.description'),\n                    defaultMessage:\n                      'Best for multiple instances (array) of ingredients, meta tags, etc..',\n                  },\n                  value: true,\n                },\n                {\n                  title: {\n                    id: getTrad('form.attribute.component.option.single'),\n                    defaultMessage: 'Single component',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.component.option.single.description'),\n                    defaultMessage:\n                      'Best for grouping fields like full address, main information, etc...',\n                  },\n                  value: false,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n  date() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            nameField,\n            {\n              intlLabel: {\n                id: 'global.type',\n                defaultMessage: 'Type',\n              },\n              name: 'type',\n              type: 'select-date',\n              options: [\n                {\n                  key: '__null_reset_value__',\n                  value: '',\n                  metadatas: {\n                    intlLabel: {\n                      id: 'components.InputSelect.option.placeholder',\n                      defaultMessage: 'Choose here',\n                    },\n                    hidden: true,\n                  },\n                },\n                {\n                  key: 'date',\n                  value: 'date',\n                  metadatas: {\n                    intlLabel: {\n                      id: getTrad('form.attribute.item.date.type.date'),\n                      defaultMessage: 'date (ex: 01/01/{currentYear})',\n                      values: { currentYear: new Date().getFullYear() },\n                    },\n                  },\n                },\n                {\n                  key: 'datetime',\n                  value: 'datetime',\n                  metadatas: {\n                    intlLabel: {\n                      id: getTrad('form.attribute.item.date.type.datetime'),\n                      defaultMessage: 'datetime (ex: 01/01/{currentYear} 00:00 AM)',\n                      values: { currentYear: new Date().getFullYear() },\n                    },\n                  },\n                },\n                {\n                  key: 'time',\n                  value: 'time',\n                  metadatas: {\n                    intlLabel: {\n                      id: getTrad('form.attribute.item.date.type.time'),\n                      defaultMessage: 'time (ex: 00:00 AM)',\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n  enumeration() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [nameField] },\n        {\n          sectionTitle: null,\n          items: [\n            {\n              name: 'enum',\n              type: 'textarea-enum',\n              size: 6,\n              intlLabel: {\n                id: getTrad('form.attribute.item.enumeration.rules'),\n                defaultMessage: 'Values (one line per value)',\n              },\n              placeholder: {\n                id: getTrad('form.attribute.item.enumeration.placeholder'),\n                defaultMessage: 'Ex:\\nmorning\\nnoon\\nevening',\n              },\n              validations: {\n                required: true,\n              },\n            },\n          ],\n        },\n      ],\n    };\n  },\n  media() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [nameField] },\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: {\n                id: 'global.type',\n                defaultMessage: 'Type',\n              },\n              name: 'multiple',\n              size: 12,\n              type: 'boolean-radio-group',\n              radios: [\n                {\n                  title: {\n                    id: getTrad('form.attribute.media.option.multiple'),\n                    defaultMessage: 'Multiple media',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.media.option.multiple.description'),\n                    defaultMessage: 'Best for sliders, carousels or multiple files download',\n                  },\n                  value: true,\n                },\n                {\n                  title: {\n                    id: getTrad('form.attribute.media.option.single'),\n                    defaultMessage: 'Single media',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.media.option.single.description'),\n                    defaultMessage: 'Best for avatar, profile picture or cover',\n                  },\n                  value: false,\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n  number() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            nameField,\n            {\n              intlLabel: {\n                id: getTrad('form.attribute.item.number.type'),\n                defaultMessage: 'Number format',\n              },\n              name: 'type',\n              type: 'select-number',\n              options: [\n                {\n                  key: '__null_reset_value__',\n                  value: '',\n                  metadatas: {\n                    intlLabel: {\n                      id: 'components.InputSelect.option.placeholder',\n                      defaultMessage: 'Choose here',\n                    },\n                    hidden: true,\n                  },\n                },\n                {\n                  key: 'integer',\n                  value: 'integer',\n                  metadatas: {\n                    intlLabel: {\n                      id: getTrad('form.attribute.item.number.type.integer'),\n                      defaultMessage: 'integer (ex: 10)',\n                    },\n                  },\n                },\n                {\n                  key: 'biginteger',\n                  value: 'biginteger',\n                  metadatas: {\n                    intlLabel: {\n                      id: getTrad('form.attribute.item.number.type.biginteger'),\n                      defaultMessage: 'biginteger (ex: 123456789)',\n                    },\n                  },\n                },\n                {\n                  key: 'decimal',\n                  value: 'decimal',\n                  metadatas: {\n                    intlLabel: {\n                      id: getTrad('form.attribute.item.number.type.decimal'),\n                      defaultMessage: 'decimal (ex: 2.22)',\n                    },\n                  },\n                },\n                {\n                  key: 'float',\n                  value: 'float',\n                  metadatas: {\n                    intlLabel: {\n                      id: getTrad('form.attribute.item.number.type.float'),\n                      defaultMessage: 'decimal (ex: 3.3333333)',\n                    },\n                  },\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n  relation() {\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: { id: 'FIXME', defaultMessage: 'FIXME' },\n              name: 'relation',\n              size: 12,\n              type: 'relation',\n            },\n          ],\n        },\n      ],\n    };\n  },\n  string() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [nameField] },\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: {\n                id: 'global.type',\n                defaultMessage: 'Type',\n              },\n              name: 'type',\n              size: 12,\n              type: 'radio-group',\n              radios: [\n                {\n                  title: {\n                    id: getTrad('form.attribute.text.option.short-text'),\n                    defaultMessage: 'Sort text',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.text.option.short-text.description'),\n                    defaultMessage:\n                      'Best for titles, names, links (URL). It also enables exact search on the field.',\n                  },\n                  value: 'string',\n                },\n                {\n                  title: {\n                    id: getTrad('form.attribute.text.option.long-text'),\n                    defaultMessage: 'Long text',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.text.option.long-text.description'),\n                    defaultMessage: 'Best for descriptions, biography. Exact search is disabled.',\n                  },\n                  value: 'text',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n  text() {\n    return {\n      sections: [\n        { sectionTitle: null, items: [nameField] },\n        {\n          sectionTitle: null,\n          items: [\n            {\n              intlLabel: {\n                id: 'global.type',\n                defaultMessage: 'Type',\n              },\n              name: 'type',\n              size: 12,\n              type: 'radio-group',\n              radios: [\n                {\n                  title: {\n                    id: getTrad('form.attribute.text.option.short-text'),\n                    defaultMessage: 'Sort text',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.text.option.short-text.description'),\n                    defaultMessage:\n                      'Best for titles, names, links (URL). It also enables exact search on the field.',\n                  },\n                  value: 'string',\n                },\n                {\n                  title: {\n                    id: getTrad('form.attribute.text.option.long-text'),\n                    defaultMessage: 'Long text',\n                  },\n                  description: {\n                    id: getTrad('form.attribute.text.option.long-text.description'),\n                    defaultMessage: 'Best for descriptions, biography. Exact search is disabled.',\n                  },\n                  value: 'text',\n                },\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n  uid(_data: unknown, step: string, attributes: Array<{ type: string; name: string }>) {\n    const options = attributes\n      .filter(({ type }) => ['string', 'text'].includes(type))\n      .map(({ name }) => ({\n        key: name,\n        value: name,\n        metadatas: {\n          intlLabel: { id: `${name}.no-override`, defaultMessage: name },\n        },\n      }));\n\n    return {\n      sections: [\n        {\n          sectionTitle: null,\n          items: [\n            {\n              ...nameField,\n              placeholder: {\n                id: getTrad('modalForm.attribute.form.base.name.placeholder'),\n                defaultMessage: 'e.g. slug, seoUrl, canonicalUrl',\n              },\n            },\n            {\n              intlLabel: {\n                id: getTrad('modalForm.attribute.target-field'),\n                defaultMessage: 'Attached field',\n              },\n              name: 'targetField',\n              type: 'select',\n              options: [\n                {\n                  key: '__null_reset_value__',\n                  value: '',\n                  metadatas: { intlLabel: { id: 'global.none', defaultMessage: 'None' } },\n                },\n                ...options,\n              ],\n            },\n          ],\n        },\n      ],\n    };\n  },\n};\n", "import { advancedForm } from './advancedForm';\nimport { baseForm } from './baseForm';\n\nexport const attributesForm = {\n  advanced: advancedForm,\n  base: baseForm,\n};\n", "import slugify from '@sindresorhus/slugify';\n\nexport const toRegressedEnumValue = (value: string | undefined) => {\n  if (!value) {\n    return '';\n  }\n  return slugify(value, {\n    decamelize: false,\n    lowercase: false,\n    separator: '_',\n  });\n};\n", "import { translatedErrors as errorsTrads } from '@strapi/admin/strapi-admin';\nimport { snakeCase } from 'lodash/fp';\nimport toNumber from 'lodash/toNumber';\nimport * as yup from 'yup';\n\nimport { getTrad } from '../../../../utils/getTrad';\n\nconst NAME_REGEX = /^[A-Za-z][_0-9A-Za-z]*$/;\n\nconst alreadyUsedAttributeNames = (\n  usedNames: Array<string>\n): yup.TestConfig<string | undefined, Record<string, unknown>> => {\n  return {\n    name: 'attributeNameAlreadyUsed',\n    message: errorsTrads.unique.id,\n    test(value: string | undefined) {\n      if (!value) {\n        return false;\n      }\n      const snakeCaseKey = snakeCase(value);\n\n      return !usedNames.some((existingKey) => {\n        return snakeCase(existingKey) === snakeCaseKey;\n      });\n    },\n  };\n};\n\nconst getUsedContentTypeAttributeNames = (\n  ctShema: any,\n  isEdition: boolean,\n  attributeNameToEdit: string\n) => {\n  const attributes = ctShema?.attributes ?? {};\n\n  return Object.keys(attributes).filter((attr) => {\n    if (isEdition) {\n      return attr !== attributeNameToEdit;\n    }\n\n    return true;\n  });\n};\n\nconst isNameAllowed = (\n  reservedNames: Array<string>\n): yup.TestConfig<string | undefined, Record<string, unknown>> => {\n  return {\n    name: 'forbiddenAttributeName',\n    message: getTrad('error.attributeName.reserved-name'),\n    test(value: string | undefined) {\n      if (!value) {\n        return false;\n      }\n      const snakeCaseKey = snakeCase(value);\n\n      return !reservedNames.some((existingKey) => {\n        return snakeCase(existingKey) === snakeCaseKey;\n      });\n    },\n  };\n};\n\nconst validators = {\n  default: () => yup.string().nullable(),\n  max: () => yup.number().integer().nullable(),\n  min: () =>\n    yup\n      .number()\n      .integer()\n      .when('max', (max, schema) => {\n        if (max) {\n          return schema.max(max, getTrad('error.validation.minSupMax'));\n        }\n\n        return schema;\n      })\n      .nullable(),\n  maxLength: () => yup.number().integer().positive(getTrad('error.validation.positive')).nullable(),\n  minLength: () =>\n    yup\n      .number()\n      .integer()\n      .min(1)\n      .when('maxLength', (maxLength, schema) => {\n        if (maxLength) {\n          return schema.max(maxLength, getTrad('error.validation.minSupMax'));\n        }\n\n        return schema;\n      })\n      .nullable(),\n  name(usedNames: Array<string>, reservedNames: Array<string>) {\n    return yup\n      .string()\n      .test(alreadyUsedAttributeNames(usedNames))\n      .test(isNameAllowed(reservedNames))\n      .matches(NAME_REGEX, errorsTrads.regex.id)\n      .required(errorsTrads.required.id);\n  },\n  required: () => yup.boolean(),\n  type: () => yup.string().required(errorsTrads.required.id),\n  unique: () => yup.boolean().nullable(),\n};\n\nconst createTextShape = (usedAttributeNames: Array<string>, reservedNames: Array<string>) => {\n  const shape = {\n    name: validators.name(usedAttributeNames, reservedNames),\n    type: validators.type(),\n    default: validators.default(),\n    unique: validators.unique(),\n    required: validators.required(),\n    maxLength: validators.maxLength(),\n    minLength: validators.minLength(),\n    regex: yup\n      .string()\n      .test({\n        name: 'isValidRegExpPattern',\n        message: getTrad('error.validation.regex'),\n        test(value) {\n          try {\n            return new RegExp(value || '') !== null;\n          } catch (e) {\n            return false;\n          }\n        },\n      })\n      .nullable(),\n  };\n\n  return shape;\n};\n\ntype GenericIsMinSuperiorThanMax<T extends (string | null) | number> = yup.TestConfig<\n  T | undefined,\n  Record<string, unknown>\n>;\n\nconst isMinSuperiorThanMax = <\n  T extends (string | null) | number,\n>(): GenericIsMinSuperiorThanMax<T> => ({\n  name: 'isMinSuperiorThanMax',\n  message: getTrad('error.validation.minSupMax'),\n  test(min: T | undefined) {\n    if (!min) {\n      return true;\n    }\n\n    const { max } = (this as any).parent;\n\n    if (!max) {\n      return true;\n    }\n\n    if (Number.isNaN(toNumber(min))) {\n      return true;\n    }\n\n    return toNumber(max) >= toNumber(min);\n  },\n});\n\nexport {\n  alreadyUsedAttributeNames,\n  createTextShape,\n  getUsedContentTypeAttributeNames,\n  isMinSuperiorThanMax,\n  isNameAllowed,\n  NAME_REGEX,\n  validators,\n};\n", "import { translatedErrors as errorsTrads } from '@strapi/admin/strapi-admin';\nimport uniq from 'lodash/uniq';\nimport * as yup from 'yup';\n\nimport { getRelationType } from '../../../utils/getRelationType';\nimport { getTrad } from '../../../utils/getTrad';\nimport { toRegressedEnumValue } from '../../../utils/toRegressedEnumValue';\n\nimport {\n  alreadyUsedAttributeNames,\n  createTextShape,\n  isMinSuperiorThanMax,\n  isNameAllowed,\n  NAME_REGEX,\n  validators,\n} from './validation/common';\n\nimport type { Schema } from '@strapi/types';\n\nexport const attributeTypes = {\n  date(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n    };\n\n    return yup.object(shape);\n  },\n  datetime(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n    };\n\n    return yup.object(shape);\n  },\n  time(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n    };\n\n    return yup.object(shape);\n  },\n  default(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n    };\n\n    return yup.object(shape);\n  },\n  biginteger(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      default: yup\n        .string()\n        .nullable()\n        .matches(/^-?\\d*$/),\n      unique: validators.unique(),\n      required: validators.required(),\n      max: yup\n        .string()\n        .nullable()\n        .matches(/^-?\\d*$/, errorsTrads.regex.id),\n      min: yup\n        .string()\n        .nullable()\n        .test(isMinSuperiorThanMax<string | null>())\n        .matches(/^-?\\d*$/, errorsTrads.regex.id),\n    };\n\n    return yup.object(shape);\n  },\n  boolean(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      default: yup.boolean().nullable(),\n      required: validators.required(),\n      unique: validators.unique(),\n    };\n\n    return yup.object(shape);\n  },\n  component(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      required: validators.required(),\n      max: validators.max(),\n      min: validators.min(),\n      component: yup.string().required(errorsTrads.required.id),\n    };\n\n    return yup.object(shape);\n  },\n  decimal(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      default: yup.number(),\n      required: validators.required(),\n      max: yup.number(),\n      min: yup.number().test(isMinSuperiorThanMax<number>()),\n    };\n\n    return yup.object(shape);\n  },\n  dynamiczone(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      required: validators.required(),\n      max: validators.max(),\n      min: validators.min(),\n    };\n\n    return yup.object(shape);\n  },\n  email(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      default: yup.string().email().nullable(),\n      unique: validators.unique(),\n      required: validators.required(),\n      maxLength: validators.maxLength(),\n      minLength: validators.minLength(),\n    };\n\n    return yup.object(shape);\n  },\n  enumeration(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    /**\n     * For enumerations the least common denomiator is GraphQL, where\n     * values needs to match the secure name regex:\n     * GraphQL Spec https://spec.graphql.org/June2018/#sec-Names\n     *\n     * Therefore we need to make sure our users only use values, which\n     * can be returned by GraphQL, by checking the regressed values\n     * agains the GraphQL regex.\n     *\n     * TODO V5: check if we can avoid this coupling by moving this logic\n     * into the GraphQL plugin.\n     */\n    const GRAPHQL_ENUM_REGEX = /^[_A-Za-z][_0-9A-Za-z]*$/;\n\n    const shape = {\n      name: yup\n        .string()\n        .test(alreadyUsedAttributeNames(usedAttributeNames))\n        .test(isNameAllowed(reservedNames))\n        .matches(GRAPHQL_ENUM_REGEX, errorsTrads.regex.id)\n        .required(errorsTrads.required.id),\n      type: validators.type(),\n      default: validators.default(),\n      unique: validators.unique(),\n      required: validators.required(),\n      enum: yup\n        .array()\n        .of(yup.string())\n        .min(1, errorsTrads.min.id)\n        .test({\n          name: 'areEnumValuesUnique',\n          message: getTrad('error.validation.enum-duplicate'),\n          test(values) {\n            if (!values) {\n              return false;\n            }\n            const duplicates = uniq(\n              values\n                .map(toRegressedEnumValue)\n                .filter((value, index, values) => values.indexOf(value) !== index)\n            );\n\n            return !duplicates.length;\n          },\n        })\n        .test({\n          name: 'doesNotHaveEmptyValues',\n          message: getTrad('error.validation.enum-empty-string'),\n          test: (values) => {\n            if (!values) {\n              return false;\n            }\n            return !values.map(toRegressedEnumValue).some((val) => val === '');\n          },\n        })\n        .test({\n          name: 'doesMatchRegex',\n          message: getTrad('error.validation.enum-regex'),\n          test: (values) => {\n            if (!values) {\n              return false;\n            }\n            return values\n              .map(toRegressedEnumValue)\n              .every((value) => GRAPHQL_ENUM_REGEX.test(value));\n          },\n        }),\n      enumName: yup.string().nullable(),\n    };\n\n    return yup.object(shape);\n  },\n  float(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      required: validators.required(),\n      default: yup.number(),\n      max: yup.number(),\n      min: yup.number().test(isMinSuperiorThanMax<number>()),\n    };\n\n    return yup.object(shape);\n  },\n  integer(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      default: yup.number().integer(),\n      unique: validators.unique(),\n      required: validators.required(),\n      max: validators.max(),\n      min: validators.min(),\n    };\n\n    return yup.object(shape);\n  },\n  json(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      required: validators.required(),\n      unique: validators.unique(),\n    };\n\n    return yup.object(shape);\n  },\n  media(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      multiple: yup.boolean(),\n      required: validators.required(),\n      allowedTypes: yup\n        .array()\n        .of(yup.string().oneOf(['images', 'videos', 'files', 'audios']))\n        .min(1)\n        .nullable(),\n    };\n\n    return yup.object(shape);\n  },\n  password(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      default: validators.default(),\n      unique: validators.unique(),\n      required: validators.required(),\n      maxLength: validators.maxLength(),\n      minLength: validators.minLength(),\n    };\n\n    return yup.object(shape);\n  },\n  relation(\n    usedAttributeNames: Array<string>,\n    reservedNames: Array<string>,\n    alreadyTakenTargetAttributes: Array<{ name: string }>,\n    {\n      initialData,\n      modifiedData,\n    }: {\n      initialData: { targetAttribute?: string };\n      modifiedData: {\n        name?: string;\n        relation?: Schema.Attribute.RelationKind.WithTarget;\n        targetAttribute?: string;\n      };\n    }\n  ) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      target: yup.string().required(errorsTrads.required.id),\n      relation: yup.string().required(),\n      type: yup.string().required(),\n      targetAttribute: yup.lazy(() => {\n        const relationType = getRelationType(modifiedData.relation!, modifiedData.targetAttribute);\n\n        if (relationType === 'oneWay' || relationType === 'manyWay') {\n          return yup.string().nullable();\n        }\n\n        const schema = yup.string().test(isNameAllowed(reservedNames));\n        const initialForbiddenName = [\n          ...alreadyTakenTargetAttributes.map(({ name }) => name),\n          modifiedData.name,\n        ];\n\n        const forbiddenTargetAttributeName = initialForbiddenName.filter(\n          (val) => val !== initialData.targetAttribute\n        );\n\n        return schema\n          .matches(NAME_REGEX, errorsTrads.regex.id)\n          .test({\n            name: 'forbiddenTargetAttributeName',\n            message: getTrad('error.validation.relation.targetAttribute-taken'),\n            test(value) {\n              if (!value) {\n                return false;\n              }\n\n              return !forbiddenTargetAttributeName.includes(value);\n            },\n          })\n          .required(errorsTrads.required.id);\n      }),\n    };\n\n    return yup.object(shape);\n  },\n  richtext(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      default: validators.default(),\n      unique: validators.unique(),\n      required: validators.required(),\n      maxLength: validators.maxLength(),\n      minLength: validators.minLength(),\n    };\n\n    return yup.object(shape);\n  },\n  blocks(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = {\n      name: validators.name(usedAttributeNames, reservedNames),\n      type: validators.type(),\n      default: validators.default(),\n      unique: validators.unique(),\n      required: validators.required(),\n      maxLength: validators.maxLength(),\n      minLength: validators.minLength(),\n    };\n\n    return yup.object(shape);\n  },\n  string(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = createTextShape(usedAttributeNames, reservedNames);\n\n    return yup.object(shape);\n  },\n  text(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = createTextShape(usedAttributeNames, reservedNames);\n\n    return yup.object(shape);\n  },\n  uid(usedAttributeNames: Array<string>, reservedNames: Array<string>) {\n    const shape = createTextShape(usedAttributeNames, reservedNames);\n\n    return yup.object(shape);\n  },\n};\n", "import { translatedErrors as errorsTrads } from '@strapi/admin/strapi-admin';\nimport { snakeCase } from 'lodash/fp';\nimport * as yup from 'yup';\n\nimport { getTrad } from '../../../utils/getTrad';\nimport { createComponentUid } from '../utils/createUid';\n\nconst CATEGORY_NAME_REGEX = /^[A-Za-z][-_0-9A-Za-z]*$/;\n\nexport const createComponentSchema = (\n  usedComponentNames: Array<string>,\n  reservedNames: Array<string>,\n  category: string,\n  takenCollectionNames: Array<string>,\n  currentCollectionName: string\n) => {\n  const shape = {\n    displayName: yup\n      .string()\n      .test({\n        name: 'nameAlreadyUsed',\n        message: errorsTrads.unique.id,\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const name = createComponentUid(value, category);\n\n          const snakeCaseKey = snakeCase(name);\n          const snakeCaseCollectionName = snakeCase(currentCollectionName);\n\n          return (\n            usedComponentNames.every((reserved) => {\n              return snakeCase(reserved) !== snakeCaseKey;\n            }) &&\n            takenCollectionNames.every(\n              (collectionName) => snakeCase(collectionName) !== snakeCaseCollectionName\n            )\n          );\n        },\n      })\n      .test({\n        name: 'nameNotAllowed',\n        message: getTrad('error.contentTypeName.reserved-name'),\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n          return reservedNames.every((reserved) => {\n            return snakeCase(reserved) !== snakeCaseKey;\n          });\n        },\n      })\n      .required(errorsTrads.required.id),\n    category: yup\n      .string()\n      .matches(CATEGORY_NAME_REGEX, errorsTrads.regex.id)\n      .required(errorsTrads.required.id),\n\n    icon: yup.string(),\n  };\n\n  return yup.object(shape);\n};\n", "import { getTrad } from '../../../utils/getTrad';\n\nconst nameField = {\n  name: 'displayName',\n  type: 'text',\n  intlLabel: {\n    id: getTrad('contentType.displayName.label'),\n    defaultMessage: 'Display name',\n  },\n};\n\nexport const contentTypeForm = {\n  advanced: {\n    default() {\n      return {\n        sections: [\n          {\n            items: [\n              {\n                intlLabel: {\n                  id: getTrad('contentType.draftAndPublish.label'),\n                  defaultMessage: 'Draft & publish',\n                },\n                description: {\n                  id: getTrad('contentType.draftAndPublish.description'),\n                  defaultMessage:\n                    'Allows writing a draft version of an entry, before it is published',\n                },\n                name: 'draftAndPublish',\n                type: 'toggle-draft-publish',\n                validations: {},\n              },\n            ],\n          },\n        ],\n      };\n    },\n  },\n  base: {\n    create() {\n      return {\n        sections: [\n          {\n            sectionTitle: null,\n            items: [\n              nameField,\n              {\n                description: {\n                  id: getTrad('contentType.apiId-singular.description'),\n                  defaultMessage:\n                    'Used to generate the API routes and databases tables/collections',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-singular.label'),\n                  defaultMessage: 'API ID (Singular)',\n                },\n                name: 'singularName',\n                type: 'text-singular',\n              },\n              {\n                type: 'pushRight',\n                size: 6,\n                intlLabel: { id: '', defaultMessage: '' },\n                name: 'pushRight',\n              },\n              {\n                description: {\n                  id: getTrad('contentType.apiId-plural.description'),\n                  defaultMessage: 'Pluralized API ID',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-plural.label'),\n                  defaultMessage: 'API ID (Plural)',\n                },\n                name: 'pluralName',\n                type: 'text-plural',\n              },\n            ],\n          },\n        ],\n      };\n    },\n    edit() {\n      return {\n        sections: [\n          {\n            sectionTitle: null,\n            items: [\n              nameField,\n              {\n                disabled: true,\n                description: {\n                  id: getTrad('contentType.apiId-singular.description'),\n                  defaultMessage:\n                    'Used to generate the API routes and databases tables/collections',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-singular.label'),\n                  defaultMessage: 'API ID (Singular)',\n                },\n                name: 'singularName',\n                type: 'text',\n              },\n              {\n                type: 'pushRight',\n                size: 6,\n                intlLabel: { id: '', defaultMessage: '' },\n                name: 'pushRight',\n              },\n              {\n                disabled: true,\n                description: {\n                  id: getTrad('contentType.apiId-plural.description'),\n                  defaultMessage: 'Pluralized API ID',\n                },\n                intlLabel: {\n                  id: getTrad('contentType.apiId-plural.label'),\n                  defaultMessage: 'API ID (Plural)',\n                },\n                name: 'pluralName',\n                type: 'text',\n              },\n              {\n                intlLabel: {\n                  id: 'global.type',\n                  defaultMessage: 'Type',\n                },\n                name: 'kind',\n                type: 'content-type-radio-group',\n                size: 12,\n                radios: [\n                  {\n                    title: {\n                      id: getTrad('form.button.collection-type.name'),\n                      defaultMessage: 'Collection Type',\n                    },\n                    description: {\n                      id: getTrad('form.button.collection-type.description'),\n                      defaultMessage:\n                        'Best for multiple instances like articles, products, comments, etc.',\n                    },\n                    value: 'collectionType',\n                  },\n                  {\n                    title: {\n                      id: getTrad('form.button.single-type.name'),\n                      defaultMessage: 'Single Type',\n                    },\n                    description: {\n                      id: getTrad('form.button.single-type.description'),\n                      defaultMessage: 'Best for single instance like about us, homepage, etc.',\n                    },\n                    value: 'singleType',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      };\n    },\n  },\n};\n", "import { translatedErrors as errorsTrads } from '@strapi/admin/strapi-admin';\nimport { snakeCase } from 'lodash/fp';\nimport * as yup from 'yup';\n\nimport { getTrad } from '../../../utils/getTrad';\nimport { createUid } from '../utils/createUid';\n\ntype CreateContentTypeSchemaParams = {\n  usedContentTypeNames: Array<string>;\n  reservedModels: Array<string>;\n  singularNames: Array<string>;\n  pluralNames: Array<string>;\n  collectionNames: Array<string>;\n};\n\nexport const createContentTypeSchema = ({\n  usedContentTypeNames = [],\n  reservedModels = [],\n  singularNames = [],\n  pluralNames = [],\n  collectionNames = [],\n}: CreateContentTypeSchemaParams) => {\n  const shape = {\n    displayName: yup\n      .string()\n      .test({\n        name: 'nameAlreadyUsed',\n        message: errorsTrads.unique.id,\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const name = createUid(value);\n\n          const snakeCaseKey = snakeCase(name);\n\n          return !usedContentTypeNames.some((value) => {\n            return snakeCase(value) === snakeCaseKey;\n          });\n        },\n      })\n      .test({\n        name: 'nameNotAllowed',\n        message: getTrad('error.contentTypeName.reserved-name'),\n        test(value) {\n          if (!value) {\n            return false;\n          }\n          const snakeCaseKey = snakeCase(value);\n\n          return !reservedModels.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .required(errorsTrads.required.id),\n    pluralName: yup\n      .string()\n      .test({\n        name: 'pluralNameAlreadyUsed',\n        message: errorsTrads.unique.id,\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n\n          return !pluralNames.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .test({\n        name: 'pluralNameAlreadyUsedAsSingular',\n        message: getTrad('error.contentType.pluralName-equals-singularName'),\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n\n          return !singularNames.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .test({\n        name: 'pluralAndSingularAreUnique',\n        message: getTrad('error.contentType.pluralName-used'),\n        test(value, context) {\n          if (!value) {\n            return false;\n          }\n\n          return snakeCase(context.parent.singularName) !== snakeCase(value);\n        },\n      })\n      .test({\n        name: 'pluralNameNotAllowed',\n        message: getTrad('error.contentTypeName.reserved-name'),\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n\n          return !reservedModels.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .test({\n        name: 'pluralNameNotAlreadyUsedInCollectionName',\n        message: getTrad('error.contentType.pluralName-equals-collectionName'),\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n\n          return !collectionNames.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .required(errorsTrads.required.id),\n    singularName: yup\n      .string()\n      .test({\n        name: 'singularNameAlreadyUsed',\n        message: errorsTrads.unique.id,\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n\n          return !singularNames.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .test({\n        name: 'singularNameAlreadyUsedAsPlural',\n        message: getTrad('error.contentType.singularName-equals-pluralName'),\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n\n          return !pluralNames.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .test({\n        name: 'pluralAndSingularAreUnique',\n        message: getTrad('error.contentType.singularName-used'),\n        test(value, context) {\n          if (!value) {\n            return false;\n          }\n\n          return snakeCase(context.parent.pluralName) !== snakeCase(value);\n        },\n      })\n      .test({\n        name: 'singularNameNotAllowed',\n        message: getTrad('error.contentTypeName.reserved-name'),\n        test(value) {\n          if (!value) {\n            return false;\n          }\n\n          const snakeCaseKey = snakeCase(value);\n\n          return !reservedModels.some((key) => {\n            return snakeCase(key) === snakeCaseKey;\n          });\n        },\n      })\n      .required(errorsTrads.required.id),\n    draftAndPublish: yup.boolean(),\n    kind: yup.string().oneOf(['singleType', 'collectionType']),\n  };\n\n  return yup.object(shape);\n};\n", "import { getTrad } from '../../utils/getTrad';\n\nimport { componentField } from './component/componentField';\nimport { componentForm } from './component/componentForm';\n\nexport const dynamiczoneForm = {\n  advanced: {\n    default() {\n      return {\n        sections: componentForm.advanced(),\n      };\n    },\n  },\n  base: {\n    createComponent() {\n      return {\n        sections: [\n          { sectionTitle: null, items: [componentField] },\n          ...componentForm.base('componentToCreate.'),\n        ],\n      };\n    },\n    default() {\n      return {\n        sections: [\n          { sectionTitle: null, items: [componentField] },\n          {\n            sectionTitle: null,\n            items: [\n              {\n                type: 'pushRight',\n                size: 6,\n                intlLabel: { id: '', defaultMessage: '' },\n                name: 'pushRight',\n              },\n              {\n                name: 'components',\n                type: 'select-components',\n                intlLabel: {\n                  id: getTrad('modalForm.attributes.select-components'),\n                  defaultMessage: 'Select the components',\n                },\n                isMultiple: true,\n              },\n            ],\n          },\n        ],\n      };\n    },\n  },\n};\n", "type SectionTitle = {\n  id: string;\n  defaultMessage: string;\n};\n\ntype Item = {\n  intlLabel: {\n    id: string;\n    defaultMessage: string;\n  };\n  description?: { id: string; defaultMessage: string };\n  name: string;\n  type: string;\n  value?: string;\n  options?: {\n    key: string;\n    value: string;\n    metadatas: {\n      intlLabel: {\n        id: string;\n        defaultMessage: string;\n      };\n    };\n  }[];\n};\n\ntype FormTypeOption = {\n  sectionTitle: SectionTitle | null;\n  items: Item[];\n};\n\nexport type FormTypeOptions = Array<FormTypeOption>;\n\n/**\n * @description\n * Adds form options to the default section or as a new section\n */\nexport const addItemsToFormSection = (\n  formTypeOptions: FormTypeOptions | Item[],\n  sections: FormTypeOptions\n) => {\n  formTypeOptions.forEach((item) => {\n    if (!('sectionTitle' in item)) {\n      // When there is no sectionTitle key,\n      // add the item to the default section\n      sections[0].items?.push(item);\n      return;\n    }\n\n    // Otherwise, when sectionTitle has a value (including null),\n    // add the item as a new section\n    sections.push(item);\n  });\n};\n", "import { snakeCase } from 'lodash/fp';\nimport pluralize from 'pluralize';\n\n// TODO: create a utility for this\n// Duplicate in server/src/services/schema-builder/component-builder.ts\nconst createComponentCollectionName = (name: string, category: string) => {\n  return `components_${snakeCase(category)}_${pluralize(snakeCase(name))}`;\n};\n\nexport { createComponentCollectionName };\n", "export type SchemaData = {\n  initialData: {\n    name?: string;\n    targetAttribute?: any;\n    [key: string]: unknown;\n  };\n  modifiedData: object;\n};\n\nexport type Attribute = {\n  name: string;\n};\n\nexport const getUsedAttributeNames = (\n  attributes: Array<Attribute>,\n  schemaData: SchemaData\n): Array<string> => {\n  return attributes\n    .filter(({ name }) => {\n      return name !== schemaData.initialData.name;\n    })\n    .map(({ name }) => name);\n};\n", "import { getTrad } from '../../../utils';\nimport { commonBaseForm } from '../attributes/commonBaseForm';\nimport { attributesForm } from '../attributes/form';\nimport { nameField } from '../attributes/nameField';\nimport { attributeTypes } from '../attributes/types';\nimport { componentForm } from '../component/componentForm';\nimport { createComponentSchema } from '../component/createComponentSchema';\nimport { contentTypeForm } from '../contentType/contentTypeForm';\nimport { createContentTypeSchema } from '../contentType/createContentTypeSchema';\nimport { dynamiczoneForm } from '../dynamiczoneForm';\n\nimport { addItemsToFormSection, FormTypeOptions } from './utils/addItemsToFormSection';\nimport { createComponentCollectionName } from './utils/createCollectionName';\nimport { Attribute, getUsedAttributeNames, SchemaData } from './utils/getUsedAttributeNames';\n\nimport type { ContentType } from '../../../types';\nimport type { Internal } from '@strapi/types';\n\nexport type SchemaParams = {\n  schemaAttributes: any;\n  attributeType: keyof typeof attributeTypes;\n  customFieldValidator: any;\n  reservedNames: {\n    attributes: Array<string>;\n  };\n  schemaData: any;\n  ctbFormsAPI: any;\n};\n\ntype Base<TAttributesFormType extends 'base' | 'advanced'> = {\n  data: any;\n  type: keyof (typeof attributesForm)[TAttributesFormType];\n  step: string;\n  attributes: any;\n  extensions: any;\n  forTarget: string;\n};\n\nexport const forms = {\n  customField: {\n    schema({\n      schemaAttributes,\n      attributeType,\n      customFieldValidator,\n      reservedNames,\n      schemaData,\n      ctbFormsAPI,\n    }: SchemaParams) {\n      const usedAttributeNames = getUsedAttributeNames(schemaAttributes, schemaData);\n\n      let attributeShape;\n      if (attributeType === 'relation') {\n        attributeShape = attributeTypes[attributeType](\n          usedAttributeNames,\n          reservedNames.attributes,\n          [],\n          { initialData: {}, modifiedData: {} }\n        );\n      } else {\n        attributeShape = attributeTypes[attributeType](\n          usedAttributeNames,\n          reservedNames.attributes\n        );\n      }\n\n      return ctbFormsAPI.makeCustomFieldValidator(\n        attributeShape,\n        customFieldValidator,\n        usedAttributeNames,\n        reservedNames.attributes,\n        schemaData\n      );\n    },\n    form: {\n      base({ customField }: any) {\n        // Default section with required name field\n        const sections: FormTypeOptions = [{ sectionTitle: null, items: [nameField] }];\n\n        if (customField.options?.base) {\n          addItemsToFormSection(customField.options.base, sections);\n        }\n\n        return { sections };\n      },\n      advanced({ customField, data, step, extensions, ...rest }: any) {\n        // Default section with no fields\n        const sections: FormTypeOptions = [\n          { sectionTitle: null, items: [] },\n          {\n            sectionTitle: { id: 'form.attribute.condition.section', defaultMessage: 'Conditions' },\n            items: [\n              {\n                name: 'conditions',\n                type: 'condition-form',\n                intlLabel: {\n                  id: 'form.attribute.condition.label',\n                  defaultMessage: 'Visibility condition',\n                },\n                description: {\n                  id: 'form.attribute.condition.desc',\n                  defaultMessage: 'Show this field only when a boolean/enum condition matches.',\n                },\n              },\n            ],\n          },\n        ];\n        const injectedInputs = extensions.getAdvancedForm(['attribute', customField.type], {\n          data,\n          type: customField.type,\n          step,\n          ...rest,\n        });\n\n        if (customField.options?.advanced) {\n          addItemsToFormSection(customField.options.advanced, sections);\n        }\n\n        if (injectedInputs) {\n          const extendedSettings = {\n            sectionTitle: {\n              id: getTrad('modalForm.custom-fields.advanced.settings.extended'),\n              defaultMessage: 'Extended settings',\n            },\n            items: injectedInputs,\n          };\n\n          sections.push(extendedSettings);\n        }\n\n        return { sections };\n      },\n    },\n  },\n  attribute: {\n    schema(\n      currentSchema: any,\n      attributeType: keyof typeof attributeTypes,\n      reservedNames: {\n        attributes: Array<string>;\n      },\n      alreadyTakenTargetContentTypeAttributes: Array<Attribute>,\n      options: SchemaData,\n      extensions: {\n        makeValidator: any;\n      }\n    ) {\n      // Get the attributes object on the schema\n      const attributes: Array<Attribute> = currentSchema?.attributes ?? [];\n      const usedAttributeNames = getUsedAttributeNames(attributes, options);\n\n      try {\n        const attributeShape = attributeTypes[attributeType](\n          usedAttributeNames,\n          reservedNames.attributes,\n          alreadyTakenTargetContentTypeAttributes,\n          options\n        );\n\n        return extensions.makeValidator(\n          ['attribute', attributeType],\n          attributeShape,\n          usedAttributeNames,\n          reservedNames.attributes,\n          alreadyTakenTargetContentTypeAttributes,\n          options\n        );\n      } catch (err) {\n        console.error('Error yup build schema', err);\n\n        return attributeTypes.default(usedAttributeNames, reservedNames.attributes);\n      }\n    },\n    form: {\n      advanced({ data, type, step, extensions, ...rest }: Base<'advanced'>) {\n        try {\n          const baseForm = attributesForm.advanced[type](data, step).sections;\n          const itemsToAdd = extensions.getAdvancedForm(['attribute', type], {\n            data,\n            type,\n            step,\n            ...rest,\n          });\n\n          let injected = false;\n\n          const sections = baseForm.reduce((acc: Array<any>, current: any) => {\n            if (current.sectionTitle === null || injected) {\n              acc.push(current);\n            } else {\n              acc.push({ ...current, items: [...current.items, ...itemsToAdd] });\n              injected = true;\n            }\n\n            return acc;\n          }, []);\n          // IF we want a dedicated section for the plugins\n          // const sections = [\n          //   ...baseForm,\n          //   {\n          //     sectionTitle: { id: 'Zone pour plugins', defaultMessage: 'Zone pour plugins' },\n          //     items: itemsToAdd,\n          //   },\n          // ];\n\n          return { sections };\n        } catch (err) {\n          console.error(err);\n\n          return { sections: [] };\n        }\n      },\n      base({ data, type, step, attributes }: Base<'base'>) {\n        try {\n          return attributesForm.base[type](data, step, attributes);\n        } catch (err) {\n          return commonBaseForm;\n        }\n      },\n    },\n  },\n  contentType: {\n    schema(\n      alreadyTakenNames: Array<string>,\n      isEditing: boolean,\n      ctUid: Internal.UID.ContentType,\n      reservedNames: {\n        models: any;\n      },\n      extensions: any,\n      contentTypes: Record<Internal.UID.ContentType, ContentType>\n    ) {\n      const singularNames = Object.values(contentTypes).map((contentType) => {\n        return contentType.info.singularName;\n      });\n\n      const pluralNames = Object.values(contentTypes).map((contentType: any) => {\n        return contentType?.info?.pluralName ?? '';\n      });\n\n      const takenNames = isEditing\n        ? alreadyTakenNames.filter((uid) => uid !== ctUid)\n        : alreadyTakenNames;\n\n      const takenSingularNames = isEditing\n        ? singularNames.filter((singName) => {\n            const { info } = contentTypes[ctUid];\n\n            return info.singularName !== singName;\n          })\n        : singularNames;\n\n      const takenPluralNames = isEditing\n        ? pluralNames.filter((pluralName) => {\n            const { info } = contentTypes[ctUid];\n\n            return info.pluralName !== pluralName;\n          })\n        : pluralNames;\n\n      // return the array of collection names not all normalized\n      const collectionNames = Object.values(contentTypes).map((contentType) => {\n        return contentType?.collectionName ?? '';\n      });\n\n      const takenCollectionNames = isEditing\n        ? collectionNames.filter((collectionName) => {\n            const { collectionName: currentCollectionName } = contentTypes[ctUid];\n\n            return collectionName !== currentCollectionName;\n          })\n        : collectionNames;\n\n      const contentTypeShape = createContentTypeSchema({\n        usedContentTypeNames: takenNames,\n        reservedModels: reservedNames.models,\n        singularNames: takenSingularNames,\n        pluralNames: takenPluralNames,\n        collectionNames: takenCollectionNames,\n      });\n\n      // FIXME\n      return extensions.makeValidator(\n        ['contentType'],\n        contentTypeShape,\n        takenNames,\n        reservedNames.models,\n        takenSingularNames,\n        takenPluralNames\n      );\n    },\n    form: {\n      base({ actionType }: any) {\n        if (actionType === 'create') {\n          return contentTypeForm.base.create();\n        }\n\n        return contentTypeForm.base.edit();\n      },\n      advanced({ extensions }: any) {\n        const baseForm = contentTypeForm.advanced\n          .default()\n          .sections.map((section) => section.items)\n          .flat();\n        const itemsToAdd = extensions.getAdvancedForm(['contentType']);\n\n        return {\n          sections: [\n            {\n              items: [...baseForm, ...itemsToAdd],\n            },\n          ],\n        };\n      },\n    },\n  },\n  component: {\n    schema(\n      alreadyTakenAttributes: Array<Internal.UID.Component>,\n      componentCategory: string,\n      reservedNames: {\n        models: any;\n      },\n      isEditing = false,\n      components: Record<string, any>,\n      componentDisplayName: string,\n      compoUid: Internal.UID.Component | null = null\n    ) {\n      const takenNames = isEditing\n        ? alreadyTakenAttributes.filter((uid: Internal.UID.Component) => uid !== compoUid)\n        : alreadyTakenAttributes;\n      const collectionNames = Object.values(components).map((component: any) => {\n        return component?.collectionName;\n      });\n\n      const currentCollectionName = createComponentCollectionName(\n        componentDisplayName,\n        componentCategory\n      );\n\n      const takenCollectionNames = isEditing\n        ? collectionNames.filter((collectionName) => collectionName !== currentCollectionName)\n        : collectionNames;\n\n      return createComponentSchema(\n        takenNames,\n        reservedNames.models,\n        componentCategory,\n        takenCollectionNames,\n        currentCollectionName\n      );\n    },\n    form: {\n      advanced() {\n        return {\n          sections: componentForm.advanced(),\n        };\n      },\n      base() {\n        return {\n          sections: componentForm.base(),\n        };\n      },\n    },\n  },\n  addComponentToDynamicZone: {\n    form: {\n      advanced() {\n        return dynamiczoneForm.advanced.default();\n      },\n      base({ data }: any) {\n        const isCreatingComponent = data?.createComponent ?? false;\n\n        if (isCreatingComponent) {\n          return dynamiczoneForm.base.createComponent();\n        }\n\n        return dynamiczoneForm.base.default();\n      },\n    },\n  },\n};\n", "import { getRelationType } from '../../../utils/getRelationType';\n\nimport type { AnyAttribute, ContentType } from '../../../types';\nimport type { Internal, Struct } from '@strapi/types';\n\nexport type EditableContentTypeSchema = {\n  kind: Struct.ContentTypeKind;\n  name: string;\n  attributes: AnyAttribute[];\n};\n\nexport type EditableContentTypeData = {\n  contentType: {\n    uid: Internal.UID.ContentType;\n    schema: EditableContentTypeSchema;\n  };\n};\n\ntype ModifiedData = {\n  kind?: Struct.ContentTypeKind;\n};\n\nexport const canEditContentType = (type: ContentType, modifiedData: ModifiedData) => {\n  const kind = type.kind;\n\n  // if kind isn't modified or content type is a single type, there is no need to check attributes.\n  if (kind === 'singleType' || kind === modifiedData.kind) {\n    return true;\n  }\n\n  const contentTypeAttributes: AnyAttribute[] = type?.attributes ?? [];\n\n  const relationAttributes = contentTypeAttributes.filter((attribute) => {\n    if (attribute.type !== 'relation') {\n      return false;\n    }\n\n    const { relation, targetAttribute } = attribute;\n    const relationType = getRelationType(relation, targetAttribute);\n\n    return !['oneWay', 'manyWay'].includes(relationType || '');\n  });\n\n  return relationAttributes.length === 0;\n};\n", "import { MAX_COMPONENT_DEPTH } from '../../../constants';\nimport { getComponentDepth } from '../../../utils/getMaxDepth';\n\nimport type { IconByType } from '../../AttributeIcon';\nimport type { NestedComponent } from '../../DataManager/utils/retrieveNestedComponents';\nimport type { Internal } from '@strapi/types';\n\nexport const getAttributesToDisplay = (\n  dataTarget = '',\n  targetUid: Internal.UID.Schema,\n  nestedComponents: Array<NestedComponent>\n): IconByType[][] => {\n  const defaultAttributes: IconByType[] = [\n    'text',\n    'boolean',\n    'blocks',\n    'json',\n    'number',\n    'email',\n    'date',\n    'password',\n    'media',\n    'enumeration',\n    'relation',\n    'richtext',\n  ];\n\n  const isPickingAttributeForAContentType = dataTarget === 'contentType';\n\n  if (isPickingAttributeForAContentType) {\n    return [\n      // Insert UID before the last item (richtext)\n      [...defaultAttributes.slice(0, -1), 'uid', ...defaultAttributes.slice(-1)],\n      ['component', 'dynamiczone'],\n    ];\n  }\n\n  // this will only run when adding attributes to components\n  if (dataTarget) {\n    const componentDepth = getComponentDepth(targetUid, nestedComponents);\n    const isNestedInAnotherComponent = componentDepth >= MAX_COMPONENT_DEPTH;\n    const canAddComponentInAnotherComponent =\n      !isPickingAttributeForAContentType && !isNestedInAnotherComponent;\n    if (canAddComponentInAnotherComponent) {\n      return [defaultAttributes, ['component']];\n    }\n  }\n\n  return [defaultAttributes];\n};\n", "export const getFormInputNames = (form: any) =>\n  form.reduce((acc: any, current: any) => {\n    const names = current.items.reduce((acc: any, current: any) => {\n      if (current.name) {\n        acc.push(current.name);\n      }\n\n      return acc;\n    }, []);\n\n    return [...acc, ...names];\n  }, []);\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useStrapiApp,\n  useTracking,\n  useNotification,\n  ConfirmDialog,\n  useGuidedTour,\n  GUIDED_TOUR_REQUIRED_ACTIONS,\n} from '@strapi/admin/strapi-admin';\nimport { Button, Divider, Flex, Modal, Tabs, Box, Typography, Dialog } from '@strapi/design-system';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport set from 'lodash/set';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\nimport * as yup from 'yup';\n\nimport { pluginId } from '../../pluginId';\nimport { getTrad, isAllowedContentTypesForRelations } from '../../utils';\nimport { findAttribute } from '../../utils/findAttribute';\nimport { getYupInnerErrors } from '../../utils/getYupInnerErrors';\n// New compos\nimport { AllowedTypesSelect } from '../AllowedTypesSelect';\nimport { IconByType } from '../AttributeIcon';\nimport { AttributeOptions } from '../AttributeOptions/AttributeOptions';\nimport { BooleanDefaultValueSelect } from '../BooleanDefaultValueSelect';\nimport { BooleanRadioGroup } from '../BooleanRadioGroup';\nimport { CheckboxWithNumberField } from '../CheckboxWithNumberField';\nimport { ContentTypeRadioGroup } from '../ContentTypeRadioGroup';\nimport { CustomRadioGroup } from '../CustomRadioGroup';\nimport { useDataManager } from '../DataManager/useDataManager';\nimport { DraftAndPublishToggle } from '../DraftAndPublishToggle';\nimport { FormModalEndActions } from '../FormModalEndActions';\nimport { FormModalHeader } from '../FormModalHeader';\nimport { useFormModalNavigation } from '../FormModalNavigation/useFormModalNavigation';\nimport { FormModalSubHeader } from '../FormModalSubHeader';\nimport { IconPicker } from '../IconPicker/IconPicker';\nimport { PluralName } from '../PluralName';\nimport { Relation } from '../Relation/Relation';\nimport { SelectCategory } from '../SelectCategory';\nimport { SelectComponent } from '../SelectComponent';\nimport { SelectComponents } from '../SelectComponents';\nimport { SelectDateType } from '../SelectDateType';\nimport { SelectNumber } from '../SelectNumber';\nimport { SingularName } from '../SingularName';\nimport { TabForm } from '../TabForm';\nimport { TextareaEnum } from '../TextareaEnum';\n\nimport { ConditionForm } from './attributes/ConditionForm';\nimport { forms } from './forms/forms';\nimport { actions, initialState, type State as FormModalState } from './reducer';\nimport { canEditContentType } from './utils/canEditContentType';\nimport { createComponentUid, createUid } from './utils/createUid';\nimport { getAttributesToDisplay } from './utils/getAttributesToDisplay';\nimport { getFormInputNames } from './utils/getFormInputNames';\n\nimport type { ContentType } from '../../types';\nimport type { Internal } from '@strapi/types';\n\nconst FormComponent = styled.form`\n  overflow: auto;\n`;\n\nconst selectState = (state: Record<string, unknown>) =>\n  (state['content-type-builder_formModal'] || initialState) as FormModalState;\n\nexport const FormModal = () => {\n  const {\n    onCloseModal,\n    onNavigateToChooseAttributeModal,\n    onNavigateToAddCompoToDZModal,\n    onNavigateToCreateComponentStep2,\n    actionType,\n    attributeName,\n    attributeType,\n    customFieldUid,\n    dynamicZoneTarget,\n    forTarget,\n    modalType,\n    isOpen,\n    kind,\n    step,\n    targetUid,\n    showBackLink,\n    activeTab,\n    setActiveTab,\n  } = useFormModalNavigation();\n\n  const getPlugin = useStrapiApp('FormModal', (state) => state.getPlugin);\n  const getCustomField = useStrapiApp('FormModal', (state) => state.customFields.get);\n  const customField = getCustomField(customFieldUid);\n\n  const dispatch = useDispatch();\n  const { toggleNotification } = useNotification();\n  const reducerState = useSelector(selectState, shallowEqual);\n\n  const navigate = useNavigate();\n  const { trackUsage } = useTracking();\n  const { formatMessage } = useIntl();\n  const ctbPlugin = getPlugin(pluginId);\n  const ctbFormsAPI: any = ctbPlugin?.apis.forms;\n  const inputsFromPlugins = ctbFormsAPI.components.inputs;\n\n  const dispatchGuidedTour = useGuidedTour('FormModal', (s) => s.dispatch);\n\n  const {\n    addAttribute,\n    editAttribute,\n    addCustomFieldAttribute,\n    addCreatedComponentToDynamicZone,\n    changeDynamicZoneComponents,\n    contentTypes,\n    components,\n    createSchema,\n    createComponentSchema,\n    deleteComponent,\n    deleteContentType,\n    editCustomFieldAttribute,\n    updateSchema,\n    nestedComponents,\n    sortedContentTypesList,\n    updateComponentSchema,\n    updateComponentUid,\n    reservedNames,\n  } = useDataManager();\n\n  const {\n    componentToCreate,\n    formErrors,\n    initialData,\n    isCreatingComponentWhileAddingAField,\n    modifiedData,\n  } = reducerState;\n\n  const type = forTarget === 'component' ? components[targetUid] : contentTypes[targetUid];\n\n  const [showWarningDialog, setShowWarningDialog] = useState(false);\n  const [pendingSubmit, setPendingSubmit] = useState<any>(null);\n\n  const checkFieldNameChanges = () => {\n    // Only check when editing an attribute\n    if (actionType !== 'edit' || modalType !== 'attribute') {\n      return false;\n    }\n\n    const oldName = initialData.name;\n    const oldEnum = initialData.enum;\n    const newEnum = modifiedData.enum;\n\n    // Get all attributes from the content type schema\n    const contentTypeAttributes = type?.attributes || [];\n\n    // Find all fields that reference this field in their conditions\n    const referencedFields = contentTypeAttributes.filter((attr: any) => {\n      if (!attr.conditions) return false;\n\n      const condition = attr.conditions.visible;\n      if (!condition) return false;\n\n      const [[, conditions]] = Object.entries(condition);\n      const [fieldVar, value] = conditions as [{ var: string }, any];\n\n      // Check if this condition references our field\n      if (fieldVar.var !== oldName) return false;\n\n      // If it's an enum field, also check if the value is being deleted/changed\n      if (oldEnum && newEnum) {\n        const deletedOrChangedValues = oldEnum.filter(\n          (oldValue: string) => !newEnum.includes(oldValue)\n        );\n        return deletedOrChangedValues.includes(value);\n      }\n\n      return true;\n    });\n\n    // If any fields reference this field, return them\n    if (referencedFields.length > 0) {\n      return referencedFields;\n    }\n\n    return false;\n  };\n\n  React.useEffect(() => {\n    if (isOpen) {\n      const collectionTypesForRelation = sortedContentTypesList.filter(\n        isAllowedContentTypesForRelations\n      );\n\n      if (actionType === 'edit' && modalType === 'attribute' && forTarget === 'contentType') {\n        trackUsage('willEditFieldOfContentType');\n      }\n\n      // Case:\n      // the user opens the modal chooseAttributes\n      // selects dynamic zone => set the field name\n      // then goes to step 1 (the modal is addComponentToDynamicZone) and finally reloads the app.\n      // In this particular if the user tries to add components to the zone it will pop an error since the dz is unknown\n      const foundDynamicZoneTarget =\n        findAttribute(get(type, 'schema.attributes', []), dynamicZoneTarget) || null;\n\n      // Create content type we need to add the default option draftAndPublish\n      if (modalType === 'contentType' && actionType === 'create') {\n        dispatch(\n          actions.setDataToEdit({\n            data: {\n              draftAndPublish: true,\n            },\n          })\n        );\n      }\n\n      // Edit content type\n      if (modalType === 'contentType' && actionType === 'edit') {\n        dispatch(\n          actions.setDataToEdit({\n            data: {\n              displayName: type.info.displayName,\n              draftAndPublish: type.options?.draftAndPublish,\n              kind: 'kind' in type && type.kind,\n              pluginOptions: type.pluginOptions,\n              pluralName: 'pluralName' in type.info && type.info.pluralName,\n              singularName: 'singularName' in type.info && type.info.singularName,\n            },\n          })\n        );\n      }\n\n      // Edit component\n      if (modalType === 'component' && actionType === 'edit') {\n        dispatch(\n          actions.setDataToEdit({\n            data: {\n              displayName: type.info.displayName,\n              category: 'category' in type && type.category,\n              icon: type.info.icon,\n            },\n          })\n        );\n      }\n\n      // Special case for the dynamic zone\n      if (modalType === 'addComponentToDynamicZone' && actionType === 'edit') {\n        const attributeToEdit = {\n          ...foundDynamicZoneTarget,\n          // We filter the available components\n          // Because this modal is only used for adding components\n          components: [],\n          name: dynamicZoneTarget,\n          createComponent: false,\n          componentToCreate: { type: 'component' },\n        };\n\n        dispatch(\n          actions.setDynamicZoneDataSchema({\n            attributeToEdit,\n          })\n        );\n      }\n\n      // Set the predefined data structure to create an attribute\n      if (attributeType) {\n        const attributeToEditNotFormatted = findAttribute(\n          get(type, ['attributes'], []),\n          attributeName\n        );\n        const attributeToEdit = {\n          ...attributeToEditNotFormatted,\n          name: attributeName,\n        };\n\n        // We need to set the repeatable key to false when editing a component\n        // The API doesn't send this info\n        if (attributeType === 'component' && actionType === 'edit') {\n          if (!('repeatable' in attributeToEdit) || !attributeToEdit.repeatable) {\n            set(attributeToEdit, 'repeatable', false);\n          }\n        }\n\n        if (modalType === 'customField') {\n          if (actionType === 'edit') {\n            dispatch(\n              actions.setCustomFieldDataSchema({\n                isEditing: true,\n                modifiedDataToSetForEditing: attributeToEdit,\n                uid: type.uid,\n              })\n            );\n          } else {\n            dispatch(\n              actions.setCustomFieldDataSchema({\n                customField: pick(customField, ['type', 'options']),\n                isEditing: false,\n                modifiedDataToSetForEditing: attributeToEdit,\n                uid: type.uid,\n              })\n            );\n          }\n        } else {\n          dispatch(\n            actions.setAttributeDataSchema({\n              attributeType,\n              nameToSetForRelation: get(collectionTypesForRelation, ['0', 'title'], 'error'),\n              targetUid: get(collectionTypesForRelation, ['0', 'uid'], 'error'),\n              isEditing: actionType === 'edit',\n              modifiedDataToSetForEditing: attributeToEdit,\n              step,\n              uid: type.uid,\n            })\n          );\n        }\n      }\n    } else {\n      dispatch(actions.resetProps());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [actionType, attributeName, attributeType, dynamicZoneTarget, forTarget, isOpen, modalType]);\n\n  const isCreatingContentType = modalType === 'contentType';\n  const isCreatingComponent = modalType === 'component';\n  const isCreatingAttribute = modalType === 'attribute';\n  const isCreatingCustomFieldAttribute = modalType === 'customField';\n  const isComponentAttribute = attributeType === 'component' && isCreatingAttribute;\n  const isCreating = actionType === 'create';\n  const isCreatingComponentFromAView =\n    get(modifiedData, 'createComponent', false) || isCreatingComponentWhileAddingAField;\n  const isInFirstComponentStep = step === '1';\n  const isPickingAttribute = modalType === 'chooseAttribute';\n  const uid = createUid(modifiedData.singularName || '');\n  const attributes = get(type, ['attributes'], null) as {\n    name: string;\n  }[];\n\n  const checkFormValidity = async () => {\n    let schema;\n    const dataToValidate =\n      isCreatingComponentFromAView && step === '1'\n        ? get(modifiedData, 'componentToCreate', {})\n        : modifiedData;\n    // Check form validity for content type\n    if (isCreatingContentType) {\n      schema = forms.contentType.schema(\n        Object.keys(contentTypes),\n        actionType === 'edit',\n        // currentUID\n        (type?.uid ?? null) as Internal.UID.ContentType,\n        reservedNames,\n        ctbFormsAPI,\n        contentTypes\n      );\n\n      // Check form validity for component\n      // This is happening when the user click on the link from the left menu\n    } else if (isCreatingComponent) {\n      schema = forms.component.schema(\n        Object.keys(components) as Internal.UID.Component[],\n        modifiedData.category || '',\n        reservedNames,\n        actionType === 'edit',\n        components,\n        modifiedData.displayName || '',\n        (type?.uid ?? null) as Internal.UID.Component\n        // ctbFormsAPI\n      );\n    } else if (isCreatingCustomFieldAttribute) {\n      schema = forms.customField.schema({\n        schemaAttributes: get(type, ['attributes'], []),\n        attributeType: customField!.type,\n        reservedNames,\n        schemaData: { modifiedData, initialData },\n        ctbFormsAPI,\n        customFieldValidator: customField!.options?.validator,\n      });\n\n      // Check for validity for creating a component\n      // This is happening when the user creates a component \"on the fly\"\n      // Since we temporarily store the component info in another object\n      // The data is set in the componentToCreate key\n    } else if (isComponentAttribute && isCreatingComponentFromAView && isInFirstComponentStep) {\n      schema = forms.component.schema(\n        Object.keys(components) as Internal.UID.Component[],\n        get(modifiedData, 'componentToCreate.category', ''),\n        reservedNames,\n        actionType === 'edit',\n        components,\n        modifiedData.componentToCreate.displayName || ''\n      );\n\n      // Check form validity for creating a 'common attribute'\n      // We need to make sure that it is independent from the step\n    } else if (isCreatingAttribute && !isInFirstComponentStep) {\n      const computedAttrbiuteType = attributeType === 'relation' ? 'relation' : modifiedData.type;\n\n      let alreadyTakenTargetContentTypeAttributes: any[] = [];\n\n      if (computedAttrbiuteType === 'relation') {\n        const targetContentTypeUID = get(modifiedData, ['target'], null);\n\n        const targetContentTypeAttributes = get(\n          contentTypes,\n          [targetContentTypeUID, 'attributes'],\n          []\n        );\n\n        // Create an array with all the targetContentType attributes name\n        // in order to prevent the user from creating a relation with a targetAttribute\n        // that may exist in the other content type\n        alreadyTakenTargetContentTypeAttributes = targetContentTypeAttributes.filter(\n          ({ name: attrName }: { name: string }) => {\n            // Keep all the target content type attributes when creating a relation\n            if (actionType !== 'edit') {\n              return true;\n            }\n\n            // Remove the already created one when editing\n            return attrName !== initialData.targetAttribute;\n          }\n        );\n      }\n      schema = forms.attribute.schema(\n        type,\n        computedAttrbiuteType,\n        reservedNames,\n        alreadyTakenTargetContentTypeAttributes,\n        { modifiedData, initialData },\n        ctbFormsAPI\n      );\n    } else {\n      // The user is either in the addComponentToDynamicZone modal or\n      // in step 1 of the add component (modalType=attribute&attributeType=component) but not creating a component\n      // eslint-disable-next-line no-lonely-if\n      if (isInFirstComponentStep && isCreatingComponentFromAView) {\n        schema = forms.component.schema(\n          Object.keys(components) as Internal.UID.Component[],\n          get(modifiedData, 'componentToCreate.category', ''),\n          reservedNames,\n          actionType === 'edit',\n          components,\n          modifiedData.componentToCreate.displayName || ''\n        );\n      } else {\n        // The form is valid\n        // The case here is being in the addComponentToDynamicZone modal and not creating a component\n        return;\n      }\n    }\n\n    await schema.validate(dataToValidate, { abortEarly: false });\n  };\n\n  const handleChange = React.useCallback(\n    ({\n      target: { name, value, type, ...rest },\n    }: {\n      target: { name: string; value: string | string[]; type: string };\n    }) => {\n      const namesThatCanResetToNullValue = [\n        'enumName',\n        'max',\n        'min',\n        'maxLength',\n        'minLength',\n        'regex',\n        'default',\n      ];\n\n      let val;\n\n      if (namesThatCanResetToNullValue.includes(name) && value === '') {\n        val = null;\n      } else if (name === 'enum') {\n        // For enum values, ensure we're working with an array\n        val = Array.isArray(value) ? value : [value];\n      } else {\n        val = value;\n      }\n\n      const clonedErrors = Object.assign({}, formErrors);\n\n      // Reset min error when modifying the max\n      if (name === 'max') {\n        delete clonedErrors.min;\n      }\n\n      // Same here\n      if (name === 'maxLength') {\n        delete clonedErrors.minLength;\n      }\n\n      // Since the onBlur is deactivated we remove the errors directly when changing an input\n      delete clonedErrors[name];\n\n      dispatch(\n        actions.setErrors({\n          errors: clonedErrors,\n        })\n      );\n\n      dispatch(\n        actions.onChange({\n          keys: name.split('.'),\n          value: val,\n        })\n      );\n    },\n    [dispatch, formErrors]\n  );\n\n  const submitForm = async (e: React.SyntheticEvent, shouldContinue = isCreating) => {\n    try {\n      await checkFormValidity();\n\n      dispatch(\n        actions.setErrors({\n          errors: {},\n        })\n      );\n\n      sendButtonAddMoreFieldEvent(shouldContinue);\n\n      const ctTargetUid = targetUid;\n\n      if (isCreatingContentType) {\n        // Create the content type schema\n        if (isCreating) {\n          createSchema({\n            data: {\n              kind,\n              displayName: modifiedData.displayName,\n              draftAndPublish: modifiedData.draftAndPublish,\n              pluginOptions: modifiedData.pluginOptions,\n              singularName: modifiedData.singularName,\n              pluralName: modifiedData.pluralName,\n            },\n            uid,\n          });\n\n          // Redirect the user to the created content type\n          navigate({ pathname: `/plugins/${pluginId}/content-types/${uid}` });\n\n          onCloseModal();\n        } else {\n          // NOTE: we have to assume we have a CT here until we refactor more\n          const contentType = type as ContentType;\n          // We cannot switch from collection type to single when the modal is making relations other than oneWay or manyWay\n          if (canEditContentType(contentType, modifiedData)) {\n            onCloseModal();\n\n            await updateSchema({\n              uid: contentType.uid,\n              data: {\n                displayName: modifiedData.displayName,\n                kind: modifiedData.kind,\n                draftAndPublish: modifiedData.draftAndPublish,\n                pluginOptions: modifiedData.pluginOptions,\n              },\n            });\n          } else {\n            toggleNotification({\n              type: 'danger',\n              message: formatMessage({ id: 'notification.contentType.relations.conflict' }),\n            });\n          }\n\n          return;\n        }\n        // We are creating a component using the component modal from the left menu\n      } else if (modalType === 'component') {\n        if (isCreating) {\n          // Create the component schema\n          const componentUid = createComponentUid(modifiedData.displayName, modifiedData.category);\n          const { category, ...rest } = modifiedData;\n\n          createComponentSchema({\n            data: {\n              displayName: rest.displayName,\n              icon: rest.icon,\n            },\n            uid: componentUid,\n            componentCategory: category,\n          });\n\n          // Redirect the user to the created component\n          navigate({\n            pathname: `/plugins/${pluginId}/component-categories/${category}/${componentUid}`,\n          });\n\n          onCloseModal();\n\n          return;\n        } else {\n          updateComponentSchema({\n            data: {\n              icon: modifiedData.icon,\n              displayName: modifiedData.displayName,\n            },\n            componentUID: targetUid,\n          });\n\n          if (type.status === 'NEW') {\n            const componentUid = createComponentUid(\n              modifiedData.displayName,\n              modifiedData.category\n            );\n\n            updateComponentUid({\n              componentUID: targetUid,\n              newComponentUID: componentUid,\n            });\n\n            navigate({\n              pathname: `/plugins/${pluginId}/component-categories/${modifiedData.category}/${componentUid}`,\n            });\n          }\n\n          // Close the modal\n          onCloseModal();\n\n          return;\n        }\n      } else if (isCreatingCustomFieldAttribute) {\n        const customFieldAttributeUpdate = {\n          attributeToSet: { ...modifiedData, customField: customFieldUid },\n          forTarget,\n          targetUid,\n          name: initialData.name,\n        };\n\n        if (actionType === 'edit') {\n          editCustomFieldAttribute(customFieldAttributeUpdate);\n        } else {\n          addCustomFieldAttribute(customFieldAttributeUpdate);\n        }\n\n        if (shouldContinue) {\n          onNavigateToChooseAttributeModal({\n            forTarget,\n            targetUid: ctTargetUid,\n          });\n        } else {\n          onCloseModal();\n        }\n\n        return;\n      } else if (isCreatingAttribute && !isCreatingComponentFromAView) {\n        const isDynamicZoneAttribute = attributeType === 'dynamiczone';\n\n        // The user is creating a DZ (he had entered the name of the dz)\n        if (isDynamicZoneAttribute) {\n          if (actionType === 'create') {\n            addAttribute({\n              attributeToSet: modifiedData,\n              forTarget,\n              targetUid,\n            });\n          } else {\n            editAttribute({\n              attributeToSet: modifiedData,\n              forTarget,\n              targetUid,\n              name: initialData.name,\n            });\n          }\n\n          // Adding a component to a dynamiczone is not the same logic as creating a simple field\n          // so the search is different\n          if (isCreating) {\n            // Step 1 of adding a component to a DZ, the user has the option to create a component\n            dispatch(actions.resetPropsAndSetTheFormForAddingACompoToADz());\n\n            setActiveTab('basic');\n            onNavigateToAddCompoToDZModal({ dynamicZoneTarget: modifiedData.name });\n          } else {\n            onCloseModal();\n          }\n\n          return;\n        }\n\n        // Normal fields like boolean relations or dynamic zone\n        if (!isComponentAttribute) {\n          if (actionType === 'create') {\n            addAttribute({\n              attributeToSet: modifiedData,\n              forTarget,\n              targetUid,\n            });\n          } else {\n            editAttribute({\n              attributeToSet: modifiedData,\n              forTarget,\n              targetUid,\n              name: initialData.name,\n            });\n          }\n\n          if (shouldContinue) {\n            onNavigateToChooseAttributeModal({\n              forTarget,\n              targetUid: ctTargetUid,\n            });\n          } else {\n            onCloseModal();\n          }\n\n          return;\n\n          // Adding an existing component\n        }\n        // eslint-disable-next-line no-lonely-if\n        if (isInFirstComponentStep) {\n          // Navigate the user to step 2\n          onNavigateToCreateComponentStep2();\n\n          // Clear the reducer and prepare the modified data\n          // This way we don't have to add some logic to re-run the useEffect\n          // The first step is either needed to create a component or just to navigate\n          // To the modal for adding a \"common field\"\n          dispatch(\n            actions.resetPropsAndSetFormForAddingAnExistingCompo({\n              uid: type.uid,\n            })\n          );\n\n          // We don't want all the props to be reset\n          return;\n\n          // Here we are in step 2\n          // The step 2 is also use to edit an attribute that is a component\n        }\n\n        if (actionType === 'create') {\n          addAttribute({\n            attributeToSet: modifiedData,\n            forTarget,\n            targetUid,\n          });\n        } else {\n          // Ensure conditions are explicitly set to undefined if they were removed\n          // Explicitly set conditions to undefined when they're removed to distinguish between:\n          // 1. missing property: \"don't change existing conditions\" (partial update)\n          // 2. undefined property: \"delete conditions\" (explicit removal)\n          // This allows the backend to detect user intent:\n          // { name: \"field\" } vs { name: \"field\", conditions: undefined }\n          // without this, deleted conditions would be preserved by the backend's\n          // reuseUnsetPreviousProperties function.\n          const attributeData = { ...modifiedData };\n          if (!('conditions' in modifiedData) || modifiedData.conditions === undefined) {\n            // Explicitly add the conditions key with undefined value\n            attributeData.conditions = undefined;\n          }\n\n          editAttribute({\n            attributeToSet: attributeData,\n            forTarget,\n            targetUid,\n            name: initialData.name,\n          });\n        }\n\n        if (shouldContinue) {\n          onNavigateToChooseAttributeModal({\n            forTarget,\n            targetUid,\n          });\n        } else {\n          onCloseModal();\n        }\n\n        // We don't need to end the loop here we want the reducer to be reinitialized\n\n        // Logic for creating a component without clicking on the link in\n        // the left menu\n        // We need to separate the logic otherwise the component would be created\n        // even though the user didn't set any field\n        // We need to prevent the component from being created if the user closes the modal at step 2 without any submission\n      } else if (isCreatingAttribute && isCreatingComponentFromAView) {\n        // Step 1\n        if (isInFirstComponentStep) {\n          // Here the search could be refactored since it is the same as the case from above\n          // Navigate the user to step 2\n\n          trackUsage('willCreateComponentFromAttributesModal');\n\n          // Here we clear the reducer state but we also keep the created component\n          // If we were to create the component before\n          dispatch(\n            actions.resetPropsAndSaveCurrentData({\n              uid: type.uid,\n            })\n          );\n\n          onNavigateToCreateComponentStep2();\n\n          // Terminate because we don't want the reducer to be entirely reset\n          return;\n\n          // Step 2 of creating a component (which is setting the attribute name in the parent's schema)\n        }\n        // We are destructuring because the modifiedData object doesn't have the appropriate format to create a field\n        const { category, ...rest } = componentToCreate;\n        // Create a the component temp UID\n        // This could be refactored but I think it's more understandable to separate the logic\n        const componentUid = createComponentUid(componentToCreate.displayName, category);\n        // Create the component first and add it to the components data\n        createComponentSchema({\n          // Component data\n          data: {\n            icon: rest.icon,\n            displayName: rest.displayName,\n          },\n          uid: componentUid,\n          componentCategory: category,\n        });\n\n        // Add the field to the schema\n        addAttribute({\n          attributeToSet: modifiedData,\n          forTarget,\n          targetUid,\n        });\n\n        dispatch(actions.resetProps());\n\n        // Open modal attribute for adding attr to component\n        if (shouldContinue) {\n          onNavigateToChooseAttributeModal({ forTarget: 'component', targetUid: componentUid });\n        } else {\n          onCloseModal();\n        }\n\n        return;\n      } else {\n        // The modal is addComponentToDynamicZone\n        if (isInFirstComponentStep) {\n          if (isCreatingComponentFromAView) {\n            const { category, type, ...rest } = modifiedData.componentToCreate;\n            const componentUid = createComponentUid(\n              modifiedData.componentToCreate.displayName,\n              category\n            );\n            // Create the component first and add it to the components data\n            createComponentSchema({\n              data: rest,\n              uid: componentUid,\n              componentCategory: category,\n            });\n            // Add the created component to the DZ\n            // We don't want to remove the old ones\n            addCreatedComponentToDynamicZone({\n              forTarget,\n              targetUid,\n              dynamicZoneTarget,\n              componentsToAdd: [componentUid],\n            });\n\n            // The Dynamic Zone and the component is created\n            // Open the modal to add fields to the created component\n            onNavigateToChooseAttributeModal({ forTarget: 'component', targetUid: componentUid });\n          } else {\n            // Add the components to the DZ\n            changeDynamicZoneComponents({\n              forTarget,\n              targetUid,\n              dynamicZoneTarget,\n              newComponents: modifiedData.components,\n            });\n\n            onCloseModal();\n          }\n        } else {\n          console.error('This case is not handled');\n        }\n\n        return;\n      }\n\n      dispatch(actions.resetProps());\n    } catch (err: unknown) {\n      if (yup.ValidationError.isError(err)) {\n        const errors = getYupInnerErrors(err);\n\n        dispatch(\n          actions.setErrors({\n            errors,\n          })\n        );\n      }\n    }\n  };\n\n  const handleSubmit = async (e: React.SyntheticEvent, shouldContinue = isCreating) => {\n    e.preventDefault();\n\n    // Check for field name changes when clicking Finish\n    const referencedFields = checkFieldNameChanges();\n    if (referencedFields) {\n      setPendingSubmit({ e, shouldContinue });\n      setShowWarningDialog(true);\n      return;\n    }\n\n    await submitForm(e, shouldContinue);\n  };\n\n  const handleConfirmClose = () => {\n    // eslint-disable-next-line no-alert\n    const confirm = window.confirm(\n      formatMessage({\n        id: 'window.confirm.close-modal.file',\n        defaultMessage: 'Are you sure? Your changes will be lost.',\n      })\n    );\n\n    if (confirm) {\n      onCloseModal();\n      dispatch(actions.resetProps());\n    }\n  };\n\n  const handleClosed = () => {\n    // Close the modal\n    if (!isEqual(modifiedData, initialData)) {\n      handleConfirmClose();\n    } else {\n      onCloseModal();\n      // Reset the reducer\n      dispatch(actions.resetProps());\n    }\n  };\n\n  const sendAdvancedTabEvent = (tab: string) => {\n    if (tab !== 'advanced') {\n      return;\n    }\n\n    if (isCreatingContentType) {\n      trackUsage('didSelectContentTypeSettings');\n\n      return;\n    }\n\n    if (forTarget === 'contentType') {\n      trackUsage('didSelectContentTypeFieldSettings');\n    }\n  };\n\n  const sendButtonAddMoreFieldEvent = (shouldContinue: boolean) => {\n    if (\n      modalType === 'attribute' &&\n      forTarget === 'contentType' &&\n      attributeType !== 'dynamiczone' &&\n      shouldContinue\n    ) {\n      trackUsage('willAddMoreFieldToContentType');\n    }\n  };\n\n  const shouldDisableAdvancedTab = () => {\n    if (modalType === 'component') {\n      return true;\n    }\n\n    if (has(modifiedData, 'createComponent')) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // Display data for the attributes picker modal\n  const displayedAttributes = getAttributesToDisplay(\n    forTarget,\n    targetUid,\n    // We need the nested components so we know when to remove the component option\n    nestedComponents\n  );\n\n  if (!modalType) {\n    return null;\n  }\n\n  const formToDisplay = get(forms, [modalType, 'form'], {\n    advanced: () => ({\n      sections: [],\n    }),\n    base: () => ({\n      sections: [],\n    }),\n  });\n\n  const isAddingAComponentToAnotherComponent = forTarget === 'component';\n\n  const genericInputProps = {\n    customInputs: {\n      'allowed-types-select': AllowedTypesSelect,\n      'boolean-radio-group': BooleanRadioGroup,\n      'checkbox-with-number-field': CheckboxWithNumberField,\n      'icon-picker': IconPicker,\n      'content-type-radio-group': ContentTypeRadioGroup,\n      'radio-group': CustomRadioGroup,\n      relation: Relation,\n      'select-category': SelectCategory,\n      'select-component': SelectComponent,\n      'select-components': SelectComponents,\n      'select-default-boolean': BooleanDefaultValueSelect,\n      'select-number': SelectNumber,\n      'select-date': SelectDateType,\n      'toggle-draft-publish': DraftAndPublishToggle,\n      'text-plural': PluralName,\n      'text-singular': SingularName,\n      'textarea-enum': TextareaEnum,\n      'condition-form': ConditionForm,\n      ...inputsFromPlugins,\n    },\n    componentToCreate,\n    dynamicZoneTarget,\n    formErrors,\n    isAddingAComponentToAnotherComponent,\n    isCreatingComponentWhileAddingAField,\n    mainBoxHeader: get(type, ['info', 'displayName'], ''),\n    modifiedData,\n    naturePickerType: forTarget,\n    isCreating,\n    targetUid,\n    forTarget,\n    contentTypeSchema: type,\n  };\n\n  const advancedForm = formToDisplay.advanced({\n    data: modifiedData,\n    type: attributeType,\n    step,\n    actionType,\n    attributes,\n    extensions: ctbFormsAPI,\n    forTarget,\n    contentTypeSchema: type || {},\n    customField,\n  }).sections;\n  const baseForm = formToDisplay.base({\n    data: modifiedData,\n    type: attributeType,\n    step,\n    actionType,\n    attributes,\n    extensions: ctbFormsAPI,\n    forTarget,\n    contentTypeSchema: type || {},\n    customField,\n  }).sections;\n\n  const baseFormInputNames = getFormInputNames(baseForm);\n\n  const advancedFormInputNames = getFormInputNames(advancedForm);\n  const doesBaseFormHasError = Object.keys(formErrors).some((key) =>\n    baseFormInputNames.includes(key)\n  );\n\n  const doesAdvancedFormHasError = Object.keys(formErrors).some((key) =>\n    advancedFormInputNames.includes(key)\n  );\n\n  const schemaKind = get(contentTypes, [targetUid, 'kind']);\n\n  const checkIsEditingFieldName = () =>\n    actionType === 'edit' && attributes.every(({ name }) => name !== modifiedData?.name);\n\n  const handleClickFinish = () => {\n    if (checkIsEditingFieldName()) {\n      trackUsage('didEditFieldNameOnContentType');\n    }\n    dispatchGuidedTour({\n      type: 'set_completed_actions',\n      payload: [GUIDED_TOUR_REQUIRED_ACTIONS.contentTypeBuilder.addField],\n    });\n  };\n\n  return (\n    <Modal.Root open={isOpen} onOpenChange={handleClosed}>\n      <Modal.Content>\n        <Dialog.Root open={showWarningDialog} onOpenChange={setShowWarningDialog}>\n          <Dialog.Trigger />\n          <ConfirmDialog\n            onConfirm={() => {\n              if (pendingSubmit) {\n                const { e, shouldContinue } = pendingSubmit;\n                setShowWarningDialog(false);\n                setPendingSubmit(null);\n                submitForm(e, shouldContinue);\n              }\n            }}\n            onCancel={() => {\n              setShowWarningDialog(false);\n              setPendingSubmit(null);\n            }}\n          >\n            {(() => {\n              const referencedFields = checkFieldNameChanges();\n              if (!referencedFields) return null;\n\n              const fieldNames = referencedFields.map((field: any) => field.name).join(', ');\n              const isEnum = initialData.enum && modifiedData.enum;\n\n              if (isEnum) {\n                const oldEnum = initialData.enum;\n                const newEnum = modifiedData.enum;\n                const deletedOrChangedValues = oldEnum.filter(\n                  (value: string) => !newEnum.includes(value)\n                );\n\n                return (\n                  <Box>\n                    <Typography>\n                      {formatMessage({\n                        id: 'form.attribute.condition.enum-change-warning',\n                        defaultMessage:\n                          'The following fields have conditions that depend on this field: ',\n                      })}\n                      <Typography fontWeight=\"bold\">{fieldNames}</Typography>\n                      {formatMessage({\n                        id: 'form.attribute.condition.enum-change-warning-values',\n                        defaultMessage: '. Changing or removing the enum values ',\n                      })}\n                      <Typography fontWeight=\"bold\">{deletedOrChangedValues.join(', ')}</Typography>\n                      {formatMessage({\n                        id: 'form.attribute.condition.enum-change-warning-end',\n                        defaultMessage: ' will break these conditions. Do you want to proceed?',\n                      })}\n                    </Typography>\n                  </Box>\n                );\n              }\n\n              return (\n                <Box>\n                  <Typography>\n                    {formatMessage({\n                      id: 'form.attribute.condition.field-change-warning',\n                      defaultMessage:\n                        'The following fields have conditions that depend on this field: ',\n                    })}\n                    <Typography fontWeight=\"bold\">{fieldNames}</Typography>\n                    {formatMessage({\n                      id: 'form.attribute.condition.field-change-warning-end',\n                      defaultMessage:\n                        '. Renaming it will break these conditions. Do you want to proceed?',\n                    })}\n                  </Typography>\n                </Box>\n              );\n            })()}\n          </ConfirmDialog>\n        </Dialog.Root>\n        <FormModalHeader\n          actionType={actionType}\n          attributeName={attributeName}\n          contentTypeKind={kind as IconByType}\n          dynamicZoneTarget={dynamicZoneTarget}\n          modalType={modalType}\n          forTarget={forTarget}\n          targetUid={targetUid}\n          attributeType={attributeType as IconByType}\n          customFieldUid={customFieldUid}\n          showBackLink={showBackLink}\n        />\n        {isPickingAttribute && (\n          <AttributeOptions\n            attributes={displayedAttributes}\n            forTarget={forTarget}\n            kind={schemaKind || 'collectionType'}\n          />\n        )}\n        {!isPickingAttribute && (\n          <FormComponent onSubmit={handleSubmit}>\n            <Modal.Body>\n              <Tabs.Root\n                variant=\"simple\"\n                value={activeTab}\n                onValueChange={(value) => {\n                  setActiveTab(value);\n                  sendAdvancedTabEvent(value);\n                }}\n                hasError={\n                  doesBaseFormHasError ? 'basic' : doesAdvancedFormHasError ? 'advanced' : undefined\n                }\n              >\n                <Flex justifyContent=\"space-between\">\n                  <FormModalSubHeader\n                    actionType={actionType}\n                    forTarget={forTarget}\n                    kind={kind}\n                    step={step}\n                    modalType={modalType}\n                    attributeType={attributeType}\n                    attributeName={attributeName}\n                    customField={customField}\n                  />\n                  <Tabs.List>\n                    <Tabs.Trigger value=\"basic\">\n                      {formatMessage({\n                        id: getTrad('popUpForm.navContainer.base'),\n                        defaultMessage: 'Basic settings',\n                      })}\n                    </Tabs.Trigger>\n                    <Tabs.Trigger value=\"advanced\" disabled={shouldDisableAdvancedTab()}>\n                      {formatMessage({\n                        id: getTrad('popUpForm.navContainer.advanced'),\n                        defaultMessage: 'Advanced settings',\n                      })}\n                    </Tabs.Trigger>\n                  </Tabs.List>\n                </Flex>\n                <Divider marginBottom={6} />\n                <Tabs.Content value=\"basic\">\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\n                    <TabForm\n                      form={baseForm}\n                      formErrors={formErrors}\n                      genericInputProps={genericInputProps}\n                      modifiedData={modifiedData}\n                      onChange={handleChange}\n                    />\n                  </Flex>\n                </Tabs.Content>\n                <Tabs.Content value=\"advanced\">\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\n                    <TabForm\n                      form={advancedForm}\n                      formErrors={formErrors}\n                      genericInputProps={genericInputProps}\n                      modifiedData={modifiedData}\n                      onChange={handleChange}\n                    />\n                  </Flex>\n                </Tabs.Content>\n              </Tabs.Root>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                type=\"button\"\n                variant=\"tertiary\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleClosed();\n                }}\n              >\n                {formatMessage({ id: 'app.components.Button.cancel', defaultMessage: 'Cancel' })}\n              </Button>\n              {/* TODO: refactor this component. Nuf said. */}\n              <FormModalEndActions\n                deleteContentType={() => deleteContentType(targetUid as Internal.UID.ContentType)}\n                deleteComponent={() => deleteComponent(targetUid as Internal.UID.Component)}\n                isAttributeModal={modalType === 'attribute'}\n                isCustomFieldModal={modalType === 'customField'}\n                isComponentToDzModal={modalType === 'addComponentToDynamicZone'}\n                isComponentAttribute={attributeType === 'component'}\n                isComponentModal={modalType === 'component'}\n                isContentTypeModal={modalType === 'contentType'}\n                isCreatingComponent={actionType === 'create'}\n                isCreatingDz={actionType === 'create'}\n                isCreatingComponentAttribute={modifiedData.createComponent || false}\n                isCreatingComponentInDz={modifiedData.createComponent || false}\n                isCreatingComponentWhileAddingAField={isCreatingComponentWhileAddingAField}\n                isCreatingContentType={actionType === 'create'}\n                isEditingAttribute={actionType === 'edit'}\n                isDzAttribute={attributeType === 'dynamiczone'}\n                isInFirstComponentStep={step === '1'}\n                onSubmitAddComponentAttribute={handleSubmit}\n                onSubmitAddComponentToDz={handleSubmit}\n                onSubmitCreateComponent={handleSubmit}\n                onSubmitCreateContentType={handleSubmit}\n                onSubmitCreateDz={handleSubmit}\n                onSubmitEditAttribute={handleSubmit}\n                onSubmitEditComponent={handleSubmit}\n                onSubmitEditContentType={handleSubmit}\n                onSubmitEditCustomFieldAttribute={handleSubmit}\n                onSubmitEditDz={handleSubmit}\n                onClickFinish={handleClickFinish}\n              />\n            </Modal.Footer>\n          </FormComponent>\n        )}\n      </Modal.Content>\n    </Modal.Root>\n  );\n};\n", "import { useCallback, useMemo, useState } from 'react';\n\nimport { useTracking } from '@strapi/admin/strapi-admin';\n\nimport { FormModalNavigationContext } from './FormModalNavigationContext';\n\nimport type { Internal, Struct } from '@strapi/types';\n\ntype FormModalNavigationProviderProps = {\n  children: React.ReactNode;\n};\n\nexport type Tab = 'basic' | 'advanced';\n\nexport type ModalType =\n  | 'chooseAttribute'\n  | 'edit'\n  | 'attribute'\n  | 'customField'\n  | 'addComponentToDynamicZone'\n  | 'contentType'\n  | 'component';\n\nexport type State = Record<string, any>;\n\nexport const INITIAL_STATE_DATA: State = {\n  actionType: null,\n  attributeName: null,\n  attributeType: null,\n  dynamicZoneTarget: null,\n  forTarget: null,\n  modalType: null,\n  isOpen: true,\n  showBackLink: false,\n  kind: null,\n  step: null,\n  targetUid: null,\n  customFieldUid: null,\n  activeTab: 'basic',\n};\n\nexport type SelectCustomFieldPayload = {\n  attributeType: string;\n  customFieldUid: string;\n};\n\nexport type SelectFieldPayload = {\n  attributeType: string;\n  step: string | null;\n};\n\nexport type OpenModalAddComponentsToDZPayload = {\n  dynamicZoneTarget?: string;\n  targetUid: Internal.UID.Schema;\n};\n\nexport type OpenModalAddFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid?: Internal.UID.Schema;\n};\n\nexport type OpenModalEditCustomFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n  attributeName: string;\n  attributeType: string;\n  customFieldUid: string;\n};\n\nexport type OpenModalEditFieldPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n  attributeName: string;\n  attributeType: string;\n  step: string | null;\n};\n\nexport type OpenModalEditSchemaPayload = {\n  modalType: ModalType;\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n  kind?: string;\n};\n\nexport type NavigateToChooseAttributeModalPayload = {\n  forTarget: Struct.ModelType;\n  targetUid: Internal.UID.Schema;\n};\n\nexport type NavigateToAddCompoToDZModalPayload = {\n  dynamicZoneTarget: string;\n};\n\nexport const FormModalNavigationProvider = ({ children }: FormModalNavigationProviderProps) => {\n  const [state, setFormModalNavigationState] = useState(INITIAL_STATE_DATA);\n  const { trackUsage } = useTracking();\n\n  const onClickSelectCustomField = useCallback(\n    ({ attributeType, customFieldUid }: SelectCustomFieldPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        actionType: 'create',\n        modalType: 'customField',\n        attributeType,\n        customFieldUid,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onClickSelectField = useCallback(\n    ({ attributeType, step }: SelectFieldPayload) => {\n      if (state.forTarget === 'contentType') {\n        trackUsage('didSelectContentTypeFieldType', { type: attributeType });\n      }\n\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        actionType: 'create',\n        modalType: 'attribute',\n        step,\n        attributeType,\n        showBackLink: true,\n        activeTab: 'basic',\n      }));\n    },\n    [state.forTarget, trackUsage]\n  );\n\n  const onOpenModalAddComponentsToDZ = useCallback(\n    ({ dynamicZoneTarget, targetUid }: OpenModalAddComponentsToDZPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        dynamicZoneTarget,\n        targetUid,\n        modalType: 'addComponentToDynamicZone',\n        forTarget: 'contentType',\n        step: '1',\n        actionType: 'edit',\n        isOpen: true,\n      }));\n    },\n    []\n  );\n\n  const onOpenModalAddField = useCallback(({ forTarget, targetUid }: OpenModalAddFieldPayload) => {\n    setFormModalNavigationState((prevState: State) => ({\n      ...prevState,\n      actionType: 'create',\n      forTarget,\n      targetUid,\n      modalType: 'chooseAttribute',\n      isOpen: true,\n      showBackLink: false,\n      activeTab: 'basic',\n    }));\n  }, []);\n\n  const onOpenModalCreateSchema = useCallback((nextState: State) => {\n    setFormModalNavigationState((prevState) => ({\n      ...prevState,\n      ...nextState,\n      isOpen: true,\n      activeTab: 'basic',\n    }));\n  }, []);\n\n  const onOpenModalEditCustomField = useCallback(\n    ({\n      forTarget,\n      targetUid,\n      attributeName,\n      attributeType,\n      customFieldUid,\n    }: OpenModalEditCustomFieldPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        modalType: 'customField',\n        customFieldUid,\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        isOpen: true,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onOpenModalEditField = useCallback(\n    ({ forTarget, targetUid, attributeName, attributeType, step }: OpenModalEditFieldPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        modalType: 'attribute',\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        attributeName,\n        attributeType,\n        step,\n        isOpen: true,\n      }));\n    },\n    []\n  );\n\n  const onOpenModalEditSchema = useCallback(\n    ({ modalType, forTarget, targetUid, kind }: OpenModalEditSchemaPayload) => {\n      setFormModalNavigationState((prevState: State) => ({\n        ...prevState,\n        modalType,\n        actionType: 'edit',\n        forTarget,\n        targetUid,\n        kind,\n        isOpen: true,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onCloseModal = useCallback(() => {\n    setFormModalNavigationState(INITIAL_STATE_DATA);\n  }, []);\n\n  const onNavigateToChooseAttributeModal = useCallback(\n    ({ forTarget, targetUid }: NavigateToChooseAttributeModalPayload) => {\n      setFormModalNavigationState((prev: State) => ({\n        ...prev,\n        forTarget,\n        targetUid,\n        modalType: 'chooseAttribute',\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const onNavigateToCreateComponentStep2 = useCallback(() => {\n    setFormModalNavigationState((prev: State) => ({\n      ...prev,\n      attributeType: 'component',\n      modalType: 'attribute',\n      step: '2',\n      activeTab: 'basic',\n    }));\n  }, []);\n\n  const onNavigateToAddCompoToDZModal = useCallback(\n    ({ dynamicZoneTarget }: NavigateToAddCompoToDZModalPayload) => {\n      setFormModalNavigationState((prev: State) => ({\n        ...prev,\n        dynamicZoneTarget,\n        modalType: 'addComponentToDynamicZone',\n        actionType: 'create',\n        step: '1',\n        attributeType: null,\n        attributeName: null,\n        activeTab: 'basic',\n      }));\n    },\n    []\n  );\n\n  const setActiveTab = useCallback((value: Tab) => {\n    setFormModalNavigationState((prev: State) => ({\n      ...prev,\n      activeTab: value,\n    }));\n  }, []);\n\n  const contextValue = useMemo(\n    () => ({\n      ...state,\n      onClickSelectField,\n      onClickSelectCustomField,\n      onCloseModal,\n      onNavigateToChooseAttributeModal,\n      onNavigateToAddCompoToDZModal,\n      onOpenModalAddComponentsToDZ,\n      onNavigateToCreateComponentStep2,\n      onOpenModalAddField,\n      onOpenModalCreateSchema,\n      onOpenModalEditField,\n      onOpenModalEditCustomField,\n      onOpenModalEditSchema,\n      setFormModalNavigationState,\n      setActiveTab,\n    }),\n    [\n      state,\n      onClickSelectField,\n      onClickSelectCustomField,\n      onCloseModal,\n      onNavigateToChooseAttributeModal,\n      onNavigateToAddCompoToDZModal,\n      onOpenModalAddComponentsToDZ,\n      onNavigateToCreateComponentStep2,\n      onOpenModalAddField,\n      onOpenModalCreateSchema,\n      onOpenModalEditField,\n      onOpenModalEditCustomField,\n      onOpenModalEditSchema,\n      setActiveTab,\n    ]\n  );\n\n  return (\n    <FormModalNavigationContext.Provider value={contextValue}>\n      {children}\n    </FormModalNavigationContext.Provider>\n  );\n};\n", "import { tours } from '@strapi/admin/strapi-admin';\nimport { Button, Box, Flex, Typography } from '@strapi/design-system';\nimport { Sparkle, Paperclip } from '@strapi/icons';\nimport { EmptyDocuments } from '@strapi/icons/symbols';\nimport { useIntl } from 'react-intl';\nimport { styled } from 'styled-components';\n\nimport { FigmaIcon } from '../../components/AIChat/components/icons/FigmaIcon';\nimport { useStrapiChat } from '../../components/AIChat/providers/ChatProvider';\nimport { useUploadProjectToChat } from '../../components/AIChat/UploadCodeModal';\nimport { useUploadFigmaToChat } from '../../components/AIChat/UploadFigmaModal';\nimport { getTrad } from '../../utils/getTrad';\n\n// Styled container that implements responsive behavior\nconst ResponsiveContainer = styled(Flex)`\n  @container (max-width: 200px) {\n    .hide-on-small {\n      display: none;\n    }\n  }\n  container-type: inline-size;\n`;\n\nexport const EmptyState = () => {\n  const { formatMessage } = useIntl();\n\n  const pluginName = formatMessage({\n    id: getTrad('table.content.create-first-content-type.title'),\n    defaultMessage: 'No content types',\n  });\n\n  const { isChatEnabled, openChat } = useStrapiChat();\n  const { openCodeUpload } = useUploadProjectToChat();\n  const { openFigmaUpload } = useUploadFigmaToChat();\n\n  return (\n    <ResponsiveContainer\n      justifyContent=\"center\"\n      height=\"100%\"\n      width={'400px'}\n      maxWidth=\"90%\"\n      margin=\"auto\"\n      direction=\"column\"\n      gap={6}\n    >\n      <EmptyDocuments width=\"160px\" height=\"88px\" />\n      <tours.contentTypeBuilder.Introduction>\n        {/* Invisible Anchor */}\n        <Box />\n      </tours.contentTypeBuilder.Introduction>\n      <Flex gap={2} alignItems=\"center\" direction=\"column\">\n        <Typography variant=\"beta\" textAlign=\"center\">\n          {pluginName}\n        </Typography>\n        <Typography variant=\"omega\" textAlign=\"center\" textColor=\"neutral600\">\n          {formatMessage({\n            id: getTrad('table.content.create-first-content-type.description'),\n            defaultMessage:\n              'Create collection types, single types and components in order to build your schema.',\n          })}\n        </Typography>\n      </Flex>\n\n      {/* Chat is not available on small screens either way */}\n      {isChatEnabled && (\n        <Flex gap={2} direction=\"column\" className=\"hide-on-small\">\n          <Button\n            startIcon={<FigmaIcon />}\n            variant=\"tertiary\"\n            onClick={() => openFigmaUpload(true)}\n          >\n            {formatMessage({\n              id: getTrad('table.content.create-first-content-type.import-figma'),\n              defaultMessage: 'Import from Figma',\n            })}\n          </Button>\n          <Button startIcon={<Paperclip />} variant=\"tertiary\" onClick={() => openCodeUpload(true)}>\n            {formatMessage({\n              id: getTrad('table.content.create-first-content-type.import-code'),\n              defaultMessage: 'Import from computer',\n            })}\n          </Button>\n          <Button startIcon={<Sparkle />} variant=\"tertiary\" onClick={openChat}>\n            {formatMessage({\n              id: getTrad('table.content.create-first-content-type.start-with-prompt'),\n              defaultMessage: 'Start with a prompt',\n            })}\n          </Button>\n        </Flex>\n      )}\n    </ResponsiveContainer>\n  );\n};\n", "/* eslint-disable import/no-default-export */\n/* eslint-disable check-file/filename-naming-convention  */\n/* eslint-disable check-file/no-index */\nimport { lazy, Suspense, useEffect } from 'react';\n\nimport {\n  Page,\n  Layouts,\n  useAppInfo,\n  useGuidedTour,\n  useAIAvailability,\n} from '@strapi/admin/strapi-admin';\nimport { useIntl } from 'react-intl';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { Chat } from '../../components/AIChat/Chat';\nimport { prefetchAIToken } from '../../components/AIChat/lib/aiClient';\nimport { ChatProvider } from '../../components/AIChat/providers/ChatProvider';\nimport { AutoReloadOverlayBlockerProvider } from '../../components/AutoReloadOverlayBlocker';\nimport { ContentTypeBuilderNav } from '../../components/ContentTypeBuilderNav/ContentTypeBuilderNav';\nimport DataManagerProvider from '../../components/DataManager/DataManagerProvider';\nimport { ExitPrompt } from '../../components/ExitPrompt';\nimport { FormModal } from '../../components/FormModal/FormModal';\nimport { FormModalNavigationProvider } from '../../components/FormModalNavigation/FormModalNavigationProvider';\nimport { PERMISSIONS } from '../../constants';\nimport { pluginId } from '../../pluginId';\nimport { EmptyState } from '../ListView/EmptyState';\n\nconst ListView = lazy(() => import('../ListView/ListView'));\n\nconst App = () => {\n  const { formatMessage } = useIntl();\n  const title = formatMessage({\n    id: `${pluginId}.plugin.name`,\n    defaultMessage: 'Content Types Builder',\n  });\n\n  const autoReload = useAppInfo('DataManagerProvider', (state) => state.autoReload);\n  const isAIEnabled = useAIAvailability();\n  const state = useGuidedTour('ContentTypeBuilderApp', (s) => s.state);\n  const dispatch = useGuidedTour('ContentTypeBuilderApp', (s) => s.dispatch);\n\n  // Prefetch AI token on initial load\n  useEffect(() => {\n    prefetchAIToken();\n  }, []);\n\n  // Set tour type based on AI availability when the app loads\n  useEffect(() => {\n    const tourType = isAIEnabled ? 'ContentTypeBuilderAI' : 'ContentTypeBuilderNoAI';\n    const currentTourType = state.tours.contentTypeBuilder.tourType;\n\n    if (currentTourType !== tourType) {\n      dispatch({\n        type: 'set_tour_type',\n        payload: { tourName: 'contentTypeBuilder', tourType },\n      });\n    }\n  }, [isAIEnabled, state.tours.contentTypeBuilder.tourType, dispatch]);\n\n  return (\n    <Page.Protect permissions={PERMISSIONS.main}>\n      <Page.Title>{title}</Page.Title>\n      <AutoReloadOverlayBlockerProvider>\n        <FormModalNavigationProvider>\n          <DataManagerProvider>\n            <ExitPrompt />\n            <ChatProvider>\n              <>\n                {autoReload && <FormModal />}\n                <Layouts.Root sideNav={<ContentTypeBuilderNav />}>\n                  <Suspense fallback={<Page.Loading />}>\n                    <Routes>\n                      <Route path=\"content-types/create-content-type\" element={<EmptyState />} />\n                      <Route path=\"content-types/:contentTypeUid\" element={<ListView />} />\n                      <Route\n                        path={`component-categories/:categoryUid/:componentUid`}\n                        element={<ListView />}\n                      />\n                      <Route path=\"*\" element={<ListView />} />\n                    </Routes>\n                  </Suspense>\n                </Layouts.Root>\n                <Chat />\n              </>\n            </ChatProvider>\n          </DataManagerProvider>\n        </FormModalNavigationProvider>\n      </AutoReloadOverlayBlockerProvider>\n    </Page.Protect>\n  );\n};\n\nexport default App;\n"],
  "mappings": "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B;kBAClB;kBACAM,OAAO;gBACT;gBACA;kBACEF,OAAO;oBACLN,IAAIC,QAAQ,oCAAA;oBACZC,gBAAgB;kBAClB;kBACAK,aAAa;oBACXP,IAAIC,QAAQ,gDAAA;oBACZC,gBAAgB;kBAClB;kBACAM,OAAO;gBACT;cACD;YACH;UACD;QACH;MACD;IACH;EACF;EACAe,SAAAA;AACE,WAAO;MACL/B,UAAU;QACR;UACEC,cAAc;UACdC,OAAO;YACLE;YACA;cACEG,WAAW;gBACTC,IAAIC,QAAQ,iCAAA;gBACZC,gBAAgB;cAClB;cACAL,MAAM;cACNC,MAAM;cACNY,SAAS;gBACP;kBACEC,KAAK;kBACLH,OAAO;kBACPI,WAAW;oBACTb,WAAW;sBACTC,IAAI;sBACJE,gBAAgB;oBAClB;oBACAW,QAAQ;kBACV;gBACF;gBACA;kBACEF,KAAK;kBACLH,OAAO;kBACPI,WAAW;oBACTb,WAAW;sBACTC,IAAIC,QAAQ,yCAAA;sBACZC,gBAAgB;oBAClB;kBACF;gBACF;gBACA;kBACES,KAAK;kBACLH,OAAO;kBACPI,WAAW;oBACTb,WAAW;sBACTC,IAAIC,QAAQ,4CAAA;sBACZC,gBAAgB;oBAClB;kBACF;gBACF;gBACA;kBACES,KAAK;kBACLH,OAAO;kBACPI,WAAW;oBACTb,WAAW;sBACTC,IAAIC,QAAQ,yCAAA;sBACZC,gBAAgB;oBAClB;kBACF;gBACF;gBACA;kBACES,KAAK;kBACLH,OAAO;kBACPI,WAAW;oBACTb,WAAW;sBACTC,IAAIC,QAAQ,uCAAA;sBACZC,gBAAgB;oBAClB;kBACF;gBACF;cACD;YACH;UACD;QACH;MACD;IACH;EACF;EACAsB,WAAAA;AACE,WAAO;MACLhC,UAAU;QACR;UACEC,cAAc;UACdC,OAAO;YACL;cACEK,WAAW;gBAAEC,IAAI;gBAASE,gBAAgB;cAAQ;cAClDL,MAAM;cACNO,MAAM;cACNN,MAAM;YACR;UACD;QACH;MACD;IACH;EACF;EACA2B,SAAAA;AACE,WAAO;MACLjC,UAAU;QACR;UAAEC,cAAc;UAAMC,OAAO;YAACE;UAAU;QAAC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",
  "names": ["file", "options", "position", "start", "node", "whitespace", "error", "re", "capitalize", "camelCase", "options", "options", "options", "parse", "name", "env", "createDebug", "disable", "debug", "self", "index", "extend", "name", "index", "error", "isArray", "isPlainObject", "setProperty", "options", "getProperty", "name", "extend", "clone", "throttle", "e", "t", "r", "c", "n", "i", "s", "a", "o", "h", "u", "l", "f", "d", "p", "m", "node", "options", "stringify", "node", "options", "wrap", "compare", "start", "max", "intersection", "string", "integer", "isObject", "transform", "toNumber", "index", "stringify", "start", "options", "dash", "wrap", "push", "compile", "options", "node", "stringify", "options", "node", "stringify", "parse", "options", "index", "push", "node", "stringify", "compile", "parse", "options", "require_constants", "require_utils", "options", "code", "options", "index", "start", "require_parse", "constants", "options", "parse", "opts", "value", "increment", "push", "esc", "index", "rest", "create", "source", "parse", "constants", "isObject", "options", "state", "require_picomatch", "index", "micromatch", "list", "options", "omit", "keys", "string", "string", "isObject", "toString", "truncate", "string", "options", "index", "Set", "noop", "values", "array", "index", "set", "uniq", "array", "n", "t", "r", "e", "u", "i", "o", "dt", "mt", "re", "p", "x", "Z", "Ct", "Y", "J", "$t", "Yt", "Qt", "f", "c", "a", "l", "s", "h", "_", "v", "g", "y", "d", "b", "w", "Xt", "nr", "is", "tr", "rr", "er", "ur", "ir", "or", "fr", "Wr", "cr", "ar", "lr", "sr", "hr", "pr", "_r", "vr", "gr", "yr", "dr", "br", "wr", "mr", "xr", "jr", "Ar", "kr", "Or", "Ir", "Rr", "Mr", "zr", "Er", "Br", "Sr", "Lr", "Cr", "Ur", "Tr", "Fr", "Nr", "Pr", "Gr", "Hr", "Jr", "Yr", "ne", "te", "ee", "ue", "oe", "fe", "_e", "de", "m", "j", "_a", "qs", "COLORS", "danger", "background", "borderColor", "textColor", "warning", "Alert", "title", "variant", "_jsx", "Box", "padding", "hasRadius", "width", "_jsxs", "Flex", "gap", "WarningCircle", "style", "minWidth", "fill", "Typography", "AnimatedBox", "styled", "Box", "$direction", "theme", "motion", "timings", "easings", "easeOutQuad", "STRAPI_CODE_MIME_TYPE", "STRAPI_MAX_ATTACHMENTS", "STRAPI_MAX_ATTACHMENT_SIZE", "STRAPI_AI_URL", "process", "env", "replace", "STRAPI_AI_CHAT_URL", "blobToBase64", "blob", "Promise", "resolve", "reject", "reader", "FileReader", "onloadend", "result", "onerror", "readAsDataURL", "isBase64Image", "src", "startsWith", "Base64Img", "alt", "inferSize", "onLoad", "externalOnLoad", "onError", "externalOnError", "rest", "base64Src", "setBase64Src", "useState", "dimensions", "setDimensions", "isLoading", "setIsLoading", "hasError", "setHasError", "useEffect", "fetchAndConvert", "url", "URL", "allowedDomains", "includes", "hostname", "e", "response", "fetch", "ok", "Error", "status", "dataUrl", "error", "console", "handleImageLoad", "naturalWidth", "naturalHeight", "currentTarget", "width", "height", "_jsx", "Flex", "direction", "gap", "alignItems", "Loader", "small", "CrossCircle", "fill", "imgProps", "img", "ANIMATIONS", "fadeIn", "keyframes", "scaleIn", "slideUpIn", "slideUpOut", "slideDownIn", "slideDownOut", "FullScreenImageContext", "createContext", "undefined", "setOpacity", "hex", "alpha", "Math", "floor", "toString", "padStart", "Overlay", "styled", "div", "props", "theme", "colors", "neutral800", "ImageWrapper", "ANIMATIONS", "scaleIn", "StyledImg", "Base64Img", "ImageModal", "src", "alt", "onClose", "overlayRef", "useRef", "wrapperRef", "useEffect", "handleKeyDown", "e", "key", "preventDefault", "stopPropagation", "stopImmediatePropagation", "cancelBubble", "window", "addEventListener", "removeEventListener", "handleOverlayClick", "target", "current", "handleWrapperClick", "overlay", "wrapper", "createPortal", "_jsx", "ref", "document", "body", "Root", "children", "defaultOpen", "isOpen", "setIsOpen", "useState", "open", "close", "_jsxs", "Provider", "value", "useFullScreenImage", "context", "useContext", "Error", "Trigger", "asChild", "handleClick", "onClick", "style", "cursor", "display", "FullScreenImage", "AttachmentContext", "createContext", "error", "useAttachmentContext", "useContext", "StyledRoot", "styled", "Box", "theme", "colors", "neutral100", "Root", "children", "minWidth", "maxWidth", "_jsx", "Provider", "value", "_jsxs", "Flex", "direction", "alignItems", "gap", "background", "hasRadius", "borderColor", "borderStyle", "borderWidth", "padding", "width", "Typography", "variant", "textColor", "Preview", "justifyContent", "WarningCircle", "fill", "Title", "grow", "ellipsis", "style", "userSelect", "Remove", "onClick", "shrink", "Trash", "Attachment", "ImageThumbnail", "styled", "Base64Img", "theme", "borderRadius", "ImageAttachment", "attachment", "onRemove", "props", "_jsx", "FullScreenImage", "Root", "src", "url", "alt", "filename", "Trigger", "asChild", "_jsxs", "Attachment", "Preview", "status", "Loader", "small", "Title", "Remove", "onClick", "CodeAttachment", "Folder", "height", "width", "AttachmentPreview", "mediaType", "startsWith", "STRAPI_CODE_MIME_TYPE", "import_react", "file", "name", "file", "dt", "_a", "resolve", "object", "keys", "_accepts", "getInvalidTypeRejectionErr", "getTooLargeRejectionErr", "getTooSmallRejectionErr", "file", "validator", "ok", "_toConsumableArray", "_arrayWithoutHoles", "_iterableToArray", "_unsupportedIterableToArray", "_nonIterableSpread", "_arrayLikeToArray", "_slicedToArray", "_arrayWithHoles", "_iterableToArrayLimit", "_nonIterableRest", "ownKeys", "object", "keys", "_objectSpread", "_defineProperty", "React", "PropTypes", "initialState", "_objectSpread", "validator", "_slicedToArray", "onWindowFocus", "onDocumentDrop", "_toConsumableArray", "file", "composeHandler", "composeKeyboardHandler", "composeDragHandler", "stopPropagation", "onDragEnter", "onDragOver", "onDragLeave", "onDrop", "_defineProperty", "useClipboardPasteImages", "onAddFiles", "isEnabled", "handlePaste", "useCallback", "e", "items", "clipboardData", "length", "files", "item", "kind", "file", "getAsFile", "type", "startsWith", "push", "preventDefault", "useEffect", "document", "addEventListener", "removeEventListener", "DropzoneContext", "createContext", "useDropzoneContext", "useContext", "Root", "children", "accept", "props", "getRootProps", "isDragActive", "useDropzone", "onDrop", "noClick", "noKeyboard", "_jsx", "Provider", "value", "Flex", "direction", "alignItems", "width", "position", "Area", "error", "title", "displayTitle", "_jsxs", "top", "left", "right", "bottom", "zIndex", "cursor", "height", "borderStyle", "borderColor", "background", "hasRadius", "padding", "justifyContent", "gap", "Box", "svg", "viewBox", "fill", "xmlns", "path", "d", "stroke", "strokeWidth", "strokeLinecap", "strokeLinejoin", "Typography", "variant", "textColor", "textAlign", "Dropzone", "PanelContext", "createContext", "size", "position", "isOpen", "onToggle", "PANEL_SIZES", "sm", "width", "height", "md", "lg", "PANEL_POSITIONS", "bottom", "right", "left", "top", "FixedWrapper", "styled", "Box", "$position", "includes", "theme", "Object", "entries", "reduce", "acc", "key", "value", "spaces", "PanelContainer", "$size", "startsWith", "ANIMATIONS", "slideDownIn", "slideUpIn", "slideDownOut", "slideUpOut", "Root", "children", "toggleIcon", "_jsx", "Provider", "_jsxs", "background", "shadow", "hasRadius", "borderColor", "borderStyle", "borderWidth", "data-state", "Header", "padding", "Flex", "justifyContent", "alignItems", "Body", "flex", "overflow", "Footer", "Close", "label", "usePanel", "IconButton", "onClick", "variant", "Cross", "Panel", "useContext", "FigmaIcon", "props", "_jsxs", "svg", "width", "height", "viewBox", "xmlns", "aria-label", "style", "display", "margin", "_jsx", "title", "desc", "path", "d", "fill", "StopIcon", "props", "_jsx", "svg", "width", "height", "viewBox", "fill", "xmlns", "rect", "x", "y", "rx", "InputContext", "createContext", "useInput", "useContext", "Root", "children", "isLoading", "props", "_jsx", "Provider", "value", "Flex", "direction", "alignItems", "width", "position", "Header", "Box", "bottom", "left", "right", "background", "HeaderItem", "styled", "theme", "spaces", "Attachments", "gap", "wrap", "paddingBottom", "maxHeight", "overflow", "InputContainer", "$hasError", "colors", "danger600", "primary600", "Content", "disclaimer", "error", "_jsxs", "hasRadius", "borderColor", "borderWidth", "borderStyle", "padding", "borderRadius", "Typography", "variant", "textColor", "Actions", "justifyContent", "Input", "values", "options", "name", "options", "re", "space", "space", "definition", "space", "index", "check", "values", "create", "definition", "create", "create", "create", "create", "create", "create", "html", "svg", "stringify", "values", "point", "node", "start", "position", "point", "options", "index", "start", "cap", "options", "create", "svg", "html", "node", "jsx", "jsxs", "_", "point", "name", "index", "stringify", "styleToJs", "error", "import_jsx_runtime", "import_react", "emptyOptions", "options", "one", "values", "index", "element", "characterReference", "list", "start", "all", "index", "extension", "code", "list", "code", "code", "check", "index", "start", "code", "hasOwnProperty", "ok", "start", "code", "previous", "code", "document", "self", "start", "code", "point", "index", "ok", "code", "constructs", "context", "index", "resolve", "context", "index", "text", "use", "start", "ok", "attentionMarkers", "previous", "marker", "code", "point", "ok", "start", "code", "ok", "start", "code", "ok", "self", "start", "code", "ok", "start", "code", "ok", "self", "start", "code", "ok", "self", "marker", "start", "code", "effects", "nok", "ok", "self", "start", "code", "furtherStart", "index", "code", "ok", "self", "start", "index", "start", "list", "index", "context", "previous", "start", "content", "ok", "previous", "code", "self", "ok", "start", "code", "ok", "self", "start", "code", "ok", "marker", "start", "code", "ok", "start", "code", "ok", "self", "start", "code", "titleBefore", "ok", "start", "code", "context", "content", "text", "ok", "start", "code", "index", "ok", "self", "marker", "start", "code", "name", "ok", "self", "marker", "index", "start", "code", "index", "context", "text", "ok", "self", "start", "code", "ok", "self", "start", "code", "ok", "self", "start", "code", "ok", "start", "code", "ok", "marker", "start", "code", "ok", "self", "start", "code", "context", "index", "content", "text", "definition", "heading", "ok", "self", "marker", "start", "code", "paragraph", "self", "content", "code", "text", "self", "constructs", "start", "code", "list", "index", "context", "document", "flow", "string", "text", "document", "flow", "string", "text", "createDebug", "point", "exit", "context", "code", "constructs", "map", "start", "all", "list", "ok", "from", "index", "options", "constructs", "create", "document", "text", "start", "code", "head", "own", "options", "config", "link", "heading", "blockQuote", "codeText", "definition", "emphasis", "hardBreak", "html", "image", "listItem", "list", "paragraph", "strong", "thematicBreak", "compile", "context", "exit", "index", "point", "start", "create", "node", "data", "text", "string", "extension", "options", "self", "node", "node", "node", "node", "node", "node", "index", "counter", "link", "node", "html", "node", "node", "node", "definition", "node", "node", "text", "node", "definition", "node", "node", "paragraph", "index", "list", "node", "index", "node", "root", "node", "node", "node", "start", "node", "result", "node", "search", "start", "code", "text", "node", "thematicBreak", "node", "html", "list", "root", "text", "thematicBreak", "index", "object", "map", "set", "name", "toString", "json", "index", "any", "options", "definition", "content", "listItem", "ok", "checks", "index", "any", "check", "all", "node", "empty", "check", "is", "node", "index", "name", "visit", "node", "index", "own", "emptyOptions", "options", "handlers", "all", "one", "node", "map", "unknown", "values", "index", "code", "options", "node", "options", "file", "error", "use", "values", "error", "index", "wrap", "middleware", "extname", "start", "index", "code", "normalize", "error", "url", "index", "options", "index", "field", "basename", "dirname", "assertPath", "extname", "name", "self", "own", "index", "extend", "self", "options", "file", "resolve", "error", "tree", "compiler", "value", "parameters", "name", "node", "isUint8Array", "options", "file", "options", "file", "transform", "node", "index", "import_react", "_a", "_AISDKError", "name", "error", "marker", "symbol", "url", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "text", "error", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "error", "_a", "symbol", "name", "marker", "_TypeValidationError", "error", "_a", "symbol", "options", "noop", "error", "_default", "base64", "base64url", "bigint", "boolean", "_catch", "cidrv4", "cidrv6", "core_exports", "cuid", "cuid2", "date", "e164", "email", "emoji", "_enum", "guid", "ipv4", "ipv6", "ksuid", "nanoid", "_null", "nullish", "number", "parse", "parseAsync", "preprocess", "safeParse", "safeParseAsync", "string", "symbol", "ulid", "_undefined", "uuid", "_void", "xid", "core_exports", "_emoji", "_null", "_undefined", "parse", "name", "initializer", "_a", "_b", "assert", "extend", "isObject", "isPlainObject", "merge", "values", "array", "set", "start", "object", "keys", "_a", "isPlainObject", "isObject", "extend", "merge", "Class", "_a", "config", "_b", "error", "issue", "_a", "_b", "parse", "boolean", "number", "string", "version", "time", "_a", "inst", "result", "content", "_a", "checks", "result", "string", "_", "url", "inst", "base64", "number", "boolean", "isValidDate", "index", "keys", "optionalKeys", "isObject", "allowsEval", "r", "results", "map", "values", "left", "right", "isPlainObject", "keyResult", "valueResult", "output", "start", "parsedType", "issue", "error", "parsedType", "issue", "one", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "one", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "parsedType", "error", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "error", "parsedType", "issue", "Class", "_emoji", "_undefined", "_null", "types", "Class", "element", "options", "values", "error", "parse", "_a", "_b", "json", "values", "file", "root", "schema", "zodSchema", "params", "gen", "date", "datetime", "duration", "time", "datetime", "date", "time", "duration", "initializer", "issue", "issues", "parse", "parseAsync", "safeParse", "safeParseAsync", "checks", "def", "parse", "safeParse", "parseAsync", "safeParseAsync", "check", "_default", "_catch", "_a", "_emoji", "datetime", "date", "time", "duration", "string", "email", "guid", "uuid", "emoji", "nanoid", "cuid", "cuid2", "ulid", "xid", "ksuid", "ipv4", "ipv6", "cidrv4", "cidrv6", "base64", "base64url", "e164", "number", "boolean", "bigint", "symbol", "_undefined", "_null", "_void", "date", "element", "_enum", "options", "keys", "values", "types", "issue", "output", "nullish", "_default", "_catch", "issue", "jsonSchema", "string", "number", "boolean", "_null", "preprocess", "map", "bigint", "boolean", "date", "number", "string", "string", "number", "boolean", "bigint", "date", "error", "url", "record", "fetch", "APICallError", "_parse", "text", "node", "TypeValidationError", "validator", "error", "getOriginalFetch", "url", "fetch", "url", "fetch", "getOriginalFetch", "error", "APICallError", "url", "APICallError", "url", "APICallError", "options", "_a", "_b", "check", "parsedType", "literal", "ZodFirstPartyTypeKind", "keys", "values", "object", "types", "x", "required", "jsonSchema", "index", "name", "schema", "zodSchema", "safeParseAsync", "atob", "url", "marker", "symbol", "_a", "error", "name", "_b", "z", "config", "options", "resolve", "createJsonResponseHandler", "createJsonErrorResponseHandler", "values", "postJsonToApi", "combineHeaders", "re", "isCompatible", "diag", "_a", "_b", "DiagComponentLogger", "DiagLogLevel", "DiagAPI", "__spreadArray", "__read", "self", "_a", "_b", "options", "BaggageImpl", "_a", "_b", "__read", "keys", "BaseContext", "self", "context", "NoopMeter", "NoopMetric", "NoopCounterMetric", "NoopUpDownCounterMetric", "NoopGaugeMetric", "NoopHistogramMetric", "NoopObservableMetric", "NoopObservableCounterMetric", "NoopObservableGaugeMetric", "NoopObservableUpDownCounterMetric", "ValueType", "NoopContextManager", "__spreadArray", "__read", "API_NAME", "ContextAPI", "context", "_a", "__spreadArray", "__read", "TraceFlags", "NonRecordingSpan", "_status", "context", "_a", "NoopTracer", "name", "options", "context", "root", "ProxyTracer", "name", "version", "options", "context", "NoopTracerProvider", "ProxyTracerProvider", "name", "version", "options", "_a", "SamplingDecision", "SpanKind", "SpanStatusCode", "TraceStateImpl", "diag", "NoopMeterProvider", "API_NAME", "MetricsAPI", "name", "version", "options", "NoopTextMapPropagator", "context", "context", "API_NAME", "PropagationAPI", "context", "API_NAME", "TraceAPI", "success", "name", "version", "name", "marker", "symbol", "_a", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "AISDKError", "text", "error", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "symbol", "_a", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "name", "marker", "_a", "symbol", "_a", "_b", "z", "z", "z", "z", "z", "z", "safeParseJSON", "_a", "_b", "options", "part", "error", "originalGenerateId", "createIdGenerator", "originalGenerateId", "createIdGenerator", "resolve", "error", "originalGenerateId", "createIdGenerator", "__export", "object", "text", "asSchema", "context", "safeParseJSON", "safeValidateTypes", "name", "marker", "symbol", "_a", "_a", "symbol", "z", "file", "name", "resolve", "_a", "error", "fetch", "options", "_b", "parseJsonEventStream", "generateId", "tool", "z", "import_react", "import_react", "import_react", "dequal", "noop", "OBJECT", "mergeObjects", "cache", "React", "table", "isPlainObject", "index", "keys", "serialize", "options", "error", "get", "set", "mutate", "config", "timeout", "dequal", "import_react", "React", "normalize", "mergeObjects", "config", "serialize", "normalize", "use", "middleware", "index", "noop", "UNDEFINED", "use", "React", "config", "cache", "compare", "serialize", "isEqual", "mergeObjects", "cachedData", "cached", "error", "initialState", "SWRConfig", "OBJECT", "import_react", "throttleFunction", "index", "options", "error", "aiTokenCache", "SESSION_STORAGE_KEY", "EXPIRY_BUFFER_MS", "parseExpiryMs", "expiresAt", "ms", "Date", "parse", "Number", "isFinite", "getTokenState", "bufferMs", "now", "expMs", "isTokenUsable", "clearAIJwt", "sessionStorage", "removeItem", "readFromSession", "raw", "getItem", "parsed", "JSON", "writeToSession", "data", "setItem", "stringify", "getAIJwt", "fromSession", "get", "getFetchClient", "token", "prefetchAIToken", "existing", "safeParseJson", "response", "json", "text", "error", "undefined", "buildHeaders", "ctx", "extra", "Authorization", "strapiVersion", "userId", "projectId", "shouldRetryForToken", "status", "body", "msg", "toString", "toLowerCase", "includes", "fetchAI", "input", "options", "tokenData", "Error", "make", "headers", "fetch", "clone", "refreshed", "makeChatFetch", "TOO_MANY_REQUESTS_ERROR", "LICENSE_LIMIT_REACHED_ERROR", "LICENSE_LIMIT_EXCEEDED_ERROR", "CHAT_TOO_LONG_ERROR", "createAIFetchHook", "endpoint", "strapiVersion", "useAppInfo", "state", "projectId", "userId", "aiUsage", "useGetAIUsageQuery", "undefined", "refetchOnMountOrArgChange", "isPending", "setIsPending", "useState", "error", "setError", "fetchData", "options", "fullUrl", "STRAPI_AI_URL", "isJson", "body", "formData", "response", "fetchAI", "method", "headers", "JSON", "stringify", "ctx", "refetch", "safeParseJson", "ok", "Error", "statusText", "err", "message", "fetch", "useFetchGenerateTitle", "useFetchUploadProject", "useFetchSendFeedback", "useFetchUploadMedia", "useAIChat", "props", "customFetch", "makeChatFetch", "useChat", "transport", "DefaultChatTransport", "api", "STRAPI_AI_CHAT_URL", "useChatTitle", "chatId", "messages", "title", "setTitle", "useState", "undefined", "fetch", "fetchGenerateTitle", "error", "isPending", "isGenerating", "useFetchGenerateTitle", "generateTitle", "useCallback", "firstMessage", "at", "firstMessageContent", "parts", "map", "content", "type", "text", "join", "result", "body", "message", "data", "resetTitle", "MAX_HISTORY_SIZE", "parseUrlForSchemaInfo", "window", "uid", "type", "pathname", "location", "includes", "contentTypeUid", "split", "parts", "length", "componentUid", "useLastSeenSchemas", "rawSchemas", "setRawSchemas", "useState", "components", "contentTypes", "useDataManager", "useEffect", "handleUrlChange", "newSchema", "timestamp", "Date", "now", "prevSchemas", "filteredSchemas", "filter", "schema", "slice", "addEventListener", "detectRouteChange", "lastPathname", "interval", "setInterval", "currentPathname", "clearInterval", "cleanup", "removeEventListener", "lastSeenSchemas", "useMemo", "Object", "keys", "some", "clearHistory", "transformAttributesFromCTBToChat", "attributes", "reduce", "acc", "attribute", "name", "rest", "transformCTBToChat", "schema", "_a", "modelType", "category", "kind", "action", "description", "info", "displayName", "uid", "sources", "pluralName", "options", "draftAndPublish", "localized", "StepModalContext", "createContext", "useStepModal", "context", "useContext", "Error", "StepModal", "open", "onOpenChange", "title", "children", "onComplete", "onCancel", "currentStep", "setCurrentStep", "useState", "isLoading", "setIsLoading", "error", "setError", "childrenArray", "Children", "toArray", "filter", "child", "isValidElement", "map", "props", "totalSteps", "length", "isFirstStep", "isLastStep", "useEffect", "resetStates", "handleCancel", "handleBack", "prev", "Math", "max", "nextStep", "currentStepProps", "onNext", "err", "String", "handleFormSubmit", "e", "preventDefault", "disableNext", "contextValue", "goToStep", "prevStep", "currentChild", "_jsx", "Provider", "value", "Modal", "Root", "_jsxs", "Content", "Header", "Typography", "variant", "fontWeight", "form", "onSubmit", "Body", "Box", "marginTop", "padding", "background", "color", "borderRadius", "message", "Footer", "Button", "onClick", "type", "cancelLabel", "backLabel", "disabled", "loading", "nextLabel", "Step", "_Fragment", "generateId", "size", "crypto", "randomUUID", "slice", "useAttachments", "setAttachments", "attachments", "id", "chatId", "useStrapiChat", "toggleNotification", "useNotification", "fetch", "fetchUploadMedia", "useFetchUploadMedia", "addAttachments", "useCallback", "newAttachments", "prev", "updateAttachment", "attachment", "map", "a", "removeAttachment", "filter", "attachFiles", "newFiles", "description", "attachmentCount", "length", "attachedFileCount", "Array", "from", "limitedFiles", "STRAPI_MAX_ATTACHMENTS", "type", "title", "message", "limit", "slice", "file", "size", "STRAPI_MAX_ATTACHMENT_SIZE", "f", "pendingAttachment", "generateId", "status", "filename", "name", "mediaType", "url", "formData", "FormData", "append", "JSON", "stringify", "then", "result", "data", "error", "timeout", "catch", "removeAttachmentByIndex", "index", "_", "i", "ALLOWED_EXTENSIONS", "MAX_LINES_PER_FILE", "DEFAULT_IGNORE_PATTERNS", "isAllowedFile", "filename", "ignorePatterns", "micromatch", "isMatch", "some", "ext", "toLowerCase", "endsWith", "pruneFileContent", "content", "lines", "split", "length", "truncated", "slice", "join", "openZipFile", "file", "options", "zip", "JSZip", "contents", "loadAsync", "processedFiles", "Promise", "all", "Object", "keys", "files", "map", "zipEntry", "dir", "async", "push", "path", "err", "console", "warn", "sort", "a", "b", "localeCompare", "processFolder", "folderName", "firstFile", "folderPath", "webkitRelativePath", "pathParts", "Array", "from", "filePath", "name", "text", "includes", "substring", "indexOf", "projectName", "processZipFile", "replace", "useCodeUpload", "onSuccess", "onError", "error", "setError", "useState", "isProcessing", "setIsProcessing", "fetch", "fetchUploadProject", "isPending", "isFetching", "fetchError", "useFetchUploadProject", "id", "chatId", "useStrapiChat", "processFiles", "result", "body", "type", "data", "Error", "handleZipFile", "projectAttachment", "generateId", "status", "handleFolder", "isLoading", "useTranslations", "formatMessage", "useIntl", "t", "id", "defaultMessage", "UploadProjectContext", "createContext", "isCodeUploadOpen", "submitOnFinish", "openCodeUpload", "closeCodeUpload", "useUploadProjectToChat", "useContext", "UploadProjectToChatProvider", "children", "setIsCodeUploadOpen", "useState", "setSubmitOnFinish", "_jsxs", "Provider", "value", "_jsx", "UploadCodeModal", "DropZone", "importType", "onAddFiles", "error", "dragOver", "setDragOver", "inputRef", "useRef", "t", "useTranslations", "handleDragOver", "event", "preventDefault", "handleDragEnter", "handleDragLeave", "handleClick", "e", "current", "click", "handleChange", "files", "Array", "from", "readDirectory", "entry", "reader", "createReader", "getEntries", "Promise", "resolve", "reject", "readEntries", "entries", "isFile", "fileEntry", "file", "Object", "defineProperty", "writable", "fullPath", "substring", "push", "isDirectory", "dirEntry", "subFiles", "length", "handleDrop", "dataTransfer", "items", "allFiles", "i", "item", "webkitGetAsEntry", "Flex", "position", "cursor", "width", "height", "minHeight", "borderStyle", "borderColor", "background", "hasRadius", "padding", "justifyContent", "direction", "alignItems", "gap", "onDragEnter", "onDragLeave", "onDragOver", "onDrop", "FileZip", "Folder", "Typography", "variant", "textColor", "textAlign", "onClick", "Box", "tag", "left", "right", "bottom", "top", "name", "aria-label", "tabIndex", "zIndex", "ref", "onChange", "style", "opacity", "type", "accept", "multiple", "webkitdirectory", "directory", "CodeUploadStep", "setFileName", "processZipFile", "processFolder", "nextStep", "useStepModal", "wrap", "flex", "minWidth", "replace", "firstFile", "folderPath", "webkitRelativePath", "folderName", "split", "err", "console", "CodeConfirmationStep", "projectName", "isLoading", "AttachmentPreview", "attachment", "id", "generateId", "status", "filename", "url", "mediaType", "STRAPI_CODE_MIME_TYPE", "setProjectName", "projectAttachment", "setProjectAttachment", "addAttachments", "useAttachments", "useCodeUpload", "onSuccess", "sendMessage", "openChat", "input", "setInput", "useStrapiChat", "handleCancel", "handleComplete", "role", "parts", "text", "validateUploadStep", "StepModal", "open", "onOpenChange", "isOpen", "title", "onCancel", "onComplete", "Step", "nextLabel", "cancelLabel", "disableNext", "onNext", "backLabel", "ImageContainer", "styled", "Box", "StyledImg", "Base64Img", "ANIMATIONS", "fadeIn", "CardContainer", "Card", "$selected", "theme", "colors", "primary600", "neutral200", "ImagePreview", "imageUrl", "imageName", "selected", "onSelect", "_jsx", "FullScreenImage", "Root", "src", "alt", "_jsxs", "role", "CardHeader", "CardCheckbox", "checked", "onCheckedChange", "CardAction", "position", "Trigger", "IconButton", "label", "type", "Expand", "onClick", "CardBody", "CardContent", "CardTitle", "FIGMA_TOKEN_STORAGE_KEY", "getFigmaToken", "localStorage", "getItem", "error", "console", "saveFigmaToken", "token", "setItem", "hasFigmaToken", "extractNodeFromFigmaUrl", "figmaUrl", "figmaUrlPattern", "match", "Error", "fileKey", "nodeId", "decodeURIComponent", "replace", "getValidToken", "fetchFigmaNode", "apiUrl", "response", "fetch", "headers", "ok", "status", "statusText", "nodes", "json", "err", "errorMessage", "message", "findFramesInNode", "node", "frames", "type", "push", "id", "name", "children", "length", "child", "fetchFigmaNodeImages", "nodeIds", "images", "idsQueryParam", "slice", "join", "errorData", "text", "result", "useFigmaUpload", "onSuccess", "onError", "isLoading", "setIsLoading", "useState", "setError", "processFigmaUrl", "selectedNode", "figmaData", "document", "frameNameMap", "Map", "map", "frame", "frameIds", "imageResponse", "figmaImages", "Object", "entries", "url", "filename", "get", "mediaType", "UploadFigmaContext", "createContext", "isFigmaUploadOpen", "submitOnFinish", "openFigmaUpload", "closeFigmaUpload", "useUploadFigmaToChat", "context", "useContext", "Error", "UploadFigmaToChatProvider", "children", "setIsFigmaUploadOpen", "useState", "setSubmitOnFinish", "submitOnFinishParam", "_jsxs", "Provider", "value", "_jsx", "UploadFigmaModal", "FigmaUrlInputStep", "figmaUrl", "setFigmaUrl", "t", "useTranslations", "isLoading", "useStepModal", "showingTokenInput", "setShowingTokenInput", "hasFigmaToken", "figmaToken", "setFigmaToken", "getFigmaToken", "handleSaveToken", "trim", "saveFigmaToken", "Flex", "direction", "gap", "alignItems", "Typography", "variant", "textColor", "Link", "href", "isExternal", "Box", "width", "TextInput", "name", "placeholder", "aria-label", "onChange", "e", "target", "disabled", "type", "Button", "onClick", "justifyContent", "size", "FigmaImageDisplayStep", "images", "selectedImages", "setSelectedImages", "toggleSelectAll", "length", "allImageIds", "map", "img", "id", "padding", "handleFrameSelection", "frameId", "newSelection", "includes", "filter", "height", "paddingRight", "style", "overflowY", "Grid", "Root", "frame", "index", "isSelected", "Item", "col", "ImagePreview", "imageUrl", "url", "imageName", "filename", "selected", "onSelect", "figmaImages", "setFigmaImages", "addAttachments", "useAttachments", "input", "setInput", "setMessages", "sendMessage", "openChat", "useStrapiChat", "processFigmaUrl", "error", "useFigmaUpload", "onSuccess", "initialSelection", "slice", "handleImportStep", "isValidFigmaUrl", "urlObj", "URL", "hostname", "handleCancel", "handleComplete", "selectedFigmaImages", "role", "parts", "text", "StepModal", "open", "onOpenChange", "isOpen", "title", "onCancel", "onComplete", "Step", "nextLabel", "cancelLabel", "disableNext", "onNext", "backLabel", "ACTION_TO_STATUS", "create", "remove", "update", "createAttributeWithStatus", "name", "attributeData", "status", "determineAttributeStatus", "newAttr", "oldAttr", "oldSchema", "newAttrWithoutStatus", "omit", "oldAttrWithoutStatus", "isEqual", "transformStatusFromChatToCTB", "schema", "action", "transformAttributesFromChatToCTB", "attributes", "Object", "entries", "map", "attribute", "oldAttributesMap", "reduce", "acc", "attr", "processedAttributes", "removedAttributes", "filter", "transformChatToCTB", "singularName", "pluralize", "singular", "toLowerCase", "replace", "pluralName", "plural", "modelType", "category", "modelName", "info", "displayName", "description", "uid", "collectionName", "globalId", "kind", "charAt", "toUpperCase", "slice", "options", "draftAndPublish", "pluginOptions", "i18n", "localized", "visible", "restrictRelationsTo", "SchemaContext", "createContext", "undefined", "TYPE_TO_ACTION", "create", "update", "remove", "extractSchemaChangesFromMessage", "message", "role", "changes", "parts", "forEach", "part", "partIndex", "type", "output", "error", "Array", "isArray", "schemas", "baseId", "toolCallId", "id", "schema", "schemaIndex", "revisionId", "uid", "name", "action", "push", "SchemaChatProvider", "children", "lastRevisedId", "setLastRevisedId", "useState", "messages", "status", "useStrapiChat", "contentTypes", "components", "applyChange", "useDataManager", "dispatch", "useGuidedTour", "s", "state", "useEffect", "latestMessage", "length", "schemaChanges", "isAddFieldCompleted", "completedActions", "includes", "GUIDED_TOUR_REQUIRED_ACTIONS", "contentTypeBuilder", "addField", "change", "oldSchema", "newSchema", "transformChatToCTB", "attributes", "Object", "keys", "payload", "_jsx", "Provider", "value", "ChatContext", "createContext", "undefined", "generateRandomId", "Math", "random", "toString", "substring", "BaseChatProvider", "children", "defaultOpen", "chatId", "setChatId", "useState", "isChatOpen", "setIsChatOpen", "openCount", "setOpenCount", "input", "setInput", "attachments", "setAttachments", "trackUsage", "useTracking", "components", "contentTypes", "useDataManager", "lastSeenSchemas", "useLastSeenSchemas", "schemas", "useMemo", "Object", "values", "filter", "schema", "status", "uid", "visible", "map", "transformCTBToChat", "id", "messages", "sendMessage", "_sendMessage", "stop", "chat", "useAIChat", "experimental_throttle", "message", "options", "body", "metadata", "handleSubmit", "e", "preventDefault", "readyAttachments", "a", "trim", "length", "files", "attachment", "type", "filename", "mediaType", "url", "text", "title", "generateTitle", "resetTitle", "useChatTitle", "useEffect", "successful", "role", "isChatAvailable", "useAIAvailability", "_jsx", "Provider", "value", "isChatEnabled", "handleInputChange", "target", "reset", "openChat", "prev", "closeChat", "ChatProvider", "SchemaChatProvider", "UploadProjectToChatProvider", "UploadFigmaToChatProvider", "FeedbackProvider", "useStrapiChat", "context", "useContext", "process", "console", "warn", "Error", "useFeedback", "fetch", "sendFeedback", "isPending", "error", "useFetchSendFeedback", "id", "messages", "schemas", "useStrapiChat", "toggleNotification", "useNotification", "trackUsage", "useTracking", "t", "useTranslations", "votedMessages", "setVotedMessages", "useState", "hasVoted", "messageId", "upvoteMessage", "Promise", "resolve", "value", "type", "message", "prev", "body", "chatId", "downvoteMessage", "feedback", "reasons", "FeedbackModalContext", "createContext", "isFeedbackModalOpen", "currentMessageId", "openFeedbackModal", "closeFeedbackModal", "useFeedbackModal", "useContext", "FeedbackProvider", "children", "setIsFeedbackModalOpen", "useState", "setCurrentMessageId", "messageId", "_jsxs", "Provider", "value", "_jsx", "FeedbackModal", "FeedbackOptionWrapper", "styled", "Flex", "theme", "colors", "neutral100", "primary100", "primary200", "FeedbackOption", "id", "label", "selected", "onClick", "className", "justifyContent", "hasRadius", "width", "cursor", "borderColor", "padding", "gap", "Typography", "variant", "fontWeight", "Checkbox", "name", "checked", "onChange", "feedbackText", "setFeedbackText", "selectedReasons", "setSelectedReasons", "t", "useTranslations", "toggleNotification", "useNotification", "downvoteMessage", "isPending", "useFeedback", "feedbackReasons", "handleReasonSelect", "prevSelected", "includes", "filter", "reasonId", "handleSubmitFeedback", "length", "error", "type", "message", "Modal", "Root", "open", "onOpenChange", "Content", "Header", "Body", "direction", "alignItems", "Grid", "map", "reason", "Item", "col", "Box", "Textarea", "placeholder", "e", "target", "Footer", "Close", "Button", "loading", "disabled", "CollapsibleContext", "createContext", "undefined", "useCollapsible", "context", "useContext", "Error", "AnimatedContent", "styled", "Box", "theme", "motion", "timings", "easings", "easeOutQuad", "Collapsible", "children", "defaultOpen", "open", "setOpen", "useState", "_jsx", "Provider", "value", "toggle", "prev", "CollapsibleTrigger", "onClick", "style", "cursor", "CollapsibleContent", "contentRef", "useRef", "height", "setHeight", "useLayoutEffect", "current", "contentHeight", "scrollHeight", "ref", "role", "aria-hidden", "visibility", "rotate", "keyframes", "SpinningLoader", "styled", "Loader", "RotatingIcon", "Box", "$open", "theme", "motion", "timings", "easings", "easeOutQuad", "Status", "status", "_jsx", "Typography", "fontWeight", "textColor", "Marker", "title", "steps", "state", "getStateIcon", "Check", "fill", "Cross", "borderWidth", "borderColor", "borderStyle", "hasRadius", "marginBottom", "width", "_jsxs", "Collapsible", "defaultOpen", "CollapsibleTrigger", "open", "padding", "Flex", "gap", "alignItems", "marginLeft", "as", "ChevronDown", "CollapsibleContent", "direction", "map", "step", "justifyContent", "link", "Link", "tag", "RouterLink", "to", "description", "id", "MarkdownStyles", "styled", "Typography", "theme", "colors", "neutral100", "borderRadius", "neutral150", "primary500", "isSchemaToolPart", "part", "type", "capitalize", "s", "charAt", "toUpperCase", "slice", "getSchemaLink", "schema", "isComponent", "kind", "modelType", "uid", "undefined", "category", "toMarkerFromSchemaTool", "outSchemas", "output", "schemas", "inSchemas", "input", "length", "numSchemas", "state", "error", "steps", "map", "index", "id", "toolCallId", "name", "description", "status", "action", "link", "title", "MessageContent", "_jsx", "Markdown", "components", "a", "node", "props", "target", "rel", "text", "marker", "Marker", "UserMessage", "message", "hasText", "parts", "some", "content", "trim", "attachments", "filter", "_jsxs", "AnimatedBox", "as", "Flex", "direction", "alignItems", "style", "alignSelf", "gap", "maxWidth", "Box", "background", "borderStyle", "padding", "hasRadius", "attachment", "idx", "AttachmentPreview", "filename", "AssistantMessage", "isLoading", "upvoteMessage", "useFeedback", "openFeedbackModal", "useFeedbackModal", "IconButton", "label", "size", "variant", "onClick", "ThumbUp", "ThumbDown", "ChatMessage", "role", "TextAreaElement", "styled", "Box", "attrs", "as", "theme", "lineHeights", "fontSizes", "colors", "neutral800", "spaces", "rows", "neutral600", "ResizableTextArea", "value", "onChange", "onSubmit", "placeholder", "textareaRef", "useRef", "setRows", "useState", "calculateRows", "text", "lineCount", "match", "length", "Math", "min", "useEffect", "handleKeyDown", "e", "current", "trim", "key", "shiftKey", "preventDefault", "setTimeout", "focus", "_jsx", "ref", "onKeyDown", "SimpleMenu", "forwardRef", "children", "onOpen", "onClose", "popoverPlacement", "props", "forwardedRef", "triggerRef", "useRef", "composedRef", "useComposedRefs", "handleOpenChange", "isOpen", "_jsxs", "Menu", "Root", "onOpenChange", "_jsx", "Trigger", "ref", "label", "Content", "zIndex", "MenuItem", "Item", "ResponsiveFlex", "styled", "Flex", "ChatSuggestions", "sendMessage", "useStrapiChat", "t", "useTranslations", "trackUsage", "useTracking", "SUGGESTIONS", "SUGGESTION_TO_PROMPT_TYPE", "suggestionsTitle", "_jsx", "AnimatedBox", "_jsxs", "direction", "alignItems", "gap", "Typography", "variant", "fontWeight", "map", "suggestion", "Button", "startIcon", "Sparkle", "fill", "size", "onClick", "promptType", "text", "getErrorMessage", "err", "error", "JSON", "parse", "message", "e", "ChatError", "defaultErrorMessage", "tooManyRequestsMessage", "licenseLimitReachedMessage", "licenseLimitExceededMessage", "chatTooLongError", "errorMessage", "TOO_MANY_REQUESTS_ERROR", "Alert", "title", "LICENSE_LIMIT_REACHED_ERROR", "split", "LICENSE_LIMIT_EXCEEDED_ERROR", "CHAT_TOO_LONG_ERROR", "ChatContent", "messages", "messageEndRef", "useRef", "status", "useEffect", "scrollTimeout", "setTimeout", "current", "scrollIntoView", "behavior", "clearTimeout", "_Fragment", "idx", "ChatMessage", "isLoading", "length", "id", "div", "ref", "ChatAttachmentList", "attachments", "removeAttachmentByIndex", "useAttachments", "Input", "Attachments", "attachment", "index", "Box", "maxWidth", "AttachmentPreview", "onRemove", "filename", "ChatAttachmentMenu", "attachFiles", "openCodeUpload", "useUploadProjectToChat", "openFigmaUpload", "useUploadFigmaToChat", "fileInputRef", "uploadLabel", "importCodeText", "attachImageText", "importFigmaText", "SimpleMenu", "label", "icon", "Paperclip", "tag", "IconButton", "popoverPlacement", "MenuItem", "Code", "onSelect", "FigmaIcon", "input", "type", "accept", "multiple", "hidden", "Upload", "fileInput", "onchange", "target", "files", "Array", "from", "click", "LoadingDots", "children", "dots", "setDots", "useState", "dotStates", "currentIndex", "interval", "setInterval", "clearInterval", "textColor", "ChatInput", "props", "handleSubmit", "handleInputChange", "stop", "form", "onSubmit", "Root", "Header", "minHeight", "HeaderItem", "Content", "Dropzone", "Area", "paddingBottom", "ResizableTextArea", "value", "onChange", "placeholder", "Actions", "preventDefault", "StopIcon", "disabled", "trim", "ArrowUp", "Chat", "isChatOpen", "isChatEnabled", "openChat", "closeChat", "reset", "state", "useGuidedTour", "s", "currentEnvironment", "useAppInfo", "isProduction", "isAIChatStepActive", "enabled", "tours", "contentTypeBuilder", "currentStep", "isCompleted", "openChatLabel", "closeChatLabel", "createChatLabel", "defaultTitle", "mistakesDisclaimer", "onAddFiles", "Panel", "position", "isOpen", "onToggle", "toggleIcon", "Plus", "Close", "Body", "AIChat", "Footer", "useContentTypeBuilderMenu", "componentsGroupedByCategory", "isInDevelopmentMode", "sortedContentTypesList", "useDataManager", "trackUsage", "useTracking", "searchValue", "setSearchValue", "useState", "onOpenModalCreateSchema", "useFormModalNavigation", "locale", "useIntl", "startsWith", "useFilter", "sensitivity", "formatter", "useCollator", "handleClickOpenModalCreateCollectionType", "nextState", "modalType", "kind", "actionType", "forTarget", "handleClickOpenModalCreateSingleType", "handleClickOpenModalCreateComponent", "componentsData", "Object", "entries", "map", "category", "components", "name", "title", "upperFirst", "links", "component", "uid", "to", "pluginId", "info", "displayName", "status", "sort", "a", "b", "compare", "displayedContentTypes", "filter", "obj", "visible", "data", "id", "getTrad", "defaultMessage", "customLink", "onClick", "undefined", "contentType", "singleType", "section", "hasChild", "some", "l", "Array", "isArray", "filteredLinksCount", "reduce", "acc", "link", "filteredLinks", "length", "push", "linksCount", "menu", "search", "value", "onChange", "clear", "ArrowCounterClockwise", "styled", "ArrowClockwise", "DiscardAllMenuItem", "Menu", "Item", "theme", "colors", "danger600", "disabled", "danger100", "ContentTypeBuilderNav", "menu", "search", "useContentTypeBuilderMenu", "saveSchema", "isModified", "history", "isInDevelopmentMode", "useDataManager", "formatMessage", "useIntl", "menuIsOpen", "setMenuIsOpen", "useState", "discardConfirmationModalIsOpen", "setDiscardConfirmationModalIsOpen", "useEffect", "onKeyDown", "e", "ctrlKey", "metaKey", "key", "preventDefault", "shiftKey", "undo", "redo", "document", "addEventListener", "removeEventListener", "discardHandler", "discardChanges", "discardAllChanges", "undoHandler", "redoHandler", "pluginName", "id", "getTrad", "defaultMessage", "_jsxs", "SubNav", "Main", "aria-label", "_jsx", "Header", "label", "Divider", "background", "Content", "Flex", "padding", "gap", "direction", "alignItems", "tours", "contentTypeBuilder", "Save", "Button", "flex", "onClick", "type", "fullWidth", "size", "Root", "open", "onOpenChange", "Trigger", "endIcon", "paddingTop", "paddingLeft", "paddingRight", "variant", "More", "fill", "aria-hidden", "focusable", "VisuallyHidden", "tag", "zIndex", "canUndo", "onSelect", "startIcon", "canRedo", "Separator", "canDiscardAll", "Cross", "Typography", "Searchbar", "value", "onChange", "target", "onClear", "placeholder", "children", "undefined", "name", "clearLabel", "Sections", "map", "section", "Fragment", "Section", "title", "link", "customLink", "sectionId", "links", "linkLabel", "SubSection", "subLink", "Link", "to", "endAction", "Box", "textAlign", "width", "Status", "status", "Dialog", "ConfirmDialog", "onConfirm", "TIMEOUT", "timeout", "useServerRestartWatcher", "get", "useFetchClient", "serverRestartWatcher", "initTime", "startTime", "Date", "now", "Error", "res", "data", "isUpdating", "Promise", "resolve", "setTimeout", "then", "err", "sortContentType", "types", "sortBy", "Object", "keys", "map", "uid", "visible", "name", "title", "info", "displayName", "plugin", "to", "pluginId", "kind", "restrictRelationsTo", "status", "filter", "obj", "camelCase", "stateToRequestData", "components", "contentTypes", "trackingEventProperties", "newContentTypes", "editedContentTypes", "deletedContentTypes", "newComponents", "editedComponents", "deletedComponents", "newFields", "editedFields", "deletedFields", "formattedComponents", "values", "compo", "includes", "component", "requestFormattedComponent", "formatTypeForRequest", "eventAction", "action", "updateEventCounts", "formattedContentTypes", "contentType", "requestFormattedContentType", "requestData", "removeNullKeys", "fromEntries", "entries", "_", "value", "Array", "isArray", "length", "undefined", "formatAttribute", "attr", "type", "targetAttribute", "conditions", "Error", "category", "omit", "options", "attributes", "properties", "counts", "entityType", "isContentType", "forEach", "attribute", "retrieveComponentsThatHaveComponents", "allComponents", "componentsThatHaveNestedComponents", "Object", "keys", "reduce", "acc", "current", "currentComponent", "get", "compoWithChildren", "getComponentWithChildComponents", "childComponents", "length", "push", "component", "uid", "attributes", "filter", "attribute", "type", "map", "retrieveNestedComponents", "appComponents", "nestedComponents", "Object", "keys", "reduce", "acc", "current", "_a", "componentAttributes", "attributes", "currentComponentNestedCompos", "getComponentsNestedWithinComponent", "mergeComponents", "parentCompoUid", "type", "push", "component", "originalComponents", "componentMap", "Map", "forEach", "has", "set", "Set", "get", "add", "transformedComponents", "Array", "from", "entries", "map", "parentCompoUidSet", "uidsOfAllParents", "retrieveSpecificInfoFromComponents", "allComponents", "keysToRetrieve", "allData", "Object", "keys", "map", "compo", "get", "makeUnique", "selectState", "state", "initialState", "DataManagerProvider", "children", "dispatch", "useDispatch", "useSelector", "dispatchGuidedTour", "useGuidedTour", "s", "components", "contentTypes", "reservedNames", "initialComponents", "initialContentTypes", "isLoading", "current", "toggleNotification", "useNotification", "lockAppWithAutoreload", "unlockAppWithAutoreload", "useAutoReloadOverlayBlocker", "serverRestartWatcher", "useServerRestartWatcher", "getPlugin", "useStrapiApp", "plugin", "autoReload", "useAppInfo", "formatMessage", "useIntl", "trackUsage", "useTracking", "refetchPermissions", "useAuth", "onCloseModal", "useFormModalNavigation", "isSaving", "setIsSaving", "useState", "isModified", "useMemo", "isEqual", "fetchClient", "useFetchClient", "isInDevelopmentMode", "getDataRef", "useRef", "schemaResponse", "reservedNamesResponse", "Promise", "all", "get", "data", "actions", "init", "mapValues", "component", "status", "contentType", "clearHistory", "err", "console", "error", "type", "message", "id", "defaultMessage", "React", "useEffect", "reloadPlugin", "getTrad", "getAllComponentsThatHaveAComponentInTheirAttributes", "composWithCompos", "retrieveComponentsThatHaveComponents", "getAllNestedComponents", "appNestedCompo", "retrieveNestedComponents", "updatePermissions", "saveSchema", "PluginForms", "apis", "forms", "mutatedCTs", "Object", "entries", "reduce", "acc", "uid", "mutateContentTypeSchema", "requestData", "trackingEventProperties", "stateToRequestData", "isSendingContentTypes", "keys", "length", "post", "success", "adminApi", "util", "invalidateTags", "payload", "GUIDED_TOUR_REQUIRED_ACTIONS", "contentTypeBuilder", "createSchema", "componentsThatHaveOtherComponentInTheirAttributes", "nestedComponents", "allComponentsCategories", "retrieveSpecificInfoFromComponents", "componentsGroupedByCategory", "groupBy", "sortedContentTypesList", "sortContentType", "context", "addAttribute", "editAttribute", "addCustomFieldAttribute", "editCustomFieldAttribute", "addCreatedComponentToDynamicZone", "createComponentSchema", "componentCategory", "changeDynamicZoneComponents", "forTarget", "targetUid", "dynamicZoneTarget", "newComponents", "removeAttribute", "removeField", "removeComponentFromDynamicZone", "deleteComponent", "userConfirm", "window", "confirm", "deleteContentType", "updateComponentSchema", "componentUID", "updateComponentUid", "newComponentUID", "updateSchema", "args", "moveAttribute", "applyChange", "history", "undo", "redo", "discardAllChanges", "discardAll", "canUndo", "past", "canRedo", "future", "canDiscardAll", "_jsx", "DataManagerContext", "Provider", "value", "ExitPrompt", "formatMessage", "useIntl", "isModified", "isSaving", "useDataManager", "confirmationMessage", "id", "getTrad", "defaultMessage", "blocker", "useBlocker", "ctx", "currentLocation", "pathname", "startsWith", "nextLocation", "useEffect", "handleBeforeUnload", "event", "preventDefault", "returnValue", "window", "addEventListener", "removeEventListener", "state", "_jsx", "Dialog", "Root", "open", "onOpenChange", "reset", "ConfirmDialog", "onConfirm", "proceed", "isAllowedContentTypesForRelations", "contentType", "kind", "restrictRelationsTo", "Array", "isArray", "length", "findAttribute", "attributes", "attributeToFind", "find", "name", "extractValuesFromYupError", "errorType", "errorParams", "getYupInnerErrors", "error", "inner", "reduce", "acc", "currentError", "path", "split", "join", "id", "message", "defaultMessage", "values", "type", "params", "options", "label", "children", "value", "AllowedTypesSelect", "intlLabel", "name", "onChange", "formatMessage", "useIntl", "displayedValue", "length", "id", "defaultMessage", "sort", "map", "v", "upperFirst", "join", "_jsxs", "Field", "Root", "_jsx", "Label", "MultiSelectNested", "customizeContent", "values", "target", "type", "OptionBoxWrapper", "styled", "Box", "theme", "colors", "neutral200", "primary100", "primary200", "newAttributes", "NewBadge", "_jsx", "Flex", "grow", "justifyContent", "_jsxs", "gap", "hasRadius", "background", "padding", "Sparkle", "width", "height", "fill", "Typography", "textColor", "variant", "AttributeOption", "type", "formatMessage", "useIntl", "onClickSelectField", "useFormModalNavigation", "handleClick", "step", "attributeType", "OptionBoxWrapper", "tag", "onClick", "AttributeIcon", "Box", "paddingLeft", "fontWeight", "id", "getTrad", "defaultMessage", "includes", "AttributeList", "attributes", "_jsx", "KeyboardNavigable", "tagName", "Flex", "direction", "alignItems", "gap", "map", "attributeRow", "index", "Grid", "Root", "attribute", "Item", "col", "AttributeOption", "type", "CustomFieldOption", "customFieldUid", "customField", "type", "intlLabel", "intlDescription", "formatMessage", "useIntl", "onClickSelectCustomField", "useFormModalNavigation", "handleClick", "attributeType", "_jsx", "OptionBoxWrapper", "padding", "tag", "hasRadius", "onClick", "_jsxs", "Flex", "AttributeIcon", "Box", "paddingLeft", "Typography", "fontWeight", "textColor", "variant", "EmptyCard", "styled", "Box", "theme", "colors", "neutral150", "EmptyCardGrid", "_jsx", "Flex", "wrap", "gap", "Array", "map", "_", "idx", "height", "width", "hasRadius", "EmptyAttributes", "formatMessage", "useIntl", "_jsxs", "position", "top", "alignItems", "justifyContent", "direction", "EmptyDocuments", "paddingTop", "paddingBottom", "textAlign", "Typography", "variant", "tag", "textColor", "id", "getTrad", "defaultMessage", "LinkButton", "Link", "to", "stringify", "categories", "startIcon", "Plus", "CustomFieldsList", "formatMessage", "useIntl", "getAllCustomFields", "useStrapiApp", "state", "customFields", "getAll", "registeredCustomFields", "Object", "entries", "length", "_jsx", "EmptyAttributes", "sortedCustomFields", "sort", "a", "b", "name", "KeyboardNavigable", "tagName", "_jsxs", "Flex", "direction", "alignItems", "gap", "Grid", "Root", "map", "uid", "customField", "Item", "col", "CustomFieldOption", "customFieldUid", "Link", "href", "isExternal", "id", "getTrad", "defaultMessage", "AttributeOptions", "attributes", "forTarget", "kind", "formatMessage", "useIntl", "defaultTabId", "getTrad", "customTabId", "titleIdSuffix", "includes", "titleId", "_jsx", "Modal", "Body", "_jsxs", "Tabs", "Root", "variant", "defaultValue", "Flex", "justifyContent", "Typography", "tag", "id", "defaultMessage", "List", "Trigger", "value", "Divider", "marginBottom", "Content", "AttributeList", "CustomFieldsList", "BooleanDefaultValueSelect", "intlLabel", "name", "options", "onChange", "value", "formatMessage", "useIntl", "label", "id", "defaultMessage", "values", "handleChange", "nextValue", "target", "type", "_jsxs", "Field", "Root", "_jsx", "Label", "SingleSelect", "toString", "map", "metadatas", "disabled", "hidden", "key", "SingleSelectOption", "Wrapper", "styled", "Flex", "inputFocusStyle", "theme", "colors", "neutral0", "neutral200", "borderRadius", "spaces", "neutral300", "primary100", "primary600", "CustomRadioGroup", "intlLabel", "name", "onChange", "radios", "value", "formatMessage", "useIntl", "_jsxs", "Flex", "direction", "alignItems", "gap", "_jsx", "Typography", "variant", "fontWeight", "textColor", "htmlFor", "tag", "Wrapper", "map", "radio", "label", "toString", "className", "input", "id", "checked", "type", "Box", "padding", "paddingRight", "span", "title", "description", "BooleanRadioGroup", "onChange", "name", "intlLabel", "rest", "handleChange", "e", "checked", "target", "value", "type", "_jsx", "CustomRadioGroup", "CheckboxWithNumberField", "error", "intlLabel", "modifiedData", "name", "onChange", "value", "formatMessage", "useIntl", "label", "id", "defaultMessage", "values", "type", "disabled", "errorMessage", "_jsxs", "Flex", "direction", "alignItems", "gap", "_jsx", "Checkbox", "onCheckedChange", "initValue", "nextValue", "target", "checked", "Box", "paddingLeft", "style", "maxWidth", "Field", "Root", "TextInput", "aria-label", "Error", "NumberInput", "onValueChange", "ContentTypeRadioGroup", "onChange", "rest", "formatMessage", "useIntl", "toggleNotification", "useNotification", "handleChange", "e", "type", "message", "id", "getTrad", "defaultMessage", "_jsx", "CustomRadioGroup", "DraftAndPublishToggle", "description", "disabled", "intlLabel", "isCreating", "name", "onChange", "value", "formatMessage", "useIntl", "showWarning", "setShowWarning", "useState", "label", "id", "defaultMessage", "values", "hint", "handleConfirm", "target", "handleChange", "checked", "_jsxs", "_Fragment", "Field", "Root", "_jsx", "Checkbox", "onCheckedChange", "Hint", "Dialog", "open", "onOpenChange", "isOpen", "ConfirmDialog", "endAction", "Button", "onClick", "variant", "width", "justifyContent", "getTrad", "FormModalEndActions", "deleteComponent", "deleteContentType", "isAttributeModal", "isCustomFieldModal", "isComponentAttribute", "isComponentToDzModal", "isContentTypeModal", "isCreatingComponent", "isCreatingComponentAttribute", "isCreatingComponentInDz", "isCreatingComponentWhileAddingAField", "isCreatingContentType", "isCreatingDz", "isComponentModal", "isDzAttribute", "isEditingAttribute", "isInFirstComponentStep", "onSubmitAddComponentAttribute", "onSubmitAddComponentToDz", "onSubmitCreateContentType", "onSubmitCreateComponent", "onSubmitCreateDz", "onSubmitEditAttribute", "onSubmitEditComponent", "onSubmitEditContentType", "onSubmitEditCustomFieldAttribute", "onSubmitEditDz", "onClickFinish", "formatMessage", "useIntl", "_jsx", "Button", "variant", "type", "onClick", "e", "preventDefault", "startIcon", "Plus", "id", "getTrad", "defaultMessage", "_Fragment", "_jsxs", "Flex", "gap", "FormModalHeader", "actionType", "attributeName", "attributeType", "contentTypeKind", "dynamicZoneTarget", "forTarget", "modalType", "targetUid", "customFieldUid", "showBackLink", "formatMessage", "useIntl", "components", "contentTypes", "useDataManager", "onOpenModalAddField", "useFormModalNavigation", "icon", "headers", "type", "displayName", "info", "includes", "isCreatingMainSchema", "headerId", "getTrad", "_jsx", "Modal", "Header", "_jsxs", "Flex", "Box", "AttributeIcon", "paddingLeft", "Title", "id", "name", "label", "category", "kind", "push", "gap", "Link", "aria-label", "defaultMessage", "startIcon", "ArrowLeft", "onClick", "href", "isExternal", "customField", "Breadcrumbs", "map", "join", "index", "arr", "upperFirst", "key", "Crumb", "isCurrent", "length", "getModalTitleSubHeader", "modalType", "forTarget", "kind", "actionType", "step", "getTrad", "includes", "FormModalSubHeader", "attributeType", "attributeName", "customField", "formatMessage", "useIntl", "intlLabel", "id", "_jsxs", "Flex", "direction", "alignItems", "paddingBottom", "gap", "_jsx", "Typography", "tag", "variant", "defaultMessage", "type", "upperFirst", "name", "textColor", "IconPickerWrapper", "styled", "Flex", "inputFocusStyle", "theme", "borderRadius", "colors", "neutral100", "IconPick", "iconKey", "name", "onChange", "isSelected", "ariaLabel", "Icon", "COMPONENT_ICONS", "_jsx", "Field", "Root", "required", "_jsxs", "Label", "VisuallyHidden", "Input", "type", "checked", "value", "aria-checked", "Tooltip", "label", "padding", "cursor", "hasRadius", "background", "undefined", "width", "height", "fill", "IconPicker", "intlLabel", "formatMessage", "useIntl", "showSearch", "setShowSearch", "useState", "search", "setSearch", "allIcons", "Object", "keys", "icons", "setIcons", "searchIconRef", "useRef", "searchBarRef", "toggleSearch", "onChangeSearch", "target", "filter", "icon", "toLowerCase", "includes", "onClearSearch", "removeIconSelected", "useEffect", "current", "focus", "_Fragment", "justifyContent", "paddingBottom", "Typography", "variant", "fontWeight", "textColor", "tag", "gap", "Searchbar", "ref", "placeholder", "id", "getTrad", "defaultMessage", "onBlur", "onClear", "clearLabel", "IconButton", "onClick", "withTooltip", "Search", "Trash", "position", "wrap", "maxHeight", "overflow", "textAlign", "length", "map", "Box", "grow", "PluralName", "description", "error", "intlLabel", "modifiedData", "name", "onChange", "value", "formatMessage", "useIntl", "onChangeRef", "useRef", "displayName", "previousDisplayName", "previousValue", "useEffect", "current", "baseValue", "nameToSlug", "newValue", "pluralize", "err", "target", "errorMessage", "id", "defaultMessage", "hint", "values", "label", "_jsxs", "Field", "Root", "_jsx", "Label", "TextInput", "Error", "parseDateValue", "value", "Date", "isValidDate", "date", "isNaN", "getTime", "removeSeconds", "time", "hours", "minutes", "split", "addSecondsAndMilliseconds", "length", "formatTimeForInput", "value", "formatTimeForOutput", "undefined", "handleTimeChange", "formattedInputTime", "handleTimeChangeEvent", "onChange", "name", "type", "formattedOutputTime", "target", "GenericInput", "autoComplete", "customInputs", "description", "disabled", "intlLabel", "labelAction", "error", "name", "onChange", "onDelete", "options", "placeholder", "required", "step", "type", "value", "defaultValue", "isNullable", "autoFocus", "attribute", "attributeName", "conditionFields", "rest", "formatMessage", "useIntl", "getFieldHintValue", "key", "hint", "useFieldHint", "fieldSchema", "minLength", "maxLength", "max", "min", "showPassword", "setShowPassword", "useState", "CustomInput", "undefined", "valueWithEmptyStringFallback", "getErrorMessage", "id", "defaultMessage", "values", "errorMessage", "_jsx", "label", "formattedPlaceholder", "getComponent", "JSONInput", "json", "length", "target", "minHeight", "maxHeight", "Toggle", "checked", "offLabel", "onLabel", "e", "Checkbox", "onCheckedChange", "Boolean", "dateValue", "parseDateValue", "DateTimePicker", "clearLabel", "date", "formattedDate", "toISOString", "onClear", "DatePicker", "formatISO", "representation", "NumberInput", "onValueChange", "TextInput", "endAction", "button", "aria-label", "onClick", "prev", "style", "border", "padding", "background", "Eye", "fill", "EyeStriked", "SingleSelect", "map", "metadatas", "hidden", "SingleSelectOption", "Textarea", "event", "formattedValue", "handleTimeChange", "TimePicker", "time", "handleTimeChangeEvent", "_jsxs", "Field", "Root", "Label", "action", "Error", "Hint", "buildDescription", "buildHint", "maximum", "minimum", "getMinMax", "units", "getFieldUnits", "minIsNumber", "maxIsNumber", "hasMinAndMax", "hasMinOrMax", "unit", "message", "divider", "br", "includes", "maxValue", "Math", "parsedMin", "Number", "parsedMinLength", "isNaN", "parsedMax", "parsedMaxLength", "MemoizedGenericInput", "memo", "isEqual", "RelationTargetPicker", "oneThatIsCreatingARelationWithAnother", "target", "contentTypes", "sortedContentTypesList", "useDataManager", "dispatch", "useDispatch", "allowedContentTypesForRelation", "filter", "isAllowedContentTypesForRelations", "type", "handleSelect", "uid", "plugin", "title", "restrictRelationsTo", "selectedContentTypeFriendlyName", "actions", "onChangeRelationTarget", "value", "targetContentTypeAllowedRelations", "_jsxs", "Menu", "Root", "_jsx", "MenuTrigger", "info", "displayName", "Content", "zIndex", "map", "Item", "onSelect", "_Fragment", "styled", "Trigger", "RelationFormBox", "disabled", "error", "header", "isMain", "name", "onChange", "oneThatIsCreatingARelationWithAnother", "target", "value", "_jsxs", "Box", "background", "hasRadius", "borderColor", "_jsx", "Flex", "paddingTop", "paddingBottom", "justifyContent", "Typography", "variant", "fontWeight", "textColor", "RelationTargetPicker", "Divider", "padding", "GenericInput", "id", "intlLabel", "getTrad", "defaultMessage", "type", "Wrapper", "styled", "Box", "theme", "colors", "primary600", "IconWrapper", "$isSelected", "borderRadius", "neutral150", "neutral300", "InfosWrapper", "Flex", "relations", "oneWay", "OneWay", "oneToOne", "OneToOne", "oneToMany", "OneToMany", "manyToOne", "ManyToOne", "manyToMany", "ManyToMany", "manyWay", "ManyWay", "ctRelations", "componentRelations", "RelationNaturePicker", "naturePickerType", "oneThatIsCreatingARelationWithAnother", "relationType", "target", "targetUid", "dispatch", "useDispatch", "formatMessage", "useIntl", "contentTypes", "useDataManager", "dataType", "get", "relationsType", "areDisplayedNamesInverted", "targetLabel", "leftTarget", "rightTarget", "leftDisplayedValue", "pluralize", "restrictedRelations", "rightDisplayedValue", "includes", "_jsxs", "Flex", "style", "flex", "_jsx", "Wrapper", "paddingLeft", "paddingRight", "paddingTop", "justifyContent", "KeyboardNavigable", "tagName", "gap", "map", "relation", "Asset", "isEnabled", "IconWrapper", "tag", "$isSelected", "disabled", "onClick", "actions", "onChangeRelationType", "value", "padding", "type", "aria-label", "id", "getTrad", "aria-pressed", "data-relation-type", "aria-hidden", "InfosWrapper", "Typography", "truncate", "length", "textColor", "Relation", "formErrors", "mainBoxHeader", "modifiedData", "naturePickerType", "onChange", "targetUid", "relationType", "getRelationType", "relation", "targetAttribute", "_jsxs", "Flex", "style", "position", "_jsx", "RelationFormBox", "isMain", "header", "error", "name", "value", "RelationNaturePicker", "oneThatIsCreatingARelationWithAnother", "target", "disabled", "includes", "SelectCategory", "error", "intlLabel", "name", "onChange", "value", "undefined", "isCreating", "dynamicZoneTarget", "formatMessage", "useIntl", "allComponentsCategories", "useDataManager", "categories", "setCategories", "useState", "errorMessage", "id", "defaultMessage", "label", "handleChange", "target", "type", "handleCreateOption", "prev", "_jsxs", "Field", "Root", "_jsx", "Label", "Combobox", "disabled", "onCreateOption", "creatable", "map", "category", "ComboboxOption", "Error", "findComponent", "componentUid", "components", "find", "c", "component", "getChildrenMaxDepth", "currentDepth", "childComponents", "length", "maxDepth", "forEach", "child", "depth", "getComponentDepth", "getDepth", "currentComponent", "currentLevel", "levels", "push", "uidsOfAllParents", "parentUid", "parentComponent", "nestedCompo", "compoDepth", "Math", "max", "SelectComponent", "error", "intlLabel", "isAddingAComponentToAnotherComponent", "isCreating", "isCreatingComponentWhileAddingAField", "componentToCreate", "name", "onChange", "targetUid", "forTarget", "value", "formatMessage", "useIntl", "errorMessage", "id", "defaultMessage", "label", "componentsGroupedByCategory", "componentsThatHaveOtherComponentInTheirAttributes", "nestedComponents", "useDataManager", "isTargetAComponent", "options", "Object", "entries", "reduce", "acc", "current", "categoryName", "components", "compos", "map", "component", "uid", "info", "displayName", "filter", "maxDepth", "getChildrenMaxDepth", "componentDepth", "getComponentDepth", "totalDepth", "MAX_COMPONENT_DEPTH", "option", "category", "_jsxs", "Field", "Root", "_jsx", "Label", "SingleSelect", "disabled", "target", "type", "SingleSelectOption", "Error", "SelectComponents", "dynamicZoneTarget", "intlLabel", "name", "onChange", "value", "targetUid", "formatMessage", "useIntl", "componentsGroupedByCategory", "contentTypes", "useDataManager", "dzSchema", "findAttribute", "attributes", "alreadyUsedComponents", "components", "filteredComponentsGroupedByCategory", "Object", "keys", "reduce", "acc", "current", "filteredComponents", "filter", "uid", "includes", "length", "options", "entries", "categoryName", "section", "label", "children", "map", "info", "displayName", "push", "displayedValue", "id", "getTrad", "defaultMessage", "number", "_jsxs", "Field", "Root", "_jsx", "Label", "MultiSelectNested", "customizeContent", "values", "target", "type", "SelectDateType", "intlLabel", "error", "undefined", "modifiedData", "name", "onChange", "options", "value", "formatMessage", "useIntl", "label", "errorMessage", "id", "defaultMessage", "handleChange", "nextValue", "target", "type", "default", "_jsxs", "Field", "Root", "_jsx", "Label", "SingleSelect", "map", "metadatas", "disabled", "hidden", "key", "SingleSelectOption", "values", "Error", "SelectNumber", "intlLabel", "error", "undefined", "modifiedData", "name", "onChange", "options", "value", "formatMessage", "useIntl", "label", "errorMessage", "id", "defaultMessage", "handleChange", "nextValue", "target", "type", "default", "max", "min", "includes", "_jsxs", "Field", "Root", "_jsx", "Label", "SingleSelect", "map", "metadatas", "disabled", "hidden", "key", "SingleSelectOption", "Error", "SingularName", "description", "error", "intlLabel", "modifiedData", "name", "onChange", "value", "formatMessage", "useIntl", "onChangeRef", "useRef", "previousValue", "previousDisplayName", "displayName", "useEffect", "current", "newValue", "nameToSlug", "target", "errorMessage", "id", "defaultMessage", "hint", "values", "label", "_jsxs", "Field", "Root", "_jsx", "Label", "TextInput", "Error", "Hint", "TabForm", "form", "formErrors", "genericInputProps", "modifiedData", "onChange", "formatMessage", "useIntl", "_jsx", "_Fragment", "map", "section", "sectionIndex", "items", "length", "_jsxs", "Box", "sectionTitle", "paddingBottom", "Typography", "variant", "tag", "intlLabel", "textColor", "Grid", "Root", "gap", "input", "i", "key", "value", "get", "name", "undefined", "pluginOptionError", "Object", "keys", "find", "errorId", "id", "split", "filter", "type", "Item", "col", "size", "direction", "alignItems", "div", "currentCondition", "contentTypeAttributes", "contentTypeSchema", "attributes", "console", "warn", "availableFields", "getAvailableConditionFields", "noFieldsMessage", "defaultMessage", "marginBottom", "formatCondition", "attributeName", "Tooltip", "label", "Button", "marginTop", "fullWidth", "onClick", "target", "visible", "var", "startIcon", "span", "aria-hidden", "disabled", "GenericInput", "error", "autoFocus", "conditionFields", "onDelete", "TextareaEnum", "description", "disabled", "error", "intlLabel", "labelAction", "name", "onChange", "placeholder", "value", "formatMessage", "useIntl", "errorMessage", "id", "defaultMessage", "hint", "values", "label", "formattedPlaceholder", "inputValue", "Array", "isArray", "join", "handleChange", "e", "arrayValue", "target", "split", "_jsxs", "Field", "Root", "_jsx", "Label", "action", "Textarea", "Error", "Hint", "ApplyConditionButton", "disabled", "tooltipMessage", "onClick", "marginTop", "formatMessage", "useIntl", "button", "_jsx", "Button", "fullWidth", "variant", "startIcon", "span", "aria-hidden", "id", "defaultMessage", "Tooltip", "description", "SmallAttributeIcon", "styled", "AttributeIcon", "convertFromJsonLogic", "jsonLogic", "visible", "dependsOn", "operator", "value", "action", "conditions", "Object", "entries", "fieldVar", "var", "convertToJsonLogic", "rulesEngine", "createRulesEngine", "condition", "validate", "error", "ConditionForm", "name", "onChange", "onDelete", "attributeName", "conditionFields", "formatMessage", "useIntl", "localValue", "setLocalValue", "useState", "showConfirmDialog", "setShowConfirmDialog", "hasCondition", "Boolean", "Array", "isArray", "selectedField", "find", "field", "isEnumField", "type", "updateCondition", "updatedValue", "target", "handleApplyCondition", "initialValue", "handleDelete", "handleFieldChange", "fieldName", "newValue", "toString", "f", "isNewFieldEnum", "handleOperatorChange", "handleValueChange", "handleActionChange", "_jsx", "Box", "padding", "margin", "hasRadius", "background", "borderColor", "ApplyConditionButton", "onClick", "marginTop", "_jsxs", "borderWidth", "borderStyle", "Flex", "justifyContent", "alignItems", "Typography", "variant", "textColor", "id", "getTrad", "defaultMessage", "strong", "Dialog", "Root", "open", "onOpenChange", "Trigger", "IconButton", "label", "Trash", "ConfirmDialog", "onConfirm", "paddingBottom", "style", "textTransform", "letterSpacing", "gap", "minWidth", "flex", "Field", "SingleSelect", "placeholder", "map", "SingleSelectOption", "span", "disabled", "enum", "enumValue", "_Fragment", "fontWeight", "nameField", "name", "type", "intlLabel", "id", "defaultMessage", "description", "getTrad", "commonBaseForm", "sections", "sectionTitle", "items", "nameField", "componentForm", "base", "prefix", "sections", "sectionTitle", "items", "name", "type", "intlLabel", "id", "getTrad", "defaultMessage", "size", "advanced", "attributeOptions", "default", "name", "type", "intlLabel", "id", "getTrad", "defaultMessage", "max", "maxLength", "min", "minLength", "private", "description", "regex", "required", "unique", "conditionSection", "sectionTitle", "id", "getTrad", "defaultMessage", "intlLabel", "items", "name", "type", "validations", "required", "advancedForm", "blocks", "sections", "attributeOptions", "private", "boolean", "autoFocus", "options", "value", "key", "metadatas", "component", "repeatable", "step", "componentForm", "advanced", "minComponentsAttribute", "min", "maxComponentsAttribute", "max", "date", "default", "withDefaultValue", "disabled", "unique", "dynamiczone", "email", "maxLength", "minLength", "enumeration", "data", "enum", "filter", "index", "indexOf", "map", "description", "json", "media", "size", "number", "inputStep", "password", "relation", "richtext", "text", "regex", "uid", "Boolean", "targetField", "componentField", "intlLabel", "id", "defaultMessage", "name", "type", "size", "radios", "title", "getTrad", "description", "value", "baseForm", "component", "data", "step", "itemsToConcat", "createComponent", "componentForm", "base", "sections", "sectionTitle", "items", "componentField", "nameField", "name", "type", "intlLabel", "id", "getTrad", "defaultMessage", "isMultiple", "size", "radios", "title", "description", "value", "date", "options", "key", "metadatas", "hidden", "values", "currentYear", "Date", "getFullYear", "enumeration", "placeholder", "validations", "required", "media", "number", "relation", "string", "text", "uid", "_data", "attributes", "filter", "includes", "map", "attributesForm", "advanced", "advancedForm", "base", "baseForm", "toRegressedEnumValue", "value", "slugify", "decamelize", "lowercase", "separator", "NAME_REGEX", "alreadyUsedAttributeNames", "usedNames", "name", "message", "errorsTrads", "unique", "id", "test", "value", "snakeCaseKey", "snakeCase", "some", "existingKey", "isNameAllowed", "reservedNames", "getTrad", "validators", "default", "string", "nullable", "max", "number", "integer", "min", "when", "schema", "maxLength", "positive", "minLength", "matches", "regex", "required", "boolean", "type", "createTextShape", "usedAttributeNames", "shape", "RegExp", "e", "isMinSuperiorThanMax", "parent", "Number", "isNaN", "toNumber", "attributeTypes", "date", "usedAttributeNames", "reservedNames", "shape", "name", "validators", "type", "object", "datetime", "time", "default", "biginteger", "string", "nullable", "matches", "unique", "required", "max", "errorsTrads", "regex", "id", "min", "test", "isMinSuperiorThanMax", "boolean", "component", "decimal", "number", "dynamiczone", "email", "maxLength", "minLength", "enumeration", "GRAPHQL_ENUM_REGEX", "alreadyUsedAttributeNames", "isNameAllowed", "enum", "array", "of", "message", "getTrad", "values", "duplicates", "uniq", "map", "toRegressedEnumValue", "filter", "value", "index", "indexOf", "length", "some", "val", "every", "enumName", "float", "integer", "json", "media", "multiple", "allowedTypes", "oneOf", "password", "relation", "alreadyTakenTargetAttributes", "initialData", "modifiedData", "target", "targetAttribute", "lazy", "relationType", "getRelationType", "schema", "initialForbiddenName", "forbiddenTargetAttributeName", "NAME_REGEX", "includes", "richtext", "blocks", "createTextShape", "text", "uid", "CATEGORY_NAME_REGEX", "createComponentSchema", "usedComponentNames", "reservedNames", "category", "takenCollectionNames", "currentCollectionName", "shape", "displayName", "string", "test", "name", "message", "errorsTrads", "unique", "id", "value", "createComponentUid", "snakeCaseKey", "snakeCase", "snakeCaseCollectionName", "every", "reserved", "collectionName", "getTrad", "required", "matches", "regex", "icon", "object", "nameField", "name", "type", "intlLabel", "id", "getTrad", "defaultMessage", "contentTypeForm", "advanced", "default", "sections", "items", "description", "validations", "base", "create", "sectionTitle", "size", "edit", "disabled", "radios", "title", "value", "createContentTypeSchema", "usedContentTypeNames", "reservedModels", "singularNames", "pluralNames", "collectionNames", "shape", "displayName", "string", "test", "name", "message", "errorsTrads", "unique", "id", "value", "createUid", "snakeCaseKey", "snakeCase", "some", "getTrad", "key", "required", "pluralName", "context", "parent", "singularName", "draftAndPublish", "boolean", "kind", "oneOf", "object", "dynamiczoneForm", "advanced", "default", "sections", "componentForm", "base", "createComponent", "sectionTitle", "items", "componentField", "type", "size", "intlLabel", "id", "defaultMessage", "name", "getTrad", "isMultiple", "addItemsToFormSection", "formTypeOptions", "sections", "forEach", "item", "_a", "items", "push", "createComponentCollectionName", "name", "category", "snakeCase", "pluralize", "getUsedAttributeNames", "attributes", "schemaData", "filter", "name", "initialData", "map", "forms", "customField", "schema", "schemaAttributes", "attributeType", "customFieldValidator", "reservedNames", "schemaData", "ctbFormsAPI", "usedAttributeNames", "getUsedAttributeNames", "attributeShape", "attributeTypes", "attributes", "initialData", "modifiedData", "makeCustomFieldValidator", "form", "base", "sections", "sectionTitle", "items", "nameField", "options", "addItemsToFormSection", "advanced", "data", "step", "extensions", "rest", "id", "defaultMessage", "name", "type", "intlLabel", "description", "injectedInputs", "getAdvancedForm", "extendedSettings", "getTrad", "push", "attribute", "currentSchema", "alreadyTakenTargetContentTypeAttributes", "makeValidator", "err", "console", "error", "default", "baseForm", "attributesForm", "itemsToAdd", "injected", "reduce", "acc", "current", "commonBaseForm", "contentType", "alreadyTakenNames", "isEditing", "ctUid", "contentTypes", "singularNames", "Object", "values", "map", "info", "singularName", "pluralNames", "pluralName", "takenNames", "filter", "uid", "takenSingularNames", "singName", "takenPluralNames", "collectionNames", "collectionName", "takenCollectionNames", "currentCollectionName", "contentTypeShape", "createContentTypeSchema", "usedContentTypeNames", "reservedModels", "models", "actionType", "contentTypeForm", "create", "edit", "section", "flat", "component", "alreadyTakenAttributes", "componentCategory", "components", "componentDisplayName", "compoUid", "createComponentCollectionName", "createComponentSchema", "componentForm", "addComponentToDynamicZone", "dynamiczoneForm", "isCreatingComponent", "createComponent", "canEditContentType", "type", "modifiedData", "kind", "contentTypeAttributes", "attributes", "relationAttributes", "filter", "attribute", "relation", "targetAttribute", "relationType", "getRelationType", "includes", "length", "getAttributesToDisplay", "dataTarget", "targetUid", "nestedComponents", "defaultAttributes", "isPickingAttributeForAContentType", "slice", "componentDepth", "getComponentDepth", "isNestedInAnotherComponent", "MAX_COMPONENT_DEPTH", "canAddComponentInAnotherComponent", "getFormInputNames", "form", "reduce", "acc", "current", "names", "items", "name", "push", "FormComponent", "styled", "form", "selectState", "state", "initialState", "FormModal", "onCloseModal", "onNavigateToChooseAttributeModal", "onNavigateToAddCompoToDZModal", "onNavigateToCreateComponentStep2", "actionType", "attributeName", "attributeType", "customFieldUid", "dynamicZoneTarget", "forTarget", "modalType", "isOpen", "kind", "step", "targetUid", "showBackLink", "activeTab", "setActiveTab", "useFormModalNavigation", "getPlugin", "useStrapiApp", "getCustomField", "customFields", "get", "customField", "dispatch", "useDispatch", "toggleNotification", "useNotification", "reducerState", "useSelector", "shallowEqual", "navigate", "useNavigate", "trackUsage", "useTracking", "formatMessage", "useIntl", "ctbPlugin", "pluginId", "ctbFormsAPI", "apis", "forms", "inputsFromPlugins", "components", "inputs", "dispatchGuidedTour", "useGuidedTour", "s", "addAttribute", "editAttribute", "addCustomFieldAttribute", "addCreatedComponentToDynamicZone", "changeDynamicZoneComponents", "contentTypes", "createSchema", "createComponentSchema", "deleteComponent", "deleteContentType", "editCustomFieldAttribute", "updateSchema", "nestedComponents", "sortedContentTypesList", "updateComponentSchema", "updateComponentUid", "reservedNames", "useDataManager", "componentToCreate", "formErrors", "initialData", "isCreatingComponentWhileAddingAField", "modifiedData", "type", "showWarningDialog", "setShowWarningDialog", "useState", "pendingSubmit", "setPendingSubmit", "checkFieldNameChanges", "oldName", "name", "oldEnum", "enum", "newEnum", "contentTypeAttributes", "attributes", "referencedFields", "filter", "attr", "conditions", "condition", "visible", "Object", "entries", "fieldVar", "value", "var", "deletedOrChangedValues", "oldValue", "includes", "length", "React", "useEffect", "collectionTypesForRelation", "isAllowedContentTypesForRelations", "foundDynamicZoneTarget", "findAttribute", "actions", "setDataToEdit", "data", "draftAndPublish", "displayName", "info", "options", "pluginOptions", "pluralName", "singularName", "category", "icon", "attributeToEdit", "createComponent", "setDynamicZoneDataSchema", "attributeToEditNotFormatted", "repeatable", "set", "setCustomFieldDataSchema", "isEditing", "modifiedDataToSetForEditing", "uid", "pick", "setAttributeDataSchema", "nameToSetForRelation", "resetProps", "isCreatingContentType", "isCreatingComponent", "isCreatingAttribute", "isCreatingCustomFieldAttribute", "isComponentAttribute", "isCreating", "isCreatingComponentFromAView", "isInFirstComponentStep", "isPickingAttribute", "createUid", "checkFormValidity", "schema", "dataToValidate", "contentType", "keys", "component", "schemaAttributes", "schemaData", "customFieldValidator", "validator", "computedAttrbiuteType", "alreadyTakenTargetContentTypeAttributes", "targetContentTypeUID", "targetContentTypeAttributes", "attrName", "targetAttribute", "attribute", "validate", "abortEarly", "handleChange", "useCallback", "target", "rest", "namesThatCanResetToNullValue", "val", "Array", "isArray", "clonedErrors", "assign", "min", "minLength", "setErrors", "errors", "onChange", "split", "submitForm", "e", "shouldContinue", "sendButtonAddMoreFieldEvent", "ctTargetUid", "pathname", "canEditContentType", "message", "id", "componentUid", "createComponentUid", "componentCategory", "componentUID", "status", "newComponentUID", "customFieldAttributeUpdate", "attributeToSet", "isDynamicZoneAttribute", "resetPropsAndSetTheFormForAddingACompoToADz", "resetPropsAndSetFormForAddingAnExistingCompo", "attributeData", "undefined", "resetPropsAndSaveCurrentData", "componentsToAdd", "newComponents", "console", "error", "err", "ValidationError", "isError", "getYupInnerErrors", "handleSubmit", "preventDefault", "handleConfirmClose", "confirm", "window", "defaultMessage", "handleClosed", "isEqual", "sendAdvancedTabEvent", "tab", "shouldDisableAdvancedTab", "has", "displayedAttributes", "getAttributesToDisplay", "formToDisplay", "advanced", "sections", "base", "isAddingAComponentToAnotherComponent", "genericInputProps", "customInputs", "AllowedTypesSelect", "BooleanRadioGroup", "CheckboxWithNumberField", "IconPicker", "ContentTypeRadioGroup", "CustomRadioGroup", "relation", "Relation", "SelectCategory", "SelectComponent", "SelectComponents", "BooleanDefaultValueSelect", "SelectNumber", "SelectDateType", "DraftAndPublishToggle", "PluralName", "SingularName", "TextareaEnum", "ConditionForm", "mainBoxHeader", "naturePickerType", "contentTypeSchema", "advancedForm", "extensions", "baseForm", "baseFormInputNames", "getFormInputNames", "advancedFormInputNames", "doesBaseFormHasError", "some", "key", "doesAdvancedFormHasError", "schemaKind", "checkIsEditingFieldName", "every", "handleClickFinish", "payload", "GUIDED_TOUR_REQUIRED_ACTIONS", "contentTypeBuilder", "addField", "_jsx", "Modal", "Root", "open", "onOpenChange", "_jsxs", "Content", "Dialog", "Trigger", "ConfirmDialog", "onConfirm", "onCancel", "fieldNames", "map", "field", "join", "isEnum", "Box", "Typography", "fontWeight", "FormModalHeader", "contentTypeKind", "AttributeOptions", "onSubmit", "Body", "Tabs", "variant", "onValueChange", "hasError", "Flex", "justifyContent", "FormModalSubHeader", "List", "getTrad", "disabled", "Divider", "marginBottom", "direction", "alignItems", "gap", "TabForm", "Footer", "Button", "onClick", "FormModalEndActions", "isAttributeModal", "isCustomFieldModal", "isComponentToDzModal", "isComponentModal", "isContentTypeModal", "isCreatingDz", "isCreatingComponentAttribute", "isCreatingComponentInDz", "isEditingAttribute", "isDzAttribute", "onSubmitAddComponentAttribute", "onSubmitAddComponentToDz", "onSubmitCreateComponent", "onSubmitCreateContentType", "onSubmitCreateDz", "onSubmitEditAttribute", "onSubmitEditComponent", "onSubmitEditContentType", "onSubmitEditCustomFieldAttribute", "onSubmitEditDz", "onClickFinish", "INITIAL_STATE_DATA", "actionType", "attributeName", "attributeType", "dynamicZoneTarget", "forTarget", "modalType", "isOpen", "showBackLink", "kind", "step", "targetUid", "customFieldUid", "activeTab", "FormModalNavigationProvider", "children", "state", "setFormModalNavigationState", "useState", "trackUsage", "useTracking", "onClickSelectCustomField", "useCallback", "prevState", "onClickSelectField", "type", "onOpenModalAddComponentsToDZ", "onOpenModalAddField", "onOpenModalCreateSchema", "nextState", "onOpenModalEditCustomField", "onOpenModalEditField", "onOpenModalEditSchema", "onCloseModal", "onNavigateToChooseAttributeModal", "prev", "onNavigateToCreateComponentStep2", "onNavigateToAddCompoToDZModal", "setActiveTab", "value", "contextValue", "useMemo", "_jsx", "FormModalNavigationContext", "Provider", "ResponsiveContainer", "styled", "Flex", "EmptyState", "formatMessage", "useIntl", "pluginName", "id", "getTrad", "defaultMessage", "isChatEnabled", "openChat", "useStrapiChat", "openCodeUpload", "useUploadProjectToChat", "openFigmaUpload", "useUploadFigmaToChat", "_jsxs", "justifyContent", "height", "width", "maxWidth", "margin", "direction", "gap", "_jsx", "EmptyDocuments", "tours", "contentTypeBuilder", "Introduction", "Box", "alignItems", "Typography", "variant", "textAlign", "textColor", "className", "Button", "startIcon", "FigmaIcon", "onClick", "Paperclip", "Sparkle", "ListView", "lazy", "App", "formatMessage", "useIntl", "title", "id", "pluginId", "defaultMessage", "autoReload", "useAppInfo", "state", "isAIEnabled", "useAIAvailability", "useGuidedTour", "s", "dispatch", "useEffect", "prefetchAIToken", "tourType", "currentTourType", "tours", "contentTypeBuilder", "type", "payload", "tourName", "_jsxs", "Page", "Protect", "permissions", "PERMISSIONS", "main", "_jsx", "Title", "AutoReloadOverlayBlockerProvider", "FormModalNavigationProvider", "DataManagerProvider", "ExitPrompt", "ChatProvider", "_Fragment", "FormModal", "Layouts", "Root", "sideNav", "ContentTypeBuilderNav", "Suspense", "fallback", "Loading", "Routes", "Route", "path", "element", "EmptyState", "Chat"]
}
